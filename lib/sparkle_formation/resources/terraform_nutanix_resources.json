{
  "nutanix_category_key": {
    "full_properties": {
      "description": {
        "description": "A description for category key.",
        "required": false
      },
      "name": {
        "description": "The name for the category key.",
        "required": true
      }
    },
    "path": "/docs/providers/nutanix/r/category_key.html",
    "properties": [
      "name",
      "description"
    ]
  },
  "nutanix_category_value": {
    "full_properties": {
      "description": {
        "description": "A description for category value.",
        "required": false
      },
      "name": {
        "description": "The category_key name for the category value.",
        "required": true
      },
      "value": {
        "description": "The value for the category value.",
        "required": true
      }
    },
    "path": "/docs/providers/nutanix/r/category_value.html",
    "properties": [
      "name",
      "value",
      "description"
    ]
  },
  "nutanix_image": {
    "full_properties": {
      "architecture": {
        "description": "The supported CPU architecture for a disk image.",
        "required": false
      },
      "availability_zone_reference": {
        "description": "The reference to a availability_zone.",
        "required": false
      },
      "categories": {
        "description": "Categories for the image.",
        "required": false
      },
      "checksum": {
        "description": "Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.",
        "required": false
      },
      "description": {
        "description": "A description for image.",
        "required": false
      },
      "image_type": {
        "description": "The type of image.",
        "required": false
      },
      "name": {
        "description": "The name for the image.",
        "required": true
      },
      "owner_reference": {
        "description": "The reference to a user.",
        "required": false
      },
      "project_reference": {
        "description": "The reference to a project.",
        "required": false
      },
      "source_path": {
        "description": "A local path to upload an image.",
        "required": false
      },
      "source_uri": {
        "description": "The source URI points at the location of the source image which is used to create/update image.",
        "required": false
      },
      "version": {
        "description": "The image version.",
        "required": false
      }
    },
    "path": "/docs/providers/nutanix/r/image.html",
    "properties": [
      "name",
      "categories",
      "project_reference",
      "owner_reference",
      "availability_zone_reference",
      "description",
      "architecture",
      "checksum",
      "image_type",
      "source_uri",
      "source_path",
      "version"
    ]
  },
  "nutanix_network_security_rule": {
    "full_properties": {
      "app_rule_action": {
        "description": "- These rules govern what flows are allowed. Target group is a required attribute. Empty inbound_allow_list will not anything into target group. Empty outbound_allow_list will allow everything from target group.",
        "required": false
      },
      "app_rule_inbound_allow_list": {
        "description": "(Optional)",
        "required": false
      },
      "app_rule_outbound_allow_list": {
        "description": "(Optional)",
        "required": false
      },
      "app_rule_target_group_default_internal_policy": {
        "description": "- Default policy for communication within target group.",
        "required": false
      },
      "app_rule_target_group_filter_kind_list": {
        "description": "- List of kinds associated with this filter.",
        "required": false
      },
      "app_rule_target_group_filter_params": {
        "description": "- A list of category key and list of values.",
        "required": false
      },
      "app_rule_target_group_filter_type": {
        "description": "- The type of the filter being used.",
        "required": false
      },
      "app_rule_target_group_peer_specification_type": {
        "description": "- Way to identify the object for which rule is applied.",
        "required": false
      },
      "categories": {
        "description": "Categories for the image.",
        "required": false
      },
      "description": {
        "description": "A description for image.",
        "required": false
      },
      "isolation_rule_action": {
        "description": "- These rules are used for environmental isolation.",
        "required": false
      },
      "isolation_rule_first_entity_filter_kind_list": {
        "description": "- List of kinds associated with this filter.",
        "required": false
      },
      "isolation_rule_first_entity_filter_params": {
        "description": "- A list of category key and list of values.",
        "required": false
      },
      "isolation_rule_first_entity_filter_type": {
        "description": "- The type of the filter being used.",
        "required": false
      },
      "isolation_rule_second_entity_filter_kind_list": {
        "description": "- List of kinds associated with this filter.",
        "required": false
      },
      "isolation_rule_second_entity_filter_params": {
        "description": "- A list of category key and list of values.",
        "required": false
      },
      "isolation_rule_second_entity_filter_type": {
        "description": "- The type of the filter being used.",
        "required": false
      },
      "name": {
        "description": "The name for the image.",
        "required": true
      },
      "owner_reference": {
        "description": "The reference to a user.",
        "required": false
      },
      "project_reference": {
        "description": "The reference to a project.",
        "required": false
      },
      "quarantine_rule_action": {
        "description": "These rules are used for quarantining suspected VMs. Target group is a required attribute. Empty inbound_allow_list will not allow anything into target group. Empty outbound_allow_list will allow everything from target group.",
        "required": false
      },
      "quarantine_rule_inbound_allow_list": {
        "description": "(Optional)",
        "required": false
      },
      "quarantine_rule_outbound_allow_list": {
        "description": "(Optional)",
        "required": false
      },
      "quarantine_rule_target_group_default_internal_policy": {
        "description": "- Default policy for communication within target group.",
        "required": false
      },
      "quarantine_rule_target_group_filter_kind_list": {
        "description": "- List of kinds associated with this filter.",
        "required": false
      },
      "quarantine_rule_target_group_filter_params": {
        "description": "- A list of category key and list of values.",
        "required": false
      },
      "quarantine_rule_target_group_filter_type": {
        "description": "- The type of the filter being used.",
        "required": false
      },
      "quarantine_rule_target_group_peer_specification_type": {
        "description": "- Way to identify the object for which rule is applied.",
        "required": false
      }
    },
    "path": "/docs/providers/nutanix/r/network_security_rule.html",
    "properties": [
      "name",
      "categories",
      "project_reference",
      "owner_reference",
      "description",
      "quarantine_rule_action",
      "quarantine_rule_outbound_allow_list",
      "quarantine_rule_target_group_default_internal_policy",
      "quarantine_rule_target_group_peer_specification_type",
      "quarantine_rule_target_group_filter_kind_list",
      "quarantine_rule_target_group_filter_type",
      "quarantine_rule_target_group_filter_params",
      "quarantine_rule_inbound_allow_list",
      "app_rule_action",
      "app_rule_outbound_allow_list",
      "app_rule_target_group_default_internal_policy",
      "app_rule_target_group_peer_specification_type",
      "app_rule_target_group_filter_kind_list",
      "app_rule_target_group_filter_type",
      "app_rule_target_group_filter_params",
      "app_rule_inbound_allow_list",
      "isolation_rule_action",
      "isolation_rule_first_entity_filter_kind_list",
      "isolation_rule_first_entity_filter_type",
      "isolation_rule_first_entity_filter_params",
      "isolation_rule_second_entity_filter_kind_list",
      "isolation_rule_second_entity_filter_type",
      "isolation_rule_second_entity_filter_params"
    ]
  },
  "nutanix_subnet": {
    "full_properties": {
      "availability_zone_reference": {
        "description": "The reference to a availability_zone.",
        "required": false
      },
      "categories": {
        "description": "The categories of the resource.",
        "required": false
      },
      "cluster_name": {
        "description": "The name of a cluster.",
        "required": false
      },
      "cluster_reference": {
        "description": "The reference to a cluster.",
        "required": false
      },
      "default_gateway_ip": {
        "description": "Default gateway IP address.",
        "required": false
      },
      "description": {
        "description": "A description for subnet.",
        "required": false
      },
      "dhcp_domain_search_list": {
        "description": ".",
        "required": false
      },
      "dhcp_options": {
        "description": "Spec for defining DHCP options.",
        "required": false
      },
      "dhcp_server_address": {
        "description": "Host address.",
        "required": false
      },
      "dhcp_server_address_port": {
        "description": "Port Number.",
        "required": false
      },
      "metadata": {
        "description": "The subnet kind metadata.",
        "required": true
      },
      "name": {
        "description": "Subnet name (Readonly).",
        "required": false
      },
      "network_function_chain_reference": {
        "description": "The reference to a network_function_chain.",
        "required": false
      },
      "owner_reference": {
        "description": "The reference to a user.",
        "required": false
      },
      "prefix_length": {
        "description": ".",
        "required": false
      },
      "project_reference": {
        "description": "The reference to a project.",
        "required": false
      },
      "subnet_ip": {
        "description": "Subnet IP address.",
        "required": false
      },
      "subnet_type": {
        "description": ".",
        "required": false
      },
      "vlan_id": {
        "description": ".",
        "required": false
      },
      "vswitch_name": {
        "description": ".",
        "required": false
      }
    },
    "path": "/docs/providers/nutanix/r/subnet.html",
    "properties": [
      "metadata",
      "availability_zone_reference",
      "cluster_reference",
      "cluster_name",
      "description",
      "name",
      "categories",
      "owner_reference",
      "project_reference",
      "vswitch_name",
      "subnet_type",
      "default_gateway_ip",
      "prefix_length",
      "subnet_ip",
      "dhcp_server_address",
      "dhcp_server_address_port",
      "dhcp_options",
      "dhcp_domain_search_list",
      "vlan_id",
      "network_function_chain_reference"
    ]
  },
  "nutanix_virtual_machine": {
    "full_properties": {
      "availability_zone_reference": {
        "description": "The reference to a availability_zone.",
        "required": false
      },
      "boot_device_disk_address": {
        "description": "Address of disk to boot from.",
        "required": false
      },
      "boot_device_mac_address": {
        "description": "MAC address of nic to boot from.",
        "required": false
      },
      "boot_device_order_list": {
        "description": "Indicates the order of device types in which VM should try to boot from. If boot device order is not provided the system will decide appropriate boot device order.",
        "required": false
      },
      "categories": {
        "description": "Categories for the vm.",
        "required": false
      },
      "cluster_name": {
        "description": "The name of the reference to the cluster.",
        "required": false
      },
      "cluster_reference": {
        "description": "The reference to a cluster.",
        "required": true
      },
      "description": {
        "description": "A description for vm.",
        "required": false
      },
      "disk_list": {
        "description": "Disks attached to the VM.",
        "required": false
      },
      "enable_script_exec": {
        "description": "Extra configs related to power state transition. Indicates whether to execute set script before ngt shutdown/reboot.",
        "required": false
      },
      "gpu_list": {
        "description": "GPUs attached to the VM.",
        "required": false
      },
      "guest_customization_cloud_init": {
        "description": "VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \\\"override_script\\\" is set to \\\"True\\\" then the deployer can upload their own custom script.",
        "required": false
      },
      "guest_customization_cloud_init_custom_key_values": {
        "description": "Generic key value pair used for custom attributes in cloud init.",
        "required": false
      },
      "guest_customization_is_overridable": {
        "description": "Flag to allow override of customization by deployer.",
        "required": false
      },
      "guest_customization_sysprep": {
        "description": "VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \\\"override_script\\\" is set to \\\"True\\\" then the deployer can upload their own custom script.",
        "required": false
      },
      "guest_customization_sysrep_custom_key_values": {
        "description": "Generic key value pair used for custom attributes in sysrep.",
        "required": false
      },
      "guest_os_id": {
        "description": "Guest OS Identifier. For ESX, refer to VMware documentation link for the list of guest OS identifiers.",
        "required": false
      },
      "hardware_clock_timezone": {
        "description": "VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).",
        "required": false
      },
      "memory_size_mib": {
        "description": "Memory size in MiB.",
        "required": false
      },
      "name": {
        "description": "The name for the vm.",
        "required": true
      },
      "nic_list": {
        "description": "NICs attached to the VM.",
        "required": false
      },
      "num_sockets": {
        "description": "Number of vCPU sockets.",
        "required": false
      },
      "num_vcpus_per_socket": {
        "description": "Number of vCPUs per socket.",
        "required": false
      },
      "num_vnuma_nodes": {
        "description": "Number of vNUMA nodes. 0 means vNUMA is disabled.",
        "required": false
      },
      "nutanix_guest_tools": {
        "description": "Information regarding Nutanix Guest Tools.",
        "required": false
      },
      "owner_reference": {
        "description": "The reference to a user.",
        "required": false
      },
      "parent_referece": {
        "description": "Reference to an entity that the VM cloned from.",
        "required": false
      },
      "power_state": {
        "description": "The current or desired power state of the VM. (Options : ON , OFF)",
        "required": false
      },
      "power_state_mechanism": {
        "description": "Indicates the mechanism guiding the VM power state transition. Currently used for the transition to \\\"OFF\\\" state. Power state mechanism (ACPI/GUEST/HARD).",
        "required": false
      },
      "project_reference": {
        "description": "The reference to a project.",
        "required": false
      },
      "should_fail_on_script_failure": {
        "description": "Extra configs related to power state transition. Indicates whether to abort ngt shutdown/reboot if script fails.",
        "required": false
      },
      "vga_console_enabled": {
        "description": "Indicates whether VGA console should be enabled or not.",
        "required": false
      }
    },
    "path": "/docs/providers/nutanix/r/virtual_machine.html",
    "properties": [
      "name",
      "cluster_reference",
      "cluster_name",
      "categories",
      "project_reference",
      "owner_reference",
      "availability_zone_reference",
      "description",
      "num_vnuma_nodes",
      "nic_list",
      "guest_os_id",
      "power_state",
      "nutanix_guest_tools",
      "num_vcpus_per_socket",
      "num_sockets",
      "gpu_list",
      "parent_referece",
      "memory_size_mib",
      "boot_device_order_list",
      "boot_device_disk_address",
      "boot_device_mac_address",
      "hardware_clock_timezone",
      "guest_customization_cloud_init",
      "guest_customization_cloud_init_custom_key_values",
      "guest_customization_is_overridable",
      "guest_customization_sysprep",
      "guest_customization_sysrep_custom_key_values",
      "should_fail_on_script_failure",
      "enable_script_exec",
      "power_state_mechanism",
      "vga_console_enabled",
      "disk_list"
    ]
  },
  "nutanix_volume_group": {
    "full_properties": {
      "api_version": {
        "description": "Version of the API.",
        "required": false
      },
      "attachment_list": {
        "description": "VMs attached to volume group.",
        "required": false
      },
      "categories": {
        "description": "Categories for the volume_group.",
        "required": false
      },
      "description": {
        "description": "A description for volume_group.",
        "required": false
      },
      "disk_list": {
        "description": "Volume group disk specification.",
        "required": false
      },
      "file_system_type": {
        "description": "File system to be used for volume.",
        "required": false
      },
      "flash_mode": {
        "description": "Flash Mode, if enabled all volume disks of the VG will be pinned to SSD tier.",
        "required": false
      },
      "iscsi_target_prefix": {
        "description": "iSCSI target prefix-name.",
        "required": false
      },
      "name": {
        "description": "The name for the volume_group.",
        "required": true
      },
      "owner_reference": {
        "description": "The reference to a user.",
        "required": false
      },
      "project_reference": {
        "description": "The reference to a project.",
        "required": false
      },
      "sharing_status": {
        "description": "Whether the volume group can be shared across multiple iSCSI initiators.",
        "required": false
      }
    },
    "path": "/docs/providers/nutanix/r/volume_group.html",
    "properties": [
      "name",
      "categories",
      "project_reference",
      "owner_reference",
      "api_version",
      "description",
      "flash_mode",
      "file_system_type",
      "sharing_status",
      "attachment_list",
      "disk_list",
      "iscsi_target_prefix"
    ]
  }
}
