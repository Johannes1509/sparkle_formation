{
  "AWS::ACMPCA::Certificate": {
    "full_properties": {
      "ApiPassthrough": {
        "description": "Specifies X.509 certificate information to be included in the issued certificate. An APIPassthrough or APICSRPassthrough template variant must be selected, or else this parameter is ignored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "CertificateAuthorityArn": {
        "description": "The Amazon Resource Name (ARN) for the private CA issues the certificate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateSigningRequest": {
        "description": "The certificate signing request (CSR) for the certificate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SigningAlgorithm": {
        "description": "The name of the algorithm that will be used to sign the certificate to be issued.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TemplateArn": {
        "description": "Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, AWS Private CA defaults to the EndEntityCertificate/V1 template. For more information about AWS Private CA templates, see Using Templates.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Validity": {
        "description": "The period of time during which the certificate will be valid.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ValidityNotBefore": {
        "description": "Information describing the start of the validity period of the certificate. This parameter sets the “Not Before\" date for the certificate.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-acmpca-certificate.html",
    "properties": [
      "ApiPassthrough",
      "CertificateAuthorityArn",
      "CertificateSigningRequest",
      "SigningAlgorithm",
      "TemplateArn",
      "Validity",
      "ValidityNotBefore"
    ]
  },
  "AWS::ACMPCA::CertificateAuthority": {
    "full_properties": {
      "CsrExtensions": {
        "description": "Specifies information to be added to the extension section of the certificate signing request (CSR).",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KeyAlgorithm": {
        "description": "Type of the public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate. When you create a subordinate CA, you must use a key algorithm supported by the parent CA.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KeyStorageSecurityStandard": {
        "description": "Specifies a cryptographic key management compliance standard used for handling CA keys.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RevocationConfiguration": {
        "description": "Information about the certificate revocation list (CRL) created and maintained by your private CA. Certificate revocation information used by the CreateCertificateAuthority and UpdateCertificateAuthority actions. Your certificate authority can create and maintain a certificate revocation list (CRL). A CRL contains information about certificates that have been revoked.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SigningAlgorithm": {
        "description": "Name of the algorithm your private CA uses to sign certificate requests.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subject": {
        "description": "Structure that contains X.500 distinguished name information for your private CA.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key-value pairs that will be attached to the new private CA. You can associate up to 50 tags with a private CA. For information using tags with IAM to manage permissions, see Controlling Access Using IAM Tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "Type of your private CA.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "UsageMode": {
        "description": "Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly. Short-lived certificate validity is limited to seven days.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-acmpca-certificateauthority.html",
    "properties": [
      "CsrExtensions",
      "KeyAlgorithm",
      "KeyStorageSecurityStandard",
      "RevocationConfiguration",
      "SigningAlgorithm",
      "Subject",
      "Tags",
      "Type",
      "UsageMode"
    ]
  },
  "AWS::ACMPCA::CertificateAuthorityActivation": {
    "full_properties": {
      "Certificate": {
        "description": "The Base64 PEM-encoded certificate authority certificate.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "CertificateAuthorityArn": {
        "description": "The Amazon Resource Name (ARN) of your private CA.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateChain": {
        "description": "The Base64 PEM-encoded certificate chain that chains up to the root CA certificate that you used to sign your private CA certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Status": {
        "description": "Status of your private CA.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-acmpca-certificateauthorityactivation.html",
    "properties": [
      "Certificate",
      "CertificateAuthorityArn",
      "CertificateChain",
      "Status"
    ]
  },
  "AWS::ACMPCA::Permission": {
    "full_properties": {
      "Actions": {
        "description": "The private CA actions that can be performed by the designated AWS service. Supported actions are IssueCertificate, GetCertificate, and ListPermissions.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "CertificateAuthorityArn": {
        "description": "The Amazon Resource Number (ARN) of the private CA from which the permission was issued.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The AWS service or entity that holds the permission. At this time, the only valid principal is acm.amazonaws.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceAccount": {
        "description": "The ID of the account that assigned the permission.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-acmpca-permission.html",
    "properties": [
      "Actions",
      "CertificateAuthorityArn",
      "Principal",
      "SourceAccount"
    ]
  },
  "AWS::APS::RuleGroupsNamespace": {
    "full_properties": {
      "Data": {
        "description": "The rules definition file for this namespace.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the rule groups namespace. This property is required.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key and value pairs for the workspace resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Workspace": {
        "description": "The ARN of the workspace that contains this rule groups namespace.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-aps-rulegroupsnamespace.html",
    "properties": [
      "Data",
      "Name",
      "Tags",
      "Workspace"
    ]
  },
  "AWS::APS::Workspace": {
    "full_properties": {
      "AlertManagerDefinition": {
        "description": "The alert manager definition for the workspace, as a string. For more information, see Alert manager and templating.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Alias": {
        "description": "An alias that you assign to this workspace to help you identify it. It does not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LoggingConfiguration": {
        "description": "The LoggingConfiguration attribute is used to set the logging configuration for the workspace.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tag keys and values to associate with the workspace.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-aps-workspace.html",
    "properties": [
      "AlertManagerDefinition",
      "Alias",
      "LoggingConfiguration",
      "Tags"
    ]
  },
  "AWS::AccessAnalyzer::Analyzer": {
    "full_properties": {
      "AnalyzerName": {
        "description": "The name of the analyzer.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ArchiveRules": {
        "description": "Specifies the archive rules to add for the analyzer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to apply to the analyzer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type represents the zone of trust for the analyzer.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-accessanalyzer-analyzer.html",
    "properties": [
      "AnalyzerName",
      "ArchiveRules",
      "Tags",
      "Type"
    ]
  },
  "AWS::AmazonMQ::Broker": {
    "full_properties": {
      "AuthenticationStrategy": {
        "description": "Optional. The authentication strategy used to secure the broker. The default is SIMPLE.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AutoMinorVersionUpgrade": {
        "description": "Enables automatic upgrades to new minor versions for brokers, as new broker engine versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "BrokerName": {
        "description": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Configuration": {
        "description": "A list of information about the configuration. Does not apply to RabbitMQ brokers.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "DeploymentMode": {
        "description": "The deployment mode of the broker. Available values:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EncryptionOptions": {
        "description": "Encryption options for the broker. Does not apply to RabbitMQ brokers.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EngineType": {
        "description": "The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version of the broker engine. For a list of supported engine versions, see Engine in the Amazon MQ Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "HostInstanceType": {
        "description": "The broker's instance type.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "LdapServerMetadata": {
        "description": "Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Logs": {
        "description": "Enables Amazon CloudWatch logging for brokers.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaintenanceWindowStartTime": {
        "description": "The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "Enables connections from applications outside of the VPC that hosts the broker's subnets.",
        "required": true,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "StorageType": {
        "description": "The broker's storage type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The list of groups that define which subnets and IP ranges the broker can use from different Availability Zones. If you specify more than one subnet, the subnets must be in different Availability Zones. Amazon MQ will not be able to create VPC endpoints for your broker with multiple subnets in the same Availability Zone. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment (ACTIVEMQ) requires two subnets. A CLUSTER_MULTI_AZ deployment (RABBITMQ) has no subnet requirements when deployed with public accessibility, deployment without public accessibility requires at least one subnet.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs. For more information, see Using Cost Allocation Tags in the Billing and Cost Management User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Users": {
        "description": "The list of broker users (persons or applications) who can access queues and topics. For Amazon MQ for RabbitMQ brokers, one and only one administrative user is accepted and created when a broker is first provisioned. All subsequent RabbitMQ users are created by via the RabbitMQ web console or by using the RabbitMQ management API.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amazonmq-broker.html",
    "properties": [
      "AuthenticationStrategy",
      "AutoMinorVersionUpgrade",
      "BrokerName",
      "Configuration",
      "DeploymentMode",
      "EncryptionOptions",
      "EngineType",
      "EngineVersion",
      "HostInstanceType",
      "LdapServerMetadata",
      "Logs",
      "MaintenanceWindowStartTime",
      "PubliclyAccessible",
      "SecurityGroups",
      "StorageType",
      "SubnetIds",
      "Tags",
      "Users"
    ]
  },
  "AWS::AmazonMQ::Configuration": {
    "full_properties": {
      "AuthenticationStrategy": {
        "description": "Optional. The authentication strategy associated with the configuration. The default is SIMPLE.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Data": {
        "description": "The base64-encoded XML configuration.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EngineType": {
        "description": "The type of broker engine. Note: Currently, Amazon MQ only supports ACTIVEMQ for creating and editing broker configurations.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Create tags when creating the configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amazonmq-configuration.html",
    "properties": [
      "AuthenticationStrategy",
      "Data",
      "Description",
      "EngineType",
      "EngineVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::AmazonMQ::ConfigurationAssociation": {
    "full_properties": {
      "Broker": {
        "description": "The broker to associate with a configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Configuration": {
        "description": "The configuration to associate with a broker.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amazonmq-configurationassociation.html",
    "properties": [
      "Broker",
      "Configuration"
    ]
  },
  "AWS::Amplify::App": {
    "full_properties": {
      "AccessToken": {
        "description": "The personal access token for a GitHub repository for an Amplify app. The personal access token is used to authorize access to a GitHub repository using the Amplify GitHub App. The token is not stored.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutoBranchCreationConfig": {
        "description": "Sets the configuration for your automatic branch creation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BasicAuthConfig": {
        "description": "The credentials for basic authorization for an Amplify app. You must base64-encode the authorization credentials and provide them in the format user:password.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BuildSpec": {
        "description": "The build specification (build spec) for an Amplify app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CustomHeaders": {
        "description": "The custom HTTP headers for an Amplify app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CustomRules": {
        "description": "The custom rewrite and redirect rules for an Amplify app.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description for an Amplify app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableBranchAutoDeletion": {
        "description": "Automatically disconnect a branch in the Amplify Console when you delete a branch from your Git repository.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnvironmentVariables": {
        "description": "The environment variables map for an Amplify app.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "IAMServiceRole": {
        "description": "The AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) of the Amplify app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for an Amplify app.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OauthToken": {
        "description": "The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key using SSH cloning. The OAuth token is not stored.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Repository": {
        "description": "The repository for an Amplify app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tag for an Amplify app.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amplify-app.html",
    "properties": [
      "AccessToken",
      "AutoBranchCreationConfig",
      "BasicAuthConfig",
      "BuildSpec",
      "CustomHeaders",
      "CustomRules",
      "Description",
      "EnableBranchAutoDeletion",
      "EnvironmentVariables",
      "IAMServiceRole",
      "Name",
      "OauthToken",
      "Repository",
      "Tags"
    ]
  },
  "AWS::Amplify::Branch": {
    "full_properties": {
      "AppId": {
        "description": "The unique ID for an Amplify app.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BasicAuthConfig": {
        "description": "The basic authorization credentials for a branch of an Amplify app. You must base64-encode the authorization credentials and provide them in the format user:password.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BranchName": {
        "description": "The name for the branch.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BuildSpec": {
        "description": "The build specification (build spec) for the branch.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description for the branch that is part of an Amplify app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableAutoBuild": {
        "description": "Enables auto building for the branch.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnablePerformanceMode": {
        "description": "Enables performance mode for the branch.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnablePullRequestPreview": {
        "description": "Sets whether the Amplify Console creates a preview for each pull request that is made for this branch. If this property is enabled, the Amplify Console deploys your app to a unique preview URL after each pull request is opened. Development and QA teams can use this preview to test the pull request before it's merged into a production or integration branch.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnvironmentVariables": {
        "description": "The environment variables for the branch.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PullRequestEnvironmentName": {
        "description": "If pull request previews are enabled for this branch, you can use this property to specify a dedicated backend environment for your previews. For example, you could specify an environment named prod, test, or dev that you initialized with the Amplify CLI and mapped to this branch.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Stage": {
        "description": "Describes the current stage for the branch.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tag for the branch.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amplify-branch.html",
    "properties": [
      "AppId",
      "BasicAuthConfig",
      "BranchName",
      "BuildSpec",
      "Description",
      "EnableAutoBuild",
      "EnablePerformanceMode",
      "EnablePullRequestPreview",
      "EnvironmentVariables",
      "PullRequestEnvironmentName",
      "Stage",
      "Tags"
    ]
  },
  "AWS::Amplify::Domain": {
    "full_properties": {
      "AppId": {
        "description": "The unique ID for an Amplify app.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AutoSubDomainCreationPatterns": {
        "description": "Sets the branch patterns for automatic subdomain creation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoSubDomainIAMRole": {
        "description": "The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The domain name for the domain association.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableAutoSubDomain": {
        "description": "Enables the automated creation of subdomains for branches.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SubDomainSettings": {
        "description": "The setting for the subdomain.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amplify-domain.html",
    "properties": [
      "AppId",
      "AutoSubDomainCreationPatterns",
      "AutoSubDomainIAMRole",
      "DomainName",
      "EnableAutoSubDomain",
      "SubDomainSettings"
    ]
  },
  "AWS::AmplifyUIBuilder::Component": {
    "full_properties": {
      "BindingProperties": {
        "description": "The information to connect a component's properties to data at runtime. You can't specify tags as a valid property for bindingProperties.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Children": {
        "description": "A list of the component's ComponentChild instances.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CollectionProperties": {
        "description": "The data binding configuration for the component's properties. Use this for a collection component. You can't specify tags as a valid property for collectionProperties.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ComponentType": {
        "description": "The type of the component. This can be an Amplify custom UI component or another custom component.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Events": {
        "description": "Describes the events that can be raised on the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the component.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Overrides": {
        "description": "Describes the component's properties that can be overriden in a customized instance of the component. You can't specify tags as a valid property for overrides.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Properties": {
        "description": "Describes the component's properties. You can't specify tags as a valid property for properties.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SchemaVersion": {
        "description": "The schema version of the component when it was imported.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SourceId": {
        "description": "The unique ID of the component in its original source system, such as Figma.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more key-value pairs to use when tagging the component.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Variants": {
        "description": "A list of the component's variants. A variant is a unique style configuration of a main component.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amplifyuibuilder-component.html",
    "properties": [
      "BindingProperties",
      "Children",
      "CollectionProperties",
      "ComponentType",
      "Events",
      "Name",
      "Overrides",
      "Properties",
      "SchemaVersion",
      "SourceId",
      "Tags",
      "Variants"
    ]
  },
  "AWS::AmplifyUIBuilder::Theme": {
    "full_properties": {
      "Name": {
        "description": "The name of the theme.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Overrides": {
        "description": "Describes the properties that can be overriden to customize a theme.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more key-value pairs to use when tagging the theme.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Values": {
        "description": "A list of key-value pairs that defines the properties of the theme.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-amplifyuibuilder-theme.html",
    "properties": [
      "Name",
      "Overrides",
      "Tags",
      "Values"
    ]
  },
  "AWS::ApiGateway::Account": {
    "full_properties": {
      "CloudWatchRoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that has write access to CloudWatch Logs in your account.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-account.html",
    "properties": [
      "CloudWatchRoleArn"
    ]
  },
  "AWS::ApiGateway::ApiKey": {
    "full_properties": {
      "CustomerId": {
        "description": "An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the purpose of the API key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Indicates whether the API key can be used by clients.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "GenerateDistinctId": {
        "description": "Specifies whether the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "StageKeys": {
        "description": "A list of stages to associate with this API key.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of arbitrary tags (key-value pairs) to associate with the API key.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Value": {
        "description": "The value of the API key. Must be at least 20 characters long.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-apikey.html",
    "properties": [
      "CustomerId",
      "Description",
      "Enabled",
      "GenerateDistinctId",
      "Name",
      "StageKeys",
      "Tags",
      "Value"
    ]
  },
  "AWS::ApiGateway::Authorizer": {
    "full_properties": {
      "AuthType": {
        "description": "An optional customer-defined field that's used in OpenApi imports and exports without functional impact.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerCredentials": {
        "description": "The credentials that are required for the authorizer. To specify an IAM role that API Gateway assumes, specify the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerResultTtlInSeconds": {
        "description": "The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches authorizer results. If you specify a value greater than 0, API Gateway caches the authorizer responses. By default, API Gateway sets this property to 300. The maximum value is 3600, or 1 hour.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AuthorizerUri": {
        "description": "The authorizer's Uniform Resource Identifier (URI). If you specify TOKEN for the authorizer's Type property, specify a Lambda function URI that has the form arn:aws:apigateway:region:lambda:path/path. The path usually has the form /2015-03-31/functions/LambdaFunctionARN/invocations.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IdentitySource": {
        "description": "The source of the identity in an incoming request.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IdentityValidationExpression": {
        "description": "A validation expression for the incoming identity. If you specify TOKEN for the authorizer's Type property, specify a regular expression. API Gateway uses the expression to attempt to match the incoming client token, and proceeds if the token matches. If the token doesn't match, API Gateway responds with a 401 (unauthorized request) error code.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the authorizer.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProviderARNs": {
        "description": "A list of the Amazon Cognito user pool Amazon Resource Names (ARNs) to associate with this authorizer. Required if you specify COGNITO_USER_POOLS as the authorizer Type. For more information, see Use Amazon Cognito User Pools in the API Gateway Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource that API Gateway creates the authorizer in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of authorizer. Valid values include:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-authorizer.html",
    "properties": [
      "AuthorizerCredentials",
      "AuthorizerResultTtlInSeconds",
      "AuthorizerUri",
      "AuthType",
      "IdentitySource",
      "IdentityValidationExpression",
      "Name",
      "ProviderARNs",
      "RestApiId",
      "Type"
    ]
  },
  "AWS::ApiGateway::BasePathMapping": {
    "full_properties": {
      "BasePath": {
        "description": "The base path name that callers of the API must provide in the URL after the domain name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainName": {
        "description": "The DomainName of an AWS::ApiGateway::DomainName resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Id": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the API.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Stage": {
        "description": "The name of the API's stage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-basepathmapping.html",
    "properties": [
      "BasePath",
      "DomainName",
      "Id",
      "RestApiId",
      "Stage"
    ]
  },
  "AWS::ApiGateway::ClientCertificate": {
    "full_properties": {
      "Description": {
        "description": "A description of the client certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of arbitrary tags (key-value pairs) to associate with the client certificate.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-clientcertificate.html",
    "properties": [
      "Description",
      "Tags"
    ]
  },
  "AWS::ApiGateway::Deployment": {
    "full_properties": {
      "DeploymentCanarySettings": {
        "description": "Specifies settings for the canary deployment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the purpose of the API Gateway deployment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource to deploy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StageDescription": {
        "description": "Configures the stage that API Gateway creates with this deployment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StageName": {
        "description": "A name for the stage that API Gateway creates with this deployment. Use only alphanumeric characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-deployment.html",
    "properties": [
      "DeploymentCanarySettings",
      "Description",
      "RestApiId",
      "StageDescription",
      "StageName"
    ]
  },
  "AWS::ApiGateway::DocumentationPart": {
    "full_properties": {
      "Location": {
        "description": "The location of the API entity that the documentation applies to.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Properties": {
        "description": "The documentation content map of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The identifier of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-documentationpart.html",
    "properties": [
      "Location",
      "Properties",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::DocumentationVersion": {
    "full_properties": {
      "Description": {
        "description": "The description of the API documentation snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentationVersion": {
        "description": "The version identifier of the API documentation snapshot.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The identifier of the API.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-documentationversion.html",
    "properties": [
      "Description",
      "DocumentationVersion",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::DomainName": {
    "full_properties": {
      "CertificateArn": {
        "description": "The reference to an AWS-managed certificate for use by the edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source. For requirements and additional information about setting up certificates, see Get Certificates Ready in AWS Certificate Manager in the API Gateway Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The custom domain name for your API. Uppercase letters are not supported.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EndpointConfiguration": {
        "description": "A list of the endpoint types of the domain name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MutualTlsAuthentication": {
        "description": "The mutual TLS authentication configuration for a custom domain name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OwnershipVerificationCertificateArn": {
        "description": "The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the RegionalCertificateArn.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RegionalCertificateArn": {
        "description": "The reference to an AWS-managed certificate for use by the regional endpoint for the domain name. AWS Certificate Manager is the only supported source.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityPolicy": {
        "description": "The Transport Layer Security (TLS) version + cipher suite for this domain name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of arbitrary tags (key-value pairs) to associate with the domain name.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-domainname.html",
    "properties": [
      "CertificateArn",
      "DomainName",
      "EndpointConfiguration",
      "MutualTlsAuthentication",
      "OwnershipVerificationCertificateArn",
      "RegionalCertificateArn",
      "SecurityPolicy",
      "Tags"
    ]
  },
  "AWS::ApiGateway::GatewayResponse": {
    "full_properties": {
      "ResponseParameters": {
        "description": "The response parameters (paths, query strings, and headers) for the response. Duplicates not allowed.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResponseTemplates": {
        "description": "The response templates for the response. Duplicates not allowed.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResponseType": {
        "description": "The response type. For valid values, see GatewayResponse in the API Gateway API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The identifier of the API.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StatusCode": {
        "description": "The HTTP status code for the response.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-gatewayresponse.html",
    "properties": [
      "ResponseParameters",
      "ResponseTemplates",
      "ResponseType",
      "RestApiId",
      "StatusCode"
    ]
  },
  "AWS::ApiGateway::Method": {
    "full_properties": {
      "ApiKeyRequired": {
        "description": "Indicates whether the method requires clients to submit a valid API key.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AuthorizationScopes": {
        "description": "A list of authorization scopes configured on the method. The scopes are used with a COGNITO_USER_POOLS authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes match a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AuthorizationType": {
        "description": "The method's authorization type. This parameter is required. For valid values, see Method in the API Gateway API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerId": {
        "description": "The identifier of the authorizer to use on this method. If you specify this property, specify CUSTOM or COGNITO_USER_POOLS for the AuthorizationType property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HttpMethod": {
        "description": "The HTTP method that clients use to call this method.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Integration": {
        "description": "The backend system that the method calls when it receives a request.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MethodResponses": {
        "description": "The responses that can be sent to the client who calls the method.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OperationName": {
        "description": "A friendly operation name for the method. For example, you can assign the OperationName of ListPets for the GET /pets method.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestModels": {
        "description": "The resources that are used for the request's content type. Specify request models as key-value pairs (string-to-string mapping), with a content type as the key and a Model resource name as the value. To use the same model regardless of the content type, specify $default as the key.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RequestParameters": {
        "description": "The request parameters that API Gateway accepts. Specify request parameters as key-value pairs (string-to-Boolean mapping), with a source as the key and a Boolean as the value. The Boolean specifies whether a parameter is required. A source must match the format method.request.location.name, where the location is querystring, path, or header, and name is a valid, unique parameter name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RequestValidatorId": {
        "description": "The ID of the associated request validator.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceId": {
        "description": "The ID of an API Gateway resource. For root resource methods, specify the RestApi root resource ID, such as { \"Fn::GetAtt\": [\"MyRestApi\", \"RootResourceId\"] }.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource in which API Gateway creates the method.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-method.html",
    "properties": [
      "ApiKeyRequired",
      "AuthorizationScopes",
      "AuthorizationType",
      "AuthorizerId",
      "HttpMethod",
      "Integration",
      "MethodResponses",
      "OperationName",
      "RequestModels",
      "RequestParameters",
      "RequestValidatorId",
      "ResourceId",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::Model": {
    "full_properties": {
      "ContentType": {
        "description": "The content type for the model.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description that identifies this model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the model. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the model name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The ID of a REST API with which to associate this model.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Schema": {
        "description": "The schema to use to transform data to one or more output formats. Specify null ({}) if you don't want to specify a schema.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-model.html",
    "properties": [
      "ContentType",
      "Description",
      "Name",
      "RestApiId",
      "Schema"
    ]
  },
  "AWS::ApiGateway::RequestValidator": {
    "full_properties": {
      "Name": {
        "description": "The name of this request validator.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The identifier of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidateRequestBody": {
        "description": "Indicates whether to validate the request body according to the configured schema for the targeted API and method.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ValidateRequestParameters": {
        "description": "Indicates whether to validate request parameters.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-requestvalidator.html",
    "properties": [
      "Name",
      "RestApiId",
      "ValidateRequestBody",
      "ValidateRequestParameters"
    ]
  },
  "AWS::ApiGateway::Resource": {
    "full_properties": {
      "ParentId": {
        "description": "If you want to create a child resource, the ID of the parent resource. For resources without a parent, specify the RestApi root resource ID, such as { \"Fn::GetAtt\": [\"MyRestApi\", \"RootResourceId\"] }.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PathPart": {
        "description": "A path name for the resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource in which you want to create this resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-resource.html",
    "properties": [
      "ParentId",
      "PathPart",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::RestApi": {
    "full_properties": {
      "ApiKeySourceType": {
        "description": "The source of the API key for metering requests according to a usage plan. Valid values are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "BinaryMediaTypes": {
        "description": "The list of binary media types that are supported by the RestApi resource. Use ~1 instead of / in the media types, for example image~1png or application~1octet-stream. By default, RestApi supports only UTF-8-encoded text payloads. Duplicates are not allowed. For more information, see Enable Support for Binary Payloads in API Gateway in the API Gateway Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Body": {
        "description": "An OpenAPI specification that defines a set of RESTful APIs in JSON format. For YAML templates, you can also provide the specification in YAML format.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BodyS3Location": {
        "description": "The Amazon Simple Storage Service (Amazon S3) location that points to an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML format.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CloneFrom": {
        "description": "The ID of the RestApi resource that you want to clone.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the RestApi resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisableExecuteApiEndpoint": {
        "description": "Specifies whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EndpointConfiguration": {
        "description": "A list of the endpoint types of the API. Use this property when creating an API. When importing an existing API, specify the endpoint configuration types using the Parameters property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FailOnWarnings": {
        "description": "Indicates whether to roll back the resource if a warning occurs while API Gateway is creating the RestApi resource.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "MinimumCompressionSize": {
        "description": "A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Mode": {
        "description": "This property applies only when you use OpenAPI to define your REST API. The Mode determines how API Gateway handles resource updates.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the RestApi resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "Custom header parameters for the request.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Policy": {
        "description": "A policy document that contains the permissions for the RestApi resource. To set the ARN for the policy, use the !Join intrinsic function with \"\" as delimiter and values of \"execute-api:/\" and \"*\".",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of arbitrary tags (key-value pairs) to associate with the API.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-restapi.html",
    "properties": [
      "ApiKeySourceType",
      "BinaryMediaTypes",
      "Body",
      "BodyS3Location",
      "CloneFrom",
      "Description",
      "DisableExecuteApiEndpoint",
      "EndpointConfiguration",
      "FailOnWarnings",
      "MinimumCompressionSize",
      "Mode",
      "Name",
      "Parameters",
      "Policy",
      "Tags"
    ]
  },
  "AWS::ApiGateway::Stage": {
    "full_properties": {
      "AccessLogSetting": {
        "description": "Specifies settings for logging access in this stage.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CacheClusterEnabled": {
        "description": "Indicates whether cache clustering is enabled for the stage.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CacheClusterSize": {
        "description": "The stage's cache cluster size.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CanarySetting": {
        "description": "Specifies settings for the canary deployment in this stage.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ClientCertificateId": {
        "description": "The ID of the client certificate that API Gateway uses to call your integration endpoints in the stage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeploymentId": {
        "description": "The ID of the deployment that the stage is associated with. This parameter is required to create a stage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the stage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentationVersion": {
        "description": "The version ID of the API documentation snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MethodSettings": {
        "description": "Settings for all methods in the stage.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource that you're deploying with this stage.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StageName": {
        "description": "The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of arbitrary tags (key-value pairs) to associate with the stage.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TracingEnabled": {
        "description": "Specifies whether active X-Ray tracing is enabled for this stage.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Variables": {
        "description": "A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value. Variable names are limited to alphanumeric characters. Values must match the following regular expression: [A-Za-z0-9-._~:/?#&=,]+.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-stage.html",
    "properties": [
      "AccessLogSetting",
      "CacheClusterEnabled",
      "CacheClusterSize",
      "CanarySetting",
      "ClientCertificateId",
      "DeploymentId",
      "Description",
      "DocumentationVersion",
      "MethodSettings",
      "RestApiId",
      "StageName",
      "Tags",
      "TracingEnabled",
      "Variables"
    ]
  },
  "AWS::ApiGateway::UsagePlan": {
    "full_properties": {
      "ApiStages": {
        "description": "The API stages to associate with this usage plan.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the usage plan.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Quota": {
        "description": "Configures the number of requests that users can make within a given interval.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of arbitrary tags (key-value pairs) to associate with the usage plan.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Throttle": {
        "description": "Configures the overall request rate (average requests per second) and burst capacity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UsagePlanName": {
        "description": "A name for the usage plan.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-usageplan.html",
    "properties": [
      "ApiStages",
      "Description",
      "Quota",
      "Tags",
      "Throttle",
      "UsagePlanName"
    ]
  },
  "AWS::ApiGateway::UsagePlanKey": {
    "full_properties": {
      "KeyId": {
        "description": "The ID of the usage plan key.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyType": {
        "description": "The type of usage plan key. Currently, the only valid key type is API_KEY.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UsagePlanId": {
        "description": "The ID of the usage plan.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-usageplankey.html",
    "properties": [
      "KeyId",
      "KeyType",
      "UsagePlanId"
    ]
  },
  "AWS::ApiGateway::VpcLink": {
    "full_properties": {
      "Description": {
        "description": "A description of the VPC link.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the VPC link.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of arbitrary tags (key-value pairs) to associate with the VPC link.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetArns": {
        "description": "The ARN of network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-vpclink.html",
    "properties": [
      "Description",
      "Name",
      "Tags",
      "TargetArns"
    ]
  },
  "AWS::ApiGatewayV2::Api": {
    "full_properties": {
      "ApiKeySelectionExpression": {
        "description": "An API key selection expression. Supported only for WebSocket APIs. See API Key Selection Expressions.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "BasePath": {
        "description": "Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see Set the OpenAPI basePath Property. Supported only for HTTP APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Body": {
        "description": "The OpenAPI definition. Supported only for HTTP APIs. To import an HTTP API, you must specify a Body or BodyS3Location. If you specify a Body or BodyS3Location, don't specify CloudFormation resources such as AWS::ApiGatewayV2::Authorizer or AWS::ApiGatewayV2::Route. API Gateway doesn't support the combination of OpenAPI and CloudFormation resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BodyS3Location": {
        "description": "The S3 location of an OpenAPI definition. Supported only for HTTP APIs. To import an HTTP API, you must specify a Body or BodyS3Location. If you specify a Body or BodyS3Location, don't specify CloudFormation resources such as AWS::ApiGatewayV2::Authorizer or AWS::ApiGatewayV2::Route. API Gateway doesn't support the combination of OpenAPI and CloudFormation resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CorsConfiguration": {
        "description": "A CORS configuration. Supported only for HTTP APIs. See Configuring CORS for more information.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CredentialsArn": {
        "description": "This property is part of quick create. It specifies the credentials required for the integration, if any. For a Lambda integration, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null. Currently, this property is not used for HTTP integrations. Supported only for HTTP APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the API.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisableExecuteApiEndpoint": {
        "description": "Specifies whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DisableSchemaValidation": {
        "description": "Avoid validating models when creating a deployment. Supported only for WebSocket APIs.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "FailOnWarnings": {
        "description": "Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the API. Required unless you specify an OpenAPI definition for Body or S3BodyLocation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProtocolType": {
        "description": "The API protocol. Valid values are WEBSOCKET or HTTP. Required unless you specify an OpenAPI definition for Body or S3BodyLocation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RouteKey": {
        "description": "This property is part of quick create. If you don't specify a routeKey, a default route of $default is created. The $default route acts as a catch-all for any request made to your API, for a particular stage. The $default route key can't be modified. You can add routes after creating the API, and you can update the route keys of additional routes. Supported only for HTTP APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RouteSelectionExpression": {
        "description": "The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The collection of tags. Each tag element is associated with a given resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Target": {
        "description": "This property is part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes. For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Supported only for HTTP APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Version": {
        "description": "A version identifier for the API.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-api.html",
    "properties": [
      "ApiKeySelectionExpression",
      "BasePath",
      "Body",
      "BodyS3Location",
      "CorsConfiguration",
      "CredentialsArn",
      "Description",
      "DisableExecuteApiEndpoint",
      "DisableSchemaValidation",
      "FailOnWarnings",
      "Name",
      "ProtocolType",
      "RouteKey",
      "RouteSelectionExpression",
      "Tags",
      "Target",
      "Version"
    ]
  },
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides": {
    "full_properties": {
      "ApiId": {
        "description": "The ID of the API for which to override the configuration of API Gateway-managed resources.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Integration": {
        "description": "Overrides the integration configuration for an API Gateway-managed integration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Route": {
        "description": "Overrides the route configuration for an API Gateway-managed route.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Stage": {
        "description": "Overrides the stage configuration for an API Gateway-managed stage.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-apigatewaymanagedoverrides.html",
    "properties": [
      "ApiId",
      "Integration",
      "Route",
      "Stage"
    ]
  },
  "AWS::ApiGatewayV2::ApiMapping": {
    "full_properties": {
      "ApiId": {
        "description": "The identifier of the API.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ApiMappingKey": {
        "description": "The API mapping key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The domain name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Stage": {
        "description": "The API stage.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-apimapping.html",
    "properties": [
      "ApiId",
      "ApiMappingKey",
      "DomainName",
      "Stage"
    ]
  },
  "AWS::ApiGatewayV2::Authorizer": {
    "full_properties": {
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AuthorizerCredentialsArn": {
        "description": "Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null. Supported only for REQUEST authorizers.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerPayloadFormatVersion": {
        "description": "Specifies the format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To learn more, see Working with AWS Lambda authorizers for HTTP APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerResultTtlInSeconds": {
        "description": "The time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled. If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Supported only for HTTP API Lambda authorizers.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AuthorizerType": {
        "description": "The authorizer type. Specify REQUEST for a Lambda function using incoming request parameters. Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerUri": {
        "description": "The authorizer's Uniform Resource Identifier (URI). For REQUEST authorizers, this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations. In general, the URI has this form: arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region} is the same as the region hosting the Lambda function, path indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial /. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableSimpleResponses": {
        "description": "Specifies whether a Lambda authorizer returns a response in a simple format. By default, a Lambda authorizer must return an IAM policy. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy. Supported only for HTTP APIs. To learn more, see Working with AWS Lambda authorizers for HTTP APIs.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IdentitySource": {
        "description": "The identity source for which authorization is requested.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "IdentityValidationExpression": {
        "description": "This parameter is not used.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "JwtConfiguration": {
        "description": "The JWTConfiguration property specifies the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the authorizer.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-authorizer.html",
    "properties": [
      "ApiId",
      "AuthorizerCredentialsArn",
      "AuthorizerPayloadFormatVersion",
      "AuthorizerResultTtlInSeconds",
      "AuthorizerType",
      "AuthorizerUri",
      "EnableSimpleResponses",
      "IdentitySource",
      "IdentityValidationExpression",
      "JwtConfiguration",
      "Name"
    ]
  },
  "AWS::ApiGatewayV2::Deployment": {
    "full_properties": {
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description for the deployment resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StageName": {
        "description": "The name of an existing stage to associate with the deployment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-deployment.html",
    "properties": [
      "ApiId",
      "Description",
      "StageName"
    ]
  },
  "AWS::ApiGatewayV2::DomainName": {
    "full_properties": {
      "DomainName": {
        "description": "The custom domain name for your API in Amazon API Gateway. Uppercase letters are not supported.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainNameConfigurations": {
        "description": "The domain name configurations.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MutualTlsAuthentication": {
        "description": "The mutual TLS authentication configuration for a custom domain name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The collection of tags associated with a domain name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-domainname.html",
    "properties": [
      "DomainName",
      "DomainNameConfigurations",
      "MutualTlsAuthentication",
      "Tags"
    ]
  },
  "AWS::ApiGatewayV2::Integration": {
    "full_properties": {
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConnectionId": {
        "description": "The ID of the VPC link for a private integration. Supported only for HTTP APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ConnectionType": {
        "description": "The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ContentHandlingStrategy": {
        "description": "Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CredentialsArn": {
        "description": "Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the integration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IntegrationMethod": {
        "description": "Specifies the integration's HTTP method type.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IntegrationSubtype": {
        "description": "Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke. To learn more, see Integration subtype reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IntegrationType": {
        "description": "The integration type of an integration. One of the following:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "IntegrationUri": {
        "description": "For a Lambda integration, specify the URI of a Lambda function.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PassthroughBehavior": {
        "description": "Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PayloadFormatVersion": {
        "description": "Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0. For all other integrations, 1.0 is the only supported value. To learn more, see Working with AWS Lambda proxy integrations for HTTP APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestParameters": {
        "description": "For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.{location}.{name} , where {location} is querystring, path, or header; and {name} must be a valid and unique method request parameter name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RequestTemplates": {
        "description": "Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value. Supported only for WebSocket APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResponseParameters": {
        "description": "Supported only for HTTP APIs. You use response parameters to transform the HTTP response from a backend integration before returning the response to clients. Specify a key-value map from a selection key to response parameters. The selection key must be a valid HTTP status code within the range of 200-599. The value is of type ResponseParameterList. To learn more, see Transforming API requests and responses.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateSelectionExpression": {
        "description": "The template selection expression for the integration. Supported only for WebSocket APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TimeoutInMillis": {
        "description": "Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "TlsConfig": {
        "description": "The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-integration.html",
    "properties": [
      "ApiId",
      "ConnectionId",
      "ConnectionType",
      "ContentHandlingStrategy",
      "CredentialsArn",
      "Description",
      "IntegrationMethod",
      "IntegrationSubtype",
      "IntegrationType",
      "IntegrationUri",
      "PassthroughBehavior",
      "PayloadFormatVersion",
      "RequestParameters",
      "RequestTemplates",
      "ResponseParameters",
      "TemplateSelectionExpression",
      "TimeoutInMillis",
      "TlsConfig"
    ]
  },
  "AWS::ApiGatewayV2::IntegrationResponse": {
    "full_properties": {
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ContentHandlingStrategy": {
        "description": "Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IntegrationId": {
        "description": "The integration ID.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "IntegrationResponseKey": {
        "description": "The integration response key.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseParameters": {
        "description": "A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name} , where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression} , where {name} is a valid and unique response header name and {JSON-expression} is a valid JSON expression without the $ prefix.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResponseTemplates": {
        "description": "The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateSelectionExpression": {
        "description": "The template selection expression for the integration response. Supported only for WebSocket APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-integrationresponse.html",
    "properties": [
      "ApiId",
      "ContentHandlingStrategy",
      "IntegrationId",
      "IntegrationResponseKey",
      "ResponseParameters",
      "ResponseTemplates",
      "TemplateSelectionExpression"
    ]
  },
  "AWS::ApiGatewayV2::Model": {
    "full_properties": {
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ContentType": {
        "description": "The content-type for the model, for example, \"application/json\".",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the model.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Schema": {
        "description": "The schema for the model. For application/json models, this should be JSON schema draft 4 model.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-model.html",
    "properties": [
      "ApiId",
      "ContentType",
      "Description",
      "Name",
      "Schema"
    ]
  },
  "AWS::ApiGatewayV2::Route": {
    "full_properties": {
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ApiKeyRequired": {
        "description": "Specifies whether an API key is required for the route. Supported only for WebSocket APIs.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AuthorizationScopes": {
        "description": "The authorization scopes supported by this route.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AuthorizationType": {
        "description": "The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerId": {
        "description": "The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ModelSelectionExpression": {
        "description": "The model selection expression for the route. Supported only for WebSocket APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OperationName": {
        "description": "The operation name for the route.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestModels": {
        "description": "The request models for the route. Supported only for WebSocket APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RequestParameters": {
        "description": "The request parameters for the route. Supported only for WebSocket APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RouteKey": {
        "description": "The route key for the route. For HTTP APIs, the route key can be either $default, or a combination of an HTTP method and resource path, for example, GET /pets.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RouteResponseSelectionExpression": {
        "description": "The route response selection expression for the route. Supported only for WebSocket APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Target": {
        "description": "The target for the route.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-route.html",
    "properties": [
      "ApiId",
      "ApiKeyRequired",
      "AuthorizationScopes",
      "AuthorizationType",
      "AuthorizerId",
      "ModelSelectionExpression",
      "OperationName",
      "RequestModels",
      "RequestParameters",
      "RouteKey",
      "RouteResponseSelectionExpression",
      "Target"
    ]
  },
  "AWS::ApiGatewayV2::RouteResponse": {
    "full_properties": {
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModelSelectionExpression": {
        "description": "The model selection expression for the route response. Supported only for WebSocket APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseModels": {
        "description": "The response models for the route response.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResponseParameters": {
        "description": "The route response parameters.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RouteId": {
        "description": "The route ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RouteResponseKey": {
        "description": "The route response key.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-routeresponse.html",
    "properties": [
      "ApiId",
      "ModelSelectionExpression",
      "ResponseModels",
      "ResponseParameters",
      "RouteId",
      "RouteResponseKey"
    ]
  },
  "AWS::ApiGatewayV2::Stage": {
    "full_properties": {
      "AccessLogSettings": {
        "description": "Settings for logging access in this stage.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AccessPolicyId": {
        "description": "This parameter is not currently supported.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ApiId": {
        "description": "The API identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AutoDeploy": {
        "description": "Specifies whether updates to an API automatically trigger a new deployment. The default value is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ClientCertificateId": {
        "description": "The identifier of a client certificate for a Stage. Supported only for WebSocket APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultRouteSettings": {
        "description": "The default route settings for the stage.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeploymentId": {
        "description": "The deployment identifier for the API stage. Can't be updated if autoDeploy is enabled.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description for the API stage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RouteSettings": {
        "description": "Route settings for the stage.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StageName": {
        "description": "The stage name. Stage names can contain only alphanumeric characters, hyphens, and underscores, or be $default. Maximum length is 128 characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StageVariables": {
        "description": "A map that defines the stage variables for a Stage. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&=,]+.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The collection of tags. Each tag element is associated with a given resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-stage.html",
    "properties": [
      "AccessLogSettings",
      "AccessPolicyId",
      "ApiId",
      "AutoDeploy",
      "ClientCertificateId",
      "DefaultRouteSettings",
      "DeploymentId",
      "Description",
      "RouteSettings",
      "StageName",
      "StageVariables",
      "Tags"
    ]
  },
  "AWS::ApiGatewayV2::VpcLink": {
    "full_properties": {
      "Name": {
        "description": "The name of the VPC link.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "A list of security group IDs for the VPC link.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "A list of subnet IDs to include in the VPC link.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The collection of tags. Each tag element is associated with a given resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigatewayv2-vpclink.html",
    "properties": [
      "Name",
      "SecurityGroupIds",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::AppConfig::Application": {
    "full_properties": {
      "Description": {
        "description": "A description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the application.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata to assign to the application. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appconfig-application.html",
    "properties": [
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::AppConfig::ConfigurationProfile": {
    "full_properties": {
      "ApplicationId": {
        "description": "The application ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the configuration profile.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LocationUri": {
        "description": "A URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store and for feature flags, specify hosted. For an SSM document, specify either the document name in the format ssm-document://<Document_name> or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format ssm-parameter://<Parameter_name> or the ARN. For an Amazon S3 object, specify the URI in the following format: s3://<bucket>/<objectKey> . Here is an example: s3://my-bucket/my-app/us-east-1/my-config.json",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the configuration profile.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RetrievalRoleArn": {
        "description": "The ARN of an IAM role with permission to access the configuration at the specified LocationUri.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata to assign to the configuration profile. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of configurations contained in the profile. AWS AppConfig supports feature flags and freeform configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for Type:",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Validators": {
        "description": "A list of methods for validating the configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appconfig-configurationprofile.html",
    "properties": [
      "ApplicationId",
      "Description",
      "LocationUri",
      "Name",
      "RetrievalRoleArn",
      "Tags",
      "Type",
      "Validators"
    ]
  },
  "AWS::AppConfig::Deployment": {
    "full_properties": {
      "ApplicationId": {
        "description": "The application ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConfigurationProfileId": {
        "description": "The configuration profile ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConfigurationVersion": {
        "description": "The configuration version to deploy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeploymentStrategyId": {
        "description": "The deployment strategy ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the deployment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnvironmentId": {
        "description": "The environment ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata to assign to the deployment. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appconfig-deployment.html",
    "properties": [
      "ApplicationId",
      "ConfigurationProfileId",
      "ConfigurationVersion",
      "DeploymentStrategyId",
      "Description",
      "EnvironmentId",
      "Tags"
    ]
  },
  "AWS::AppConfig::DeploymentStrategy": {
    "full_properties": {
      "DeploymentDurationInMinutes": {
        "description": "Total amount of time for a deployment to last.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the deployment strategy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FinalBakeTimeInMinutes": {
        "description": "Specifies the amount of time AWS AppConfig monitors for Amazon CloudWatch alarms after the configuration has been deployed to 100% of its targets, before considering the deployment to be complete. If an alarm is triggered during this time, AWS AppConfig rolls back the deployment. You must configure permissions for AWS AppConfig to roll back based on CloudWatch alarms. For more information, see Configuring permissions for rollback based on Amazon CloudWatch alarms in the  AWS AppConfig User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "GrowthFactor": {
        "description": "The percentage of targets to receive a deployed configuration during each interval.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "GrowthType": {
        "description": "The algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the deployment strategy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReplicateTo": {
        "description": "Save the deployment strategy to a Systems Manager (SSM) document.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Assigns metadata to an AWS AppConfig resource. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define. You can specify a maximum of 50 tags for a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appconfig-deploymentstrategy.html",
    "properties": [
      "DeploymentDurationInMinutes",
      "Description",
      "FinalBakeTimeInMinutes",
      "GrowthFactor",
      "GrowthType",
      "Name",
      "ReplicateTo",
      "Tags"
    ]
  },
  "AWS::AppConfig::Environment": {
    "full_properties": {
      "ApplicationId": {
        "description": "The application ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Monitors": {
        "description": "Amazon CloudWatch alarms to monitor during the deployment process.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the environment.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata to assign to the environment. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appconfig-environment.html",
    "properties": [
      "ApplicationId",
      "Description",
      "Monitors",
      "Name",
      "Tags"
    ]
  },
  "AWS::AppConfig::HostedConfigurationVersion": {
    "full_properties": {
      "ApplicationId": {
        "description": "The application ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConfigurationProfileId": {
        "description": "The configuration profile ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Content": {
        "description": "The content of the configuration or the configuration data.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ContentType": {
        "description": "A standard MIME type describing the format of the configuration content. For more information, see Content-Type.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LatestVersionNumber": {
        "description": "An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version number of the latest hosted configuration version.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appconfig-hostedconfigurationversion.html",
    "properties": [
      "ApplicationId",
      "ConfigurationProfileId",
      "Content",
      "ContentType",
      "Description",
      "LatestVersionNumber"
    ]
  },
  "AWS::AppFlow::ConnectorProfile": {
    "full_properties": {
      "ConnectionMode": {
        "description": "Indicates the connection mode and if it is public or private.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ConnectorLabel": {
        "description": "The label for the connector profile being created.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ConnectorProfileConfig": {
        "description": "Defines the connector-specific configuration and credentials.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConnectorProfileName": {
        "description": "The name of the connector profile. The name is unique for each ConnectorProfile in the AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConnectorType": {
        "description": "The type of connector, such as Salesforce, Amplitude, and so on.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KMSArn": {
        "description": "The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appflow-connectorprofile.html",
    "properties": [
      "ConnectionMode",
      "ConnectorLabel",
      "ConnectorProfileConfig",
      "ConnectorProfileName",
      "ConnectorType",
      "KMSArn"
    ]
  },
  "AWS::AppFlow::Flow": {
    "full_properties": {
      "Description": {
        "description": "A user-entered description of the flow.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationFlowConfigList": {
        "description": "The configuration that controls how Amazon AppFlow places data in the destination connector.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "FlowName": {
        "description": "The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KMSArn": {
        "description": "The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceFlowConfig": {
        "description": "Contains information about the configuration of the source connector used in the flow.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for your flow.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tasks": {
        "description": "A list of tasks that Amazon AppFlow performs while transferring the data in the flow run.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "TriggerConfig": {
        "description": "The trigger settings that determine how and when Amazon AppFlow runs the specified flow.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appflow-flow.html",
    "properties": [
      "Description",
      "DestinationFlowConfigList",
      "FlowName",
      "KMSArn",
      "SourceFlowConfig",
      "Tags",
      "Tasks",
      "TriggerConfig"
    ]
  },
  "AWS::AppIntegrations::DataIntegration": {
    "full_properties": {
      "Description": {
        "description": "A description of the DataIntegration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKey": {
        "description": "The KMS key for the DataIntegration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the DataIntegration.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduleConfig": {
        "description": "The name of the data and how often it should be pulled from the source.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SourceURI": {
        "description": "The URI of the data source.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appintegrations-dataintegration.html",
    "properties": [
      "Description",
      "KmsKey",
      "Name",
      "ScheduleConfig",
      "SourceURI",
      "Tags"
    ]
  },
  "AWS::AppIntegrations::EventIntegration": {
    "full_properties": {
      "Description": {
        "description": "The event integration description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventBridgeBus": {
        "description": "The Amazon EventBridge bus for the event integration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventFilter": {
        "description": "The event integration filter.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the event integration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appintegrations-eventintegration.html",
    "properties": [
      "Description",
      "EventBridgeBus",
      "EventFilter",
      "Name",
      "Tags"
    ]
  },
  "AWS::AppMesh::GatewayRoute": {
    "full_properties": {
      "GatewayRouteName": {
        "description": "The name of the gateway route.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MeshName": {
        "description": "The name of the service mesh that the resource resides in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MeshOwner": {
        "description": "The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Spec": {
        "description": "The specifications of the gateway route.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you can apply to the gateway route to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VirtualGatewayName": {
        "description": "The virtual gateway that the gateway route is associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appmesh-gatewayroute.html",
    "properties": [
      "GatewayRouteName",
      "MeshName",
      "MeshOwner",
      "Spec",
      "Tags",
      "VirtualGatewayName"
    ]
  },
  "AWS::AppMesh::Mesh": {
    "full_properties": {
      "MeshName": {
        "description": "The name to use for the service mesh.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Spec": {
        "description": "The service mesh specification to apply.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you can apply to the service mesh to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appmesh-mesh.html",
    "properties": [
      "MeshName",
      "Spec",
      "Tags"
    ]
  },
  "AWS::AppMesh::Route": {
    "full_properties": {
      "MeshName": {
        "description": "The name of the service mesh to create the route in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MeshOwner": {
        "description": "The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RouteName": {
        "description": "The name to use for the route.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Spec": {
        "description": "The route specification to apply.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you can apply to the route to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VirtualRouterName": {
        "description": "The name of the virtual router in which to create the route. If the virtual router is in a shared mesh, then you must be the owner of the virtual router resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appmesh-route.html",
    "properties": [
      "MeshName",
      "MeshOwner",
      "RouteName",
      "Spec",
      "Tags",
      "VirtualRouterName"
    ]
  },
  "AWS::AppMesh::VirtualGateway": {
    "full_properties": {
      "MeshName": {
        "description": "The name of the service mesh that the virtual gateway resides in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MeshOwner": {
        "description": "The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Spec": {
        "description": "The specifications of the virtual gateway.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you can apply to the virtual gateway to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VirtualGatewayName": {
        "description": "The name of the virtual gateway.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appmesh-virtualgateway.html",
    "properties": [
      "MeshName",
      "MeshOwner",
      "Spec",
      "Tags",
      "VirtualGatewayName"
    ]
  },
  "AWS::AppMesh::VirtualNode": {
    "full_properties": {
      "MeshName": {
        "description": "The name of the service mesh to create the virtual node in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MeshOwner": {
        "description": "The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Spec": {
        "description": "The virtual node specification to apply.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you can apply to the virtual node to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VirtualNodeName": {
        "description": "The name to use for the virtual node.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appmesh-virtualnode.html",
    "properties": [
      "MeshName",
      "MeshOwner",
      "Spec",
      "Tags",
      "VirtualNodeName"
    ]
  },
  "AWS::AppMesh::VirtualRouter": {
    "full_properties": {
      "MeshName": {
        "description": "The name of the service mesh to create the virtual router in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MeshOwner": {
        "description": "The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Spec": {
        "description": "The virtual router specification to apply.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you can apply to the virtual router to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VirtualRouterName": {
        "description": "The name to use for the virtual router.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appmesh-virtualrouter.html",
    "properties": [
      "MeshName",
      "MeshOwner",
      "Spec",
      "Tags",
      "VirtualRouterName"
    ]
  },
  "AWS::AppMesh::VirtualService": {
    "full_properties": {
      "MeshName": {
        "description": "The name of the service mesh to create the virtual service in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MeshOwner": {
        "description": "The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Spec": {
        "description": "The virtual service specification to apply.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you can apply to the virtual service to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VirtualServiceName": {
        "description": "The name to use for the virtual service.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appmesh-virtualservice.html",
    "properties": [
      "MeshName",
      "MeshOwner",
      "Spec",
      "Tags",
      "VirtualServiceName"
    ]
  },
  "AWS::AppRunner::ObservabilityConfiguration": {
    "full_properties": {
      "ObservabilityConfigurationName": {
        "description": "A name for the observability configuration. When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TraceConfiguration": {
        "description": "The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apprunner-observabilityconfiguration.html",
    "properties": [
      "ObservabilityConfigurationName",
      "Tags",
      "TraceConfiguration"
    ]
  },
  "AWS::AppRunner::Service": {
    "full_properties": {
      "AutoScalingConfigurationArn": {
        "description": "The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EncryptionConfiguration": {
        "description": "An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed key.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "HealthCheckConfiguration": {
        "description": "The settings for the health check that AWS App Runner performs to monitor the health of the App Runner service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceConfiguration": {
        "description": "The runtime configuration of instances (scaling units) of your service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NetworkConfiguration": {
        "description": "Configuration settings related to network traffic of the web application that the App Runner service runs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ObservabilityConfiguration": {
        "description": "The observability configuration of your service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServiceName": {
        "description": "A name for the App Runner service. It must be unique across all the running App Runner services in your AWS account in the AWS Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceConfiguration": {
        "description": "The source to deploy to the App Runner service. It can be a code or an image repository.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apprunner-service.html",
    "properties": [
      "AutoScalingConfigurationArn",
      "EncryptionConfiguration",
      "HealthCheckConfiguration",
      "InstanceConfiguration",
      "NetworkConfiguration",
      "ObservabilityConfiguration",
      "ServiceName",
      "SourceConfiguration",
      "Tags"
    ]
  },
  "AWS::AppRunner::VpcConnector": {
    "full_properties": {
      "SecurityGroups": {
        "description": "A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Subnets": {
        "description": "A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "VpcConnectorName": {
        "description": "A name for the VPC connector.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apprunner-vpcconnector.html",
    "properties": [
      "SecurityGroups",
      "Subnets",
      "Tags",
      "VpcConnectorName"
    ]
  },
  "AWS::AppRunner::VpcIngressConnection": {
    "full_properties": {
      "IngressVpcConfiguration": {
        "description": "Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServiceArn": {
        "description": "The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An optional list of metadata items that you can associate with the VPC Ingress Connection resource. A tag is a key-value pair.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "VpcIngressConnectionName": {
        "description": "The customer-provided VPC Ingress Connection name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apprunner-vpcingressconnection.html",
    "properties": [
      "IngressVpcConfiguration",
      "ServiceArn",
      "Tags",
      "VpcIngressConnectionName"
    ]
  },
  "AWS::AppStream::AppBlock": {
    "full_properties": {
      "Description": {
        "description": "The description of the app block.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DisplayName": {
        "description": "The display name of the app block.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the app block.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SetupScriptDetails": {
        "description": "The setup script details of the app block.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SourceS3Location": {
        "description": "The source S3 location of the app block.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags of the app block.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appstream-appblock.html",
    "properties": [
      "Description",
      "DisplayName",
      "Name",
      "SetupScriptDetails",
      "SourceS3Location",
      "Tags"
    ]
  },
  "AWS::AppStream::Application": {
    "full_properties": {
      "AppBlockArn": {
        "description": "The app block ARN with which the application should be associated.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AttributesToDelete": {
        "description": "A list of attributes to delete from an application.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The display name of the application. This name is visible to users in the application catalog.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IconS3Location": {
        "description": "The icon S3 location of the application.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceFamilies": {
        "description": "The instance families the application supports.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "LaunchParameters": {
        "description": "The launch parameters of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LaunchPath": {
        "description": "The launch path of the application.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the application. This name is visible to users when a name is not specified in the DisplayName property.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Platforms": {
        "description": "The platforms the application supports.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags of the application.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WorkingDirectory": {
        "description": "The working directory of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appstream-application.html",
    "properties": [
      "AppBlockArn",
      "AttributesToDelete",
      "Description",
      "DisplayName",
      "IconS3Location",
      "InstanceFamilies",
      "LaunchParameters",
      "LaunchPath",
      "Name",
      "Platforms",
      "Tags",
      "WorkingDirectory"
    ]
  },
  "AWS::AppStream::ApplicationEntitlementAssociation": {
    "full_properties": {
      "ApplicationIdentifier": {
        "description": "The identifier of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EntitlementName": {
        "description": "The name of the entitlement.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StackName": {
        "description": "The name of the stack.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appstream-applicationentitlementassociation.html",
    "properties": [
      "ApplicationIdentifier",
      "EntitlementName",
      "StackName"
    ]
  },
  "AWS::AppStream::ApplicationFleetAssociation": {
    "full_properties": {
      "ApplicationArn": {
        "description": "The ARN of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FleetName": {
        "description": "The name of the fleet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appstream-applicationfleetassociation.html",
    "properties": [
      "ApplicationArn",
      "FleetName"
    ]
  },
  "AWS::AppStream::DirectoryConfig": {
    "full_properties": {
      "DirectoryName": {
        "description": "The fully qualified name of the directory (for example, corp.example.com).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OrganizationalUnitDistinguishedNames": {
        "description": "The distinguished names of the organizational units for computer accounts.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceAccountCredentials": {
        "description": "The credentials for the service account used by the streaming instance to connect to the directory. Do not use this parameter directly. Use ServiceAccountCredentials as an input parameter with noEcho as shown in the Parameters. For best practices information, see Do Not Embed Credentials in Your Templates.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appstream-directoryconfig.html",
    "properties": [
      "DirectoryName",
      "OrganizationalUnitDistinguishedNames",
      "ServiceAccountCredentials"
    ]
  },
  "AWS::AppStream::Entitlement": {
    "full_properties": {
      "AppVisibility": {
        "description": "Specifies whether to entitle all apps or only selected apps.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Attributes": {
        "description": "The attributes of the entitlement.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the entitlement.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the entitlement.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StackName": {
        "description": "The name of the stack.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appstream-entitlement.html",
    "properties": [
      "AppVisibility",
      "Attributes",
      "Description",
      "Name",
      "StackName"
    ]
  },
  "AWS::AppStream::Fleet": {
    "full_properties": {
      "ComputeCapacity": {
        "description": "The desired capacity for the fleet. This is not allowed for Elastic fleets.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description to display.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisconnectTimeoutInSeconds": {
        "description": "The amount of time that a streaming session remains active after users disconnect. If users try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The fleet name to display.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainJoinInfo": {
        "description": "The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. This is not allowed for Elastic fleets.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EnableDefaultInternetAccess": {
        "description": "Enables or disables default internet access for the fleet.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "FleetType": {
        "description": "The fleet type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IamRoleArn": {
        "description": "The ARN of the IAM role that is applied to the fleet. To assume a role, the fleet instance calls the AWS Security Token Service AssumeRole API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the appstream_machine_role credential profile on the instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IdleDisconnectTimeoutInSeconds": {
        "description": "The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the DisconnectTimeoutInSeconds time interval begins. Users are notified before they are disconnected due to inactivity. If they try to reconnect to the streaming session before the time interval specified in DisconnectTimeoutInSeconds elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in IdleDisconnectTimeoutInSeconds elapses, they are disconnected.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ImageArn": {
        "description": "The ARN of the public, private, or shared image to use.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageName": {
        "description": "The name of the image used to create the fleet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceType": {
        "description": "The instance type to use when launching fleet instances. The following instance types are available for non-Elastic fleets:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MaxConcurrentSessions": {
        "description": "The maximum number of concurrent sessions that can be run on an Elastic fleet. This setting is required for Elastic fleets, but is not used for other fleet types.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaxUserDurationInSeconds": {
        "description": "The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "A unique name for the fleet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Platform": {
        "description": "The platform of the fleet. Platform is a required setting for Elastic fleets, and is not used for other fleet types.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SessionScriptS3Location": {
        "description": "The S3 location of the session scripts configuration zip file. This only applies to Elastic fleets.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StreamView": {
        "description": "The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UsbDeviceFilterStrings": {
        "description": "The USB device filter strings that specify which USB devices a user can redirect to the fleet streaming session, when using the Windows native client. This is allowed but not required for Elastic fleets.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "The VPC configuration for the fleet. This is required for Elastic fleets, but not required for other fleet types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appstream-fleet.html",
    "properties": [
      "ComputeCapacity",
      "Description",
      "DisconnectTimeoutInSeconds",
      "DisplayName",
      "DomainJoinInfo",
      "EnableDefaultInternetAccess",
      "FleetType",
      "IamRoleArn",
      "IdleDisconnectTimeoutInSeconds",
      "ImageArn",
      "ImageName",
      "InstanceType",
      "MaxConcurrentSessions",
      "MaxUserDurationInSeconds",
      "Name",
      "Platform",
      "SessionScriptS3Location",
      "StreamView",
      "Tags",
      "UsbDeviceFilterStrings",
      "VpcConfig"
    ]
  },
  "AWS::AppStream::ImageBuilder": {
    "full_properties": {
      "AccessEndpoints": {
        "description": "The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AppstreamAgentVersion": {
        "description": "The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description to display.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The image builder name to display.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainJoinInfo": {
        "description": "The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EnableDefaultInternetAccess": {
        "description": "Enables or disables default internet access for the image builder.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IamRoleArn": {
        "description": "The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service AssumeRole API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the appstream_machine_role credential profile on the instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageArn": {
        "description": "The ARN of the public, private, or shared image to use.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageName": {
        "description": "The name of the image used to create the image builder.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceType": {
        "description": "The instance type to use when launching the image builder. The following instance types are available:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A unique name for the image builder.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "The VPC configuration for the image builder. You can specify only one subnet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appstream-imagebuilder.html",
    "properties": [
      "AccessEndpoints",
      "AppstreamAgentVersion",
      "Description",
      "DisplayName",
      "DomainJoinInfo",
      "EnableDefaultInternetAccess",
      "IamRoleArn",
      "ImageArn",
      "ImageName",
      "InstanceType",
      "Name",
      "Tags",
      "VpcConfig"
    ]
  },
  "AWS::AppStream::Stack": {
    "full_properties": {
      "AccessEndpoints": {
        "description": "The list of virtual private cloud (VPC) interface endpoint objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ApplicationSettings": {
        "description": "The persistent application settings for users of the stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AttributesToDelete": {
        "description": "The stack attributes to delete.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DeleteStorageConnectors": {
        "description": "This parameter has been deprecated.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description to display.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The stack name to display.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EmbedHostDomains": {
        "description": "The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "FeedbackURL": {
        "description": "The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the stack.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RedirectURL": {
        "description": "The URL that users are redirected to after their streaming session ends.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StorageConnectors": {
        "description": "The storage connectors to enable.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "StreamingExperienceSettings": {
        "description": "The streaming protocol that you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserSettings": {
        "description": "The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appstream-stack.html",
    "properties": [
      "AccessEndpoints",
      "ApplicationSettings",
      "AttributesToDelete",
      "DeleteStorageConnectors",
      "Description",
      "DisplayName",
      "EmbedHostDomains",
      "FeedbackURL",
      "Name",
      "RedirectURL",
      "StorageConnectors",
      "StreamingExperienceSettings",
      "Tags",
      "UserSettings"
    ]
  },
  "AWS::AppStream::StackFleetAssociation": {
    "full_properties": {
      "FleetName": {
        "description": "The name of the fleet.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StackName": {
        "description": "The name of the stack.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appstream-stackfleetassociation.html",
    "properties": [
      "FleetName",
      "StackName"
    ]
  },
  "AWS::AppStream::StackUserAssociation": {
    "full_properties": {
      "AuthenticationType": {
        "description": "The authentication type for the user who is associated with the stack. You must specify USERPOOL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SendEmailNotification": {
        "description": "Specifies whether a welcome email is sent to a user after the user is created in the user pool.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "StackName": {
        "description": "The name of the stack that is associated with the user.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserName": {
        "description": "The email address of the user who is associated with the stack.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appstream-stackuserassociation.html",
    "properties": [
      "AuthenticationType",
      "SendEmailNotification",
      "StackName",
      "UserName"
    ]
  },
  "AWS::AppStream::User": {
    "full_properties": {
      "AuthenticationType": {
        "description": "The authentication type for the user. You must specify USERPOOL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FirstName": {
        "description": "The first name, or given name, of the user.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LastName": {
        "description": "The last name, or surname, of the user.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MessageAction": {
        "description": "The action to take for the welcome email that is sent to a user after the user is created in the user pool. If you specify SUPPRESS, no email is sent. If you specify RESEND, do not specify the first name or last name of the user. If the value is null, the email is sent.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserName": {
        "description": "The email address of the user.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appstream-user.html",
    "properties": [
      "AuthenticationType",
      "FirstName",
      "LastName",
      "MessageAction",
      "UserName"
    ]
  },
  "AWS::AppSync::ApiCache": {
    "full_properties": {
      "ApiCachingBehavior": {
        "description": "Caching behavior.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ApiId": {
        "description": "The GraphQL API ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AtRestEncryptionEnabled": {
        "description": "At-rest encryption flag for cache. You cannot update this setting after creation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "TransitEncryptionEnabled": {
        "description": "Transit encryption flag when connecting to cache. You cannot update this setting after creation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Ttl": {
        "description": "TTL in seconds for cache entries.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The cache instance type. Valid values are",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-apicache.html",
    "properties": [
      "ApiCachingBehavior",
      "ApiId",
      "AtRestEncryptionEnabled",
      "TransitEncryptionEnabled",
      "Ttl",
      "Type"
    ]
  },
  "AWS::AppSync::ApiKey": {
    "full_properties": {
      "ApiId": {
        "description": "Unique AWS AppSync GraphQL API ID for this API key.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ApiKeyId": {
        "description": "The API key ID.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "Unique description of your API key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Expires": {
        "description": "The time after which the API key expires. The date is represented as seconds since the epoch, rounded down to the nearest hour.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-apikey.html",
    "properties": [
      "ApiId",
      "ApiKeyId",
      "Description",
      "Expires"
    ]
  },
  "AWS::AppSync::DataSource": {
    "full_properties": {
      "ApiId": {
        "description": "Unique AWS AppSync GraphQL API identifier where this data source will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the data source.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DynamoDBConfig": {
        "description": "AWS Region and TableName for an Amazon DynamoDB table in your account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ElasticsearchConfig": {
        "description": "AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HttpConfig": {
        "description": "Endpoints for an HTTP data source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LambdaConfig": {
        "description": "An ARN of a Lambda function in valid ARN format. This can be the ARN of a Lambda function that exists in the current account or in another account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "Friendly name for you to identify your AppSync data source after creation.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OpenSearchServiceConfig": {
        "description": "AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RelationalDatabaseConfig": {
        "description": "Relational Database configuration of the relational database data source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServiceRoleArn": {
        "description": "The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of the data source.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-datasource.html",
    "properties": [
      "ApiId",
      "Description",
      "DynamoDBConfig",
      "ElasticsearchConfig",
      "HttpConfig",
      "LambdaConfig",
      "Name",
      "OpenSearchServiceConfig",
      "RelationalDatabaseConfig",
      "ServiceRoleArn",
      "Type"
    ]
  },
  "AWS::AppSync::DomainName": {
    "full_properties": {
      "CertificateArn": {
        "description": "The Amazon Resource Name (ARN) of the certificate. This will be an AWS Certificate Manager certificate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The decription for your domain name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The domain name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appsync-domainname.html",
    "properties": [
      "CertificateArn",
      "Description",
      "DomainName"
    ]
  },
  "AWS::AppSync::DomainNameApiAssociation": {
    "full_properties": {
      "ApiId": {
        "description": "The API ID.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The domain name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appsync-domainnameapiassociation.html",
    "properties": [
      "ApiId",
      "DomainName"
    ]
  },
  "AWS::AppSync::FunctionConfiguration": {
    "full_properties": {
      "ApiId": {
        "description": "The AWS AppSync GraphQL API that you want to attach using this function.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataSourceName": {
        "description": "The name of data source this function will attach.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The Function description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FunctionVersion": {
        "description": "The version of the request mapping template. Currently, only the 2018-05-29 version of the template is supported.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MaxBatchSize": {
        "description": "The maximum number of resolver request inputs that will be sent to a single AWS Lambda function in a BatchInvoke operation.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the function.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RequestMappingTemplate": {
        "description": "The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestMappingTemplateS3Location": {
        "description": "Describes a Sync configuration for a resolver.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseMappingTemplate": {
        "description": "The Function response mapping template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseMappingTemplateS3Location": {
        "description": "The location of a response mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SyncConfig": {
        "description": "Describes a Sync configuration for a resolver.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-functionconfiguration.html",
    "properties": [
      "ApiId",
      "DataSourceName",
      "Description",
      "FunctionVersion",
      "MaxBatchSize",
      "Name",
      "RequestMappingTemplate",
      "RequestMappingTemplateS3Location",
      "ResponseMappingTemplate",
      "ResponseMappingTemplateS3Location",
      "SyncConfig"
    ]
  },
  "AWS::AppSync::GraphQLApi": {
    "full_properties": {
      "AdditionalAuthenticationProviders": {
        "description": "A list of additional authentication providers for the GraphqlApi API.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AuthenticationType": {
        "description": "Security configuration for your GraphQL API. For allowed values (such as API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, or AWS_LAMBDA), see Security in the AWS AppSync Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LambdaAuthorizerConfig": {
        "description": "A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LogConfig": {
        "description": "The Amazon CloudWatch Logs configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The API name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OpenIDConnectConfig": {
        "description": "The OpenID Connect configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for this GraphQL API.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserPoolConfig": {
        "description": "Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "XrayEnabled": {
        "description": "A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-graphqlapi.html",
    "properties": [
      "AdditionalAuthenticationProviders",
      "AuthenticationType",
      "LambdaAuthorizerConfig",
      "LogConfig",
      "Name",
      "OpenIDConnectConfig",
      "Tags",
      "UserPoolConfig",
      "XrayEnabled"
    ]
  },
  "AWS::AppSync::GraphQLSchema": {
    "full_properties": {
      "ApiId": {
        "description": "The AWS AppSync GraphQL API identifier to which you want to apply this schema.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Definition": {
        "description": "The text representation of a GraphQL schema in SDL format.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefinitionS3Location": {
        "description": "The location of a GraphQL schema file in an Amazon S3 bucket. Use this if you want to provision with the schema living in Amazon S3 rather than embedding it in your CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-graphqlschema.html",
    "properties": [
      "ApiId",
      "Definition",
      "DefinitionS3Location"
    ]
  },
  "AWS::AppSync::Resolver": {
    "full_properties": {
      "ApiId": {
        "description": "The AWS AppSync GraphQL API to which you want to attach this resolver.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CachingConfig": {
        "description": "The caching configuration for the resolver.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DataSourceName": {
        "description": "The resolver data source name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FieldName": {
        "description": "The GraphQL field on a type that invokes the resolver.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Kind": {
        "description": "The resolver type.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxBatchSize": {
        "description": "The maximum number of resolver request inputs that will be sent to a single AWS Lambda function in a BatchInvoke operation.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PipelineConfig": {
        "description": "Functions linked with the pipeline resolver.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RequestMappingTemplate": {
        "description": "The request mapping template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestMappingTemplateS3Location": {
        "description": "The location of a request mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseMappingTemplate": {
        "description": "The response mapping template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseMappingTemplateS3Location": {
        "description": "The location of a response mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SyncConfig": {
        "description": "The SyncConfig for a resolver attached to a versioned data source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TypeName": {
        "description": "The GraphQL type that invokes this resolver.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appsync-resolver.html",
    "properties": [
      "ApiId",
      "CachingConfig",
      "DataSourceName",
      "FieldName",
      "Kind",
      "MaxBatchSize",
      "PipelineConfig",
      "RequestMappingTemplate",
      "RequestMappingTemplateS3Location",
      "ResponseMappingTemplate",
      "ResponseMappingTemplateS3Location",
      "SyncConfig",
      "TypeName"
    ]
  },
  "AWS::ApplicationAutoScaling::ScalableTarget": {
    "full_properties": {
      "MaxCapacity": {
        "description": "The maximum value that you plan to scale out to. When a scaling policy is in effect, Application Auto Scaling can scale out (expand) as needed to the maximum capacity limit in response to changing demand.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "MinCapacity": {
        "description": "The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "ResourceId": {
        "description": "The identifier of the resource associated with the scalable target. This string consists of the resource type and unique identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleARN": {
        "description": "Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. This can be either an IAM service role that Application Auto Scaling can assume to make calls to other AWS resources on your behalf, or a service-linked role for the specified service. For more information, see How Application Auto Scaling works with IAM in the Application Auto Scaling User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ScalableDimension": {
        "description": "The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ScheduledActions": {
        "description": "The scheduled actions for the scalable target. Duplicates aren't allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceNamespace": {
        "description": "The namespace of the AWS service that provides the resource, or a custom-resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SuspendedState": {
        "description": "An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-applicationautoscaling-scalabletarget.html",
    "properties": [
      "MaxCapacity",
      "MinCapacity",
      "ResourceId",
      "RoleARN",
      "ScalableDimension",
      "ScheduledActions",
      "ServiceNamespace",
      "SuspendedState"
    ]
  },
  "AWS::ApplicationAutoScaling::ScalingPolicy": {
    "full_properties": {
      "PolicyName": {
        "description": "The name of the scaling policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyType": {
        "description": "The scaling policy type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceId": {
        "description": "The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScalableDimension": {
        "description": "The scalable dimension. This string consists of the service namespace, resource type, and scaling property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ScalingTargetId": {
        "description": "The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see the Return Value section of the AWS::ApplicationAutoScaling::ScalableTarget resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceNamespace": {
        "description": "The namespace of the AWS service that provides the resource, or a custom-resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StepScalingPolicyConfiguration": {
        "description": "A step scaling policy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TargetTrackingScalingPolicyConfiguration": {
        "description": "A target tracking scaling policy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-applicationautoscaling-scalingpolicy.html",
    "properties": [
      "PolicyName",
      "PolicyType",
      "ResourceId",
      "ScalableDimension",
      "ScalingTargetId",
      "ServiceNamespace",
      "StepScalingPolicyConfiguration",
      "TargetTrackingScalingPolicyConfiguration"
    ]
  },
  "AWS::ApplicationInsights::Application": {
    "full_properties": {
      "AutoConfigurationEnabled": {
        "description": "If set to true, the application components will be configured with the monitoring configuration recommended by Application Insights.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CWEMonitorEnabled": {
        "description": "Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ComponentMonitoringSettings": {
        "description": "The monitoring settings of the components.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CustomComponents": {
        "description": "Describes a custom component by grouping similar standalone instances to monitor.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "GroupingType": {
        "description": "Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to ACCOUNT_BASED.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LogPatternSets": {
        "description": "The log pattern sets.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OpsCenterEnabled": {
        "description": "Indicates whether Application Insights will create OpsItems for any problem that is detected by Application Insights for an application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "OpsItemSNSTopicArn": {
        "description": "The SNS topic provided to Application Insights that is associated with the created OpsItems to receive SNS notifications for opsItem updates.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceGroupName": {
        "description": "The name of the resource group used for the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of Tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-applicationinsights-application.html",
    "properties": [
      "AutoConfigurationEnabled",
      "ComponentMonitoringSettings",
      "CustomComponents",
      "CWEMonitorEnabled",
      "GroupingType",
      "LogPatternSets",
      "OpsCenterEnabled",
      "OpsItemSNSTopicArn",
      "ResourceGroupName",
      "Tags"
    ]
  },
  "AWS::Athena::DataCatalog": {
    "full_properties": {
      "Description": {
        "description": "A description of the data catalog.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the data catalog. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "Specifies the Lambda function or functions to use for the data catalog. The mapping used depends on the catalog type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags (key-value pairs) to associate with this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of data catalog: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-athena-datacatalog.html",
    "properties": [
      "Description",
      "Name",
      "Parameters",
      "Tags",
      "Type"
    ]
  },
  "AWS::Athena::NamedQuery": {
    "full_properties": {
      "Database": {
        "description": "The database to which the query belongs.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The query description.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The query name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "QueryString": {
        "description": "The SQL statements that make up the query.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkGroup": {
        "description": "The name of the workgroup that contains the named query.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-athena-namedquery.html",
    "properties": [
      "Database",
      "Description",
      "Name",
      "QueryString",
      "WorkGroup"
    ]
  },
  "AWS::Athena::PreparedStatement": {
    "full_properties": {
      "Description": {
        "description": "The description of the prepared statement.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "QueryStatement": {
        "description": "The query string for the prepared statement.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StatementName": {
        "description": "The name of the prepared statement.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkGroup": {
        "description": "The workgroup to which the prepared statement belongs.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-athena-preparedstatement.html",
    "properties": [
      "Description",
      "QueryStatement",
      "StatementName",
      "WorkGroup"
    ]
  },
  "AWS::Athena::WorkGroup": {
    "full_properties": {
      "Description": {
        "description": "The workgroup description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The workgroup name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RecursiveDeleteOption": {
        "description": "The option to delete a workgroup and its contents even if the workgroup contains any named queries. The default is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "State": {
        "description": "The state of the workgroup: ENABLED or DISABLED.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags (key-value pairs) to associate with this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WorkGroupConfiguration": {
        "description": "The configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether Amazon CloudWatch Metrics are enabled for the workgroup, and the limit for the amount of bytes scanned (cutoff) per query, if it is specified. The EnforceWorkGroupConfiguration option determines whether workgroup settings override client-side query settings.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-athena-workgroup.html",
    "properties": [
      "Description",
      "Name",
      "RecursiveDeleteOption",
      "State",
      "Tags",
      "WorkGroupConfiguration"
    ]
  },
  "AWS::AuditManager::Assessment": {
    "full_properties": {
      "AssessmentReportsDestination": {
        "description": "The destination that evidence reports are stored in for the assessment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AwsAccount": {
        "description": "The AWS account that's associated with the assessment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the assessment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FrameworkId": {
        "description": "The unique identifier for the framework.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the assessment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Roles": {
        "description": "The roles that are associated with the assessment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Scope": {
        "description": "The wrapper of AWS accounts and services that are in scope for the assessment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Status": {
        "description": "The overall status of the assessment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that are associated with the assessment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-auditmanager-assessment.html",
    "properties": [
      "AssessmentReportsDestination",
      "AwsAccount",
      "Description",
      "FrameworkId",
      "Name",
      "Roles",
      "Scope",
      "Status",
      "Tags"
    ]
  },
  "AWS::AutoScaling::AutoScalingGroup": {
    "full_properties": {
      "AutoScalingGroupName": {
        "description": "The name of the Auto Scaling group. This name must be unique per Region per account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AvailabilityZones": {
        "description": "A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the VPCZoneIdentifier property, or for attaching a network interface when an existing network interface ID is specified in a launch template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CapacityRebalance": {
        "description": "Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions in the in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "Context": {
        "description": "Reserved.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Cooldown": {
        "description": "Only needed if you use simple scaling policies.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultInstanceWarmup": {
        "description": "The amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. For more information, see Set the default instance warmup for an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DesiredCapacity": {
        "description": "The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure automatic scaling.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DesiredCapacityType": {
        "description": "The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports DesiredCapacityType for attribute-based instance type selection only. For more information, see Creating an Auto Scaling group using attribute-based instance type selection in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckGracePeriod": {
        "description": "The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed Elastic Load Balancing or custom health check. This is useful if your instances do not immediately pass these health checks after they enter the InService state. For more information, see Health check grace period in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthCheckType": {
        "description": "The service to use for the health checks. The valid values are EC2 (default) and ELB. If you configure an Auto Scaling group to use load balancer (ELB) health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks. For more information, see Health checks for Auto Scaling instances in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of the instance used to base the launch configuration on. For more information, see Create an Auto Scaling group using an EC2 instance in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LaunchConfigurationName": {
        "description": "The name of the launch configuration to use to launch instances.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LaunchTemplate": {
        "description": "Information used to specify the launch template and version to use to launch instances. You can alternatively associate a launch template to the Auto Scaling group by specifying a MixedInstancesPolicy. For more information about creating launch templates, see Create a launch template for an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LifecycleHookSpecificationList": {
        "description": "One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LoadBalancerNames": {
        "description": "A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancer, specify the TargetGroupARNs property instead.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaxInstanceLifetime": {
        "description": "The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see Replacing Auto Scaling instances based on maximum instance lifetime in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaxSize": {
        "description": "The maximum size of the group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MetricsCollection": {
        "description": "Enables the monitoring of group metrics of an Auto Scaling group. By default, these metrics are disabled.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "The minimum size of the group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MixedInstancesPolicy": {
        "description": "An embedded object that specifies a mixed instances policy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NewInstancesProtectedFromScaleIn": {
        "description": "Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see Using instance scale-in protection in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NotificationConfigurations": {
        "description": "Configures an Auto Scaling group to send notifications when specified events take place.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PlacementGroup": {
        "description": "The name of the placement group into which to launch your instances. For more information, see Placement groups in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ServiceLinkedRoleARN": {
        "description": "The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist. For more information, see Service-linked roles in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see Tag Auto Scaling groups and instances in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetGroupARNs": {
        "description": "The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling group. Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TerminationPolicies": {
        "description": "A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see Work with Amazon EC2 Auto Scaling termination policies in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VPCZoneIdentifier": {
        "description": "A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-properties-as-group.html",
    "properties": [
      "AutoScalingGroupName",
      "AvailabilityZones",
      "CapacityRebalance",
      "Context",
      "Cooldown",
      "DefaultInstanceWarmup",
      "DesiredCapacity",
      "DesiredCapacityType",
      "HealthCheckGracePeriod",
      "HealthCheckType",
      "InstanceId",
      "LaunchConfigurationName",
      "LaunchTemplate",
      "LifecycleHookSpecificationList",
      "LoadBalancerNames",
      "MaxInstanceLifetime",
      "MaxSize",
      "MetricsCollection",
      "MinSize",
      "MixedInstancesPolicy",
      "NewInstancesProtectedFromScaleIn",
      "NotificationConfigurations",
      "PlacementGroup",
      "ServiceLinkedRoleARN",
      "Tags",
      "TargetGroupARNs",
      "TerminationPolicies",
      "VPCZoneIdentifier"
    ]
  },
  "AWS::AutoScaling::LaunchConfiguration": {
    "full_properties": {
      "AssociatePublicIpAddress": {
        "description": "Specifies whether to assign a public IPv4 address to the group's instances. If the instance is launched into a default subnet, the default is to assign a public IPv4 address, unless you disabled the option to assign a public IPv4 address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IPv4 address, unless you enabled the option to assign a public IPv4 address on the subnet.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "BlockDeviceMappings": {
        "description": "The block device mapping entries that define the block devices to attach to the instances at launch. By default, the block devices specified in the block device mapping for the AMI are used. For more information, see Block device mappings in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ClassicLinkVPCId": {
        "description": "Available for backward compatibility.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClassicLinkVPCSecurityGroups": {
        "description": "Available for backward compatibility.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "EbsOptimized": {
        "description": "Specifies whether the launch configuration is optimized for EBS I/O (true) or not (false). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see Amazon EBS-optimized instances in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "IamInstanceProfile": {
        "description": "The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role. For more information, see IAM role for applications that run on Amazon EC2 instances in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ImageId": {
        "description": "The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see Finding a Linux AMI in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceId": {
        "description": "The ID of the Amazon EC2 instance to use to create the launch configuration. When you use an instance to create a launch configuration, all properties are derived from the instance with the exception of BlockDeviceMapping and AssociatePublicIpAddress. You can override any properties from the instance by specifying them in the launch configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceMonitoring": {
        "description": "Controls whether instances in this group are launched with detailed (true) or basic (false) monitoring.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "Specifies the instance type of the EC2 instance. For information about available instance types, see Available instance types in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KernelId": {
        "description": "The ID of the kernel associated with the AMI.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyName": {
        "description": "The name of the key pair. For more information, see Amazon EC2 key pairs and Linux instances in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LaunchConfigurationName": {
        "description": "The name of the launch configuration. This name must be unique per Region per account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MetadataOptions": {
        "description": "The metadata options for the instances. For more information, see Configuring the Instance Metadata Options in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PlacementTenancy": {
        "description": "The tenancy of the instance, either default or dedicated. An instance with dedicated tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC. To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to default), you must set the value of this property to dedicated. For more information, see Configuring instance tenancy with Amazon EC2 Auto Scaling in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RamDiskId": {
        "description": "The ID of the RAM disk to select.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "A list that contains the security groups to assign to the instances in the Auto Scaling group. The list can contain both the IDs of existing security groups and references to SecurityGroup resources created in the template.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SpotPrice": {
        "description": "The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see Request Spot Instances for fault-tolerant and flexible applications in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserData": {
        "description": "The Base64-encoded user data to make available to the launched EC2 instances. For more information, see Instance metadata and user data in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-autoscaling-launchconfiguration.html",
    "properties": [
      "AssociatePublicIpAddress",
      "BlockDeviceMappings",
      "ClassicLinkVPCId",
      "ClassicLinkVPCSecurityGroups",
      "EbsOptimized",
      "IamInstanceProfile",
      "ImageId",
      "InstanceId",
      "InstanceMonitoring",
      "InstanceType",
      "KernelId",
      "KeyName",
      "LaunchConfigurationName",
      "MetadataOptions",
      "PlacementTenancy",
      "RamDiskId",
      "SecurityGroups",
      "SpotPrice",
      "UserData"
    ]
  },
  "AWS::AutoScaling::LifecycleHook": {
    "full_properties": {
      "AutoScalingGroupName": {
        "description": "The name of the Auto Scaling group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultResult": {
        "description": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is ABANDON.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HeartbeatTimeout": {
        "description": "The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "LifecycleHookName": {
        "description": "The name of the lifecycle hook.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LifecycleTransition": {
        "description": "The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationMetadata": {
        "description": "Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationTargetARN": {
        "description": "The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RoleARN": {
        "description": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information about creating this role, see Configure a notification target for a lifecycle hook in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-autoscaling-lifecyclehook.html",
    "properties": [
      "AutoScalingGroupName",
      "DefaultResult",
      "HeartbeatTimeout",
      "LifecycleHookName",
      "LifecycleTransition",
      "NotificationMetadata",
      "NotificationTargetARN",
      "RoleARN"
    ]
  },
  "AWS::AutoScaling::ScalingPolicy": {
    "full_properties": {
      "AdjustmentType": {
        "description": "Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage). The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutoScalingGroupName": {
        "description": "The name of the Auto Scaling group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Cooldown": {
        "description": "A cooldown period, in seconds, that applies to a specific simple scaling policy. When a cooldown period is specified here, it overrides the default cooldown.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EstimatedInstanceWarmup": {
        "description": "Not needed if the default instance warmup is defined for the group.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MetricAggregationType": {
        "description": "The aggregation type for the CloudWatch metrics. The valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MinAdjustmentMagnitude": {
        "description": "The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PolicyType": {
        "description": "One of the following policy types:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PredictiveScalingConfiguration": {
        "description": "A predictive scaling policy. Provides support for predefined and custom metrics.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ScalingAdjustment": {
        "description": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "StepAdjustments": {
        "description": "A set of adjustments that enable you to scale based on the size of the alarm breach.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetTrackingConfiguration": {
        "description": "A target tracking scaling policy. Provides support for predefined or custom metrics.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-autoscaling-scalingpolicy.html",
    "properties": [
      "AdjustmentType",
      "AutoScalingGroupName",
      "Cooldown",
      "EstimatedInstanceWarmup",
      "MetricAggregationType",
      "MinAdjustmentMagnitude",
      "PolicyType",
      "PredictiveScalingConfiguration",
      "ScalingAdjustment",
      "StepAdjustments",
      "TargetTrackingConfiguration"
    ]
  },
  "AWS::AutoScaling::ScheduledAction": {
    "full_properties": {
      "AutoScalingGroupName": {
        "description": "The name of the Auto Scaling group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DesiredCapacity": {
        "description": "The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain. It can scale beyond this capacity if you add more scaling conditions.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "EndTime": {
        "description": "The date and time for the recurring schedule to end, in UTC. For example, \"2021-06-01T00:00:00Z\".",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxSize": {
        "description": "The maximum size of the Auto Scaling group.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "The minimum size of the Auto Scaling group.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Recurrence": {
        "description": "The recurring schedule for this action. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, \"30 0 1 1,6,12 *\"). For more information about this format, see Crontab.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StartTime": {
        "description": "The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, \"2021-06-01T00:00:00Z\").",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TimeZone": {
        "description": "Specifies the time zone for a cron expression. If a time zone is not provided, UTC is used by default.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-autoscaling-scheduledaction.html",
    "properties": [
      "AutoScalingGroupName",
      "DesiredCapacity",
      "EndTime",
      "MaxSize",
      "MinSize",
      "Recurrence",
      "StartTime",
      "TimeZone"
    ]
  },
  "AWS::AutoScaling::WarmPool": {
    "full_properties": {
      "AutoScalingGroupName": {
        "description": "The name of the Auto Scaling group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceReusePolicy": {
        "description": "Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaxGroupPreparedCapacity": {
        "description": "Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group. This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "Specifies the minimum number of instances to maintain in the warm pool. This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PoolState": {
        "description": "Sets the instance state to transition to after the lifecycle actions are complete. Default is Stopped.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-autoscaling-warmpool.html",
    "properties": [
      "AutoScalingGroupName",
      "InstanceReusePolicy",
      "MaxGroupPreparedCapacity",
      "MinSize",
      "PoolState"
    ]
  },
  "AWS::AutoScalingPlans::ScalingPlan": {
    "full_properties": {
      "ApplicationSource": {
        "description": "A CloudFormation stack or a set of tags. You can create one scaling plan per application source. The ApplicationSource property must be present to ensure interoperability with the AWS Auto Scaling console.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ScalingInstructions": {
        "description": "The scaling instructions.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-autoscalingplans-scalingplan.html",
    "properties": [
      "ApplicationSource",
      "ScalingInstructions"
    ]
  },
  "AWS::Backup::BackupPlan": {
    "full_properties": {
      "BackupPlan": {
        "description": "Uniquely identifies the backup plan to be associated with the selection of resources.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BackupPlanTags": {
        "description": "To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-backup-backupplan.html",
    "properties": [
      "BackupPlan",
      "BackupPlanTags"
    ]
  },
  "AWS::Backup::BackupSelection": {
    "full_properties": {
      "BackupPlanId": {
        "description": "Uniquely identifies a backup plan.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BackupSelection": {
        "description": "Specifies the body of a request to assign a set of resources to a backup plan.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-backup-backupselection.html",
    "properties": [
      "BackupPlanId",
      "BackupSelection"
    ]
  },
  "AWS::Backup::BackupVault": {
    "full_properties": {
      "AccessPolicy": {
        "description": "A resource-based policy that is used to manage access permissions on the target backup vault.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BackupVaultName": {
        "description": "The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BackupVaultTags": {
        "description": "Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EncryptionKeyArn": {
        "description": "A server-side encryption key you can specify to encrypt your backups from services that support full AWS Backup management; for example, arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab. If you specify a key, you must specify its ARN, not its alias. If you do not specify a key, AWS Backup creates a KMS key for you by default.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LockConfiguration": {
        "description": "Configuration for AWS Backup Vault Lock.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Notifications": {
        "description": "The SNS event notifications for the specified backup vault.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-backup-backupvault.html",
    "properties": [
      "AccessPolicy",
      "BackupVaultName",
      "BackupVaultTags",
      "EncryptionKeyArn",
      "LockConfiguration",
      "Notifications"
    ]
  },
  "AWS::Backup::Framework": {
    "full_properties": {
      "FrameworkControls": {
        "description": "Contains detailed information about all of the controls of a framework. Each framework must contain at least one control.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "FrameworkDescription": {
        "description": "An optional description of the framework with a maximum 1,024 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FrameworkName": {
        "description": "The unique name of a framework. This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FrameworkTags": {
        "description": "A list of tags with which to tag your framework.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-backup-framework.html",
    "properties": [
      "FrameworkControls",
      "FrameworkDescription",
      "FrameworkName",
      "FrameworkTags"
    ]
  },
  "AWS::Backup::ReportPlan": {
    "full_properties": {
      "ReportDeliveryChannel": {
        "description": "Contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ReportPlanDescription": {
        "description": "An optional description of the report plan with a maximum 1,024 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReportPlanName": {
        "description": "The unique name of the report plan. This name is between 1 and 256 characters starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReportPlanTags": {
        "description": "A list of tags to tag your report plan.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ReportSetting": {
        "description": "Identifies the report template for the report. Reports are built using a report template. The report templates are:",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-backup-reportplan.html",
    "properties": [
      "ReportDeliveryChannel",
      "ReportPlanDescription",
      "ReportPlanName",
      "ReportPlanTags",
      "ReportSetting"
    ]
  },
  "AWS::Batch::ComputeEnvironment": {
    "full_properties": {
      "ComputeEnvironmentName": {
        "description": "The name for your compute environment. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ComputeResources": {
        "description": "The ComputeResources property type specifies details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. For more information, see Compute Environments in the AWS Batch User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ReplaceComputeEnvironment": {
        "description": "Specifies whether the compute environment should be replaced if an update is made that requires replacing the instances in the compute environment. The default value is true. To enable more properties to be updated, set this property to false. When changing the value of this property to false, no other properties should be changed at the same time. If other properties are changed at the same time, and the change needs to be rolled back but it can't, it's possible for the stack to go into the UPDATE_ROLLBACK_FAILED state. You can't update a stack that is in the UPDATE_ROLLBACK_FAILED state. However, if you can continue to roll it back, you can return the stack to its original settings and then try to update it again. For more information, see Continue rolling back an update in the AWS CloudFormation User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServiceRole": {
        "description": "The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf. For more information, see AWS Batch service IAM role in the AWS Batch User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "State": {
        "description": "The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags applied to the compute environment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of the compute environment: MANAGED or UNMANAGED. For more information, see Compute Environments in the  AWS Batch User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UnmanagedvCpus": {
        "description": "The maximum number of vCPUs for an unmanaged compute environment. This parameter is only used for fair share scheduling to reserve vCPU capacity for new share identifiers. If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "UpdatePolicy": {
        "description": "Specifies the infrastructure update policy for the compute environment. For more information about infrastructure updates, see Updating compute environments in the AWS Batch User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-batch-computeenvironment.html",
    "properties": [
      "ComputeEnvironmentName",
      "ComputeResources",
      "ReplaceComputeEnvironment",
      "ServiceRole",
      "State",
      "Tags",
      "Type",
      "UnmanagedvCpus",
      "UpdatePolicy"
    ]
  },
  "AWS::Batch::JobDefinition": {
    "full_properties": {
      "ContainerProperties": {
        "description": "An object with various properties specific to container-based jobs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "JobDefinitionName": {
        "description": "The name of the job definition.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NodeProperties": {
        "description": "An object with various properties specific to multi-node parallel jobs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "Default parameters or parameter substitution placeholders that are set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a SubmitJob request override any corresponding parameter defaults from the job definition. For more information about specifying parameters, see Job definition parameters in the  AWS Batch User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PlatformCapabilities": {
        "description": "The platform capabilities required by the job definition. If no value is specified, it defaults to EC2. Jobs run on Fargate resources specify FARGATE.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PropagateTags": {
        "description": "Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags aren't propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the FAILED state.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RetryStrategy": {
        "description": "The retry strategy to use for failed jobs that are submitted with this job definition.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SchedulingPriority": {
        "description": "The scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags applied to the job definition.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Timeout": {
        "description": "The timeout configuration for jobs that are submitted with this job definition. You can specify a timeout duration after which AWS Batch terminates your jobs if they haven't finished.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of job definition. For more information about multi-node parallel jobs, see Creating a multi-node parallel job definition in the  AWS Batch User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-batch-jobdefinition.html",
    "properties": [
      "ContainerProperties",
      "JobDefinitionName",
      "NodeProperties",
      "Parameters",
      "PlatformCapabilities",
      "PropagateTags",
      "RetryStrategy",
      "SchedulingPriority",
      "Tags",
      "Timeout",
      "Type"
    ]
  },
  "AWS::Batch::JobQueue": {
    "full_properties": {
      "ComputeEnvironmentOrder": {
        "description": "The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment runs a specific job. Compute environments must be in the VALID state before you can associate them with a job queue. You can associate up to three compute environments with a job queue. All of the compute environments must be either EC2 (EC2 or SPOT) or Fargate (FARGATE or FARGATE_SPOT); EC2 and Fargate compute environments can't be mixed.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "JobQueueName": {
        "description": "The name of the job queue. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Priority": {
        "description": "The priority of the job queue. Job queues with a higher priority (or a higher integer value for the priority parameter) are evaluated first when associated with the same compute environment. Priority is determined in descending order. For example, a job queue with a priority value of 10 is given scheduling preference over a job queue with a priority value of 1. All of the compute environments must be either EC2 (EC2 or SPOT) or Fargate (FARGATE or FARGATE_SPOT); EC2 and Fargate compute environments can't be mixed.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "SchedulingPolicyArn": {
        "description": "The Amazon Resource Name (ARN) of the scheduling policy. The format is aws:Partition:batch:Region:Account:scheduling-policy/Name . For example, aws:aws:batch:us-west-2:012345678910:scheduling-policy/MySchedulingPolicy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "State": {
        "description": "The state of the job queue. If the job queue state is ENABLED, it is able to accept jobs. If the job queue state is DISABLED, new jobs can't be added to the queue, but jobs already in the queue can finish.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags applied to the job queue. For more information, see Tagging your AWS Batch resources in  AWS Batch User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-batch-jobqueue.html",
    "properties": [
      "ComputeEnvironmentOrder",
      "JobQueueName",
      "Priority",
      "SchedulingPolicyArn",
      "State",
      "Tags"
    ]
  },
  "AWS::Batch::SchedulingPolicy": {
    "full_properties": {
      "FairsharePolicy": {
        "description": "The fair share policy of the scheduling policy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the scheduling policy. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you apply to the scheduling policy to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see Tagging AWS Resources in AWS General Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-batch-schedulingpolicy.html",
    "properties": [
      "FairsharePolicy",
      "Name",
      "Tags"
    ]
  },
  "AWS::BillingConductor::BillingGroup": {
    "full_properties": {
      "AccountGrouping": {
        "description": "The set of accounts that will be under the billing group. The set of accounts resemble the linked accounts in a consolidated family.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ComputationPreference": {
        "description": "The preferences and settings that will be used to compute the AWS charges for a billing group.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The billing group description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The billing group's name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PrimaryAccountId": {
        "description": "The account ID that serves as the main account in a billing group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-billingconductor-billinggroup.html",
    "properties": [
      "AccountGrouping",
      "ComputationPreference",
      "Description",
      "Name",
      "PrimaryAccountId"
    ]
  },
  "AWS::BillingConductor::CustomLineItem": {
    "full_properties": {
      "BillingGroupArn": {
        "description": "The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BillingPeriodRange": {
        "description": "A time range for which the custom line item is effective.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomLineItemChargeDetails": {
        "description": "The charge details of a custom line item. It should contain only one of Flat or Percentage.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The custom line item's description. This is shown on the Bills page in association with the charge value.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The custom line item's name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-billingconductor-customlineitem.html",
    "properties": [
      "BillingGroupArn",
      "BillingPeriodRange",
      "CustomLineItemChargeDetails",
      "Description",
      "Name"
    ]
  },
  "AWS::BillingConductor::PricingPlan": {
    "full_properties": {
      "Description": {
        "description": "The pricing plan description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of a pricing plan.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PricingRuleArns": {
        "description": "The PricingRuleArns that are associated with the Pricing Plan.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-billingconductor-pricingplan.html",
    "properties": [
      "Description",
      "Name",
      "PricingRuleArns"
    ]
  },
  "AWS::BillingConductor::PricingRule": {
    "full_properties": {
      "Description": {
        "description": "The pricing rule description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ModifierPercentage": {
        "description": "A percentage modifier applied on the public pricing rates.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of a pricing rule.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Scope": {
        "description": "The scope of pricing rule that indicates if it is globally applicable, or if it is service-specific.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Service": {
        "description": "If the Scope attribute is SERVICE, this attribute indicates which service the PricingRule is applicable for.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of pricing rule.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-billingconductor-pricingrule.html",
    "properties": [
      "Description",
      "ModifierPercentage",
      "Name",
      "Scope",
      "Service",
      "Type"
    ]
  },
  "AWS::Budgets::Budget": {
    "full_properties": {
      "Budget": {
        "description": "The budget object that you want to create.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NotificationsWithSubscribers": {
        "description": "A notification that you want to associate with a budget. A budget can have up to five notifications, and each notification can have one SNS subscriber and up to 10 email subscribers. If you include notifications and subscribers in your CreateBudget call, AWS creates the notifications and subscribers for you.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-budgets-budget.html",
    "properties": [
      "Budget",
      "NotificationsWithSubscribers"
    ]
  },
  "AWS::Budgets::BudgetsAction": {
    "full_properties": {
      "ActionThreshold": {
        "description": "The trigger threshold of the action.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ActionType": {
        "description": "The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ApprovalModel": {
        "description": "This specifies if the action needs manual or automatic approval.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "BudgetName": {
        "description": "A string that represents the budget name. \":\" and \"\\\" characters aren't allowed.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Definition": {
        "description": "Specifies all of the type-specific parameters.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ExecutionRoleArn": {
        "description": "The role passed for action execution and reversion. Roles and actions must be in the same account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationType": {
        "description": "The type of a notification.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Subscribers": {
        "description": "A list of subscribers.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-budgets-budgetsaction.html",
    "properties": [
      "ActionThreshold",
      "ActionType",
      "ApprovalModel",
      "BudgetName",
      "Definition",
      "ExecutionRoleArn",
      "NotificationType",
      "Subscribers"
    ]
  },
  "AWS::CE::AnomalyMonitor": {
    "full_properties": {
      "MonitorDimension": {
        "description": "The dimensions to evaluate.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MonitorName": {
        "description": "The name of the monitor.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MonitorSpecification": {
        "description": "The array of MonitorSpecification in JSON array format. For instance, you can use MonitorSpecification to specify a tag, Cost Category, or linked account for your custom anomaly monitor. For further information, see the Examples section of this page.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MonitorType": {
        "description": "The possible type values.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceTags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ce-anomalymonitor.html",
    "properties": [
      "MonitorDimension",
      "MonitorName",
      "MonitorSpecification",
      "MonitorType",
      "ResourceTags"
    ]
  },
  "AWS::CE::AnomalySubscription": {
    "full_properties": {
      "Frequency": {
        "description": "The frequency that anomaly reports are sent over email.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MonitorArnList": {
        "description": "A list of cost anomaly monitors.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ResourceTags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Subscribers": {
        "description": "A list of subscribers to notify.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "SubscriptionName": {
        "description": "The name for the subscription.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Threshold": {
        "description": "The dollar value that triggers a notification if the threshold is exceeded.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ce-anomalysubscription.html",
    "properties": [
      "Frequency",
      "MonitorArnList",
      "ResourceTags",
      "Subscribers",
      "SubscriptionName",
      "Threshold"
    ]
  },
  "AWS::CE::CostCategory": {
    "full_properties": {
      "DefaultValue": {
        "description": "The default value for the cost category.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The unique name of the Cost Category.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RuleVersion": {
        "description": "The rule schema version in this particular Cost Category.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Rules": {
        "description": "The array of CostCategoryRule in JSON array format.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SplitChargeRules": {
        "description": "The split charge rules that are used to allocate your charges between your Cost Category values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ce-costcategory.html",
    "properties": [
      "DefaultValue",
      "Name",
      "Rules",
      "RuleVersion",
      "SplitChargeRules"
    ]
  },
  "AWS::CUR::ReportDefinition": {
    "full_properties": {
      "AdditionalArtifacts": {
        "description": "A list of manifests that you want AWS to create for this report.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AdditionalSchemaElements": {
        "description": "A list of strings that indicate additional content that AWS includes in the report, such as individual resource IDs.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "BillingViewArn": {
        "description": "The Amazon Resource Name (ARN) of the billing view. You can get this value by using the billing view service public APIs.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Compression": {
        "description": "The compression format that Amazon Web Services uses for the report.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Format": {
        "description": "The format that Amazon Web Services saves the report in.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RefreshClosedReports": {
        "description": "Whether you want AWS to update your reports after they have been finalized if AWS detects charges related to previous months. These charges can include refunds, credits, or support fees.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ReportName": {
        "description": "The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReportVersioning": {
        "description": "Whether you want AWS to overwrite the previous version of each report or to deliver the report in addition to the previous versions.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "S3Bucket": {
        "description": "The S3 bucket where Amazon Web Services delivers the report.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "S3Prefix": {
        "description": "The prefix that Amazon Web Services adds to the report name when Amazon Web Services delivers the report. Your prefix can't include spaces.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "S3Region": {
        "description": "The Region of the S3 bucket that Amazon Web Services delivers the report into.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TimeUnit": {
        "description": "The granularity of the line items in the report.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cur-reportdefinition.html",
    "properties": [
      "AdditionalArtifacts",
      "AdditionalSchemaElements",
      "BillingViewArn",
      "Compression",
      "Format",
      "RefreshClosedReports",
      "ReportName",
      "ReportVersioning",
      "S3Bucket",
      "S3Prefix",
      "S3Region",
      "TimeUnit"
    ]
  },
  "AWS::Cassandra::Keyspace": {
    "full_properties": {
      "KeyspaceName": {
        "description": "The name of the keyspace to be created. The keyspace name is case sensitive. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the keyspace name. For more information, see Name type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pair tags to be attached to the resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cassandra-keyspace.html",
    "properties": [
      "KeyspaceName",
      "Tags"
    ]
  },
  "AWS::Cassandra::Table": {
    "full_properties": {
      "BillingMode": {
        "description": "The billing mode for the table, which determines how you'll be charged for reads and writes:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ClusteringKeyColumns": {
        "description": "One or more columns that determine how the table data is sorted.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "DefaultTimeToLive": {
        "description": "The default Time To Live (TTL) value for all rows in a table in seconds. The maximum configurable value is 630,720,000 seconds, which is the equivalent of 20 years. By default, the TTL value for a table is 0, which means data does not expire.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "EncryptionSpecification": {
        "description": "The encryption at rest options for the table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KeyspaceName": {
        "description": "The name of the keyspace in which to create the table. The keyspace must already exist.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PartitionKeyColumns": {
        "description": "One or more columns that uniquely identify every row in the table. Every table must have a partition key.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PointInTimeRecoveryEnabled": {
        "description": "Specifies if point-in-time recovery is enabled or disabled for the table. The options are PointInTimeRecoveryEnabled=true and PointInTimeRecoveryEnabled=false. If not specified, the default is PointInTimeRecoveryEnabled=false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RegularColumns": {
        "description": "One or more columns that are not part of the primary key - that is, columns that are not defined as partition key columns or clustering key columns.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TableName": {
        "description": "The name of the table to be created. The table name is case sensitive. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the table name. For more information, see Name type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pair tags to be attached to the resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cassandra-table.html",
    "properties": [
      "BillingMode",
      "ClusteringKeyColumns",
      "DefaultTimeToLive",
      "EncryptionSpecification",
      "KeyspaceName",
      "PartitionKeyColumns",
      "PointInTimeRecoveryEnabled",
      "RegularColumns",
      "TableName",
      "Tags"
    ]
  },
  "AWS::CertificateManager::Account": {
    "full_properties": {
      "ExpiryEventsConfiguration": {
        "description": "Object containing expiration events options associated with an AWS account. For more information, see ExpiryEventsConfiguration in the API reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-certificatemanager-account.html",
    "properties": [
      "ExpiryEventsConfiguration"
    ]
  },
  "AWS::CertificateManager::Certificate": {
    "full_properties": {
      "CertificateAuthorityArn": {
        "description": "The Amazon Resource Name (ARN) of the private certificate authority (CA) that will be used to issue the certificate. If you do not provide an ARN and you are trying to request a private certificate, ACM will attempt to issue a public certificate. For more information about private CAs, see the AWS Private Certificate Authority user guide. The ARN must have the following form:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateTransparencyLoggingPreference": {
        "description": "You can opt out of certificate transparency logging by specifying the DISABLED option. Opt in by specifying ENABLED.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The fully qualified domain name (FQDN), such as www.example.com, with which you want to secure an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainValidationOptions": {
        "description": "Domain information that domain name registrars use to verify your identity.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubjectAlternativeNames": {
        "description": "Additional FQDNs to be included in the Subject Alternative Name extension of the ACM certificate. For example, you can add www.example.net to a certificate for which the DomainName field is www.example.com if users can reach your site by using either name.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key-value pairs that can identify the certificate.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ValidationMethod": {
        "description": "The method you want to use to validate that you own or control the domain associated with a public certificate. You can validate with DNS or validate with email. We recommend that you use DNS validation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-certificatemanager-certificate.html",
    "properties": [
      "CertificateAuthorityArn",
      "CertificateTransparencyLoggingPreference",
      "DomainName",
      "DomainValidationOptions",
      "SubjectAlternativeNames",
      "Tags",
      "ValidationMethod"
    ]
  },
  "AWS::Chatbot::SlackChannelConfiguration": {
    "full_properties": {
      "ConfigurationName": {
        "description": "The name of the configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "GuardrailPolicies": {
        "description": "The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "IamRoleArn": {
        "description": "The ARN of the IAM role that defines the permissions for AWS Chatbot.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LoggingLevel": {
        "description": "Specifies the logging level for this configuration. This property affects the log entries pushed to Amazon CloudWatch Logs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SlackChannelId": {
        "description": "The ID of the Slack channel.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SlackWorkspaceId": {
        "description": "The ID of the Slack workspace authorized with AWS Chatbot.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnsTopicArns": {
        "description": "The ARNs of the SNS topics that deliver notifications to AWS Chatbot.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserRoleRequired": {
        "description": "Enables use of a user role requirement in your chat configuration.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-chatbot-slackchannelconfiguration.html",
    "properties": [
      "ConfigurationName",
      "GuardrailPolicies",
      "IamRoleArn",
      "LoggingLevel",
      "SlackChannelId",
      "SlackWorkspaceId",
      "SnsTopicArns",
      "UserRoleRequired"
    ]
  },
  "AWS::Cloud9::EnvironmentEC2": {
    "full_properties": {
      "AutomaticStopTimeMinutes": {
        "description": "The number of minutes until the running instance is shut down after the environment was last used.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "ConnectionType": {
        "description": "The connection type used for connecting to an Amazon EC2 environment. Valid values are CONNECT_SSH (default) and CONNECT_SSM (connected through AWS Systems Manager).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the environment to create.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageId": {
        "description": "The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. To choose an AMI for the instance, you must specify a valid AMI alias or a valid AWS Systems Manager path.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The type of instance to connect to the environment (for example, t2.micro).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OwnerArn": {
        "description": "The Amazon Resource Name (ARN) of the environment owner. This ARN can be the ARN of any AWS Identity and Access Management principal. If this value is not specified, the ARN defaults to this environment's creator.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Repositories": {
        "description": "Any AWS CodeCommit source code repositories to be cloned into the development environment.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet in Amazon Virtual Private Cloud (Amazon VPC) that AWS Cloud9 will use to communicate with the Amazon Elastic Compute Cloud (Amazon EC2) instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs that will be associated with the new AWS Cloud9 development environment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloud9-environmentec2.html",
    "properties": [
      "AutomaticStopTimeMinutes",
      "ConnectionType",
      "Description",
      "ImageId",
      "InstanceType",
      "Name",
      "OwnerArn",
      "Repositories",
      "SubnetId",
      "Tags"
    ]
  },
  "AWS::CloudFormation::CustomResource": {
    "full_properties": {
      "ServiceToken": {
        "description": "Only one property is defined by AWS for a custom resource: ServiceToken. All other properties are defined by the service provider.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cfn-customresource.html",
    "properties": [
      "ServiceToken"
    ]
  },
  "AWS::CloudFormation::HookDefaultVersion": {
    "full_properties": {
      "TypeName": {
        "description": "The name of the hook.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TypeVersionArn": {
        "description": "The version ID of the type configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VersionId": {
        "description": "The version ID of the type specified.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudformation-hookdefaultversion.html",
    "properties": [
      "TypeName",
      "TypeVersionArn",
      "VersionId"
    ]
  },
  "AWS::CloudFormation::HookTypeConfig": {
    "full_properties": {
      "Configuration": {
        "description": "Specifies the activated hook type configuration, in this AWS account and AWS Region.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConfigurationAlias": {
        "description": "Specifies the activated hook type configuration, in this AWS account and AWS Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TypeArn": {
        "description": "The Amazon Resource Number (ARN) for the hook to set Configuration for.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TypeName": {
        "description": "The unique name for your hook. Specifies a three-part namespace for your hook, with a recommended pattern of Organization::Service::Hook.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudformation-hooktypeconfig.html",
    "properties": [
      "Configuration",
      "ConfigurationAlias",
      "TypeArn",
      "TypeName"
    ]
  },
  "AWS::CloudFormation::HookVersion": {
    "full_properties": {
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the task execution role that grants the hook permission.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggingConfig": {
        "description": "Contains logging configuration information for an extension.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SchemaHandlerPackage": {
        "description": "A URL to the Amazon S3 bucket containing the hook project package that contains the necessary files for the hook you want to register.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TypeName": {
        "description": "The unique name for your hook. Specifies a three-part namespace for your hook, with a recommended pattern of Organization::Service::Hook.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudformation-hookversion.html",
    "properties": [
      "ExecutionRoleArn",
      "LoggingConfig",
      "SchemaHandlerPackage",
      "TypeName"
    ]
  },
  "AWS::CloudFormation::Macro": {
    "full_properties": {
      "Description": {
        "description": "A description of the macro.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "The Amazon Resource Name (ARN) of the underlying AWS Lambda function that you want AWS CloudFormation to invoke when the macro is run.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LogGroupName": {
        "description": "The CloudWatch Logs group to which AWS CloudFormation sends error logging information when invoking the macro's underlying AWS Lambda function.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LogRoleARN": {
        "description": "The ARN of the role AWS CloudFormation should assume when sending log entries to CloudWatch Logs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the macro. The name of the macro must be unique across all macros in the account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudformation-macro.html",
    "properties": [
      "Description",
      "FunctionName",
      "LogGroupName",
      "LogRoleARN",
      "Name"
    ]
  },
  "AWS::CloudFormation::ModuleDefaultVersion": {
    "full_properties": {
      "Arn": {
        "description": "The Amazon Resource Name (ARN) of the module version to set as the default version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModuleName": {
        "description": "The name of the module.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VersionId": {
        "description": "The ID for the specific version of the module.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudformation-moduledefaultversion.html",
    "properties": [
      "Arn",
      "ModuleName",
      "VersionId"
    ]
  },
  "AWS::CloudFormation::ModuleVersion": {
    "full_properties": {
      "ModuleName": {
        "description": "The name of the module being registered.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModulePackage": {
        "description": "A URL to the S3 bucket containing the package that contains the template fragment and schema files for the module version to register.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudformation-moduleversion.html",
    "properties": [
      "ModuleName",
      "ModulePackage"
    ]
  },
  "AWS::CloudFormation::PublicTypeVersion": {
    "full_properties": {
      "Arn": {
        "description": "The Amazon Resource Number (ARN) of the extension.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LogDeliveryBucket": {
        "description": "The S3 bucket to which CloudFormation delivers the contract test execution logs.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PublicVersionNumber": {
        "description": "The version number to assign to this version of the extension.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of the extension to test.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TypeName": {
        "description": "The name of the extension to test.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudformation-publictypeversion.html",
    "properties": [
      "Arn",
      "LogDeliveryBucket",
      "PublicVersionNumber",
      "Type",
      "TypeName"
    ]
  },
  "AWS::CloudFormation::Publisher": {
    "full_properties": {
      "AcceptTermsAndConditions": {
        "description": "Whether you accept the Terms and Conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to register to publish public extensions to the CloudFormation registry.",
        "required": true,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ConnectionArn": {
        "description": "If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudformation-publisher.html",
    "properties": [
      "AcceptTermsAndConditions",
      "ConnectionArn"
    ]
  },
  "AWS::CloudFormation::ResourceDefaultVersion": {
    "full_properties": {
      "TypeName": {
        "description": "The name of the resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TypeVersionArn": {
        "description": "The Amazon Resource Name (ARN) of the resource version.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VersionId": {
        "description": "The ID of a specific version of the resource. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the resource version when it's registered.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudformation-resourcedefaultversion.html",
    "properties": [
      "TypeName",
      "TypeVersionArn",
      "VersionId"
    ]
  },
  "AWS::CloudFormation::ResourceVersion": {
    "full_properties": {
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role for CloudFormation to assume when invoking the resource. If your resource calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. When CloudFormation needs to invoke the resource type handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the resource type handler, thereby supplying your resource type with the appropriate credentials.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggingConfig": {
        "description": "Logging configuration information for a resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SchemaHandlerPackage": {
        "description": "A URL to the S3 bucket containing the resource project package that contains the necessary files for the resource you want to register.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TypeName": {
        "description": "The name of the resource being registered.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudformation-resourceversion.html",
    "properties": [
      "ExecutionRoleArn",
      "LoggingConfig",
      "SchemaHandlerPackage",
      "TypeName"
    ]
  },
  "AWS::CloudFormation::Stack": {
    "full_properties": {
      "NotificationARNs": {
        "description": "The Amazon Simple Notification Service (Amazon SNS) topic ARNs to publish stack related events. You can find your Amazon SNS topic ARNs using the Amazon SNS console or your Command Line Interface (CLI).",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "The set value pairs that represent the parameters passed to CloudFormation when this nested stack is created. Each parameter has a name corresponding to a parameter defined in the embedded template and a value representing the value that you want to set for the parameter.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "interrupt",
          "none"
        ]
      },
      "Tags": {
        "description": "Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TemplateURL": {
        "description": "Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see Template anatomy.",
        "required": true,
        "type": "String",
        "update_causes": [
          "interrupt",
          "none"
        ]
      },
      "TimeoutInMinutes": {
        "description": "The length of time, in minutes, that CloudFormation waits for the nested stack to reach the CREATE_COMPLETE state. The default is no timeout. When CloudFormation detects that the nested stack has reached the CREATE_COMPLETE state, it marks the nested stack resource as CREATE_COMPLETE in the parent stack and resumes creating the parent stack. If the timeout period expires before the nested stack reaches CREATE_COMPLETE, CloudFormation marks the nested stack as failed and rolls back both the nested stack and parent stack.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-stack.html",
    "properties": [
      "NotificationARNs",
      "Parameters",
      "Tags",
      "TemplateURL",
      "TimeoutInMinutes"
    ]
  },
  "AWS::CloudFormation::StackSet": {
    "full_properties": {
      "AdministrationRoleARN": {
        "description": "The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutoDeployment": {
        "description": "[Service-managed permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CallAs": {
        "description": "[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Capabilities": {
        "description": "The capabilities that are allowed in the stack set. Some stack set templates might include resources that can affect permissions in your AWS account—for example, by creating new AWS Identity and Access Management (IAM) users. For more information, see Acknowledging IAM Resources in AWS CloudFormation Templates.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the stack set.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionRoleName": {
        "description": "The name of the IAM execution role to use to create the stack set. If you don't specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ManagedExecution": {
        "description": "Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OperationPreferences": {
        "description": "The user-specified preferences for how AWS CloudFormation performs a stack set operation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "The input parameters for the stack set template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PermissionModel": {
        "description": "Describes how the IAM roles required for stack set operations are created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StackInstancesGroup": {
        "description": "A group of stack instances with parameters in some specific accounts and Regions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "StackSetName": {
        "description": "The name to associate with the stack set. The name must be unique in the Region where you create your stack set.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TemplateBody": {
        "description": "The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateURL": {
        "description": "Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudformation-stackset.html",
    "properties": [
      "AdministrationRoleARN",
      "AutoDeployment",
      "CallAs",
      "Capabilities",
      "Description",
      "ExecutionRoleName",
      "ManagedExecution",
      "OperationPreferences",
      "Parameters",
      "PermissionModel",
      "StackInstancesGroup",
      "StackSetName",
      "Tags",
      "TemplateBody",
      "TemplateURL"
    ]
  },
  "AWS::CloudFormation::TypeActivation": {
    "full_properties": {
      "AutoUpdate": {
        "description": "Whether to automatically update the extension in this account and region when a new minor version is published by the extension publisher. Major versions released by the publisher must be manually updated.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ExecutionRoleArn": {
        "description": "The name of the IAM execution role to use to activate the extension.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggingConfig": {
        "description": "Specifies logging configuration information for an extension.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "MajorVersion": {
        "description": "The major version of this extension you want to activate, if multiple major versions are available. The default is the latest major version. CloudFormation uses the latest available minor version of the major version selected.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PublicTypeArn": {
        "description": "The Amazon Resource Number (ARN) of the public extension.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PublisherId": {
        "description": "The ID of the extension publisher.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The extension type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TypeName": {
        "description": "The name of the extension.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TypeNameAlias": {
        "description": "An alias to assign to the public extension, in this account and region. If you specify an alias for the extension, CloudFormation treats the alias as the extension type name within this account and region. You must use the alias to refer to the extension in your templates, API calls, and CloudFormation console.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VersionBump": {
        "description": "Manually updates a previously-activated type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudformation-typeactivation.html",
    "properties": [
      "AutoUpdate",
      "ExecutionRoleArn",
      "LoggingConfig",
      "MajorVersion",
      "PublicTypeArn",
      "PublisherId",
      "Type",
      "TypeName",
      "TypeNameAlias",
      "VersionBump"
    ]
  },
  "AWS::CloudFormation::WaitCondition": {
    "full_properties": {
      "Count": {
        "description": "The number of success signals that CloudFormation must receive before it continues the stack creation process. When the wait condition receives the requisite number of success signals, CloudFormation resumes the creation of the stack. If the wait condition doesn't receive the specified number of success signals before the Timeout period expires, CloudFormation assumes that the wait condition has failed and rolls the stack back.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Handle": {
        "description": "A reference to the wait condition handle used to signal this wait condition. Use the Ref intrinsic function to specify an AWS::CloudFormation::WaitConditionHandle resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Timeout": {
        "description": "The length of time (in seconds) to wait for the number of signals that the Count property specifies. Timeout is a minimum-bound property, meaning the timeout occurs no sooner than the time you specify, but can occur shortly thereafter. The maximum time that can be specified for this property is 12 hours (43200 seconds).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-waitcondition.html",
    "properties": [
      "Count",
      "Handle",
      "Timeout"
    ]
  },
  "AWS::CloudFormation::WaitConditionHandle": {
    "full_properties": {
    },
    "path": "aws-properties-waitconditionhandle.html",
    "properties": [

    ]
  },
  "AWS::CloudFront::CachePolicy": {
    "full_properties": {
      "CachePolicyConfig": {
        "description": "The cache policy configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-cachepolicy.html",
    "properties": [
      "CachePolicyConfig"
    ]
  },
  "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
    "full_properties": {
      "CloudFrontOriginAccessIdentityConfig": {
        "description": "The current configuration information for the identity.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-cloudfrontoriginaccessidentity.html",
    "properties": [
      "CloudFrontOriginAccessIdentityConfig"
    ]
  },
  "AWS::CloudFront::Distribution": {
    "full_properties": {
      "DistributionConfig": {
        "description": "The current configuration information for the distribution. Send a GET request to the /CloudFront API version/distribution ID/config resource.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A complex type that contains zero or more Tag elements.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-distribution.html",
    "properties": [
      "DistributionConfig",
      "Tags"
    ]
  },
  "AWS::CloudFront::Function": {
    "full_properties": {
      "AutoPublish": {
        "description": "A flag that determines whether to automatically publish the function to the LIVE stage when it’s created. To automatically publish to the LIVE stage, set this property to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "FunctionCode": {
        "description": "The function code. For more information about writing a CloudFront function, see Writing function code for CloudFront Functions in the Amazon CloudFront Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FunctionConfig": {
        "description": "Contains configuration information about a CloudFront function.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name to identify the function.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-function.html",
    "properties": [
      "AutoPublish",
      "FunctionCode",
      "FunctionConfig",
      "Name"
    ]
  },
  "AWS::CloudFront::KeyGroup": {
    "full_properties": {
      "KeyGroupConfig": {
        "description": "The key group configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-keygroup.html",
    "properties": [
      "KeyGroupConfig"
    ]
  },
  "AWS::CloudFront::MonitoringSubscription": {
    "full_properties": {
      "DistributionId": {
        "description": "The ID of the distribution that you are enabling metrics for.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MonitoringSubscription": {
        "description": "A subscription configuration for additional CloudWatch metrics.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-monitoringsubscription.html",
    "properties": [
      "DistributionId",
      "MonitoringSubscription"
    ]
  },
  "AWS::CloudFront::OriginAccessControl": {
    "full_properties": {
      "OriginAccessControlConfig": {
        "description": "The origin access control.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-originaccesscontrol.html",
    "properties": [
      "OriginAccessControlConfig"
    ]
  },
  "AWS::CloudFront::OriginRequestPolicy": {
    "full_properties": {
      "OriginRequestPolicyConfig": {
        "description": "The origin request policy configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-originrequestpolicy.html",
    "properties": [
      "OriginRequestPolicyConfig"
    ]
  },
  "AWS::CloudFront::PublicKey": {
    "full_properties": {
      "PublicKeyConfig": {
        "description": "Configuration information about a public key that you can use with signed URLs and signed cookies, or with field-level encryption.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-publickey.html",
    "properties": [
      "PublicKeyConfig"
    ]
  },
  "AWS::CloudFront::RealtimeLogConfig": {
    "full_properties": {
      "EndPoints": {
        "description": "Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Fields": {
        "description": "A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The unique name of this real-time log configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SamplingRate": {
        "description": "The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-realtimelogconfig.html",
    "properties": [
      "EndPoints",
      "Fields",
      "Name",
      "SamplingRate"
    ]
  },
  "AWS::CloudFront::ResponseHeadersPolicy": {
    "full_properties": {
      "ResponseHeadersPolicyConfig": {
        "description": "A response headers policy configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-responseheaderspolicy.html",
    "properties": [
      "ResponseHeadersPolicyConfig"
    ]
  },
  "AWS::CloudFront::StreamingDistribution": {
    "full_properties": {
      "StreamingDistributionConfig": {
        "description": "The current configuration information for the RTMP distribution.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A complex type that contains zero or more Tag elements.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-streamingdistribution.html",
    "properties": [
      "StreamingDistributionConfig",
      "Tags"
    ]
  },
  "AWS::CloudTrail::EventDataStore": {
    "full_properties": {
      "AdvancedEventSelectors": {
        "description": "The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see Log events by using advanced event selectors in the CloudTrail User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MultiRegionEnabled": {
        "description": "Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the event data store.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OrganizationEnabled": {
        "description": "Specifies whether an event data store collects events logged for an organization in AWS Organizations.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RetentionPeriod": {
        "description": "The retention period of the event data store, in days. You can set a retention period of up to 2557 days, the equivalent of seven years.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TerminationProtectionEnabled": {
        "description": "Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudtrail-eventdatastore.html",
    "properties": [
      "AdvancedEventSelectors",
      "MultiRegionEnabled",
      "Name",
      "OrganizationEnabled",
      "RetentionPeriod",
      "Tags",
      "TerminationProtectionEnabled"
    ]
  },
  "AWS::CloudTrail::Trail": {
    "full_properties": {
      "CloudWatchLogsLogGroupArn": {
        "description": "Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs are delivered. Not required unless you specify CloudWatchLogsRoleArn.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CloudWatchLogsRoleArn": {
        "description": "Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableLogFileValidation": {
        "description": "Specifies whether log file validation is enabled. The default is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventSelectors": {
        "description": "Use event selectors to further specify the management and data event settings for your trail. By default, trails created without specific event selectors will be configured to log all read and write management events, and no data events. When an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail doesn't log the event.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "IncludeGlobalServiceEvents": {
        "description": "Specifies whether the trail is publishing events from global services such as IAM to the log files.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "InsightSelectors": {
        "description": "A JSON string that contains the insight types you want to log on a trail. ApiCallRateInsight and ApiErrorRateInsight are valid insight types.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "IsLogging": {
        "description": "Whether the CloudTrail trail is currently logging AWS API calls.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IsMultiRegionTrail": {
        "description": "Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails that log events in all regions.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IsOrganizationTrail": {
        "description": "Specifies whether the trail is applied to all accounts in an organization in AWS Organizations, or only for the current AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the management account for an organization in AWS Organizations. If the trail is not an organization trail and this is set to true, the trail will be created in all AWS accounts that belong to the organization. If the trail is an organization trail and this is set to false, the trail will remain in the current AWS account but be deleted from all member accounts in the organization.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KMSKeyId": {
        "description": "Specifies the AWS KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by \"alias/\", a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "S3BucketName": {
        "description": "Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "S3KeyPrefix": {
        "description": "Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicName": {
        "description": "Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A custom set of tags (key-value pairs) for this trail.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TrailName": {
        "description": "Specifies the name of the trail. The name must meet the following requirements:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudtrail-trail.html",
    "properties": [
      "CloudWatchLogsLogGroupArn",
      "CloudWatchLogsRoleArn",
      "EnableLogFileValidation",
      "EventSelectors",
      "IncludeGlobalServiceEvents",
      "InsightSelectors",
      "IsLogging",
      "IsMultiRegionTrail",
      "IsOrganizationTrail",
      "KMSKeyId",
      "S3BucketName",
      "S3KeyPrefix",
      "SnsTopicName",
      "Tags",
      "TrailName"
    ]
  },
  "AWS::CloudWatch::Alarm": {
    "full_properties": {
      "ActionsEnabled": {
        "description": "Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AlarmActions": {
        "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state.  Specify each action as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see PutMetricAlarm in the Amazon CloudWatch API Reference.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AlarmDescription": {
        "description": "The description of the alarm.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AlarmName": {
        "description": "The name of the alarm. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the alarm name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ComparisonOperator": {
        "description": "The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DatapointsToAlarm": {
        "description": "The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an \"M out of N\" alarm. In that case, this value is the M, and the value that you set for EvaluationPeriods is the N value. For more information, see Evaluating an Alarm in the Amazon CloudWatch User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Dimensions": {
        "description": "The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify Dimensions. Instead, you use Metrics.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EvaluateLowSampleCountPercentile": {
        "description": "Used only for alarms based on percentiles. If ignore, the alarm state does not change during periods with too few data points to be statistically significant. If evaluate or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EvaluationPeriods": {
        "description": "The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an \"M out of N\" alarm, this value is the N, and DatapointsToAlarm is the M.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "ExtendedStatistic": {
        "description": "The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InsufficientDataActions": {
        "description": "The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you use Metrics instead and you can't specify MetricName.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Metrics": {
        "description": "An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either retrieves a metric or performs a math expression.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Namespace": {
        "description": "The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you can't specify Namespace and you use Metrics instead.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OKActions": {
        "description": "The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Period": {
        "description": "The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values are 10, 30, 60, and any multiple of 60.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Statistic": {
        "description": "The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ExtendedStatistic.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Threshold": {
        "description": "The value to compare with the specified statistic.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ThresholdMetricId": {
        "description": "In an alarm based on an anomaly detection model, this is the ID of the ANOMALY_DETECTION_BAND function used as the threshold for the alarm.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TreatMissingData": {
        "description": "Sets how this alarm is to handle missing data points. Valid values are breaching, notBreaching, ignore, and missing. For more information, see Configuring How CloudWatchAlarms Treat Missing Data in the Amazon CloudWatchUser Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Unit": {
        "description": "The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric. Do not specify this if you are specifying a Metrics array.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudwatch-alarm.html",
    "properties": [
      "ActionsEnabled",
      "AlarmActions",
      "AlarmDescription",
      "AlarmName",
      "ComparisonOperator",
      "DatapointsToAlarm",
      "Dimensions",
      "EvaluateLowSampleCountPercentile",
      "EvaluationPeriods",
      "ExtendedStatistic",
      "InsufficientDataActions",
      "MetricName",
      "Metrics",
      "Namespace",
      "OKActions",
      "Period",
      "Statistic",
      "Threshold",
      "ThresholdMetricId",
      "TreatMissingData",
      "Unit"
    ]
  },
  "AWS::CloudWatch::AnomalyDetector": {
    "full_properties": {
      "Configuration": {
        "description": "Specifies details about how the anomaly detection model is to be trained, including time ranges to exclude when training and updating the model. The configuration can also include the time zone to use for the metric.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Dimensions": {
        "description": "The dimensions of the metric associated with the anomaly detection band.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "MetricMathAnomalyDetector": {
        "description": "The CloudWatch metric math expression for this anomaly detector.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "MetricName": {
        "description": "The name of the metric associated with the anomaly detection band.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Namespace": {
        "description": "The namespace of the metric associated with the anomaly detection band.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SingleMetricAnomalyDetector": {
        "description": "The CloudWatch metric and statistic for this anomaly detector.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Stat": {
        "description": "The statistic of the metric associated with the anomaly detection band.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudwatch-anomalydetector.html",
    "properties": [
      "Configuration",
      "Dimensions",
      "MetricMathAnomalyDetector",
      "MetricName",
      "Namespace",
      "SingleMetricAnomalyDetector",
      "Stat"
    ]
  },
  "AWS::CloudWatch::CompositeAlarm": {
    "full_properties": {
      "ActionsEnabled": {
        "description": "Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. The default is TRUE.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ActionsSuppressor": {
        "description": "Actions will be suppressed if the suppressor alarm is in the ALARM state. ActionsSuppressor can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ActionsSuppressorExtensionPeriod": {
        "description": "The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the ALARM state. After this time, the composite alarm performs its actions.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ActionsSuppressorWaitPeriod": {
        "description": "The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the ALARM state. After this time, the composite alarm performs its actions.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AlarmActions": {
        "description": "The actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see PutCompositeAlarm in the Amazon CloudWatch API Reference.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AlarmDescription": {
        "description": "The description for the composite alarm.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AlarmName": {
        "description": "The name for the composite alarm. This name must be unique within your AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AlarmRule": {
        "description": "An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For each alarm that you reference, you designate a function that specifies whether that alarm needs to be in ALARM state, OK state, or INSUFFICIENT_DATA state. You can use operators (AND, OR and NOT) to combine multiple functions in a single expression. You can use parenthesis to logically group the functions in your expression.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "InsufficientDataActions": {
        "description": "The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see PutCompositeAlarm in the Amazon CloudWatch API Reference.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OKActions": {
        "description": "The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see PutCompositeAlarm in the Amazon CloudWatch API Reference.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudwatch-compositealarm.html",
    "properties": [
      "ActionsEnabled",
      "ActionsSuppressor",
      "ActionsSuppressorExtensionPeriod",
      "ActionsSuppressorWaitPeriod",
      "AlarmActions",
      "AlarmDescription",
      "AlarmName",
      "AlarmRule",
      "InsufficientDataActions",
      "OKActions"
    ]
  },
  "AWS::CloudWatch::Dashboard": {
    "full_properties": {
      "DashboardBody": {
        "description": "The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard.  This parameter is required.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DashboardName": {
        "description": "The name of the dashboard. The name must be between 1 and 255 characters. If you do not specify a name, one will be generated automatically.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudwatch-dashboard.html",
    "properties": [
      "DashboardBody",
      "DashboardName"
    ]
  },
  "AWS::CloudWatch::InsightRule": {
    "full_properties": {
      "RuleBody": {
        "description": "The definition of the rule, as a JSON object. For details about the syntax, see Contributor Insights Rule Syntax in the Amazon CloudWatch User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RuleName": {
        "description": "The name of the rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RuleState": {
        "description": "The current state of the rule. Valid values are ENABLED and DISABLED.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs to associate with the Contributor Insights rule. You can associate as many as 50 tags with a rule.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudwatch-insightrule.html",
    "properties": [
      "RuleBody",
      "RuleName",
      "RuleState",
      "Tags"
    ]
  },
  "AWS::CloudWatch::MetricStream": {
    "full_properties": {
      "ExcludeFilters": {
        "description": "If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces that you specify here. You cannot specify both IncludeFilters and ExcludeFilters in the same metric stream.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "FirehoseArn": {
        "description": "The ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream. This Amazon Kinesis Firehose delivery stream must already exist and must be in the same account as the metric stream.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "IncludeFilters": {
        "description": "If you specify this parameter, the stream sends only the metrics from the metric namespaces that you specify here. You cannot specify both IncludeFilters and ExcludeFilters in the same metric stream.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "If you are creating a new metric stream, this is the name for the new stream. The name must be different than the names of other metric streams in this account and Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutputFormat": {
        "description": "The output format for the stream. Valid values are json and opentelemetry0.7 For more information about metric stream output formats, see  Metric streams output formats.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The ARN of an IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. This IAM role must already exist and must be in the same account as the metric stream. This IAM role must include the firehose:PutRecord and firehose:PutRecordBatch permissions.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StatisticsConfigurations": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to the metric stream.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudwatch-metricstream.html",
    "properties": [
      "ExcludeFilters",
      "FirehoseArn",
      "IncludeFilters",
      "Name",
      "OutputFormat",
      "RoleArn",
      "StatisticsConfigurations",
      "Tags"
    ]
  },
  "AWS::CodeArtifact::Domain": {
    "full_properties": {
      "DomainName": {
        "description": "A string that specifies the name of the requested domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EncryptionKey": {
        "description": "The key used to encrypt the domain.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PermissionsPolicyDocument": {
        "description": "The document that defines the resource policy that is set on a domain.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags to be applied to the domain.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codeartifact-domain.html",
    "properties": [
      "DomainName",
      "EncryptionKey",
      "PermissionsPolicyDocument",
      "Tags"
    ]
  },
  "AWS::CodeArtifact::Repository": {
    "full_properties": {
      "Description": {
        "description": "A text description of the repository.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The name of the domain that contains the repository.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainOwner": {
        "description": "The 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExternalConnections": {
        "description": "An array of external connections associated with the repository.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PermissionsPolicyDocument": {
        "description": "The document that defines the resource policy that is set on a repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RepositoryName": {
        "description": "The name of an upstream repository.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags to be applied to the repository.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Upstreams": {
        "description": "A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codeartifact-repository.html",
    "properties": [
      "Description",
      "DomainName",
      "DomainOwner",
      "ExternalConnections",
      "PermissionsPolicyDocument",
      "RepositoryName",
      "Tags",
      "Upstreams"
    ]
  },
  "AWS::CodeBuild::Project": {
    "full_properties": {
      "Artifacts": {
        "description": "Artifacts is a property of the AWS::CodeBuild::Project resource that specifies output settings for artifacts generated by an AWS CodeBuild build.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BadgeEnabled": {
        "description": "Indicates whether AWS CodeBuild generates a publicly accessible URL for your project's build badge. For more information, see Build Badges Sample in the AWS CodeBuild User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "BuildBatchConfig": {
        "description": "A ProjectBuildBatchConfig object that defines the batch build options for the project.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Cache": {
        "description": "Settings that AWS CodeBuild uses to store and reuse build dependencies.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConcurrentBuildLimit": {
        "description": "The maximum number of concurrent builds that are allowed for this project.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description that makes the build project easy to identify.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EncryptionKey": {
        "description": "The AWS Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Environment": {
        "description": "The build environment settings for the project, such as the environment type or the environment variables to use for the build environment.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FileSystemLocations": {
        "description": "An array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier, location, mountOptions, mountPoint, and type of a file system created using Amazon Elastic File System.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LogsConfig": {
        "description": "Information about logs for the build project. A project can create logs in CloudWatch Logs, an S3 bucket, or both.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the build project. The name must be unique across all of the projects in your AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "QueuedTimeoutInMinutes": {
        "description": "The number of minutes a build is allowed to be queued before it times out.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ResourceAccessRole": {
        "description": "The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecondaryArtifacts": {
        "description": "A list of Artifacts objects. Each artifacts object specifies output settings that the project generates during a build.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecondarySourceVersions": {
        "description": "An array of ProjectSourceVersion objects. If secondarySourceVersions is specified at the build level, then they take over these secondarySourceVersions (at the project level).",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecondarySources": {
        "description": "An array of ProjectSource objects.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceRole": {
        "description": "The ARN of the IAM role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Source": {
        "description": "The source code settings for the project, such as the source code's repository type and location.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SourceVersion": {
        "description": "A version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for the AWS CodeBuild project.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TimeoutInMinutes": {
        "description": "How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any related build that did not get marked as completed. The default is 60 minutes.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Triggers": {
        "description": "For an existing AWS CodeBuild build project that has its source code stored in a GitHub repository, enables AWS CodeBuild to begin automatically rebuilding the source code every time a code change is pushed to the repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Visibility": {
        "description": "Specifies the visibility of the project's builds. Possible values are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "VpcConfig specifies settings that enable AWS CodeBuild to access resources in an Amazon VPC. For more information, see Use AWS CodeBuild with Amazon Virtual Private Cloud in the AWS CodeBuild User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codebuild-project.html",
    "properties": [
      "Artifacts",
      "BadgeEnabled",
      "BuildBatchConfig",
      "Cache",
      "ConcurrentBuildLimit",
      "Description",
      "EncryptionKey",
      "Environment",
      "FileSystemLocations",
      "LogsConfig",
      "Name",
      "QueuedTimeoutInMinutes",
      "ResourceAccessRole",
      "SecondaryArtifacts",
      "SecondarySources",
      "SecondarySourceVersions",
      "ServiceRole",
      "Source",
      "SourceVersion",
      "Tags",
      "TimeoutInMinutes",
      "Triggers",
      "Visibility",
      "VpcConfig"
    ]
  },
  "AWS::CodeBuild::ReportGroup": {
    "full_properties": {
      "DeleteReports": {
        "description": "When deleting a report group, specifies if reports within the report group should be deleted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ExportConfig": {
        "description": "Information about the destination where the raw data of this ReportGroup is exported.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the ReportGroup.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tag key and value pairs associated with this report group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of the ReportGroup. This can be one of the following values:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-codebuild-reportgroup.html",
    "properties": [
      "DeleteReports",
      "ExportConfig",
      "Name",
      "Tags",
      "Type"
    ]
  },
  "AWS::CodeBuild::SourceCredential": {
    "full_properties": {
      "AuthType": {
        "description": "The type of authentication used by the credentials. Valid options are OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerType": {
        "description": "The type of source provider. The valid options are GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Token": {
        "description": "For GitHub or GitHub Enterprise, this is the personal access token. For Bitbucket, this is the app password.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Username": {
        "description": "The Bitbucket username when the authType is BASIC_AUTH. This parameter is not valid for other types of source providers or connections.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codebuild-sourcecredential.html",
    "properties": [
      "AuthType",
      "ServerType",
      "Token",
      "Username"
    ]
  },
  "AWS::CodeCommit::Repository": {
    "full_properties": {
      "Code": {
        "description": "Information about code to be committed to a repository after it is created in an AWS CloudFormation stack. Information about code is only used in resource creation. Updates to a stack will not reflect changes made to code properties after initial resource creation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RepositoryDescription": {
        "description": "A comment or description about the new repository.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RepositoryName": {
        "description": "The name of the new repository to be created.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tag key-value pairs to use when tagging this repository.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Triggers": {
        "description": "The JSON block of configuration information for each trigger.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-codecommit-repository.html",
    "properties": [
      "Code",
      "RepositoryDescription",
      "RepositoryName",
      "Tags",
      "Triggers"
    ]
  },
  "AWS::CodeDeploy::Application": {
    "full_properties": {
      "ApplicationName": {
        "description": "A name for the application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ComputePlatform": {
        "description": "The compute platform that CodeDeploy deploys the application to.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The metadata that you apply to CodeDeploy applications to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codedeploy-application.html",
    "properties": [
      "ApplicationName",
      "ComputePlatform",
      "Tags"
    ]
  },
  "AWS::CodeDeploy::DeploymentConfig": {
    "full_properties": {
      "ComputePlatform": {
        "description": "The destination platform type for the deployment (Lambda, Server, or ECS).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeploymentConfigName": {
        "description": "A name for the deployment configuration. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment configuration name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "MinimumHealthyHosts": {
        "description": "The minimum number of healthy instances that should be available at any time during the deployment. There are two parameters expected in the input: type and value.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TrafficRoutingConfig": {
        "description": "The configuration that specifies how the deployment traffic is routed.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-codedeploy-deploymentconfig.html",
    "properties": [
      "ComputePlatform",
      "DeploymentConfigName",
      "MinimumHealthyHosts",
      "TrafficRoutingConfig"
    ]
  },
  "AWS::CodeDeploy::DeploymentGroup": {
    "full_properties": {
      "AlarmConfiguration": {
        "description": "Information about the Amazon CloudWatch alarms that are associated with the deployment group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ApplicationName": {
        "description": "The name of an existing CodeDeploy application to associate this deployment group with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AutoRollbackConfiguration": {
        "description": "Information about the automatic rollback configuration that is associated with the deployment group. If you specify this property, don't specify the Deployment property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AutoScalingGroups": {
        "description": "A list of associated Auto Scaling groups that CodeDeploy automatically deploys revisions to when new instances are created. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "BlueGreenDeploymentConfiguration": {
        "description": "Information about blue/green deployment options for a deployment group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Deployment": {
        "description": "The application revision to deploy to this deployment group. If you specify this property, your target application revision is deployed as soon as the provisioning process is complete. If you specify this property, don't specify the AutoRollbackConfiguration property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeploymentConfigName": {
        "description": "A deployment configuration name or a predefined configuration name. With predefined configurations, you can deploy application revisions to one instance at a time (CodeDeployDefault.OneAtATime), half of the instances at a time (CodeDeployDefault.HalfAtATime), or all the instances at once (CodeDeployDefault.AllAtOnce). For more information and valid values, see Working with Deployment Configurations in the AWS CodeDeploy User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeploymentGroupName": {
        "description": "A name for the deployment group. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment group name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DeploymentStyle": {
        "description": "Attributes that determine the type of deployment to run and whether to route deployment traffic behind a load balancer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ECSServices": {
        "description": "The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format <clustername>:<servicename>.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Ec2TagFilters": {
        "description": "The Amazon EC2 tags that are already applied to Amazon EC2 instances that you want to include in the deployment group. CodeDeploy includes all Amazon EC2 instances identified by any of the tags you specify in this deployment group. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Ec2TagSet": {
        "description": "Information about groups of tags applied to Amazon EC2 instances. The deployment group includes only Amazon EC2 instances identified by all the tag groups. Cannot be used in the same call as ec2TagFilter.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoadBalancerInfo": {
        "description": "Information about the load balancer to use in a deployment. For more information, see Integrating CodeDeploy with Elastic Load Balancing in the AWS CodeDeploy User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OnPremisesInstanceTagFilters": {
        "description": "The on-premises instance tags already applied to on-premises instances that you want to include in the deployment group. CodeDeploy includes all on-premises instances identified by any of the tags you specify in this deployment group. To register on-premises instances with CodeDeploy, see Working with On-Premises Instances for CodeDeploy in the AWS CodeDeploy User Guide. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OnPremisesTagSet": {
        "description": "Information about groups of tags applied to on-premises instances. The deployment group includes only on-premises instances identified by all the tag groups.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OutdatedInstancesStrategy": {
        "description": "Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ServiceRoleArn": {
        "description": "A service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf. For more information, see Create a Service Role for AWS CodeDeploy in the AWS CodeDeploy User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TriggerConfigurations": {
        "description": "Information about triggers associated with the deployment group. Duplicates are not allowed",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codedeploy-deploymentgroup.html",
    "properties": [
      "AlarmConfiguration",
      "ApplicationName",
      "AutoRollbackConfiguration",
      "AutoScalingGroups",
      "BlueGreenDeploymentConfiguration",
      "Deployment",
      "DeploymentConfigName",
      "DeploymentGroupName",
      "DeploymentStyle",
      "Ec2TagFilters",
      "Ec2TagSet",
      "ECSServices",
      "LoadBalancerInfo",
      "OnPremisesInstanceTagFilters",
      "OnPremisesTagSet",
      "OutdatedInstancesStrategy",
      "ServiceRoleArn",
      "Tags",
      "TriggerConfigurations"
    ]
  },
  "AWS::CodeGuruProfiler::ProfilingGroup": {
    "full_properties": {
      "AgentPermissions": {
        "description": "The agent permissions attached to this profiling group. This action group grants ConfigureAgent and PostAgentProfile permissions to perform actions required by the profiling agent. The Json consists of key Principals.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AnomalyDetectionNotificationConfiguration": {
        "description": "Adds anomaly notifications for a profiling group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ComputePlatform": {
        "description": "The compute platform of the profiling group. Use AWSLambda if your application runs on AWS Lambda. Use Default if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, Default is used. This property is immutable.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProfilingGroupName": {
        "description": "The name of the profiling group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags to add to the created profiling group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codeguruprofiler-profilinggroup.html",
    "properties": [
      "AgentPermissions",
      "AnomalyDetectionNotificationConfiguration",
      "ComputePlatform",
      "ProfilingGroupName",
      "Tags"
    ]
  },
  "AWS::CodeGuruReviewer::RepositoryAssociation": {
    "full_properties": {
      "BucketName": {
        "description": "The name of the bucket. This is required for your S3Bucket repositoryThe name must start with the prefix, codeguru-reviewer-*.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConnectionArn": {
        "description": "The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection. Its format is arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id. For more information, see Connection in the AWS CodeStar Connections API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the repository.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Owner": {
        "description": "The owner of the repository. For a GitHub Enterprise Server or Bitbucket repository, this is the username for the account that owns the repository.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs used to tag an associated repository. A tag is a custom attribute label with two parts:",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of repository that contains the source code to be reviewed. The valid values are:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-codegurureviewer-repositoryassociation.html",
    "properties": [
      "BucketName",
      "ConnectionArn",
      "Name",
      "Owner",
      "Tags",
      "Type"
    ]
  },
  "AWS::CodePipeline::CustomActionType": {
    "full_properties": {
      "Category": {
        "description": "The category of the custom action, such as a build action or a test action.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConfigurationProperties": {
        "description": "The configuration properties for the custom action.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "InputArtifactDetails": {
        "description": "The details of the input artifact for the action, such as its commit ID.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "OutputArtifactDetails": {
        "description": "The details of the output artifact of the action, such as its commit ID.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Provider": {
        "description": "The provider of the service used in the custom action, such as CodeDeploy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Settings": {
        "description": "URLs that provide users information about this custom action.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the custom action.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Version": {
        "description": "The version identifier of the custom action.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-codepipeline-customactiontype.html",
    "properties": [
      "Category",
      "ConfigurationProperties",
      "InputArtifactDetails",
      "OutputArtifactDetails",
      "Provider",
      "Settings",
      "Tags",
      "Version"
    ]
  },
  "AWS::CodePipeline::Pipeline": {
    "full_properties": {
      "ArtifactStore": {
        "description": "The S3 bucket where artifacts for the pipeline are stored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ArtifactStores": {
        "description": "A mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DisableInboundStageTransitions": {
        "description": "Represents the input of a DisableStageTransition action.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestartExecutionOnUpdate": {
        "description": "Indicates whether to rerun the CodePipeline pipeline after you update it.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Stages": {
        "description": "Represents information about a stage and its definition.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies the tags applied to the pipeline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codepipeline-pipeline.html",
    "properties": [
      "ArtifactStore",
      "ArtifactStores",
      "DisableInboundStageTransitions",
      "Name",
      "RestartExecutionOnUpdate",
      "RoleArn",
      "Stages",
      "Tags"
    ]
  },
  "AWS::CodePipeline::Webhook": {
    "full_properties": {
      "Authentication": {
        "description": "Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AuthenticationConfiguration": {
        "description": "Properties that configure the authentication applied to incoming webhook trigger requests. The required properties depend on the authentication type. For GITHUB_HMAC, only the SecretToken property must be set. For IP, only the AllowedIPRange property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Filters": {
        "description": "A list of rules applied to the body/payload sent in the POST request to a webhook URL. All defined rules must pass for the request to be accepted and the pipeline started.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the webhook.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RegisterWithThirdParty": {
        "description": "Configures a connection between the webhook that was created and the external tool with events to be detected.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "TargetAction": {
        "description": "The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetPipeline": {
        "description": "The name of the pipeline you want to connect to the webhook.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetPipelineVersion": {
        "description": "The version number of the pipeline to be connected to the trigger request.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codepipeline-webhook.html",
    "properties": [
      "Authentication",
      "AuthenticationConfiguration",
      "Filters",
      "Name",
      "RegisterWithThirdParty",
      "TargetAction",
      "TargetPipeline",
      "TargetPipelineVersion"
    ]
  },
  "AWS::CodeStar::GitHubRepository": {
    "full_properties": {
      "Code": {
        "description": "Information about code to be committed to a repository after it is created in an AWS CloudFormation stack.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unavailable"
      },
      "ConnectionArn": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableIssues": {
        "description": "Indicates whether to enable issues for the GitHub repository. You can use GitHub issues to track information and bugs for your repository.",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "IsPrivate": {
        "description": "Indicates whether the GitHub repository is a private repository. If so, you choose who can see and commit to this repository.",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "RepositoryAccessToken": {
        "description": "The GitHub user's personal access token for the GitHub repository.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "RepositoryDescription": {
        "description": "A comment or description about the new repository. This description is displayed in GitHub after the repository is created.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "RepositoryName": {
        "description": "The name of the repository you want to create in GitHub with AWS CloudFormation stack creation.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "RepositoryOwner": {
        "description": "The GitHub user name for the owner of the GitHub repository to be created. If this repository should be owned by a GitHub organization, provide its name.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-resource-codestar-githubrepository.html",
    "properties": [
      "Code",
      "ConnectionArn",
      "EnableIssues",
      "IsPrivate",
      "RepositoryAccessToken",
      "RepositoryDescription",
      "RepositoryName",
      "RepositoryOwner"
    ]
  },
  "AWS::CodeStarConnections::Connection": {
    "full_properties": {
      "ConnectionName": {
        "description": "The name of the connection. Connection names must be unique in an AWS user account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "HostArn": {
        "description": "The Amazon Resource Name (ARN) of the host associated with the connection.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProviderType": {
        "description": "The name of the external provider where your third-party code repository is configured.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies the tags applied to the resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codestarconnections-connection.html",
    "properties": [
      "ConnectionName",
      "HostArn",
      "ProviderType",
      "Tags"
    ]
  },
  "AWS::CodeStarNotifications::NotificationRule": {
    "full_properties": {
      "CreatedBy": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DetailType": {
        "description": "The level of detail to include in the notifications for this resource. BASIC will include only the contents of the event as it would appear in Amazon CloudWatch. FULL will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EventTypeId": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventTypeIds": {
        "description": "A list of event types associated with this notification rule. For a complete list of event types and IDs, see Notification concepts in the Developer Tools Console User Guide.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the notification rule. Notification rule names must be unique in your AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Resource": {
        "description": "The Amazon Resource Name (ARN) of the resource to associate with the notification rule. Supported resources include pipelines in AWS CodePipeline, repositories in AWS CodeCommit, and build projects in AWS CodeBuild.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "The status of the notification rule. The default value is ENABLED. If the status is set to DISABLED, notifications aren't sent for the notification rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags to apply to this notification rule. Key names cannot start with \"aws\".",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TargetAddress": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "A list of Amazon Resource Names (ARNs) of Amazon Simple Notification Service topics and AWS Chatbot clients to associate with the notification rule.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codestarnotifications-notificationrule.html",
    "properties": [
      "CreatedBy",
      "DetailType",
      "EventTypeId",
      "EventTypeIds",
      "Name",
      "Resource",
      "Status",
      "Tags",
      "TargetAddress",
      "Targets"
    ]
  },
  "AWS::Cognito::IdentityPool": {
    "full_properties": {
      "AllowClassicFlow": {
        "description": "Enables the Basic (Classic) authentication flow.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AllowUnauthenticatedIdentities": {
        "description": "Specifies whether the identity pool supports unauthenticated logins.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CognitoEvents": {
        "description": "The events to configure.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CognitoIdentityProviders": {
        "description": "The Amazon Cognito user pools and their client IDs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CognitoStreams": {
        "description": "Configuration options for configuring Amazon Cognito streams.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeveloperProviderName": {
        "description": "The \"domain\" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the DeveloperProviderName, you can use letters and periods (.), underscores (_), and dashes (-).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IdentityPoolName": {
        "description": "The name of your Amazon Cognito identity pool.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OpenIdConnectProviderARNs": {
        "description": "The Amazon Resource Names (ARNs) of the OpenID connect providers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PushSync": {
        "description": "The configuration options to be applied to the identity pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SamlProviderARNs": {
        "description": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SupportedLoginProviders": {
        "description": "Key-value pairs that map provider names to provider app IDs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-identitypool.html",
    "properties": [
      "AllowClassicFlow",
      "AllowUnauthenticatedIdentities",
      "CognitoEvents",
      "CognitoIdentityProviders",
      "CognitoStreams",
      "DeveloperProviderName",
      "IdentityPoolName",
      "OpenIdConnectProviderARNs",
      "PushSync",
      "SamlProviderARNs",
      "SupportedLoginProviders"
    ]
  },
  "AWS::Cognito::IdentityPoolRoleAttachment": {
    "full_properties": {
      "IdentityPoolId": {
        "description": "An identity pool ID in the format REGION:GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleMappings": {
        "description": "How users for a specific identity provider are mapped to roles. This is a string to the RoleMapping object map. The string identifies the identity provider. For example: graph.facebook.com or cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Roles": {
        "description": "The map of the roles associated with this pool. For a given role, the key is either \"authenticated\" or \"unauthenticated\". The value is the role ARN.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-identitypoolroleattachment.html",
    "properties": [
      "IdentityPoolId",
      "RoleMappings",
      "Roles"
    ]
  },
  "AWS::Cognito::UserPool": {
    "full_properties": {
      "AccountRecoverySetting": {
        "description": "Use this setting to define which verified available method a user can use to recover their password when they call ForgotPassword. It allows you to define a preferred method when a user has more than one method available. With this setting, SMS does not qualify for a valid password recovery mechanism if the user also has SMS MFA enabled. In the absence of this setting, Cognito uses the legacy behavior to determine the recovery method where SMS is preferred over email.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AdminCreateUserConfig": {
        "description": "The configuration for creating a new user profile.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AliasAttributes": {
        "description": "Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoVerifiedAttributes": {
        "description": "The attributes to be auto-verified. Possible values: email, phone_number.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DeletionProtection": {
        "description": "When active, DeletionProtection prevents accidental deletion of your user pool. Before you can delete a user pool that you have protected against deletion, you must deactivate this feature.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeviceConfiguration": {
        "description": "The device-remembering configuration for a user pool. A null value indicates that you have deactivated device remembering in your user pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EmailConfiguration": {
        "description": "The email configuration of your user pool. The email configuration type sets your preferred sending method, AWS Region, and sender for messages from your user pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EmailVerificationMessage": {
        "description": "This parameter is no longer used. See VerificationMessageTemplateType.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EmailVerificationSubject": {
        "description": "This parameter is no longer used. See VerificationMessageTemplateType.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EnabledMfas": {
        "description": "Enables MFA on a specified user pool. To disable all MFAs after it has been enabled, set MfaConfiguration to “OFF” and remove EnabledMfas. MFAs can only be all disabled if MfaConfiguration is OFF. Once SMS_MFA is enabled, SMS_MFA can only be disabled by setting MfaConfiguration to “OFF”. Can be one of the following values:",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LambdaConfig": {
        "description": "The Lambda trigger configuration information for the new user pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MfaConfiguration": {
        "description": "The multi-factor authentication (MFA) configuration. Valid values include:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policies": {
        "description": "The policy associated with a user pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Schema": {
        "description": "The schema attributes for the new user pool. These attributes can be standard or custom attributes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SmsAuthenticationMessage": {
        "description": "A string representing the SMS authentication message.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SmsConfiguration": {
        "description": "The SMS configuration with the settings that your Amazon Cognito user pool must use to send an SMS message from your AWS account through Amazon Simple Notification Service. To send SMS messages with Amazon SNS in the AWS Region that you want, the Amazon Cognito user pool uses an AWS Identity and Access Management (IAM) role in your AWS account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SmsVerificationMessage": {
        "description": "This parameter is no longer used. See VerificationMessageTemplateType.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UserAttributeUpdateSettings": {
        "description": "The settings for updates to user attributes. These settings include the property AttributesRequireVerificationBeforeUpdate, a user-pool setting that tells Amazon Cognito how to handle changes to the value of your users' email address and phone number attributes. For more information, see Verifying updates to email addresses and phone numbers.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UserPoolAddOns": {
        "description": "Enables advanced security risk detection. Set the key AdvancedSecurityMode to the value \"AUDIT\".",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UserPoolName": {
        "description": "A string used to name the user pool.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UserPoolTags": {
        "description": "The tag keys and values to assign to the user pool. A tag is a label that you can use to categorize and manage user pools in different ways, such as by purpose, owner, environment, or other criteria.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UsernameAttributes": {
        "description": "Determines whether email addresses or phone numbers can be specified as user names when a user signs up. Possible values: phone_number or email.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UsernameConfiguration": {
        "description": "You can choose to set case sensitivity on the username input for the selected sign-in option. For example, when this is set to False, users will be able to sign in using either \"username\" or \"Username\". This configuration is immutable once it has been set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VerificationMessageTemplate": {
        "description": "The template for the verification message that the user sees when the app requests permission to access the user's information.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-userpool.html",
    "properties": [
      "AccountRecoverySetting",
      "AdminCreateUserConfig",
      "AliasAttributes",
      "AutoVerifiedAttributes",
      "DeletionProtection",
      "DeviceConfiguration",
      "EmailConfiguration",
      "EmailVerificationMessage",
      "EmailVerificationSubject",
      "EnabledMfas",
      "LambdaConfig",
      "MfaConfiguration",
      "Policies",
      "Schema",
      "SmsAuthenticationMessage",
      "SmsConfiguration",
      "SmsVerificationMessage",
      "UserAttributeUpdateSettings",
      "UsernameAttributes",
      "UsernameConfiguration",
      "UserPoolAddOns",
      "UserPoolName",
      "UserPoolTags",
      "VerificationMessageTemplate"
    ]
  },
  "AWS::Cognito::UserPoolClient": {
    "full_properties": {
      "AccessTokenValidity": {
        "description": "The access token time limit. After this limit expires, your user can't use their access token. To specify the time unit for AccessTokenValidity as seconds, minutes, hours, or days, set a TokenValidityUnits value in your API request.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AllowedOAuthFlows": {
        "description": "The allowed OAuth flows.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AllowedOAuthFlowsUserPoolClient": {
        "description": "Set to true if the client is allowed to follow the OAuth protocol when interacting with Amazon Cognito user pools.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AllowedOAuthScopes": {
        "description": "The allowed OAuth scopes. Possible values provided by OAuth are phone, email, openid, and profile. Possible values provided by AWS are aws.cognito.signin.user.admin. Custom scopes created in Resource Servers are also supported.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AnalyticsConfiguration": {
        "description": "The user pool analytics configuration for collecting metrics and sending them to your Amazon Pinpoint campaign.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AuthSessionValidity": {
        "description": "Amazon Cognito creates a session token for each API request in an authentication flow. AuthSessionValidity is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "CallbackURLs": {
        "description": "A list of allowed redirect (callback) URLs for the IdPs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ClientName": {
        "description": "The client name for the user pool client you would like to create.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultRedirectURI": {
        "description": "The default redirect URI. Must be in the CallbackURLs list.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnablePropagateAdditionalUserContextData": {
        "description": "Activates the propagation of additional user context data. For more information about propagation of user context data, see  Adding advanced security to a user pool. If you don’t include this parameter, you can't send device fingerprint information, including source IP address, to Amazon Cognito advanced security. You can only activate EnablePropagateAdditionalUserContextData in an app client that has a client secret.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnableTokenRevocation": {
        "description": "Activates or deactivates token revocation. For more information about revoking tokens, see RevokeToken.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ExplicitAuthFlows": {
        "description": "The authentication flows that you want your user pool client to support. For each app client in your user pool, you can sign in your users with any combination of one or more flows, including with a user name and Secure Remote Password (SRP), a user name and password, or a custom authentication process that you define with Lambda functions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "GenerateSecret": {
        "description": "Boolean to specify whether you want to generate a secret for the user pool client being created.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "IdTokenValidity": {
        "description": "The ID token time limit. After this limit expires, your user can't use their ID token. To specify the time unit for IdTokenValidity as seconds, minutes, hours, or days, set a TokenValidityUnits value in your API request.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "LogoutURLs": {
        "description": "A list of allowed logout URLs for the IdPs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PreventUserExistenceErrors": {
        "description": "Use this setting to choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to ENABLED and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to LEGACY, those APIs will return a UserNotFoundException exception if the user does not exist in the user pool.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReadAttributes": {
        "description": "The read attributes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RefreshTokenValidity": {
        "description": "The refresh token time limit. After this limit expires, your user can't use their refresh token. To specify the time unit for RefreshTokenValidity as seconds, minutes, hours, or days, set a TokenValidityUnits value in your API request.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SupportedIdentityProviders": {
        "description": "A list of provider names for the identity providers (IdPs) that are supported on this client. The following are supported: COGNITO, Facebook, Google, SignInWithApple, and LoginWithAmazon. You can also specify the names that you configured for the SAML and OIDC IdPs in your user pool, for example MySAMLIdP or MyOIDCIdP.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TokenValidityUnits": {
        "description": "The units in which the validity times are represented. The default unit for RefreshToken is days, and default for ID and access tokens are hours.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool where you want to create a user pool client.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WriteAttributes": {
        "description": "The user pool attributes that the app client can write to.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-userpoolclient.html",
    "properties": [
      "AccessTokenValidity",
      "AllowedOAuthFlows",
      "AllowedOAuthFlowsUserPoolClient",
      "AllowedOAuthScopes",
      "AnalyticsConfiguration",
      "AuthSessionValidity",
      "CallbackURLs",
      "ClientName",
      "DefaultRedirectURI",
      "EnablePropagateAdditionalUserContextData",
      "EnableTokenRevocation",
      "ExplicitAuthFlows",
      "GenerateSecret",
      "IdTokenValidity",
      "LogoutURLs",
      "PreventUserExistenceErrors",
      "ReadAttributes",
      "RefreshTokenValidity",
      "SupportedIdentityProviders",
      "TokenValidityUnits",
      "UserPoolId",
      "WriteAttributes"
    ]
  },
  "AWS::Cognito::UserPoolDomain": {
    "full_properties": {
      "CustomDomainConfig": {
        "description": "The configuration for a custom domain that hosts the sign-up and sign-in pages for your application. Use this object to specify an SSL certificate that is managed by ACM.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Domain": {
        "description": "The domain name for the domain that hosts the sign-up and sign-in pages for your application. For example: auth.example.com. If you're using a prefix domain, this field denotes the first part of the domain before .auth.[region].amazoncognito.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool where you want to associate a user pool domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpooldomain.html",
    "properties": [
      "CustomDomainConfig",
      "Domain",
      "UserPoolId"
    ]
  },
  "AWS::Cognito::UserPoolGroup": {
    "full_properties": {
      "Description": {
        "description": "A string containing the description of the group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GroupName": {
        "description": "The name of the group. Must be unique.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Precedence": {
        "description": "A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower Precedence values take precedence over groups with higher or null Precedence values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the cognito:roles and cognito:preferred_role claims.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The role Amazon Resource Name (ARN) for the group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpoolgroup.html",
    "properties": [
      "Description",
      "GroupName",
      "Precedence",
      "RoleArn",
      "UserPoolId"
    ]
  },
  "AWS::Cognito::UserPoolIdentityProvider": {
    "full_properties": {
      "AttributeMapping": {
        "description": "A mapping of IdP attributes to standard and custom user pool attributes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IdpIdentifiers": {
        "description": "A list of IdP identifiers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ProviderDetails": {
        "description": "The IdP details. The following list describes the provider detail keys for each IdP type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ProviderName": {
        "description": "The IdP name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProviderType": {
        "description": "The IdP type.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserPoolId": {
        "description": "The user pool ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpoolidentityprovider.html",
    "properties": [
      "AttributeMapping",
      "IdpIdentifiers",
      "ProviderDetails",
      "ProviderName",
      "ProviderType",
      "UserPoolId"
    ]
  },
  "AWS::Cognito::UserPoolResourceServer": {
    "full_properties": {
      "Identifier": {
        "description": "A unique resource server identifier for the resource server. This could be an HTTPS endpoint where the resource server is located. For example: https://my-weather-api.example.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name for the resource server.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Scopes": {
        "description": "A list of scopes. Each scope is a map with keys ScopeName and ScopeDescription.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpoolresourceserver.html",
    "properties": [
      "Identifier",
      "Name",
      "Scopes",
      "UserPoolId"
    ]
  },
  "AWS::Cognito::UserPoolRiskConfigurationAttachment": {
    "full_properties": {
      "AccountTakeoverRiskConfiguration": {
        "description": "The account takeover risk configuration object, including the NotifyConfiguration object and Actions to take if there is an account takeover.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ClientId": {
        "description": "The app client ID. You can specify the risk configuration for a single client (with a specific ClientId) or for all clients (by setting the ClientId to ALL).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CompromisedCredentialsRiskConfiguration": {
        "description": "The compromised credentials risk configuration object, including the EventFilter and the EventAction.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RiskExceptionConfiguration": {
        "description": "The configuration to override the risk decision.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UserPoolId": {
        "description": "The user pool ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpoolriskconfigurationattachment.html",
    "properties": [
      "AccountTakeoverRiskConfiguration",
      "ClientId",
      "CompromisedCredentialsRiskConfiguration",
      "RiskExceptionConfiguration",
      "UserPoolId"
    ]
  },
  "AWS::Cognito::UserPoolUICustomizationAttachment": {
    "full_properties": {
      "CSS": {
        "description": "The CSS values in the UI customization.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ClientId": {
        "description": "The client ID for the client app. You can specify the UI customization settings for a single client (with a specific clientId) or for all clients (by setting the clientId to ALL).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpooluicustomizationattachment.html",
    "properties": [
      "ClientId",
      "CSS",
      "UserPoolId"
    ]
  },
  "AWS::Cognito::UserPoolUser": {
    "full_properties": {
      "ClientMetadata": {
        "description": "A map of custom key-value pairs that you can provide as input for the custom workflow that is invoked by the pre sign-up trigger.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DesiredDeliveryMediums": {
        "description": "Specify \"EMAIL\" if email will be used to send the welcome message. Specify \"SMS\" if the phone number will be used. The default value is \"SMS\". You can specify more than one value.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ForceAliasCreation": {
        "description": "This parameter is used only if the phone_number_verified or email_verified attribute is set to True. Otherwise, it is ignored.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "MessageAction": {
        "description": "Set to RESEND to resend the invitation message to a user that already exists and reset the expiration limit on the user's account. Set to SUPPRESS to suppress sending the message. You can specify only one value.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserAttributes": {
        "description": "The user attributes and attribute values to be set for the user to be created. These are name-value pairs You can create a user without specifying any attributes other than Username. However, any attributes that you specify as required (in https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html or in the Attributes tab of the console) must be supplied either by you (in your call to AdminCreateUser) or by the user (when they sign up in response to your welcome message).",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool where the user will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Username": {
        "description": "The username for the user. Must be unique within the user pool. Must be a UTF-8 string between 1 and 128 characters. After the user is created, the username can't be changed.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidationData": {
        "description": "The user's validation data. This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. For example, you might choose to allow or disallow user sign-up based on the user's domain.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpooluser.html",
    "properties": [
      "ClientMetadata",
      "DesiredDeliveryMediums",
      "ForceAliasCreation",
      "MessageAction",
      "UserAttributes",
      "Username",
      "UserPoolId",
      "ValidationData"
    ]
  },
  "AWS::Cognito::UserPoolUserToGroupAttachment": {
    "full_properties": {
      "GroupName": {
        "description": "The group name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Username": {
        "description": "The username for the user.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpoolusertogroupattachment.html",
    "properties": [
      "GroupName",
      "Username",
      "UserPoolId"
    ]
  },
  "AWS::Config::AggregationAuthorization": {
    "full_properties": {
      "AuthorizedAccountId": {
        "description": "The 12-digit account ID of the account authorized to aggregate data.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AuthorizedAwsRegion": {
        "description": "The region authorized to collect aggregated data.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of tag object.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-aggregationauthorization.html",
    "properties": [
      "AuthorizedAccountId",
      "AuthorizedAwsRegion",
      "Tags"
    ]
  },
  "AWS::Config::ConfigRule": {
    "full_properties": {
      "ConfigRuleName": {
        "description": "A name for the AWS Config rule. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the rule name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description that you provide for the AWS Config rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InputParameters": {
        "description": "A string, in JSON format, that is passed to the AWS Config rule Lambda function.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaximumExecutionFrequency": {
        "description": "The maximum frequency with which AWS Config runs evaluations for a rule. You can specify a value for MaximumExecutionFrequency when:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Scope": {
        "description": "Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Source": {
        "description": "Provides the rule owner ( AWS for managed rules, CUSTOM_POLICY for Custom Policy rules, and CUSTOM_LAMBDA for Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-configrule.html",
    "properties": [
      "ConfigRuleName",
      "Description",
      "InputParameters",
      "MaximumExecutionFrequency",
      "Scope",
      "Source"
    ]
  },
  "AWS::Config::ConfigurationAggregator": {
    "full_properties": {
      "AccountAggregationSources": {
        "description": "Provides a list of source accounts and regions to be aggregated.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ConfigurationAggregatorName": {
        "description": "The name of the aggregator.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OrganizationAggregationSource": {
        "description": "Provides an organization and list of regions to be aggregated.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of tag object.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-configurationaggregator.html",
    "properties": [
      "AccountAggregationSources",
      "ConfigurationAggregatorName",
      "OrganizationAggregationSource",
      "Tags"
    ]
  },
  "AWS::Config::ConfigurationRecorder": {
    "full_properties": {
      "Name": {
        "description": "A name for the configuration recorder. If you don't specify a name, AWS CloudFormation CloudFormation generates a unique physical ID and uses that ID for the configuration recorder name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "unavailable",
          "replacement"
        ]
      },
      "RecordingGroup": {
        "description": "Indicates whether to record configurations for all supported resources or for a list of resource types. The resource types that you list must be supported by AWS Config.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleARN": {
        "description": "The Amazon Resource Name (ARN) of the IAM (IAM) role that is used to make read or write requests to the delivery channel that you specify and to get configuration details for supported AWS resources. For more information, see Permissions for the IAM Role Assigned to AWS Config in the AWS Config Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-configurationrecorder.html",
    "properties": [
      "Name",
      "RecordingGroup",
      "RoleARN"
    ]
  },
  "AWS::Config::ConformancePack": {
    "full_properties": {
      "ConformancePackInputParameters": {
        "description": "A list of ConformancePackInputParameter objects.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ConformancePackName": {
        "description": "Name of the conformance pack you want to create.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeliveryS3Bucket": {
        "description": "The name of the Amazon S3 bucket where AWS Config stores conformance pack templates.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeliveryS3KeyPrefix": {
        "description": "The prefix for the Amazon S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateBody": {
        "description": "A string containing full conformance pack template body. Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateS3Uri": {
        "description": "Location of file containing the template body (s3://bucketname/prefix). The uri must point to the conformance pack template (max size: 300 KB) that is located in an Amazon S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateSSMDocumentDetails": {
        "description": "An object that contains the name or Amazon Resource Name (ARN) of the AWS Systems Manager document (SSM document) and the version of the SSM document that is used to create a conformance pack.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-conformancepack.html",
    "properties": [
      "ConformancePackInputParameters",
      "ConformancePackName",
      "DeliveryS3Bucket",
      "DeliveryS3KeyPrefix",
      "TemplateBody",
      "TemplateS3Uri",
      "TemplateSSMDocumentDetails"
    ]
  },
  "AWS::Config::DeliveryChannel": {
    "full_properties": {
      "ConfigSnapshotDeliveryProperties": {
        "description": "The options for how often AWS Config delivers configuration snapshots to the Amazon S3 bucket.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the delivery channel. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the delivery channel name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "unavailable",
          "replacement"
        ]
      },
      "S3BucketName": {
        "description": "The name of the Amazon S3 bucket to which AWS Config delivers configuration snapshots and configuration history files.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "S3KeyPrefix": {
        "description": "The prefix for the specified Amazon S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "S3KmsKeyArn": {
        "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS ) AWS KMS key (KMS key) used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicARN": {
        "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which AWS Config sends notifications about configuration changes.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-deliverychannel.html",
    "properties": [
      "ConfigSnapshotDeliveryProperties",
      "Name",
      "S3BucketName",
      "S3KeyPrefix",
      "S3KmsKeyArn",
      "SnsTopicARN"
    ]
  },
  "AWS::Config::OrganizationConfigRule": {
    "full_properties": {
      "ExcludedAccounts": {
        "description": "A comma-separated list of accounts excluded from organization AWS Config rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OrganizationConfigRuleName": {
        "description": "The name that you assign to organization AWS Config rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OrganizationCustomCodeRuleMetadata": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OrganizationCustomRuleMetadata": {
        "description": "An OrganizationCustomRuleMetadata object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OrganizationManagedRuleMetadata": {
        "description": "An OrganizationManagedRuleMetadata object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-organizationconfigrule.html",
    "properties": [
      "ExcludedAccounts",
      "OrganizationConfigRuleName",
      "OrganizationCustomCodeRuleMetadata",
      "OrganizationCustomRuleMetadata",
      "OrganizationManagedRuleMetadata"
    ]
  },
  "AWS::Config::OrganizationConformancePack": {
    "full_properties": {
      "ConformancePackInputParameters": {
        "description": "A list of ConformancePackInputParameter objects.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DeliveryS3Bucket": {
        "description": "The name of the Amazon S3 bucket where AWS Config stores conformance pack templates.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeliveryS3KeyPrefix": {
        "description": "Any folder structure you want to add to an Amazon S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExcludedAccounts": {
        "description": "A comma-separated list of accounts excluded from organization conformance pack.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OrganizationConformancePackName": {
        "description": "The name you assign to an organization conformance pack.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TemplateBody": {
        "description": "A string containing full conformance pack template body. Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateS3Uri": {
        "description": "Location of file containing the template body. The uri must point to the conformance pack template (max size: 300 KB).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-organizationconformancepack.html",
    "properties": [
      "ConformancePackInputParameters",
      "DeliveryS3Bucket",
      "DeliveryS3KeyPrefix",
      "ExcludedAccounts",
      "OrganizationConformancePackName",
      "TemplateBody",
      "TemplateS3Uri"
    ]
  },
  "AWS::Config::RemediationConfiguration": {
    "full_properties": {
      "Automatic": {
        "description": "The remediation is triggered automatically.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ConfigRuleName": {
        "description": "The name of the AWS Config rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExecutionControls": {
        "description": "An ExecutionControls object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaximumAutomaticAttempts": {
        "description": "The maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "An object of the RemediationParameterValue. For more information, see RemediationParameterValue.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResourceType": {
        "description": "The type of a resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RetryAttemptSeconds": {
        "description": "Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "TargetId": {
        "description": "Target ID is the name of the public document.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetType": {
        "description": "The type of the target. Target executes remediation. For example, SSM document.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetVersion": {
        "description": "Version of the target. For example, version of the SSM document.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-remediationconfiguration.html",
    "properties": [
      "Automatic",
      "ConfigRuleName",
      "ExecutionControls",
      "MaximumAutomaticAttempts",
      "Parameters",
      "ResourceType",
      "RetryAttemptSeconds",
      "TargetId",
      "TargetType",
      "TargetVersion"
    ]
  },
  "AWS::Config::StoredQuery": {
    "full_properties": {
      "QueryDescription": {
        "description": "A unique description for the query.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "QueryExpression": {
        "description": "The expression of the query. For example, SELECT resourceId, resourceType, supplementaryConfiguration.BucketVersioningConfiguration.status WHERE resourceType = 'AWS::S3::Bucket' AND supplementaryConfiguration.BucketVersioningConfiguration.status = 'Off'.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "QueryName": {
        "description": "The name of the query.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-storedquery.html",
    "properties": [
      "QueryDescription",
      "QueryExpression",
      "QueryName",
      "Tags"
    ]
  },
  "AWS::Connect::ContactFlow": {
    "full_properties": {
      "Content": {
        "description": "The content of the flow.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the flow.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Connect instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the flow.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "State": {
        "description": "The state of the flow.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of the flow. For descriptions of the available types, see Choose a flow type in the Amazon Connect Administrator Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-connect-contactflow.html",
    "properties": [
      "Content",
      "Description",
      "InstanceArn",
      "Name",
      "State",
      "Tags",
      "Type"
    ]
  },
  "AWS::Connect::ContactFlowModule": {
    "full_properties": {
      "Content": {
        "description": "The content of the flow module.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the flow module.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Connect instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the flow module.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "State": {
        "description": "The state of the flow module.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-connect-contactflowmodule.html",
    "properties": [
      "Content",
      "Description",
      "InstanceArn",
      "Name",
      "State",
      "Tags"
    ]
  },
  "AWS::Connect::HoursOfOperation": {
    "full_properties": {
      "Config": {
        "description": "Configuration information for the hours of operation.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description for the hours of operation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) for the instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the hours of operation.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TimeZone": {
        "description": "The time zone for the hours of operation.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-connect-hoursofoperation.html",
    "properties": [
      "Config",
      "Description",
      "InstanceArn",
      "Name",
      "Tags",
      "TimeZone"
    ]
  },
  "AWS::Connect::Instance": {
    "full_properties": {
      "Attributes": {
        "description": "A toggle for an individual feature at the instance level.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DirectoryId": {
        "description": "The identifier for the directory.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IdentityManagementType": {
        "description": "The identity management type.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceAlias": {
        "description": "The alias of instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-connect-instance.html",
    "properties": [
      "Attributes",
      "DirectoryId",
      "IdentityManagementType",
      "InstanceAlias"
    ]
  },
  "AWS::Connect::InstanceStorageConfig": {
    "full_properties": {
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KinesisFirehoseConfig": {
        "description": "The configuration of the Kinesis Firehose delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KinesisStreamConfig": {
        "description": "The configuration of the Kinesis data stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KinesisVideoStreamConfig": {
        "description": "The configuration of the Kinesis video stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResourceType": {
        "description": "A valid resource type. Following are the valid resource types: CHAT_TRANSCRIPTS | CALL_RECORDINGS | SCHEDULED_REPORTS | MEDIA_STREAMS | CONTACT_TRACE_RECORDS | AGENT_EVENTS",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "S3Config": {
        "description": "The S3 bucket configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StorageType": {
        "description": "A valid storage type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-connect-instancestorageconfig.html",
    "properties": [
      "InstanceArn",
      "KinesisFirehoseConfig",
      "KinesisStreamConfig",
      "KinesisVideoStreamConfig",
      "ResourceType",
      "S3Config",
      "StorageType"
    ]
  },
  "AWS::Connect::PhoneNumber": {
    "full_properties": {
      "CountryCode": {
        "description": "The ISO country code.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the phone number.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Prefix": {
        "description": "The prefix of the phone number. If provided, it must contain + as part of the country code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetArn": {
        "description": "The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution group that phone numbers are claimed to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of phone number.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-connect-phonenumber.html",
    "properties": [
      "CountryCode",
      "Description",
      "Prefix",
      "Tags",
      "TargetArn",
      "Type"
    ]
  },
  "AWS::Connect::QuickConnect": {
    "full_properties": {
      "Description": {
        "description": "The description of the quick connect.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the quick connect.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "QuickConnectConfig": {
        "description": "Contains information about the quick connect.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-connect-quickconnect.html",
    "properties": [
      "Description",
      "InstanceArn",
      "Name",
      "QuickConnectConfig",
      "Tags"
    ]
  },
  "AWS::Connect::TaskTemplate": {
    "full_properties": {
      "ClientToken": {
        "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Constraints": {
        "description": "Constraints that are applicable to the fields listed.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ContactFlowArn": {
        "description": "The Amazon Resource Name (ARN) of the flow that runs by default when a task is created by referencing this template. ContactFlowArn is not required when there is a field with fieldType = QUICK_CONNECT.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Defaults": {
        "description": "The default values for fields when a task is created by referencing this template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the task template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Fields": {
        "description": "Fields that are part of the template. A template requires at least one field that has type Name.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Connect instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the task template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Status": {
        "description": "The status of the task template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-connect-tasktemplate.html",
    "properties": [
      "ClientToken",
      "Constraints",
      "ContactFlowArn",
      "Defaults",
      "Description",
      "Fields",
      "InstanceArn",
      "Name",
      "Status",
      "Tags"
    ]
  },
  "AWS::Connect::User": {
    "full_properties": {
      "DirectoryUserId": {
        "description": "The identifier of the user account in the directory used for identity management.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HierarchyGroupArn": {
        "description": "The Amazon Resource Name (ARN) of the user's hierarchy group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IdentityInfo": {
        "description": "Information about the user identity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Password": {
        "description": "The user's password.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PhoneConfig": {
        "description": "Information about the phone configuration for the user.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoutingProfileArn": {
        "description": "The Amazon Resource Name (ARN) of the user's routing profile.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityProfileArns": {
        "description": "The Amazon Resource Name (ARN) of the user's security profile.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Username": {
        "description": "The user name assigned to the user account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-connect-user.html",
    "properties": [
      "DirectoryUserId",
      "HierarchyGroupArn",
      "IdentityInfo",
      "InstanceArn",
      "Password",
      "PhoneConfig",
      "RoutingProfileArn",
      "SecurityProfileArns",
      "Tags",
      "Username"
    ]
  },
  "AWS::Connect::UserHierarchyGroup": {
    "full_properties": {
      "InstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the user hierarchy group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the user hierarchy group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ParentGroupArn": {
        "description": "The Amazon Resource Name (ARN) of the parent group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-connect-userhierarchygroup.html",
    "properties": [
      "InstanceArn",
      "Name",
      "ParentGroupArn"
    ]
  },
  "AWS::ConnectCampaigns::Campaign": {
    "full_properties": {
      "ConnectInstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Connect instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DialerConfig": {
        "description": "Contains information about the dialer configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the campaign.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OutboundCallConfig": {
        "description": "Contains information about the outbound call configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-connectcampaigns-campaign.html",
    "properties": [
      "ConnectInstanceArn",
      "DialerConfig",
      "Name",
      "OutboundCallConfig",
      "Tags"
    ]
  },
  "AWS::ControlTower::EnabledControl": {
    "full_properties": {
      "ControlIdentifier": {
        "description": "The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetIdentifier": {
        "description": "The ARN of the organizational unit.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-controltower-enabledcontrol.html",
    "properties": [
      "ControlIdentifier",
      "TargetIdentifier"
    ]
  },
  "AWS::CustomerProfiles::Domain": {
    "full_properties": {
      "DeadLetterQueueUrl": {
        "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultEncryptionKey": {
        "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultExpirationDays": {
        "description": "The default number of days until the data within the domain expires.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The unique name of the domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-customerprofiles-domain.html",
    "properties": [
      "DeadLetterQueueUrl",
      "DefaultEncryptionKey",
      "DefaultExpirationDays",
      "DomainName",
      "Tags"
    ]
  },
  "AWS::CustomerProfiles::Integration": {
    "full_properties": {
      "DomainName": {
        "description": "The unique name of the domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FlowDefinition": {
        "description": "The configuration that controls how Customer Profiles retrieves data from the source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ObjectTypeName": {
        "description": "The name of the profile object type mapping to use.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ObjectTypeNames": {
        "description": "The object type mapping.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Uri": {
        "description": "The URI of the S3 bucket or any other type of data source.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-customerprofiles-integration.html",
    "properties": [
      "DomainName",
      "FlowDefinition",
      "ObjectTypeName",
      "ObjectTypeNames",
      "Tags",
      "Uri"
    ]
  },
  "AWS::CustomerProfiles::ObjectType": {
    "full_properties": {
      "AllowProfileCreation": {
        "description": "Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is FALSE. If the AllowProfileCreation flag is set to FALSE, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to TRUE, and if no match is found, then the service creates a new standard profile.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the profile object type mapping.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The unique name of the domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EncryptionKey": {
        "description": "The customer-provided key to encrypt the profile object that will be created in this profile object type mapping. If not specified the system will use the encryption key of the domain.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExpirationDays": {
        "description": "The number of days until the data of this type expires.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Fields": {
        "description": "A list of field definitions for the object type mapping.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Keys": {
        "description": "A list of keys that can be used to map data to the profile or search for the profile.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ObjectTypeName": {
        "description": "The name of the profile object type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TemplateId": {
        "description": "A unique identifier for the template mapping. This can be used instead of specifying the Keys and Fields properties directly.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-customerprofiles-objecttype.html",
    "properties": [
      "AllowProfileCreation",
      "Description",
      "DomainName",
      "EncryptionKey",
      "ExpirationDays",
      "Fields",
      "Keys",
      "ObjectTypeName",
      "Tags",
      "TemplateId"
    ]
  },
  "AWS::DAX::Cluster": {
    "full_properties": {
      "AvailabilityZones": {
        "description": "The Availability Zones (AZs) in which the cluster nodes will reside after the cluster has been created or updated. If provided, the length of this list must equal the ReplicationFactor parameter. If you omit this parameter, DAX will spread the nodes across Availability Zones for the highest availability.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ClusterEndpointEncryptionType": {
        "description": "The encryption type of the cluster's endpoint. Available values are:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterName": {
        "description": "The name of the DAX cluster.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Description": {
        "description": "The description of the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IAMRoleARN": {
        "description": "A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role's permissions to access DynamoDB on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "NodeType": {
        "description": "The node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NotificationTopicARN": {
        "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ParameterGroupName": {
        "description": "The parameter group to be associated with the DAX cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "A range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00. Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationFactor": {
        "description": "The number of nodes in the DAX cluster. A replication factor of 1 will create a single-node cluster, without any read replicas. For additional fault tolerance, you can create a multiple node cluster with one or more read replicas. To do this, set ReplicationFactor to a number between 3 (one primary and two read replicas) and 10 (one primary and nine read replicas). If the AvailabilityZones parameter is provided, its length must equal the ReplicationFactor.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "SSESpecification": {
        "description": "Represents the settings used to enable server-side encryption on the cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SecurityGroupIds": {
        "description": "A list of security group IDs to be assigned to each node in the DAX cluster. (Each of the security group ID is system-generated.)",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetGroupName": {
        "description": "The name of the subnet group to be used for the replication group.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Tags": {
        "description": "A set of tags to associate with the DAX cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dax-cluster.html",
    "properties": [
      "AvailabilityZones",
      "ClusterEndpointEncryptionType",
      "ClusterName",
      "Description",
      "IAMRoleARN",
      "NodeType",
      "NotificationTopicARN",
      "ParameterGroupName",
      "PreferredMaintenanceWindow",
      "ReplicationFactor",
      "SecurityGroupIds",
      "SSESpecification",
      "SubnetGroupName",
      "Tags"
    ]
  },
  "AWS::DAX::ParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ParameterGroupName": {
        "description": "The name of the parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParameterNameValues": {
        "description": "An array of name-value pairs for the parameters in the group. Each element in the array represents a single parameter.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dax-parametergroup.html",
    "properties": [
      "Description",
      "ParameterGroupName",
      "ParameterNameValues"
    ]
  },
  "AWS::DAX::SubnetGroup": {
    "full_properties": {
      "Description": {
        "description": "The description of the subnet group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetGroupName": {
        "description": "The name of the subnet group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "A list of VPC subnet IDs for the subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dax-subnetgroup.html",
    "properties": [
      "Description",
      "SubnetGroupName",
      "SubnetIds"
    ]
  },
  "AWS::DLM::LifecyclePolicy": {
    "full_properties": {
      "Description": {
        "description": "A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PolicyDetails": {
        "description": "The configuration details of the lifecycle policy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "State": {
        "description": "The activation state of the lifecycle policy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to apply to the lifecycle policy during creation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dlm-lifecyclepolicy.html",
    "properties": [
      "Description",
      "ExecutionRoleArn",
      "PolicyDetails",
      "State",
      "Tags"
    ]
  },
  "AWS::DMS::Certificate": {
    "full_properties": {
      "CertificateIdentifier": {
        "description": "A customer-assigned name for the certificate. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificatePem": {
        "description": "The contents of a .pem file, which contains an X.509 certificate.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateWallet": {
        "description": "The location of an imported Oracle Wallet certificate for use with SSL. An example is: filebase64(\"${path.root}/rds-ca-2019-root.sso\")",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-dms-certificate.html",
    "properties": [
      "CertificateIdentifier",
      "CertificatePem",
      "CertificateWallet"
    ]
  },
  "AWS::DMS::Endpoint": {
    "full_properties": {
      "CertificateArn": {
        "description": "The Amazon Resource Name (ARN) for the certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DatabaseName": {
        "description": "The name of the endpoint database. For a MySQL source or target endpoint, don't specify DatabaseName. To migrate to a specific database, use this setting and targetDbType.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DocDbSettings": {
        "description": "Settings in JSON format for the source and target DocumentDB endpoint. For more information about other available settings, see  Using extra connections attributes with Amazon DocumentDB as a source and  Using Amazon DocumentDB as a target for AWS Database Migration Service in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DynamoDbSettings": {
        "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For information about other available settings, see  Using object mapping to migrate data to DynamoDB in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ElasticsearchSettings": {
        "description": "Settings in JSON format for the target OpenSearch endpoint. For more information about the available settings, see  Extra connection attributes when using OpenSearch as a target for AWS DMS in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EndpointIdentifier": {
        "description": "The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen, or contain two consecutive hyphens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EndpointType": {
        "description": "The type of endpoint.  Valid values are source and target.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EngineName": {
        "description": "The type of engine for the endpoint, depending on the EndpointType value.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ExtraConnectionAttributes": {
        "description": "Additional attributes associated with the connection. Each attribute is specified as a name-value pair associated by an equal sign (=). Multiple attributes are separated by a semicolon (;) with no additional white space. For information on the attributes available for connecting your source or target endpoint, see  Working with AWS DMS Endpoints in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GcpMySQLSettings": {
        "description": "Settings in JSON format for the source GCP MySQL endpoint. These settings are much the same as the settings for any MySQL-compatible endpoint. For more information, see  Extra connection attributes when using MySQL as a source for AWS DMS in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IbmDb2Settings": {
        "description": "Settings in JSON format for the source IBM Db2 LUW endpoint. For information about other available settings, see  Extra connection attributes when using Db2 LUW as a source for AWS DMS in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KafkaSettings": {
        "description": "Settings in JSON format for the target Apache Kafka endpoint. For more information about other available settings, see  Using object mapping to migrate data to a Kafka topic in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KinesisSettings": {
        "description": "Settings in JSON format for the target endpoint for Amazon Kinesis Data Streams. For more information about other available settings, see  Using object mapping to migrate data to a Kinesis data stream in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "An AWS KMS key identifier that is used to encrypt the connection parameters for the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MicrosoftSqlServerSettings": {
        "description": "Settings in JSON format for the source and target Microsoft SQL Server endpoint. For information about other available settings, see  Extra connection attributes when using SQL Server as a source for AWS DMS and  Extra connection attributes when using SQL Server as a target for AWS DMS in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MongoDbSettings": {
        "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see  Using MongoDB as a target for AWS Database Migration Service in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MySqlSettings": {
        "description": "Settings in JSON format for the source and target MySQL endpoint. For information about other available settings, see  Extra connection attributes when using MySQL as a source for AWS DMS and  Extra connection attributes when using a MySQL-compatible database as a target for AWS DMS in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NeptuneSettings": {
        "description": "Settings in JSON format for the target Amazon Neptune endpoint. For more information about the available settings, see  Specifying endpoint settings for Amazon Neptune as a target in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OracleSettings": {
        "description": "Settings in JSON format for the source and target Oracle endpoint. For information about other available settings, see  Extra connection attributes when using Oracle as a source for AWS DMS and  Extra connection attributes when using Oracle as a target for AWS DMS in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Password": {
        "description": "The password to be used to log in to the endpoint database.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Port": {
        "description": "The port used by the endpoint database.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PostgreSqlSettings": {
        "description": "Settings in JSON format for the source and target PostgreSQL endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RedisSettings": {
        "description": "Settings in JSON format for the target Redis endpoint. For information about other available settings, see  Specifying endpoint settings for Redis as a target in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RedshiftSettings": {
        "description": "Settings in JSON format for the Amazon Redshift endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResourceIdentifier": {
        "description": "A display name for the resource identifier at the end of the EndpointArn response parameter that is returned in the created Endpoint object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as Example-App-ARN1.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "S3Settings": {
        "description": "Settings in JSON format for the source and target Amazon S3 endpoint. For more information about other available settings, see  Extra connection attributes when using Amazon S3 as a source for AWS DMS and  Extra connection attributes when using Amazon S3 as a target for AWS DMS in theAWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServerName": {
        "description": "The name of the server where the endpoint database resides.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SslMode": {
        "description": "The Secure Sockets Layer (SSL) mode to use for the SSL connection. The default is none.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SybaseSettings": {
        "description": "Settings in JSON format for the source and target SAP ASE endpoint. For information about other available settings, see  Extra connection attributes when using SAP ASE as a source for AWS DMS and  Extra connection attributes when using SAP ASE as a target for AWS DMS in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags to be assigned to the endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Username": {
        "description": "The user name to be used to log in to the endpoint database.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dms-endpoint.html",
    "properties": [
      "CertificateArn",
      "DatabaseName",
      "DocDbSettings",
      "DynamoDbSettings",
      "ElasticsearchSettings",
      "EndpointIdentifier",
      "EndpointType",
      "EngineName",
      "ExtraConnectionAttributes",
      "GcpMySQLSettings",
      "IbmDb2Settings",
      "KafkaSettings",
      "KinesisSettings",
      "KmsKeyId",
      "MicrosoftSqlServerSettings",
      "MongoDbSettings",
      "MySqlSettings",
      "NeptuneSettings",
      "OracleSettings",
      "Password",
      "Port",
      "PostgreSqlSettings",
      "RedisSettings",
      "RedshiftSettings",
      "ResourceIdentifier",
      "S3Settings",
      "ServerName",
      "SslMode",
      "SybaseSettings",
      "Tags",
      "Username"
    ]
  },
  "AWS::DMS::EventSubscription": {
    "full_properties": {
      "Enabled": {
        "description": "Indicates whether to activate the subscription. If you don't specify this property, AWS CloudFormation activates the subscription.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventCategories": {
        "description": "A list of event categories for a source type that you want to subscribe to. If you don't specify this property, you are notified about all event categories. For more information, see  Working with Events and Notifications in the AWS DMS User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SourceIds": {
        "description": "A list of identifiers for which AWS DMS provides notification events.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SourceType": {
        "description": "The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to replication-instance. If this value isn't specified, all events are returned.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubscriptionName": {
        "description": "The name of the AWS DMS event notification subscription. This name must be less than 255 characters.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "One or more tags to be assigned to the event subscription.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-dms-eventsubscription.html",
    "properties": [
      "Enabled",
      "EventCategories",
      "SnsTopicArn",
      "SourceIds",
      "SourceType",
      "SubscriptionName",
      "Tags"
    ]
  },
  "AWS::DMS::ReplicationInstance": {
    "full_properties": {
      "AllocatedStorage": {
        "description": "The amount of storage (in gigabytes) to be initially allocated for the replication instance.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AllowMajorVersionUpgrade": {
        "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage, and the change is asynchronously applied as soon as possible.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "A value that indicates whether minor engine upgrades are applied automatically to the replication instance during the maintenance window. This parameter defaults to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone that the replication instance will be created in.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EngineVersion": {
        "description": "The engine version number of the replication instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "An AWS KMS key identifier that is used to encrypt the data on the replication instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MultiAZ": {
        "description": "Specifies whether the replication instance is a Multi-AZ deployment. You can't set the AvailabilityZone parameter if the Multi-AZ parameter is set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range during which system maintenance can occur, in UTC.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ReplicationInstanceClass": {
        "description": "The compute and memory capacity of the replication instance as defined for the specified replication instance class. For example, to specify the instance class dms.c4.large, set this parameter to \"dms.c4.large\". For more information on the settings and capacities for the available replication instance classes, see  Selecting the right AWS DMS replication instance for your migration in the AWS Database Migration Service User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationInstanceIdentifier": {
        "description": "The replication instance identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationSubnetGroupIdentifier": {
        "description": "A subnet group to associate with the replication instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceIdentifier": {
        "description": "A display name for the resource identifier at the end of the EndpointArn response parameter that is returned in the created Endpoint object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as Example-App-ARN1. For example, this value might result in the EndpointArn value arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1. If you don't specify a ResourceIdentifier value, AWS DMS generates a default identifier value for the end of EndpointArn.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "One or more tags to be assigned to the replication instance.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "VpcSecurityGroupIds": {
        "description": "Specifies the virtual private cloud (VPC) security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dms-replicationinstance.html",
    "properties": [
      "AllocatedStorage",
      "AllowMajorVersionUpgrade",
      "AutoMinorVersionUpgrade",
      "AvailabilityZone",
      "EngineVersion",
      "KmsKeyId",
      "MultiAZ",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "ReplicationInstanceClass",
      "ReplicationInstanceIdentifier",
      "ReplicationSubnetGroupIdentifier",
      "ResourceIdentifier",
      "Tags",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::DMS::ReplicationSubnetGroup": {
    "full_properties": {
      "ReplicationSubnetGroupDescription": {
        "description": "The description for the subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationSubnetGroupIdentifier": {
        "description": "The identifier for the replication subnet group. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the identifier.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "One or more subnet IDs to be assigned to the subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags to be assigned to the subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dms-replicationsubnetgroup.html",
    "properties": [
      "ReplicationSubnetGroupDescription",
      "ReplicationSubnetGroupIdentifier",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::DMS::ReplicationTask": {
    "full_properties": {
      "CdcStartPosition": {
        "description": "Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CdcStartTime": {
        "description": "Indicates the start time for a change data capture (CDC) operation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CdcStopPosition": {
        "description": "Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MigrationType": {
        "description": "The migration type. Valid values: full-load | cdc | full-load-and-cdc",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationInstanceArn": {
        "description": "The Amazon Resource Name (ARN) of a replication instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReplicationTaskIdentifier": {
        "description": "An identifier for the replication task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationTaskSettings": {
        "description": "Overall settings for the task, in JSON format. For more information, see  Specifying Task Settings for AWS Database Migration Service Tasks in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceIdentifier": {
        "description": "A display name for the resource identifier at the end of the EndpointArn response parameter that is returned in the created Endpoint object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as Example-App-ARN1.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceEndpointArn": {
        "description": "An Amazon Resource Name (ARN) that uniquely identifies the source endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TableMappings": {
        "description": "The table mappings for the task, in JSON format. For more information, see  Using Table Mapping to Specify Task Settings in the AWS Database Migration Service User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags to be assigned to the replication task.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TargetEndpointArn": {
        "description": "An Amazon Resource Name (ARN) that uniquely identifies the target endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TaskData": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dms-replicationtask.html",
    "properties": [
      "CdcStartPosition",
      "CdcStartTime",
      "CdcStopPosition",
      "MigrationType",
      "ReplicationInstanceArn",
      "ReplicationTaskIdentifier",
      "ReplicationTaskSettings",
      "ResourceIdentifier",
      "SourceEndpointArn",
      "TableMappings",
      "Tags",
      "TargetEndpointArn",
      "TaskData"
    ]
  },
  "AWS::DataBrew::Dataset": {
    "full_properties": {
      "Format": {
        "description": "The file format of a dataset that is created from an Amazon S3 file or folder.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FormatOptions": {
        "description": "A set of options that define how DataBrew interprets the data in the dataset.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Input": {
        "description": "Information on how DataBrew can find the dataset, in either the AWS Glue Data Catalog or Amazon S3.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The unique name of the dataset.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PathOptions": {
        "description": "A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata tags that have been applied to the dataset.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-databrew-dataset.html",
    "properties": [
      "Format",
      "FormatOptions",
      "Input",
      "Name",
      "PathOptions",
      "Tags"
    ]
  },
  "AWS::DataBrew::Job": {
    "full_properties": {
      "DataCatalogOutputs": {
        "description": "One or more artifacts that represent the AWS Glue Data Catalog output from running the job.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DatabaseOutputs": {
        "description": "Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DatasetName": {
        "description": "A dataset that the job is to process.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EncryptionKeyArn": {
        "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job output. For more information, see Encrypting data written by DataBrew jobs",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EncryptionMode": {
        "description": "The encryption mode for the job, which can be one of the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "JobSample": {
        "description": "A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a JobSample value isn't provided, the default value is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LogSubscription": {
        "description": "The current status of Amazon CloudWatch logging for the job.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxCapacity": {
        "description": "The maximum number of nodes that can be consumed when the job processes data.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaxRetries": {
        "description": "The maximum number of times to retry the job after a job run fails.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The unique name of the job.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutputLocation": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Outputs": {
        "description": "One or more artifacts that represent output from running the job.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ProfileConfiguration": {
        "description": "Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ProjectName": {
        "description": "The name of the project that the job is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Recipe": {
        "description": "A series of data transformation steps that the job runs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the role to be assumed for this job.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata tags that have been applied to the job.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Timeout": {
        "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of TIMEOUT.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Type": {
        "description": "The job type of the job, which must be one of the following:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidationConfigurations": {
        "description": "List of validation configurations that are applied to the profile job.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-databrew-job.html",
    "properties": [
      "DatabaseOutputs",
      "DataCatalogOutputs",
      "DatasetName",
      "EncryptionKeyArn",
      "EncryptionMode",
      "JobSample",
      "LogSubscription",
      "MaxCapacity",
      "MaxRetries",
      "Name",
      "OutputLocation",
      "Outputs",
      "ProfileConfiguration",
      "ProjectName",
      "Recipe",
      "RoleArn",
      "Tags",
      "Timeout",
      "Type",
      "ValidationConfigurations"
    ]
  },
  "AWS::DataBrew::Project": {
    "full_properties": {
      "DatasetName": {
        "description": "The dataset that the project is to act upon.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The unique name of a project.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RecipeName": {
        "description": "The name of a recipe that will be developed during a project session.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the role that will be assumed for this project.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Sample": {
        "description": "The sample size and sampling type to apply to the data. If this parameter isn't specified, then the sample consists of the first 500 rows from the dataset.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata tags that have been applied to the project.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-databrew-project.html",
    "properties": [
      "DatasetName",
      "Name",
      "RecipeName",
      "RoleArn",
      "Sample",
      "Tags"
    ]
  },
  "AWS::DataBrew::Recipe": {
    "full_properties": {
      "Description": {
        "description": "The description of the recipe.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The unique name for the recipe.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Steps": {
        "description": "A list of steps that are defined by the recipe.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata tags that have been applied to the recipe.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-databrew-recipe.html",
    "properties": [
      "Description",
      "Name",
      "Steps",
      "Tags"
    ]
  },
  "AWS::DataBrew::Ruleset": {
    "full_properties": {
      "Description": {
        "description": "The description of the ruleset.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the ruleset.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "Contains metadata about the ruleset.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetArn": {
        "description": "The Amazon Resource Name (ARN) of a resource (dataset) that the ruleset is associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-databrew-ruleset.html",
    "properties": [
      "Description",
      "Name",
      "Rules",
      "Tags",
      "TargetArn"
    ]
  },
  "AWS::DataBrew::Schedule": {
    "full_properties": {
      "CronExpression": {
        "description": "The dates and times when the job is to run. For more information, see Working with cron expressions for recipe jobs in the AWS Glue DataBrew Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "JobNames": {
        "description": "A list of jobs to be run, according to the schedule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the schedule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata tags that have been applied to the schedule.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-databrew-schedule.html",
    "properties": [
      "CronExpression",
      "JobNames",
      "Name",
      "Tags"
    ]
  },
  "AWS::DataPipeline::Pipeline": {
    "full_properties": {
      "Activate": {
        "description": "Indicates whether to validate and start the pipeline or stop an active pipeline. By default, the value is set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the pipeline.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParameterObjects": {
        "description": "The parameter objects used with the pipeline.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ParameterValues": {
        "description": "The parameter values used with the pipeline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PipelineObjects": {
        "description": "The objects that define the pipeline. These objects overwrite the existing pipeline definition. Not all objects, fields, and values can be updated. For information about restrictions, see Editing Your Pipeline in the AWS Data Pipeline Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PipelineTags": {
        "description": "A list of arbitrary tags (key-value pairs) to associate with the pipeline, which you can use to control permissions. For more information, see Controlling Access to Pipelines and Resources in the AWS Data Pipeline Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datapipeline-pipeline.html",
    "properties": [
      "Activate",
      "Description",
      "Name",
      "ParameterObjects",
      "ParameterValues",
      "PipelineObjects",
      "PipelineTags"
    ]
  },
  "AWS::DataSync::Agent": {
    "full_properties": {
      "ActivationKey": {
        "description": "Your agent activation key. You can get the activation key either by sending an HTTP GET request with redirects that enable you to get the agent IP address (port 80). Alternatively, you can get it from the DataSync console.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AgentName": {
        "description": "The name you configured for your agent. This value is a text reference that is used to identify the agent in the console.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupArns": {
        "description": "The Amazon Resource Names (ARNs) of the security groups used to protect your data transfer task subnets. See SecurityGroupArns.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubnetArns": {
        "description": "The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task. The agent that runs a task must be private. When you start a task that is associated with an agent created in a VPC, or one that has access to an IP address in a VPC, then the task is also private. In this case, DataSync creates four network interfaces for each task in your subnet. For a data transfer to work, the agent must be able to route to all these four network interfaces.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key-value pair that represents the tag that you want to associate with the agent. The value can be an empty string. This value helps you manage, filter, and search for your agents.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcEndpointId": {
        "description": "The ID of the virtual private cloud (VPC) endpoint that the agent has access to. This is the client-side VPC endpoint, powered by AWS PrivateLink. If you don't have an AWS PrivateLink  VPC endpoint, see AWS PrivateLink and VPC endpoints in the Amazon VPC User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-datasync-agent.html",
    "properties": [
      "ActivationKey",
      "AgentName",
      "SecurityGroupArns",
      "SubnetArns",
      "Tags",
      "VpcEndpointId"
    ]
  },
  "AWS::DataSync::LocationEFS": {
    "full_properties": {
      "AccessPointArn": {
        "description": "Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ec2Config": {
        "description": "Specifies the subnet and security groups DataSync uses to access your Amazon EFS file system.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EfsFilesystemArn": {
        "description": "Specifies the ARN for the Amazon EFS file system.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FileSystemAccessRoleArn": {
        "description": "Specifies an AWS Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InTransitEncryption": {
        "description": "Specifies whether you want DataSync to use Transport Layer Security (TLS) 1.2 encryption when it copies data to or from the Amazon EFS file system.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "Specifies a mount path for your Amazon EFS file system. This is where DataSync reads or writes data (depending on if this is a source or destination location). By default, DataSync uses the root directory, but you can also include subdirectories.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies the key-value pair that represents a tag that you want to add to the resource. The value can be an empty string. This value helps you manage, filter, and search for your resources. We recommend that you create a name tag for your location.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationefs.html",
    "properties": [
      "AccessPointArn",
      "Ec2Config",
      "EfsFilesystemArn",
      "FileSystemAccessRoleArn",
      "InTransitEncryption",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationFSxLustre": {
    "full_properties": {
      "FsxFilesystemArn": {
        "description": "The Amazon Resource Name (ARN) for the FSx for Lustre file system.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroupArns": {
        "description": "The ARNs of the security groups that are used to configure the FSx for Lustre file system.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "A subdirectory in the location's path. This subdirectory in the FSx for Lustre file system is used to read data from the FSx for Lustre source location or write data to the FSx for Lustre  destination.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key-value pair that represents a tag that you want to add to the resource. The value can be an empty string. This value helps you manage, filter, and search for your resources. We recommend that you create a name tag for your location.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationfsxlustre.html",
    "properties": [
      "FsxFilesystemArn",
      "SecurityGroupArns",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationFSxONTAP": {
    "full_properties": {
      "Protocol": {
        "description": "Specifies the data transfer protocol that DataSync uses to access your Amazon FSx file system.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SecurityGroupArns": {
        "description": "Specifies the Amazon Resource Names (ARNs) of the security groups that DataSync can use to access your FSx for ONTAP file system. You must configure the security groups to allow outbound traffic on the following ports (depending on the protocol that you're using):",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "StorageVirtualMachineArn": {
        "description": "Specifies the ARN of the storage virtual machine (SVM) on your file system where you're copying data to or from.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "Specifies the junction path (also known as a mount point) in the SVM volume where you're copying data to or from (for example, /vol1).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies labels that help you categorize, filter, and search for your AWS resources. We recommend creating at least a name tag for your location.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationfsxontap.html",
    "properties": [
      "Protocol",
      "SecurityGroupArns",
      "StorageVirtualMachineArn",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationFSxOpenZFS": {
    "full_properties": {
      "FsxFilesystemArn": {
        "description": "The Amazon Resource Name (ARN) of the FSx for OpenZFS file system.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Protocol": {
        "description": "The type of protocol that AWS DataSync uses to access your file system.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SecurityGroupArns": {
        "description": "The ARNs of the security groups that are used to configure the FSx for OpenZFS file system.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "A subdirectory in the location's path that must begin with /fsx. DataSync uses this subdirectory to read or write data (depending on whether the file system is a source or destination location).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key-value pair that represents a tag that you want to add to the resource. The value can be an empty string. This value helps you manage, filter, and search for your resources. We recommend that you create a name tag for your location.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationfsxopenzfs.html",
    "properties": [
      "FsxFilesystemArn",
      "Protocol",
      "SecurityGroupArns",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationFSxWindows": {
    "full_properties": {
      "Domain": {
        "description": "Specifies the name of the Windows domain that the FSx for Windows File Server belongs to.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FsxFilesystemArn": {
        "description": "Specifies the Amazon Resource Name (ARN) for the FSx for Windows File Server file system.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Password": {
        "description": "Specifies the password of the user who has the permissions to access files and folders in the file system.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroupArns": {
        "description": "The Amazon Resource Names (ARNs) of the security groups that are used to configure the FSx for Windows File Server file system.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "Specifies a mount path for your file system using forward slashes. This is where DataSync reads or writes data (depending on if this is a source or destination location).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies labels that help you categorize, filter, and search for your AWS resources. We recommend creating at least a name tag for your location.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "User": {
        "description": "The user who has the permissions to access files and folders in the FSx for Windows File Server file system.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-datasync-locationfsxwindows.html",
    "properties": [
      "Domain",
      "FsxFilesystemArn",
      "Password",
      "SecurityGroupArns",
      "Subdirectory",
      "Tags",
      "User"
    ]
  },
  "AWS::DataSync::LocationHDFS": {
    "full_properties": {
      "AgentArns": {
        "description": "The Amazon Resource Names (ARNs) of the agents that are used to connect to the HDFS cluster.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "AuthenticationType": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "BlockSize": {
        "description": "The size of data blocks to write into the HDFS cluster. The block size must be a multiple of 512 bytes. The default block size is 128 mebibytes (MiB).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "KerberosKeytab": {
        "description": "The Kerberos key table (keytab) that contains mappings between the defined Kerberos principal and the encrypted keys. Provide the base64-encoded file text. If KERBEROS is specified for AuthType, this value is required.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KerberosKrb5Conf": {
        "description": "The krb5.conf file that contains the Kerberos configuration information. You can load the krb5.conf by providing a string of the file's contents or an Amazon S3 presigned URL of the file. IfKERBEROS is specified for AuthType, this value is required.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KerberosPrincipal": {
        "description": "The Kerberos principal with access to the files and folders on the HDFS cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyProviderUri": {
        "description": "The URI of the HDFS cluster's Key Management Server (KMS).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NameNodes": {
        "description": "The NameNode that manages the HDFS namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes. You can use only one NameNode.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "QopConfiguration": {
        "description": "The Quality of Protection (QOP) configuration specifies the Remote Procedure Call (RPC) and data transfer protection settings configured on the Hadoop Distributed File System (HDFS) cluster. If QopConfiguration isn't specified, RpcProtection and DataTransferProtection default to PRIVACY. If you set RpcProtection or DataTransferProtection, the other parameter assumes the same value.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ReplicationFactor": {
        "description": "The number of DataNodes to replicate the data to when writing to the HDFS cluster. By default, data is replicated to three DataNodes.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SimpleUser": {
        "description": "The user name used to identify the client on the host operating system.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Subdirectory": {
        "description": "A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn't specified, it will default to /.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The key-value pair that represents the tag that you want to add to the location. The value can be an empty string. We recommend using tags to name your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationhdfs.html",
    "properties": [
      "AgentArns",
      "AuthenticationType",
      "BlockSize",
      "KerberosKeytab",
      "KerberosKrb5Conf",
      "KerberosPrincipal",
      "KmsKeyProviderUri",
      "NameNodes",
      "QopConfiguration",
      "ReplicationFactor",
      "SimpleUser",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationNFS": {
    "full_properties": {
      "MountOptions": {
        "description": "The NFS mount options that DataSync can use to mount your NFS share.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OnPremConfig": {
        "description": "Contains a list of Amazon Resource Names (ARNs) of agents that are used to connect to an NFS server.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServerHostname": {
        "description": "The name of the NFS server. This value is the IP address or Domain Name Service (DNS) name of the NFS server. An agent that is installed on-premises uses this hostname to mount the NFS server in a network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination. The NFS path should be a path that's exported by the NFS server, or a subdirectory of that path. The path should be such that it can be mounted by other NFS clients in your network.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The key-value pair that represents the tag that you want to add to the location. The value can be an empty string. We recommend using tags to name your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationnfs.html",
    "properties": [
      "MountOptions",
      "OnPremConfig",
      "ServerHostname",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationObjectStorage": {
    "full_properties": {
      "AccessKey": {
        "description": "Specifies the access key (for example, a user name) if credentials are required to authenticate with the object storage server.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AgentArns": {
        "description": "Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can securely connect with your location.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "BucketName": {
        "description": "Specifies the name of the object storage bucket involved in the transfer.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecretKey": {
        "description": "Specifies the secret key (for example, a password) if credentials are required to authenticate with the object storage server.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ServerHostname": {
        "description": "Specifies the domain name or IP address of the object storage server. A DataSync agent uses this hostname to mount the object storage server in a network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServerPort": {
        "description": "Specifies the port that your object storage server accepts inbound network traffic on (for example, port 443).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ServerProtocol": {
        "description": "Specifies the protocol that your object storage server uses to communicate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Subdirectory": {
        "description": "Specifies the object prefix for your object storage server. If this is a source location, DataSync only copies objects with this prefix. If this is a destination location, DataSync writes all objects with this prefix.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies the key-value pair that represents a tag that you want to add to the resource. Tags can help you manage, filter, and search for your resources. We recommend creating a name tag for your location.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationobjectstorage.html",
    "properties": [
      "AccessKey",
      "AgentArns",
      "BucketName",
      "SecretKey",
      "ServerHostname",
      "ServerPort",
      "ServerProtocol",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationS3": {
    "full_properties": {
      "S3BucketArn": {
        "description": "The ARN of the Amazon S3 bucket.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "S3Config": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that is used to access an Amazon S3 bucket.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "S3StorageClass": {
        "description": "The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. For buckets in AWS Regions, the storage class defaults to S3 Standard.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key-value pair that represents the tag that you want to add to the location. The value can be an empty string. We recommend using tags to name your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locations3.html",
    "properties": [
      "S3BucketArn",
      "S3Config",
      "S3StorageClass",
      "Subdirectory",
      "Tags"
    ]
  },
  "AWS::DataSync::LocationSMB": {
    "full_properties": {
      "AgentArns": {
        "description": "The Amazon Resource Names (ARNs) of agents to use for a Server Message Block (SMB) location.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Domain": {
        "description": "The name of the Windows domain that the SMB server belongs to.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MountOptions": {
        "description": "The mount options used by DataSync to access the SMB server.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Password": {
        "description": "The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerHostname": {
        "description": "The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server. An agent that is installed on-premises uses this hostname to mount the SMB server in a network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subdirectory": {
        "description": "The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination. The SMB path should be a path that's exported by the SMB server, or a subdirectory of that path. The path should be such that it can be mounted by other SMB clients in your network.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The key-value pair that represents the tag that you want to add to the location. The value can be an empty string. We recommend using tags to name your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "User": {
        "description": "The user who can mount the share and has the permissions to access files and folders in the SMB share.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-locationsmb.html",
    "properties": [
      "AgentArns",
      "Domain",
      "MountOptions",
      "Password",
      "ServerHostname",
      "Subdirectory",
      "Tags",
      "User"
    ]
  },
  "AWS::DataSync::Task": {
    "full_properties": {
      "CloudWatchLogGroupArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch log group that is used to monitor and log events in the task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationLocationArn": {
        "description": "The Amazon Resource Name (ARN) of an AWS storage resource's location.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Excludes": {
        "description": "A list of filter rules that determines which files to exclude from a task. The list should contain a single filter string that consists of the patterns to exclude. The patterns are delimited by \"|\" (that is, a pipe), for example, \"/folder1|/folder2\".",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Includes": {
        "description": "A list of filter rules that determines which files to include when running a task. The pattern contains a single filter string that consists of the patterns to include. The patterns are delimited by \"|\" (that is, a pipe), for example, \"/folder1|/folder2\".",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of a task. This value is a text reference that is used to identify the task in the console.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Options": {
        "description": "The set of configuration options that control the behavior of a single execution of the task that occurs when you call StartTaskExecution. You can configure these options to preserve metadata such as user ID (UID) and group ID (GID), file permissions, data integrity verification, and so on.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "Specifies a schedule used to periodically transfer files from a source to a destination location. The schedule should be specified in UTC time. For more information, see Scheduling your task.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SourceLocationArn": {
        "description": "The Amazon Resource Name (ARN) of the source location for the task.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key-value pair that represents the tag that you want to add to the resource. The value can be an empty string.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datasync-task.html",
    "properties": [
      "CloudWatchLogGroupArn",
      "DestinationLocationArn",
      "Excludes",
      "Includes",
      "Name",
      "Options",
      "Schedule",
      "SourceLocationArn",
      "Tags"
    ]
  },
  "AWS::Detective::Graph": {
    "full_properties": {
      "Tags": {
        "description": "The tag values to assign to the new behavior graph.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-detective-graph.html",
    "properties": [
      "Tags"
    ]
  },
  "AWS::Detective::MemberInvitation": {
    "full_properties": {
      "DisableEmailNotification": {
        "description": "Whether to send an invitation email to the member account. If set to true, the member account does not receive an invitation email.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "GraphArn": {
        "description": "The ARN of the behavior graph to invite the account to contribute data to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MemberEmailAddress": {
        "description": "The root user email address of the invited account. If the email address provided is not the root user email address for the provided account, the invitation creation fails.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MemberId": {
        "description": "The AWS account identifier of the invited account",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Message": {
        "description": "Customized text to include in the invitation email message.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-detective-memberinvitation.html",
    "properties": [
      "DisableEmailNotification",
      "GraphArn",
      "MemberEmailAddress",
      "MemberId",
      "Message"
    ]
  },
  "AWS::DevOpsGuru::NotificationChannel": {
    "full_properties": {
      "Config": {
        "description": "A NotificationChannelConfig object that contains information about configured notification channels.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-devopsguru-notificationchannel.html",
    "properties": [
      "Config"
    ]
  },
  "AWS::DevOpsGuru::ResourceCollection": {
    "full_properties": {
      "ResourceCollectionFilter": {
        "description": "Information about a filter used to specify which AWS resources are analyzed for anomalous behavior by DevOps Guru.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-devopsguru-resourcecollection.html",
    "properties": [
      "ResourceCollectionFilter"
    ]
  },
  "AWS::DeviceFarm::DevicePool": {
    "full_properties": {
      "Description": {
        "description": "The device pool's description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxDevices": {
        "description": "The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the rules parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The device pool's name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProjectArn": {
        "description": "The ARN of the project for the device pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "The device pool's rules.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-devicefarm-devicepool.html",
    "properties": [
      "Description",
      "MaxDevices",
      "Name",
      "ProjectArn",
      "Rules",
      "Tags"
    ]
  },
  "AWS::DeviceFarm::InstanceProfile": {
    "full_properties": {
      "Description": {
        "description": "The description of the instance profile.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExcludeAppPackagesFromCleanup": {
        "description": "An array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the instance profile.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PackageCleanup": {
        "description": "When set to true, Device Farm removes app packages after a test run. The default value is false for private devices.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RebootAfterUse": {
        "description": "When set to true, Device Farm reboots the instance after a test run. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-devicefarm-instanceprofile.html",
    "properties": [
      "Description",
      "ExcludeAppPackagesFromCleanup",
      "Name",
      "PackageCleanup",
      "RebootAfterUse",
      "Tags"
    ]
  },
  "AWS::DeviceFarm::NetworkProfile": {
    "full_properties": {
      "Description": {
        "description": "The description of the network profile.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DownlinkBandwidthBits": {
        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DownlinkDelayMs": {
        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DownlinkJitterMs": {
        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DownlinkLossPercent": {
        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the network profile.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProjectArn": {
        "description": "The Amazon Resource Name (ARN) of the specified project.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UplinkBandwidthBits": {
        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "UplinkDelayMs": {
        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "UplinkJitterMs": {
        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "UplinkLossPercent": {
        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-devicefarm-networkprofile.html",
    "properties": [
      "Description",
      "DownlinkBandwidthBits",
      "DownlinkDelayMs",
      "DownlinkJitterMs",
      "DownlinkLossPercent",
      "Name",
      "ProjectArn",
      "Tags",
      "UplinkBandwidthBits",
      "UplinkDelayMs",
      "UplinkJitterMs",
      "UplinkLossPercent"
    ]
  },
  "AWS::DeviceFarm::Project": {
    "full_properties": {
      "DefaultJobTimeoutMinutes": {
        "description": "Sets the execution timeout value (in minutes) for a project. All test runs in this project use the specified execution timeout value unless overridden when scheduling a run.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The project's name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-devicefarm-project.html",
    "properties": [
      "DefaultJobTimeoutMinutes",
      "Name",
      "Tags"
    ]
  },
  "AWS::DeviceFarm::TestGridProject": {
    "full_properties": {
      "Description": {
        "description": "A human-readable description for the project.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A human-readable name for the project.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "The VPC security groups and subnets that are attached to a project.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-devicefarm-testgridproject.html",
    "properties": [
      "Description",
      "Name",
      "Tags",
      "VpcConfig"
    ]
  },
  "AWS::DeviceFarm::VPCEConfiguration": {
    "full_properties": {
      "ServiceDnsName": {
        "description": "The DNS name that Device Farm will use to map to the private service you want to access.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpceConfigurationDescription": {
        "description": "An optional description that provides details about your VPC endpoint configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpceConfigurationName": {
        "description": "The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "VpceServiceName": {
        "description": "The name of the VPC endpoint service that you want to access from Device Farm.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-devicefarm-vpceconfiguration.html",
    "properties": [
      "ServiceDnsName",
      "Tags",
      "VpceConfigurationDescription",
      "VpceConfigurationName",
      "VpceServiceName"
    ]
  },
  "AWS::DirectoryService::MicrosoftAD": {
    "full_properties": {
      "CreateAlias": {
        "description": "Specifies an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as http://<alias>.awsapps.com. By default, AWS CloudFormation does not create an alias.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Edition": {
        "description": "AWS Managed Microsoft AD is available in two editions: Standard and Enterprise. Enterprise is the default.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableSso": {
        "description": "Whether to enable single sign-on for a Microsoft Active Directory in AWS. Single sign-on allows users in your directory to access certain AWS services from a computer joined to the directory without having to enter their credentials separately. If you don't specify a value, AWS CloudFormation disables single sign-on by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The fully qualified domain name for the AWS Managed Microsoft AD directory, such as corp.example.com. This name will resolve inside your VPC only. It does not need to be publicly resolvable.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Password": {
        "description": "The password for the default administrative user named Admin.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ShortName": {
        "description": "The NetBIOS name for your domain, such as CORP. If you don't specify a NetBIOS name, it will default to the first part of your directory DNS. For example, CORP for the directory DNS corp.example.com.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcSettings": {
        "description": "Specifies the VPC settings of the Microsoft AD directory server in AWS.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-directoryservice-microsoftad.html",
    "properties": [
      "CreateAlias",
      "Edition",
      "EnableSso",
      "Name",
      "Password",
      "ShortName",
      "VpcSettings"
    ]
  },
  "AWS::DirectoryService::SimpleAD": {
    "full_properties": {
      "CreateAlias": {
        "description": "If set to true, specifies an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as http://<alias>.awsapps.com. By default, this property is set to false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description for the directory.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableSso": {
        "description": "Whether to enable single sign-on for a directory. If you don't specify a value, AWS CloudFormation disables single sign-on by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The fully qualified name for the directory, such as corp.example.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Password": {
        "description": "The password for the directory administrator. The directory creation process creates a directory administrator account with the user name Administrator and this password.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ShortName": {
        "description": "The NetBIOS name of the directory, such as CORP.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Size": {
        "description": "The size of the directory. For valid values, see CreateDirectory in the AWS Directory Service API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcSettings": {
        "description": "A DirectoryVpcSettings object that contains additional information for the operation.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-directoryservice-simplead.html",
    "properties": [
      "CreateAlias",
      "Description",
      "EnableSso",
      "Name",
      "Password",
      "ShortName",
      "Size",
      "VpcSettings"
    ]
  },
  "AWS::DocDB::DBCluster": {
    "full_properties": {
      "AvailabilityZones": {
        "description": "A list of Amazon EC2 Availability Zones that instances in the cluster can be created in.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "BackupRetentionPeriod": {
        "description": "The number of days for which automated backups are retained. You must specify a minimum value of 1.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "CopyTagsToSnapshot": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DBClusterIdentifier": {
        "description": "The cluster identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterParameterGroupName": {
        "description": "The name of the cluster parameter group to associate with this cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "A subnet group to associate with this cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeletionProtection": {
        "description": "Protects clusters from being accidentally deleted. If enabled, the cluster cannot be deleted unless it is modified and DeletionProtection is disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnableCloudwatchLogsExports": {
        "description": "The list of log types that need to be enabled for exporting to Amazon CloudWatch Logs. You can enable audit logs or profiler logs. For more information, see Auditing Amazon DocumentDB Events and Profiling Amazon DocumentDB Operations.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EngineVersion": {
        "description": "The version number of the database engine to use. The --engine-version will default to the latest major engine version. For production workloads, we recommend explicitly declaring this parameter with the intended major engine version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The AWS KMS key identifier for an encrypted cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MasterUserPassword": {
        "description": "The password for the master database user. This password can contain any printable ASCII character except forward slash (/), double quote (\"), or the \"at\" symbol (@).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The name of the master user for the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "Specifies the port that the database engine is listening on.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PreferredBackupWindow": {
        "description": "The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RestoreToTime": {
        "description": "The date and time to restore the cluster to.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RestoreType": {
        "description": "The type of restore to be performed. You can specify one of the following values:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SnapshotIdentifier": {
        "description": "The identifier for the snapshot or cluster snapshot to restore from.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceDBClusterIdentifier": {
        "description": "The identifier of the source cluster from which to restore.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "Specifies whether the cluster is encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to be assigned to the cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UseLatestRestorableTime": {
        "description": "A value that is set to true to restore the cluster to the latest restorable backup time, and false otherwise.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "A list of EC2 VPC security groups to associate with this cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-docdb-dbcluster.html",
    "properties": [
      "AvailabilityZones",
      "BackupRetentionPeriod",
      "CopyTagsToSnapshot",
      "DBClusterIdentifier",
      "DBClusterParameterGroupName",
      "DBSubnetGroupName",
      "DeletionProtection",
      "EnableCloudwatchLogsExports",
      "EngineVersion",
      "KmsKeyId",
      "MasterUsername",
      "MasterUserPassword",
      "Port",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "RestoreToTime",
      "RestoreType",
      "SnapshotIdentifier",
      "SourceDBClusterIdentifier",
      "StorageEncrypted",
      "Tags",
      "UseLatestRestorableTime",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::DocDB::DBClusterParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "The description for the cluster parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "The cluster parameter group family name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the DB cluster parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "Provides a list of parameters for the cluster parameter group.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to be assigned to the cluster parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-docdb-dbclusterparametergroup.html",
    "properties": [
      "Description",
      "Family",
      "Name",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::DocDB::DBInstance": {
    "full_properties": {
      "AutoMinorVersionUpgrade": {
        "description": "This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Amazon EC2 Availability Zone that the instance is created in.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterIdentifier": {
        "description": "The identifier of the cluster that the instance will belong to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBInstanceClass": {
        "description": "The compute and memory capacity of the instance; for example, db.m4.large. If you change the class of an instance there can be some interruption in the cluster's service.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DBInstanceIdentifier": {
        "description": "The instance identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnablePerformanceInsights": {
        "description": "A value that indicates whether to enable Performance Insights for the DB Instance. For more information, see Using Amazon Performance Insights.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to be assigned to the instance. You can assign up to 10 tags to an instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-docdb-dbinstance.html",
    "properties": [
      "AutoMinorVersionUpgrade",
      "AvailabilityZone",
      "DBClusterIdentifier",
      "DBInstanceClass",
      "DBInstanceIdentifier",
      "EnablePerformanceInsights",
      "PreferredMaintenanceWindow",
      "Tags"
    ]
  },
  "AWS::DocDB::DBSubnetGroup": {
    "full_properties": {
      "DBSubnetGroupDescription": {
        "description": "The description for the subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "The name for the subnet group. This value is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The Amazon EC2 subnet IDs for the subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to be assigned to the subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-docdb-dbsubnetgroup.html",
    "properties": [
      "DBSubnetGroupDescription",
      "DBSubnetGroupName",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::DynamoDB::GlobalTable": {
    "full_properties": {
      "AttributeDefinitions": {
        "description": "A list of attributes that describe the key schema for the global table and indexes.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "BillingMode": {
        "description": "Specifies how you are charged for read and write throughput and how you manage capacity. Valid values are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalSecondaryIndexes": {
        "description": "Global secondary indexes to be created on the global table. You can create up to 20 global secondary indexes. Each replica in your global table will have the same global secondary index settings. You can only create or delete one global secondary index in a single stack operation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "KeySchema": {
        "description": "Specifies the attributes that make up the primary key for the table. The attributes in the KeySchema property must also be defined in the AttributeDefinitions property.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "LocalSecondaryIndexes": {
        "description": "Local secondary indexes to be created on the table. You can create up to five local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes. Each replica in your global table will have the same local secondary index settings.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Replicas": {
        "description": "Specifies the list of replicas for your global table. The list must contain at least one element, the region where the stack defining the global table is deployed. For example, if you define your table in a stack deployed to us-east-1, you must have an entry in Replicas with the region us-east-1. You cannot remove the replica in the stack region.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "SSESpecification": {
        "description": "Specifies the settings to enable server-side encryption. These settings will be applied to all replicas. If you plan to use customer-managed KMS keys, you must provide a key for each replica using the ReplicaSpecification.ReplicaSSESpecification property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StreamSpecification": {
        "description": "Specifies the streams settings on your global table. You must provide a value for this property if your global table contains more than one replica. You can only change the streams settings if your global table has only one replica.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TableName": {
        "description": "A name for the global table. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID as the table name. For more information, see Name type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TimeToLiveSpecification": {
        "description": "Specifies the time to live (TTL) settings for the table. This setting will be applied to all replicas.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WriteProvisionedThroughputSettings": {
        "description": "Specifies an auto scaling policy for write capacity. This policy will be applied to all replicas. This setting must be specified if BillingMode is set to PROVISIONED.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dynamodb-globaltable.html",
    "properties": [
      "AttributeDefinitions",
      "BillingMode",
      "GlobalSecondaryIndexes",
      "KeySchema",
      "LocalSecondaryIndexes",
      "Replicas",
      "SSESpecification",
      "StreamSpecification",
      "TableName",
      "TimeToLiveSpecification",
      "WriteProvisionedThroughputSettings"
    ]
  },
  "AWS::DynamoDB::Table": {
    "full_properties": {
      "AttributeDefinitions": {
        "description": "A list of attributes that describe the key schema for the table and indexes.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "BillingMode": {
        "description": "Specify how you are charged for read and write throughput and how you manage capacity.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ContributorInsightsSpecification": {
        "description": "The settings used to enable or disable CloudWatch Contributor Insights for the specified table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "GlobalSecondaryIndexes": {
        "description": "Global secondary indexes to be created on the table. You can create up to 20 global secondary indexes.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "unavailable",
          "none"
        ]
      },
      "ImportSourceSpecification": {
        "description": "Specifies the properties of data being imported from the S3 bucket source to the table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KeySchema": {
        "description": "Specifies the attributes that make up the primary key for the table. The attributes in the KeySchema property must also be defined in the AttributeDefinitions property.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KinesisStreamSpecification": {
        "description": "The Kinesis Data Streams configuration for the specified table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LocalSecondaryIndexes": {
        "description": "Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PointInTimeRecoverySpecification": {
        "description": "The settings used to enable point in time recovery.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ProvisionedThroughput": {
        "description": "Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits. For more information about the contents of a provisioned throughput structure, see Amazon DynamoDB Table ProvisionedThroughput.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SSESpecification": {
        "description": "Specifies the settings to enable server-side encryption.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "StreamSpecification": {
        "description": "The settings for the DynamoDB table stream, which capture changes to items stored in the table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TableClass": {
        "description": "The table class of the new table. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TableName": {
        "description": "A name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TimeToLiveSpecification": {
        "description": "Specifies the Time to Live (TTL) settings for the table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dynamodb-table.html",
    "properties": [
      "AttributeDefinitions",
      "BillingMode",
      "ContributorInsightsSpecification",
      "GlobalSecondaryIndexes",
      "ImportSourceSpecification",
      "KeySchema",
      "KinesisStreamSpecification",
      "LocalSecondaryIndexes",
      "PointInTimeRecoverySpecification",
      "ProvisionedThroughput",
      "SSESpecification",
      "StreamSpecification",
      "TableClass",
      "TableName",
      "Tags",
      "TimeToLiveSpecification"
    ]
  },
  "AWS::EC2::CapacityReservation": {
    "full_properties": {
      "AvailabilityZone": {
        "description": "The Availability Zone in which to create the Capacity Reservation.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EbsOptimized": {
        "description": "Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "EndDate": {
        "description": "The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EndDateType": {
        "description": "Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EphemeralStorage": {
        "description": "Deprecated.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "InstanceCount": {
        "description": "The number of instances for which to reserve capacity.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "InstanceMatchCriteria": {
        "description": "Indicates the type of instance launches that the Capacity Reservation accepts. The options include:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstancePlatform": {
        "description": "The type of operating system for which to reserve capacity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The instance type for which to reserve capacity. For more information, see Instance types in the Amazon EC2 User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutPostArn": {
        "description": "The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PlacementGroupArn": {
        "description": "The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation. For more information, see  Capacity Reservations for cluster placement groups in the Amazon EC2 User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TagSpecifications": {
        "description": "The tags to apply to the Capacity Reservation during launch.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tenancy": {
        "description": "Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-capacityreservation.html",
    "properties": [
      "AvailabilityZone",
      "EbsOptimized",
      "EndDate",
      "EndDateType",
      "EphemeralStorage",
      "InstanceCount",
      "InstanceMatchCriteria",
      "InstancePlatform",
      "InstanceType",
      "OutPostArn",
      "PlacementGroupArn",
      "TagSpecifications",
      "Tenancy"
    ]
  },
  "AWS::EC2::CapacityReservationFleet": {
    "full_properties": {
      "AllocationStrategy": {
        "description": "The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the prioritized allocation strategy is supported. For more information, see Allocation strategy in the Amazon EC2 User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EndDate": {
        "description": "The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to expired and all of the Capacity Reservations in the Fleet expire.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceMatchCriteria": {
        "description": "Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceTypeSpecifications": {
        "description": "Information about the instance types for which to reserve the capacity.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NoRemoveEndDate": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RemoveEndDate": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "TagSpecifications": {
        "description": "The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tenancy": {
        "description": "Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TotalTargetCapacity": {
        "description": "The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see Total target capacity in the Amazon EC2 User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-capacityreservationfleet.html",
    "properties": [
      "AllocationStrategy",
      "EndDate",
      "InstanceMatchCriteria",
      "InstanceTypeSpecifications",
      "NoRemoveEndDate",
      "RemoveEndDate",
      "TagSpecifications",
      "Tenancy",
      "TotalTargetCapacity"
    ]
  },
  "AWS::EC2::CarrierGateway": {
    "full_properties": {
      "Tags": {
        "description": "The tags assigned to the carrier gateway.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC associated with the carrier gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-carriergateway.html",
    "properties": [
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::ClientVpnAuthorizationRule": {
    "full_properties": {
      "AccessGroupId": {
        "description": "The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if AuthorizeAllGroups is false or not specified.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AuthorizeAllGroups": {
        "description": "Indicates whether to grant access to all clients. Specify true to grant all clients who successfully establish a VPN connection access to the network. Must be set to true if AccessGroupId is not specified.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ClientVpnEndpointId": {
        "description": "The ID of the Client VPN endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A brief description of the authorization rule.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetNetworkCidr": {
        "description": "The IPv4 address range, in CIDR notation, of the network for which access is being authorized.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-clientvpnauthorizationrule.html",
    "properties": [
      "AccessGroupId",
      "AuthorizeAllGroups",
      "ClientVpnEndpointId",
      "Description",
      "TargetNetworkCidr"
    ]
  },
  "AWS::EC2::ClientVpnEndpoint": {
    "full_properties": {
      "AuthenticationOptions": {
        "description": "Information about the authentication method to be used to authenticate clients.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ClientCidrBlock": {
        "description": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClientConnectOptions": {
        "description": "The options for managing connection authorization for new client connections.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ClientLoginBannerOptions": {
        "description": "Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConnectionLogOptions": {
        "description": "Information about the client connection logging options.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A brief description of the Client VPN endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DnsServers": {
        "description": "Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SelfServicePortal": {
        "description": "Specify whether to enable the self-service portal for the Client VPN endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ServerCertificateArn": {
        "description": "The ARN of the server certificate. For more information, see the AWS Certificate Manager User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SessionTimeoutHours": {
        "description": "The maximum VPN session duration time in hours.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SplitTunnel": {
        "description": "Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "TagSpecifications": {
        "description": "The tags to apply to the Client VPN endpoint during creation.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TransportProtocol": {
        "description": "The transport protocol to be used by the VPN session.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpnPort": {
        "description": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-clientvpnendpoint.html",
    "properties": [
      "AuthenticationOptions",
      "ClientCidrBlock",
      "ClientConnectOptions",
      "ClientLoginBannerOptions",
      "ConnectionLogOptions",
      "Description",
      "DnsServers",
      "SecurityGroupIds",
      "SelfServicePortal",
      "ServerCertificateArn",
      "SessionTimeoutHours",
      "SplitTunnel",
      "TagSpecifications",
      "TransportProtocol",
      "VpcId",
      "VpnPort"
    ]
  },
  "AWS::EC2::ClientVpnRoute": {
    "full_properties": {
      "ClientVpnEndpointId": {
        "description": "The ID of the Client VPN endpoint to which to add the route.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A brief description of the route.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationCidrBlock": {
        "description": "The IPv4 address range, in CIDR notation, of the route destination. For example:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetVpcSubnetId": {
        "description": "The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-clientvpnroute.html",
    "properties": [
      "ClientVpnEndpointId",
      "Description",
      "DestinationCidrBlock",
      "TargetVpcSubnetId"
    ]
  },
  "AWS::EC2::ClientVpnTargetNetworkAssociation": {
    "full_properties": {
      "ClientVpnEndpointId": {
        "description": "The ID of the Client VPN endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet to associate with the Client VPN endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-clientvpntargetnetworkassociation.html",
    "properties": [
      "ClientVpnEndpointId",
      "SubnetId"
    ]
  },
  "AWS::EC2::CustomerGateway": {
    "full_properties": {
      "BgpAsn": {
        "description": "For devices that support BGP, the customer gateway's BGP ASN.",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "IpAddress": {
        "description": "This member has been deprecated. The Internet-routable IP address for the customer gateway's outside interface. The address must be static.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "One or more tags for the customer gateway.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of VPN connection that this customer gateway supports (ipsec.1).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-customergateway.html",
    "properties": [
      "BgpAsn",
      "IpAddress",
      "Tags",
      "Type"
    ]
  },
  "AWS::EC2::DHCPOptions": {
    "full_properties": {
      "DomainName": {
        "description": "This value is used to complete unqualified DNS hostnames. If you're using AmazonProvidedDNS in us-east-1, specify ec2.internal. If you're using AmazonProvidedDNS in another Region, specify region.compute.internal (for example, ap-northeast-1.compute.internal). Otherwise, specify a domain name (for example, MyCompany.com).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainNameServers": {
        "description": "The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS. The default is AmazonProvidedDNS. To have your instance receive a custom DNS hostname as specified in DomainName, you must set this property to a custom DNS server.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NetbiosNameServers": {
        "description": "The IPv4 addresses of up to four NetBIOS name servers.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NetbiosNodeType": {
        "description": "The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported).",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "NtpServers": {
        "description": "The IPv4 addresses of up to four Network Time Protocol (NTP) servers.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Any tags assigned to the DHCP options set.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-dhcpoptions.html",
    "properties": [
      "DomainName",
      "DomainNameServers",
      "NetbiosNameServers",
      "NetbiosNodeType",
      "NtpServers",
      "Tags"
    ]
  },
  "AWS::EC2::EC2Fleet": {
    "full_properties": {
      "Context": {
        "description": "Reserved.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExcessCapacityTerminationPolicy": {
        "description": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LaunchTemplateConfigs": {
        "description": "The configuration for the EC2 Fleet.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "OnDemandOptions": {
        "description": "Describes the configuration of On-Demand Instances in an EC2 Fleet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ReplaceUnhealthyInstances": {
        "description": "Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type maintain. For more information, see EC2 Fleet health checks in the Amazon EC2 User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "SpotOptions": {
        "description": "Describes the configuration of Spot Instances in an EC2 Fleet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TagSpecifications": {
        "description": "The key-value pair for tagging the EC2 Fleet request on creation. For more information, see Tagging your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TargetCapacitySpecification": {
        "description": "The number of units to request.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TerminateInstancesWithExpiration": {
        "description": "Indicates whether running instances should be terminated when the EC2 Fleet expires.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The fleet type. The default value is maintain.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidFrom": {
        "description": "The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidUntil": {
        "description": "The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-ec2fleet.html",
    "properties": [
      "Context",
      "ExcessCapacityTerminationPolicy",
      "LaunchTemplateConfigs",
      "OnDemandOptions",
      "ReplaceUnhealthyInstances",
      "SpotOptions",
      "TagSpecifications",
      "TargetCapacitySpecification",
      "TerminateInstancesWithExpiration",
      "Type",
      "ValidFrom",
      "ValidUntil"
    ]
  },
  "AWS::EC2::EIP": {
    "full_properties": {
      "Domain": {
        "description": "Indicates whether the Elastic IP address is for use with instances in a VPC or in EC2-Classic.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceId": {
        "description": "The ID of the instance.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "NetworkBorderGroup": {
        "description": "A unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PublicIpv4Pool": {
        "description": "The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Tags": {
        "description": "Any tags assigned to the Elastic IP address.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransferAddress": {
        "description": "The Elastic IP address you are accepting for transfer. You can only accept one transferred address. For more information on Elastic IP address transfers, see Transfer Elastic IP addresses in the Amazon Virtual Private Cloud User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-ec2-eip.html",
    "properties": [
      "Domain",
      "InstanceId",
      "NetworkBorderGroup",
      "PublicIpv4Pool",
      "Tags",
      "TransferAddress"
    ]
  },
  "AWS::EC2::EIPAssociation": {
    "full_properties": {
      "AllocationId": {
        "description": "[EC2-VPC] The allocation ID. This is required for EC2-VPC.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "EIP": {
        "description": "[EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "InstanceId": {
        "description": "The ID of the instance. The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "NetworkInterfaceId": {
        "description": "[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "PrivateIpAddress": {
        "description": "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-eip-association.html",
    "properties": [
      "AllocationId",
      "EIP",
      "InstanceId",
      "NetworkInterfaceId",
      "PrivateIpAddress"
    ]
  },
  "AWS::EC2::EgressOnlyInternetGateway": {
    "full_properties": {
      "VpcId": {
        "description": "The ID of the VPC for which to create the egress-only internet gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-egressonlyinternetgateway.html",
    "properties": [
      "VpcId"
    ]
  },
  "AWS::EC2::EnclaveCertificateIamRoleAssociation": {
    "full_properties": {
      "CertificateArn": {
        "description": "The ARN of the ACM certificate with which to associate the IAM role.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-enclavecertificateiamroleassociation.html",
    "properties": [
      "CertificateArn",
      "RoleArn"
    ]
  },
  "AWS::EC2::FlowLog": {
    "full_properties": {
      "DeliverLogsPermissionArn": {
        "description": "The ARN of the IAM role that allows Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationOptions": {
        "description": "The destination options. The following options are supported:",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LogDestination": {
        "description": "The destination for the flow log data. The meaning of this parameter depends on the destination type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogDestinationType": {
        "description": "The type of destination for the flow log data.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogFormat": {
        "description": "The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see Flow Log Records. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogGroupName": {
        "description": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MaxAggregationInterval": {
        "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "ResourceId": {
        "description": "The ID of the subnet, network interface, or VPC for which you want to create a flow log.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceType": {
        "description": "The type of resource to monitor.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to apply to the flow logs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TrafficType": {
        "description": "The type of traffic to monitor (accepted traffic, rejected traffic, or all traffic).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-flowlog.html",
    "properties": [
      "DeliverLogsPermissionArn",
      "DestinationOptions",
      "LogDestination",
      "LogDestinationType",
      "LogFormat",
      "LogGroupName",
      "MaxAggregationInterval",
      "ResourceId",
      "ResourceType",
      "Tags",
      "TrafficType"
    ]
  },
  "AWS::EC2::GatewayRouteTableAssociation": {
    "full_properties": {
      "GatewayId": {
        "description": "The ID of the gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RouteTableId": {
        "description": "The ID of the route table.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-gatewayroutetableassociation.html",
    "properties": [
      "GatewayId",
      "RouteTableId"
    ]
  },
  "AWS::EC2::Host": {
    "full_properties": {
      "AutoPlacement": {
        "description": "Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see Understanding auto-placement and affinity in the Amazon EC2 User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone in which to allocate the Dedicated Host.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "HostRecovery": {
        "description": "Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see  Host recovery in the Amazon EC2 User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceFamily": {
        "description": "The instance family supported by the Dedicated Host. For example, m5.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutpostArn": {
        "description": "The Amazon Resource Name (ARN) of the AWS Outpost on which the Dedicated Host is allocated.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-host.html",
    "properties": [
      "AutoPlacement",
      "AvailabilityZone",
      "HostRecovery",
      "InstanceFamily",
      "InstanceType",
      "OutpostArn"
    ]
  },
  "AWS::EC2::IPAM": {
    "full_properties": {
      "Description": {
        "description": "The description for the IPAM.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OperatingRegions": {
        "description": "The operating Regions for an IPAM. Operating Regions are AWS Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the AWS Regions you select as operating Regions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-ipam.html",
    "properties": [
      "Description",
      "OperatingRegions",
      "Tags"
    ]
  },
  "AWS::EC2::IPAMAllocation": {
    "full_properties": {
      "Cidr": {
        "description": "The CIDR you would like to allocate from the IPAM pool. Note the following:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description for the allocation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpamPoolId": {
        "description": "The ID of the IPAM pool from which you would like to allocate a CIDR.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetmaskLength": {
        "description": "The netmask length of the CIDR you would like to allocate from the IPAM pool. Note the following:",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-ipamallocation.html",
    "properties": [
      "Cidr",
      "Description",
      "IpamPoolId",
      "NetmaskLength"
    ]
  },
  "AWS::EC2::IPAMPool": {
    "full_properties": {
      "AddressFamily": {
        "description": "The address family of the pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AllocationDefaultNetmaskLength": {
        "description": "The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AllocationMaxNetmaskLength": {
        "description": "The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are  0 - 128.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AllocationMinNetmaskLength": {
        "description": "The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are  0 - 128.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AllocationResourceTags": {
        "description": "Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoImport": {
        "description": "If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AwsService": {
        "description": "Limits which service in AWS that the pool can be used in. \"ec2\", for example, allows users to use space for Elastic IP addresses and VPCs.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the IPAM pool.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IpamScopeId": {
        "description": "The ID of the scope in which you would like to create the IPAM pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Locale": {
        "description": "The locale of the IPAM pool. In IPAM, the locale is the AWS Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC’s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you choose an AWS Region for locale that has not been configured as an operating Region for the IPAM, you'll get an error.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisionedCidrs": {
        "description": "Information about the CIDRs provisioned to an IPAM pool.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PubliclyAdvertisable": {
        "description": "Determines if a pool is publicly advertisable. This option is not available for pools with AddressFamily set to ipv4.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "SourceIpamPoolId": {
        "description": "The ID of the source IPAM pool. You can use this option to create an IPAM pool within an existing source pool.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-ipampool.html",
    "properties": [
      "AddressFamily",
      "AllocationDefaultNetmaskLength",
      "AllocationMaxNetmaskLength",
      "AllocationMinNetmaskLength",
      "AllocationResourceTags",
      "AutoImport",
      "AwsService",
      "Description",
      "IpamScopeId",
      "Locale",
      "ProvisionedCidrs",
      "PubliclyAdvertisable",
      "SourceIpamPoolId",
      "Tags"
    ]
  },
  "AWS::EC2::IPAMScope": {
    "full_properties": {
      "Description": {
        "description": "The description of the scope.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IpamId": {
        "description": "The ID of the IPAM for which you're creating this scope.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-ipamscope.html",
    "properties": [
      "Description",
      "IpamId",
      "Tags"
    ]
  },
  "AWS::EC2::Instance": {
    "full_properties": {
      "AdditionalInfo": {
        "description": "This property is reserved for internal use. If you use it, the stack fails with this error: Bad property set: [Testing this property] (Service: AmazonEC2; Status Code: 400; Error Code: InvalidParameterCombination; Request ID: 0XXXXXX-49c7-4b40-8bcc-76885dcXXXXX).",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Affinity": {
        "description": "Indicates whether the instance is associated with a dedicated host. If you want the instance to always restart on the same host on which it was launched, specify host. If you want the instance to restart on any available host, but try to launch onto the last host it ran on (on a best-effort basis), specify default.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone of the instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BlockDeviceMappings": {
        "description": "The block device mapping entries that defines the block devices to attach to the instance at launch.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "CpuOptions": {
        "description": "The CPU options for the instance. For more information, see Optimize CPU options in the Amazon Elastic Compute Cloud User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "CreditSpecification": {
        "description": "The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use ModifyInstanceCreditSpecification. For more information, see Burstable performance instances in the Amazon EC2 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DisableApiTermination": {
        "description": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute. Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EbsOptimized": {
        "description": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.",
        "required": false,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "ElasticGpuSpecifications": {
        "description": "An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs in the Amazon EC2 User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ElasticInferenceAccelerators": {
        "description": "An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "EnclaveOptions": {
        "description": "Indicates whether the instance is enabled for AWS Nitro Enclaves.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "HibernationOptions": {
        "description": "Indicates whether an instance is enabled for hibernation. For more information, see Hibernate your instance in the Amazon EC2 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "HostId": {
        "description": "If you specify host for the Affinity property, the ID of a dedicated host that the instance is associated with. If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account. This type of launch is called an untargeted launch. Note that for untargeted launches, you must have a compatible, dedicated host available to successfully launch instances.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "HostResourceGroupArn": {
        "description": "The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IamInstanceProfile": {
        "description": "The name of an IAM instance profile. To create a new IAM instance profile, use the AWS::IAM::InstanceProfile resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageId": {
        "description": "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceInitiatedShutdownBehavior": {
        "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceType": {
        "description": "The instance type. For more information, see Instance types in the Amazon EC2 User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Ipv6AddressCount": {
        "description": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Ipv6Addresses": {
        "description": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "KernelId": {
        "description": "The ID of the kernel.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "KeyName": {
        "description": "The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LaunchTemplate": {
        "description": "The launch template to use to launch the instances. Any parameters that you specify in the AWS CloudFormation template override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LicenseSpecifications": {
        "description": "The license configurations.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Monitoring": {
        "description": "Specifies whether detailed monitoring is enabled for the instance. Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled. For more information about detailed monitoring, see Enable or turn off detailed monitoring for your instances in the Amazon EC2 User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NetworkInterfaces": {
        "description": "The network interfaces to associate with the instance.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PlacementGroupName": {
        "description": "The name of an existing placement group that you want to launch the instance into (cluster | partition | spread).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrivateDnsNameOptions": {
        "description": "The options for the instance hostname.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "PrivateIpAddress": {
        "description": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PropagateTagsToVolumeOnCreation": {
        "description": "Indicates whether to assign the tags from the instance to all of the volumes attached to the instance at launch. If you specify true and you assign tags to the instance, those tags are automatically assigned to all of the volumes that you attach to the instance at launch. If you specify false, those tags are not assigned to the attached volumes.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RamdiskId": {
        "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "SecurityGroupIds": {
        "description": "The IDs of the security groups. You can create a security group using CreateSecurityGroup.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "SecurityGroups": {
        "description": "[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SourceDestCheck": {
        "description": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is true, source/destination checks are enabled; otherwise, they are disabled. The default value is true. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SsmAssociations": {
        "description": "The SSM document and parameter values in AWS Systems Manager to associate with this instance. To use this property, you must specify an IAM instance profile role for the instance. For more information, see Create an IAM instance profile for Systems Manager in the AWS Systems Manager User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "[EC2-VPC] The ID of the subnet to launch the instance into.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to add to the instance. These tags are not applied to the EBS volumes, such as the root volume.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tenancy": {
        "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "UserData": {
        "description": "The user data script to make available to the instance. For more information, see Run commands on your Linux instance at launch and Run commands on your Windows instance at launch. If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Volumes": {
        "description": "The volumes to attach to the instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-instance.html",
    "properties": [
      "AdditionalInfo",
      "Affinity",
      "AvailabilityZone",
      "BlockDeviceMappings",
      "CpuOptions",
      "CreditSpecification",
      "DisableApiTermination",
      "EbsOptimized",
      "ElasticGpuSpecifications",
      "ElasticInferenceAccelerators",
      "EnclaveOptions",
      "HibernationOptions",
      "HostId",
      "HostResourceGroupArn",
      "IamInstanceProfile",
      "ImageId",
      "InstanceInitiatedShutdownBehavior",
      "InstanceType",
      "Ipv6AddressCount",
      "Ipv6Addresses",
      "KernelId",
      "KeyName",
      "LaunchTemplate",
      "LicenseSpecifications",
      "Monitoring",
      "NetworkInterfaces",
      "PlacementGroupName",
      "PrivateDnsNameOptions",
      "PrivateIpAddress",
      "PropagateTagsToVolumeOnCreation",
      "RamdiskId",
      "SecurityGroupIds",
      "SecurityGroups",
      "SourceDestCheck",
      "SsmAssociations",
      "SubnetId",
      "Tags",
      "Tenancy",
      "UserData",
      "Volumes"
    ]
  },
  "AWS::EC2::InternetGateway": {
    "full_properties": {
      "Tags": {
        "description": "Any tags to assign to the internet gateway.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-internetgateway.html",
    "properties": [
      "Tags"
    ]
  },
  "AWS::EC2::KeyPair": {
    "full_properties": {
      "KeyName": {
        "description": "A unique name for the key pair.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyType": {
        "description": "The type of key pair. Note that ED25519 keys are not supported for Windows instances.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PublicKeyMaterial": {
        "description": "The public key material. The PublicKeyMaterial property is used to import a key pair. If this property is not specified, then a new key pair will be created.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to apply to the key pair.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-keypair.html",
    "properties": [
      "KeyName",
      "KeyType",
      "PublicKeyMaterial",
      "Tags"
    ]
  },
  "AWS::EC2::LaunchTemplate": {
    "full_properties": {
      "LaunchTemplateData": {
        "description": "The information for the launch template.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LaunchTemplateName": {
        "description": "A name for the launch template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TagSpecifications": {
        "description": "The tags to apply to the launch template on creation. To tag the launch template, the resource type must be launch-template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VersionDescription": {
        "description": "A description for the first version of the launch template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-launchtemplate.html",
    "properties": [
      "LaunchTemplateData",
      "LaunchTemplateName",
      "TagSpecifications",
      "VersionDescription"
    ]
  },
  "AWS::EC2::LocalGatewayRoute": {
    "full_properties": {
      "DestinationCidrBlock": {
        "description": "The CIDR block used for destination matches.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LocalGatewayRouteTableId": {
        "description": "The ID of the local gateway route table.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LocalGatewayVirtualInterfaceGroupId": {
        "description": "The ID of the virtual interface group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-localgatewayroute.html",
    "properties": [
      "DestinationCidrBlock",
      "LocalGatewayRouteTableId",
      "LocalGatewayVirtualInterfaceGroupId"
    ]
  },
  "AWS::EC2::LocalGatewayRouteTableVPCAssociation": {
    "full_properties": {
      "LocalGatewayRouteTableId": {
        "description": "The ID of the local gateway route table.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags assigned to the association.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-localgatewayroutetablevpcassociation.html",
    "properties": [
      "LocalGatewayRouteTableId",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::NatGateway": {
    "full_properties": {
      "AllocationId": {
        "description": "[Public NAT gateway only] The allocation ID of the Elastic IP address that's associated with the NAT gateway. This property is required for a public NAT gateway and cannot be specified with a private NAT gateway.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConnectivityType": {
        "description": "Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet in which the NAT gateway is located.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the NAT gateway.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-natgateway.html",
    "properties": [
      "AllocationId",
      "ConnectivityType",
      "SubnetId",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkAcl": {
    "full_properties": {
      "Tags": {
        "description": "The tags for the network ACL.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC for the network ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-networkacl.html",
    "properties": [
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::NetworkAclEntry": {
    "full_properties": {
      "CidrBlock": {
        "description": "The IPv4 CIDR range to allow or deny, in CIDR notation (for example, 172.16.0.0/24). Requirement is conditional: You must specify the CidrBlock or Ipv6CidrBlock property.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Egress": {
        "description": "Whether this rule applies to egress traffic from the subnet (true) or ingress traffic to the subnet (false). By default, AWS CloudFormation specifies false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Icmp": {
        "description": "The Internet Control Message Protocol (ICMP) code and type. Requirement is conditional: Required if specifying 1 (ICMP) for the protocol parameter.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Ipv6CidrBlock": {
        "description": "The IPv6 network range to allow or deny, in CIDR notation. Requirement is conditional: You must specify the CidrBlock or Ipv6CidrBlock property.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkAclId": {
        "description": "The ID of the ACL for the entry.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortRange": {
        "description": "The range of port numbers for the UDP/TCP protocol. Conditional required if specifying 6 (TCP) or 17 (UDP) for the protocol parameter.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The IP protocol that the rule applies to. You must specify -1 or a protocol number. You can specify -1 for all protocols.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "RuleAction": {
        "description": "Whether to allow or deny traffic that matches the rule; valid values are \"allow\" or \"deny\".",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RuleNumber": {
        "description": "Rule number to assign to the entry, such as 100. ACL entries are processed in ascending order by rule number. Entries can't use the same rule number unless one is an egress rule and the other is an ingress rule.",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-networkaclentry.html",
    "properties": [
      "CidrBlock",
      "Egress",
      "Icmp",
      "Ipv6CidrBlock",
      "NetworkAclId",
      "PortRange",
      "Protocol",
      "RuleAction",
      "RuleNumber"
    ]
  },
  "AWS::EC2::NetworkInsightsAccessScope": {
    "full_properties": {
      "ExcludePaths": {
        "description": "The paths to exclude.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "MatchPaths": {
        "description": "The paths to match.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-networkinsightsaccessscope.html",
    "properties": [
      "ExcludePaths",
      "MatchPaths",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkInsightsAccessScopeAnalysis": {
    "full_properties": {
      "NetworkInsightsAccessScopeId": {
        "description": "The ID of the Network Access Scope.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-networkinsightsaccessscopeanalysis.html",
    "properties": [
      "NetworkInsightsAccessScopeId",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkInsightsAnalysis": {
    "full_properties": {
      "FilterInArns": {
        "description": "The Amazon Resource Names (ARN) of the resources that the path must traverse.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NetworkInsightsPathId": {
        "description": "The ID of the path.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to apply.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-networkinsightsanalysis.html",
    "properties": [
      "FilterInArns",
      "NetworkInsightsPathId",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkInsightsPath": {
    "full_properties": {
      "Destination": {
        "description": "The AWS resource that is the destination of the path.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationIp": {
        "description": "The IP address of the AWS resource that is the destination of the path.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationPort": {
        "description": "The destination port.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Protocol": {
        "description": "The protocol.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Source": {
        "description": "The AWS resource that is the source of the path.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceIp": {
        "description": "The IP address of the AWS resource that is the source of the path.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to add to the path.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-networkinsightspath.html",
    "properties": [
      "Destination",
      "DestinationIp",
      "DestinationPort",
      "Protocol",
      "Source",
      "SourceIp",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkInterface": {
    "full_properties": {
      "Description": {
        "description": "A description for the network interface.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GroupSet": {
        "description": "The security group IDs associated with this network interface.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InterfaceType": {
        "description": "The type of network interface. The default is interface. The supported values are efa and trunk.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ipv6AddressCount": {
        "description": "The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don't specify this property.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Ipv6Addresses": {
        "description": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you're specifying a number of IPv6 addresses, use the Ipv6AddressCount property and don't specify this property.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PrivateIpAddress": {
        "description": "Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the PrivateIpAddresses property.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrivateIpAddresses": {
        "description": "Assigns private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecondaryPrivateIpAddressCount": {
        "description": "The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using privateIpAddresses.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SourceDestCheck": {
        "description": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is true, source/destination checks are enabled; otherwise, they are disabled. The default value is true. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The ID of the subnet to associate with the network interface.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for this network interface.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-networkinterface.html",
    "properties": [
      "Description",
      "GroupSet",
      "InterfaceType",
      "Ipv6AddressCount",
      "Ipv6Addresses",
      "PrivateIpAddress",
      "PrivateIpAddresses",
      "SecondaryPrivateIpAddressCount",
      "SourceDestCheck",
      "SubnetId",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkInterfaceAttachment": {
    "full_properties": {
      "DeleteOnTermination": {
        "description": "Whether to delete the network interface when the instance terminates. By default, this value is set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DeviceIndex": {
        "description": "The network interface's position in the attachment order. For example, the first attached network interface has a DeviceIndex of 0.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of the instance to which you will attach the ENI.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkInterfaceId": {
        "description": "The ID of the ENI that you want to attach.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-network-interface-attachment.html",
    "properties": [
      "DeleteOnTermination",
      "DeviceIndex",
      "InstanceId",
      "NetworkInterfaceId"
    ]
  },
  "AWS::EC2::NetworkInterfacePermission": {
    "full_properties": {
      "AwsAccountId": {
        "description": "The AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkInterfaceId": {
        "description": "The ID of the network interface.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Permission": {
        "description": "The type of permission to grant: INSTANCE-ATTACH or EIP-ASSOCIATE.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-networkinterfacepermission.html",
    "properties": [
      "AwsAccountId",
      "NetworkInterfaceId",
      "Permission"
    ]
  },
  "AWS::EC2::PlacementGroup": {
    "full_properties": {
      "SpreadLevel": {
        "description": "The spread level for the placement group. Only Outpost placement groups can be spread across hosts.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Strategy": {
        "description": "The placement strategy.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-placementgroup.html",
    "properties": [
      "SpreadLevel",
      "Strategy"
    ]
  },
  "AWS::EC2::PrefixList": {
    "full_properties": {
      "AddressFamily": {
        "description": "The IP address type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Entries": {
        "description": "One or more entries for the prefix list.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaxEntries": {
        "description": "The maximum number of entries for the prefix list.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "PrefixListName": {
        "description": "A name for the prefix list.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the prefix list.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-prefixlist.html",
    "properties": [
      "AddressFamily",
      "Entries",
      "MaxEntries",
      "PrefixListName",
      "Tags"
    ]
  },
  "AWS::EC2::Route": {
    "full_properties": {
      "CarrierGatewayId": {
        "description": "The ID of the carrier gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationCidrBlock": {
        "description": "The IPv4 CIDR block used for the destination match.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationIpv6CidrBlock": {
        "description": "The IPv6 CIDR block used for the destination match.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EgressOnlyInternetGatewayId": {
        "description": "The ID of the egress-only internet gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GatewayId": {
        "description": "The ID of an internet gateway or virtual private gateway attached to your VPC.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of a NAT instance in your VPC.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LocalGatewayId": {
        "description": "The ID of the local gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NatGatewayId": {
        "description": "The ID of a NAT gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkInterfaceId": {
        "description": "The ID of the network interface.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RouteTableId": {
        "description": "The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayId": {
        "description": "The ID of a transit gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcEndpointId": {
        "description": "The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcPeeringConnectionId": {
        "description": "The ID of a VPC peering connection.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-route.html",
    "properties": [
      "CarrierGatewayId",
      "DestinationCidrBlock",
      "DestinationIpv6CidrBlock",
      "EgressOnlyInternetGatewayId",
      "GatewayId",
      "InstanceId",
      "LocalGatewayId",
      "NatGatewayId",
      "NetworkInterfaceId",
      "RouteTableId",
      "TransitGatewayId",
      "VpcEndpointId",
      "VpcPeeringConnectionId"
    ]
  },
  "AWS::EC2::RouteTable": {
    "full_properties": {
      "Tags": {
        "description": "Any tags assigned to the route table.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-routetable.html",
    "properties": [
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::SecurityGroup": {
    "full_properties": {
      "GroupDescription": {
        "description": "A description for the security group. This is informational only.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "GroupName": {
        "description": "The name of the security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroupEgress": {
        "description": "[VPC only] The outbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "SecurityGroupIngress": {
        "description": "The inbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "Tags": {
        "description": "Any tags assigned to the security group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "[VPC only] The ID of the VPC for the security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-ec2-security-group.html",
    "properties": [
      "GroupDescription",
      "GroupName",
      "SecurityGroupEgress",
      "SecurityGroupIngress",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::SecurityGroupEgress": {
    "full_properties": {
      "CidrIp": {
        "description": "The IPv4 address range, in CIDR format.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CidrIpv6": {
        "description": "The IPv6 address range, in CIDR format.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of an egress (outbound) security group rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationPrefixListId": {
        "description": "[EC2-VPC only] The prefix list IDs for an AWS service. This is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationSecurityGroupId": {
        "description": "The ID of the security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FromPort": {
        "description": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "GroupId": {
        "description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpProtocol": {
        "description": "The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ToPort": {
        "description": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-security-group-egress.html",
    "properties": [
      "CidrIp",
      "CidrIpv6",
      "Description",
      "DestinationPrefixListId",
      "DestinationSecurityGroupId",
      "FromPort",
      "GroupId",
      "IpProtocol",
      "ToPort"
    ]
  },
  "AWS::EC2::SecurityGroupIngress": {
    "full_properties": {
      "CidrIp": {
        "description": "The IPv4 address range, in CIDR format.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CidrIpv6": {
        "description": "The IPv6 address range, in CIDR format.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FromPort": {
        "description": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "GroupId": {
        "description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GroupName": {
        "description": "The name of the security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpProtocol": {
        "description": "The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourcePrefixListId": {
        "description": "[EC2-VPC only] The ID of a prefix list.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceSecurityGroupId": {
        "description": "The ID of the security group. You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceSecurityGroupName": {
        "description": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceSecurityGroupOwnerId": {
        "description": "[nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account. You can't specify this property with an IP address range. Creates rules that grant full ICMP, UDP, and TCP access.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ToPort": {
        "description": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-ec2-security-group-ingress.html",
    "properties": [
      "CidrIp",
      "CidrIpv6",
      "Description",
      "FromPort",
      "GroupId",
      "GroupName",
      "IpProtocol",
      "SourcePrefixListId",
      "SourceSecurityGroupId",
      "SourceSecurityGroupName",
      "SourceSecurityGroupOwnerId",
      "ToPort"
    ]
  },
  "AWS::EC2::SpotFleet": {
    "full_properties": {
      "SpotFleetRequestConfigData": {
        "description": "Describes the configuration of a Spot Fleet request.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-spotfleet.html",
    "properties": [
      "SpotFleetRequestConfigData"
    ]
  },
  "AWS::EC2::Subnet": {
    "full_properties": {
      "AssignIpv6AddressOnCreation": {
        "description": "Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone of the subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AvailabilityZoneId": {
        "description": "The AZ ID of the subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CidrBlock": {
        "description": "The IPv4 CIDR block assigned to the subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableDns64": {
        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. For more information, see DNS64 and NAT64 in the Amazon Virtual Private Cloud User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Ipv6CidrBlock": {
        "description": "The IPv6 CIDR block.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Ipv6Native": {
        "description": "Indicates whether this is an IPv6 only subnet. For more information, see Subnet basics in the Amazon Virtual Private Cloud User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "MapPublicIpOnLaunch": {
        "description": "Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "OutpostArn": {
        "description": "The Amazon Resource Name (ARN) of the Outpost.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrivateDnsNameOptionsOnLaunch": {
        "description": "The hostname type for EC2 instances launched into this subnet and how DNS A and AAAA record queries to the instances should be handled. For more information, see Amazon EC2 instance hostname types in the Amazon Elastic Compute Cloud User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Any tags assigned to the subnet.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC the subnet is in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnet.html",
    "properties": [
      "AssignIpv6AddressOnCreation",
      "AvailabilityZone",
      "AvailabilityZoneId",
      "CidrBlock",
      "EnableDns64",
      "Ipv6CidrBlock",
      "Ipv6Native",
      "MapPublicIpOnLaunch",
      "OutpostArn",
      "PrivateDnsNameOptionsOnLaunch",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::SubnetCidrBlock": {
    "full_properties": {
      "Ipv6CidrBlock": {
        "description": "The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnetcidrblock.html",
    "properties": [
      "Ipv6CidrBlock",
      "SubnetId"
    ]
  },
  "AWS::EC2::SubnetNetworkAclAssociation": {
    "full_properties": {
      "NetworkAclId": {
        "description": "The ID of the network ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnet-network-acl-assoc.html",
    "properties": [
      "NetworkAclId",
      "SubnetId"
    ]
  },
  "AWS::EC2::SubnetRouteTableAssociation": {
    "full_properties": {
      "RouteTableId": {
        "description": "The ID of the route table.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnetroutetableassociation.html",
    "properties": [
      "RouteTableId",
      "SubnetId"
    ]
  },
  "AWS::EC2::TrafficMirrorFilter": {
    "full_properties": {
      "Description": {
        "description": "The description of the Traffic Mirror filter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkServices": {
        "description": "The network service traffic that is associated with the Traffic Mirror filter.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to a Traffic Mirror filter.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-trafficmirrorfilter.html",
    "properties": [
      "Description",
      "NetworkServices",
      "Tags"
    ]
  },
  "AWS::EC2::TrafficMirrorFilterRule": {
    "full_properties": {
      "Description": {
        "description": "The description of the Traffic Mirror rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationCidrBlock": {
        "description": "The destination CIDR block to assign to the Traffic Mirror rule.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationPortRange": {
        "description": "The destination port range.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The protocol, for example UDP, to assign to the Traffic Mirror rule.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "RuleAction": {
        "description": "The action to take on the filtered traffic.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RuleNumber": {
        "description": "The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "SourceCidrBlock": {
        "description": "The source CIDR block to assign to the Traffic Mirror rule.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SourcePortRange": {
        "description": "The source port range.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TrafficDirection": {
        "description": "The type of traffic.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TrafficMirrorFilterId": {
        "description": "The ID of the filter that this rule is associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-trafficmirrorfilterrule.html",
    "properties": [
      "Description",
      "DestinationCidrBlock",
      "DestinationPortRange",
      "Protocol",
      "RuleAction",
      "RuleNumber",
      "SourceCidrBlock",
      "SourcePortRange",
      "TrafficDirection",
      "TrafficMirrorFilterId"
    ]
  },
  "AWS::EC2::TrafficMirrorSession": {
    "full_properties": {
      "Description": {
        "description": "The description of the Traffic Mirror session.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkInterfaceId": {
        "description": "The ID of the source network interface.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PacketLength": {
        "description": "The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SessionNumber": {
        "description": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to a Traffic Mirror session.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TrafficMirrorFilterId": {
        "description": "The ID of the Traffic Mirror filter.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TrafficMirrorTargetId": {
        "description": "The ID of the Traffic Mirror target.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "VirtualNetworkId": {
        "description": "The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see RFC 7348. If you do not specify a VirtualNetworkId, an account-wide unique id is chosen at random.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-trafficmirrorsession.html",
    "properties": [
      "Description",
      "NetworkInterfaceId",
      "PacketLength",
      "SessionNumber",
      "Tags",
      "TrafficMirrorFilterId",
      "TrafficMirrorTargetId",
      "VirtualNetworkId"
    ]
  },
  "AWS::EC2::TrafficMirrorTarget": {
    "full_properties": {
      "Description": {
        "description": "The description of the Traffic Mirror target.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GatewayLoadBalancerEndpointId": {
        "description": "The ID of the Gateway Load Balancer endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkInterfaceId": {
        "description": "The network interface ID that is associated with the target.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkLoadBalancerArn": {
        "description": "The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to assign to the Traffic Mirror target.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-trafficmirrortarget.html",
    "properties": [
      "Description",
      "GatewayLoadBalancerEndpointId",
      "NetworkInterfaceId",
      "NetworkLoadBalancerArn",
      "Tags"
    ]
  },
  "AWS::EC2::TransitGateway": {
    "full_properties": {
      "AmazonSideAsn": {
        "description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs. The default is 64512.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "AssociationDefaultRouteTableId": {
        "description": "The ID of the default association route table.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutoAcceptSharedAttachments": {
        "description": "Enable or disable automatic acceptance of attachment requests. Disabled by default.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultRouteTableAssociation": {
        "description": "Enable or disable automatic association with the default association route table. Enabled by default.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultRouteTablePropagation": {
        "description": "Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the transit gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DnsSupport": {
        "description": "Enable or disable DNS support. Enabled by default.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MulticastSupport": {
        "description": "Indicates whether multicast is enabled on the transit gateway",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PropagationDefaultRouteTableId": {
        "description": "The ID of the default propagation route table.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the transit gateway.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitGatewayCidrBlocks": {
        "description": "The transit gateway CIDR blocks.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpnEcmpSupport": {
        "description": "Enable or disable Equal Cost Multipath Protocol support. Enabled by default.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-transitgateway.html",
    "properties": [
      "AmazonSideAsn",
      "AssociationDefaultRouteTableId",
      "AutoAcceptSharedAttachments",
      "DefaultRouteTableAssociation",
      "DefaultRouteTablePropagation",
      "Description",
      "DnsSupport",
      "MulticastSupport",
      "PropagationDefaultRouteTableId",
      "Tags",
      "TransitGatewayCidrBlocks",
      "VpnEcmpSupport"
    ]
  },
  "AWS::EC2::TransitGatewayAttachment": {
    "full_properties": {
      "Options": {
        "description": "The VPC attachment options, in JSON or YAML.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SubnetIds": {
        "description": "The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the attachment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitGatewayId": {
        "description": "The ID of the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewayattachment.html",
    "properties": [
      "Options",
      "SubnetIds",
      "Tags",
      "TransitGatewayId",
      "VpcId"
    ]
  },
  "AWS::EC2::TransitGatewayConnect": {
    "full_properties": {
      "Options": {
        "description": "The Connect attachment options.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the attachment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransportTransitGatewayAttachmentId": {
        "description": "The ID of the attachment from which the Connect attachment was created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewayconnect.html",
    "properties": [
      "Options",
      "Tags",
      "TransportTransitGatewayAttachmentId"
    ]
  },
  "AWS::EC2::TransitGatewayMulticastDomain": {
    "full_properties": {
      "Options": {
        "description": "The options for the transit gateway multicast domain.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the transit gateway multicast domain.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitGatewayId": {
        "description": "The ID of the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewaymulticastdomain.html",
    "properties": [
      "Options",
      "Tags",
      "TransitGatewayId"
    ]
  },
  "AWS::EC2::TransitGatewayMulticastDomainAssociation": {
    "full_properties": {
      "SubnetId": {
        "description": "The IDs of the subnets to associate with the transit gateway multicast domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayAttachmentId": {
        "description": "The ID of the transit gateway attachment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayMulticastDomainId": {
        "description": "The ID of the transit gateway multicast domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewaymulticastdomainassociation.html",
    "properties": [
      "SubnetId",
      "TransitGatewayAttachmentId",
      "TransitGatewayMulticastDomainId"
    ]
  },
  "AWS::EC2::TransitGatewayMulticastGroupMember": {
    "full_properties": {
      "GroupIpAddress": {
        "description": "The IP address assigned to the  transit gateway multicast group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkInterfaceId": {
        "description": "The group members' network interface IDs to register with the  transit gateway multicast group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayMulticastDomainId": {
        "description": "The ID of the transit gateway multicast domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewaymulticastgroupmember.html",
    "properties": [
      "GroupIpAddress",
      "NetworkInterfaceId",
      "TransitGatewayMulticastDomainId"
    ]
  },
  "AWS::EC2::TransitGatewayMulticastGroupSource": {
    "full_properties": {
      "GroupIpAddress": {
        "description": "The IP address assigned to the  transit gateway multicast group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkInterfaceId": {
        "description": "The group sources' network interface IDs to register with the  transit gateway multicast group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayMulticastDomainId": {
        "description": "The ID of the transit gateway multicast domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewaymulticastgroupsource.html",
    "properties": [
      "GroupIpAddress",
      "NetworkInterfaceId",
      "TransitGatewayMulticastDomainId"
    ]
  },
  "AWS::EC2::TransitGatewayPeeringAttachment": {
    "full_properties": {
      "PeerAccountId": {
        "description": "The ID of the AWS account that owns the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerRegion": {
        "description": "The Region of the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerTransitGatewayId": {
        "description": "The ID of the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the transit gateway peering attachment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitGatewayId": {
        "description": "The ID of the transit gateway peering attachment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewaypeeringattachment.html",
    "properties": [
      "PeerAccountId",
      "PeerRegion",
      "PeerTransitGatewayId",
      "Tags",
      "TransitGatewayId"
    ]
  },
  "AWS::EC2::TransitGatewayRoute": {
    "full_properties": {
      "Blackhole": {
        "description": "Indicates whether to drop traffic that matches this route.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "DestinationCidrBlock": {
        "description": "The CIDR block used for destination matches.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayAttachmentId": {
        "description": "The ID of the attachment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayRouteTableId": {
        "description": "The ID of the transit gateway route table.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewayroute.html",
    "properties": [
      "Blackhole",
      "DestinationCidrBlock",
      "TransitGatewayAttachmentId",
      "TransitGatewayRouteTableId"
    ]
  },
  "AWS::EC2::TransitGatewayRouteTable": {
    "full_properties": {
      "Tags": {
        "description": "Any tags assigned to the route table.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TransitGatewayId": {
        "description": "The ID of the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewayroutetable.html",
    "properties": [
      "Tags",
      "TransitGatewayId"
    ]
  },
  "AWS::EC2::TransitGatewayRouteTableAssociation": {
    "full_properties": {
      "TransitGatewayAttachmentId": {
        "description": "The ID of the attachment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayRouteTableId": {
        "description": "The ID of the route table for the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewayroutetableassociation.html",
    "properties": [
      "TransitGatewayAttachmentId",
      "TransitGatewayRouteTableId"
    ]
  },
  "AWS::EC2::TransitGatewayRouteTablePropagation": {
    "full_properties": {
      "TransitGatewayAttachmentId": {
        "description": "The ID of the attachment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayRouteTableId": {
        "description": "The ID of the propagation route table.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewayroutetablepropagation.html",
    "properties": [
      "TransitGatewayAttachmentId",
      "TransitGatewayRouteTableId"
    ]
  },
  "AWS::EC2::TransitGatewayVpcAttachment": {
    "full_properties": {
      "AddSubnetIds": {
        "description": "The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Options": {
        "description": "The VPC attachment options, in JSON or YAML.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RemoveSubnetIds": {
        "description": "The IDs of one or more subnets to remove.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetIds": {
        "description": "The IDs of the subnets.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the VPC attachment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitGatewayId": {
        "description": "The ID of the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-transitgatewayvpcattachment.html",
    "properties": [
      "AddSubnetIds",
      "Options",
      "RemoveSubnetIds",
      "SubnetIds",
      "Tags",
      "TransitGatewayId",
      "VpcId"
    ]
  },
  "AWS::EC2::VPC": {
    "full_properties": {
      "CidrBlock": {
        "description": "The IPv4 network range for the VPC, in CIDR notation. For example, 10.0.0.0/16. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableDnsHostnames": {
        "description": "Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see DNS attributes in your VPC.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnableDnsSupport": {
        "description": "Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default. For more information, see DNS attributes in your VPC.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "InstanceTenancy": {
        "description": "The allowed tenancy of instances launched into the VPC.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Ipv4IpamPoolId": {
        "description": "The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see What is IPAM? in the Amazon VPC IPAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ipv4NetmaskLength": {
        "description": "The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the VPC.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-vpc.html",
    "properties": [
      "CidrBlock",
      "EnableDnsHostnames",
      "EnableDnsSupport",
      "InstanceTenancy",
      "Ipv4IpamPoolId",
      "Ipv4NetmaskLength",
      "Tags"
    ]
  },
  "AWS::EC2::VPCCidrBlock": {
    "full_properties": {
      "AmazonProvidedIpv6CidrBlock": {
        "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "CidrBlock": {
        "description": "An IPv4 CIDR block to associate with the VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ipv4IpamPoolId": {
        "description": "Associate a CIDR allocated from an IPv4 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see What is IPAM? in the Amazon VPC IPAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ipv4NetmaskLength": {
        "description": "The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Ipv6CidrBlock": {
        "description": "An IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ipv6IpamPoolId": {
        "description": "Associates a CIDR allocated from an IPv6 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see What is IPAM? in the Amazon VPC IPAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ipv6NetmaskLength": {
        "description": "The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Ipv6Pool": {
        "description": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpccidrblock.html",
    "properties": [
      "AmazonProvidedIpv6CidrBlock",
      "CidrBlock",
      "Ipv4IpamPoolId",
      "Ipv4NetmaskLength",
      "Ipv6CidrBlock",
      "Ipv6IpamPoolId",
      "Ipv6NetmaskLength",
      "Ipv6Pool",
      "VpcId"
    ]
  },
  "AWS::EC2::VPCDHCPOptionsAssociation": {
    "full_properties": {
      "DhcpOptionsId": {
        "description": "The ID of the DHCP options set, or default to associate no DHCP options with the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpcdhcpoptionsassociation.html",
    "properties": [
      "DhcpOptionsId",
      "VpcId"
    ]
  },
  "AWS::EC2::VPCEndpoint": {
    "full_properties": {
      "PolicyDocument": {
        "description": "A policy that controls access to the service from the VPC. If this parameter is not specified, the default policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PrivateDnsEnabled": {
        "description": "Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, kinesis.us-east-1.amazonaws.com), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RouteTableIds": {
        "description": "The route table IDs. Routing is supported only for gateway endpoints.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "The IDs of the security groups to associate with the endpoint network interface. Security groups are supported only for interface endpoints.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceName": {
        "description": "The service name. To list the available services, use DescribeVpcEndpointServices. Otherwise, get the name from the service provider.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The ID of the subnets in which to create an endpoint network interface. You must specify this property for an interface endpoints or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcEndpointType": {
        "description": "The type of endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC in which the endpoint will be used.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpcendpoint.html",
    "properties": [
      "PolicyDocument",
      "PrivateDnsEnabled",
      "RouteTableIds",
      "SecurityGroupIds",
      "ServiceName",
      "SubnetIds",
      "VpcEndpointType",
      "VpcId"
    ]
  },
  "AWS::EC2::VPCEndpointConnectionNotification": {
    "full_properties": {
      "ConnectionEvents": {
        "description": "One or more endpoint events for which to receive notifications. Valid values are Accept, Connect, Delete, and Reject.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ConnectionNotificationArn": {
        "description": "The ARN of the SNS topic for the notifications.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServiceId": {
        "description": "The ID of the endpoint service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VPCEndpointId": {
        "description": "The ID of the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpcendpointconnectionnotification.html",
    "properties": [
      "ConnectionEvents",
      "ConnectionNotificationArn",
      "ServiceId",
      "VPCEndpointId"
    ]
  },
  "AWS::EC2::VPCEndpointService": {
    "full_properties": {
      "AcceptanceRequired": {
        "description": "Indicates whether requests from service consumers to create an endpoint to your service must be accepted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ContributorInsightsEnabled": {
        "description": "Indicates whether to enable the built-in Contributor Insights rules.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "GatewayLoadBalancerArns": {
        "description": "The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "NetworkLoadBalancerArns": {
        "description": "The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PayerResponsibility": {
        "description": "The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-vpcendpointservice.html",
    "properties": [
      "AcceptanceRequired",
      "ContributorInsightsEnabled",
      "GatewayLoadBalancerArns",
      "NetworkLoadBalancerArns",
      "PayerResponsibility"
    ]
  },
  "AWS::EC2::VPCEndpointServicePermissions": {
    "full_properties": {
      "AllowedPrincipals": {
        "description": "The Amazon Resource Names (ARN) of one or more principals (IAM users, IAM roles, and AWS accounts). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceId": {
        "description": "The ID of the service.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpcendpointservicepermissions.html",
    "properties": [
      "AllowedPrincipals",
      "ServiceId"
    ]
  },
  "AWS::EC2::VPCGatewayAttachment": {
    "full_properties": {
      "InternetGatewayId": {
        "description": "The ID of the internet gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "VpnGatewayId": {
        "description": "The ID of the virtual private gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-vpc-gateway-attachment.html",
    "properties": [
      "InternetGatewayId",
      "VpcId",
      "VpnGatewayId"
    ]
  },
  "AWS::EC2::VPCPeeringConnection": {
    "full_properties": {
      "PeerOwnerId": {
        "description": "The AWS account ID of the owner of the accepter VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerRegion": {
        "description": "The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerVpcId": {
        "description": "The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Any tags assigned to the resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpcpeeringconnection.html",
    "properties": [
      "PeerOwnerId",
      "PeerRegion",
      "PeerRoleArn",
      "PeerVpcId",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::VPNConnection": {
    "full_properties": {
      "CustomerGatewayId": {
        "description": "The ID of the customer gateway at your end of the VPN connection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StaticRoutesOnly": {
        "description": "Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Any tags assigned to the VPN connection.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitGatewayId": {
        "description": "The ID of the transit gateway associated with the VPN connection.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of VPN connection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpnGatewayId": {
        "description": "The ID of the virtual private gateway at the AWS side of the VPN connection.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpnTunnelOptionsSpecifications": {
        "description": "The tunnel options for the VPN connection.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpnconnection.html",
    "properties": [
      "CustomerGatewayId",
      "StaticRoutesOnly",
      "Tags",
      "TransitGatewayId",
      "Type",
      "VpnGatewayId",
      "VpnTunnelOptionsSpecifications"
    ]
  },
  "AWS::EC2::VPNConnectionRoute": {
    "full_properties": {
      "DestinationCidrBlock": {
        "description": "The CIDR block associated with the local subnet of the customer network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpnConnectionId": {
        "description": "The ID of the VPN connection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpn-connection-route.html",
    "properties": [
      "DestinationCidrBlock",
      "VpnConnectionId"
    ]
  },
  "AWS::EC2::VPNGateway": {
    "full_properties": {
      "AmazonSideAsn": {
        "description": "The private Autonomous System Number (ASN) for the Amazon side of a BGP session.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Any tags assigned to the virtual private gateway.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of VPN connection the virtual private gateway supports.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpngateway.html",
    "properties": [
      "AmazonSideAsn",
      "Tags",
      "Type"
    ]
  },
  "AWS::EC2::VPNGatewayRoutePropagation": {
    "full_properties": {
      "RouteTableIds": {
        "description": "The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "VpnGatewayId": {
        "description": "The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-vpngatewayroutepropagation.html",
    "properties": [
      "RouteTableIds",
      "VpnGatewayId"
    ]
  },
  "AWS::EC2::Volume": {
    "full_properties": {
      "AutoEnableIO": {
        "description": "Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone in which to create the volume.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Encrypted": {
        "description": "Indicates whether the volume should be encrypted. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Encryption by default in the Amazon Elastic Compute Cloud User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "Iops": {
        "description": "The number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The identifier of the AWS KMS key to use for Amazon EBS encryption. If KmsKeyId is specified, the encrypted state must be true.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "MultiAttachEnabled": {
        "description": "Indicates whether Amazon EBS Multi-Attach is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "OutpostArn": {
        "description": "The Amazon Resource Name (ARN) of the Outpost.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Size": {
        "description": "The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotId": {
        "description": "The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Tags": {
        "description": "The tags to apply to the volume during creation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Throughput": {
        "description": "The throughput that the volume supports, in MiB/s.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "VolumeType": {
        "description": "The volume type. This parameter can be one of the following values:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-volume.html",
    "properties": [
      "AutoEnableIO",
      "AvailabilityZone",
      "Encrypted",
      "Iops",
      "KmsKeyId",
      "MultiAttachEnabled",
      "OutpostArn",
      "Size",
      "SnapshotId",
      "Tags",
      "Throughput",
      "VolumeType"
    ]
  },
  "AWS::EC2::VolumeAttachment": {
    "full_properties": {
      "Device": {
        "description": "The device name (for example, /dev/sdh or xvdh).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceId": {
        "description": "The ID of the instance to which the volume attaches. This value can be a reference to an AWS::EC2::Instance resource, or it can be the physical ID of an existing EC2 instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VolumeId": {
        "description": "The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone. This value can be a reference to an AWS::EC2::Volume resource, or it can be the volume ID of an existing Amazon EBS volume.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-ec2-ebs-volumeattachment.html",
    "properties": [
      "Device",
      "InstanceId",
      "VolumeId"
    ]
  },
  "AWS::ECR::PublicRepository": {
    "full_properties": {
      "RepositoryCatalogData": {
        "description": "The details about the repository that are publicly visible in the Amazon ECR Public Gallery. For more information, see Amazon ECR Public repository catalog data in the Amazon ECR Public User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RepositoryName": {
        "description": "The name to use for the public repository. The repository name may be specified on its own (such as nginx-web-app) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the repository name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RepositoryPolicyText": {
        "description": "The JSON repository policy text to apply to the public repository. For more information, see Amazon ECR Public repository policies in the Amazon ECR Public User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecr-publicrepository.html",
    "properties": [
      "RepositoryCatalogData",
      "RepositoryName",
      "RepositoryPolicyText",
      "Tags"
    ]
  },
  "AWS::ECR::PullThroughCacheRule": {
    "full_properties": {
      "EcrRepositoryPrefix": {
        "description": "The Amazon ECR repository prefix associated with the pull through cache rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UpstreamRegistryUrl": {
        "description": "The upstream registry URL associated with the pull through cache rule.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecr-pullthroughcacherule.html",
    "properties": [
      "EcrRepositoryPrefix",
      "UpstreamRegistryUrl"
    ]
  },
  "AWS::ECR::RegistryPolicy": {
    "full_properties": {
      "PolicyText": {
        "description": "The JSON policy text for your registry.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecr-registrypolicy.html",
    "properties": [
      "PolicyText"
    ]
  },
  "AWS::ECR::ReplicationConfiguration": {
    "full_properties": {
      "ReplicationConfiguration": {
        "description": "The replication configuration for a registry.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecr-replicationconfiguration.html",
    "properties": [
      "ReplicationConfiguration"
    ]
  },
  "AWS::ECR::Repository": {
    "full_properties": {
      "EncryptionConfiguration": {
        "description": "The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ImageScanningConfiguration": {
        "description": "The image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities after being pushed to the repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ImageTagMutability": {
        "description": "The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LifecyclePolicy": {
        "description": "Creates or updates a lifecycle policy. For information about lifecycle policy syntax, see Lifecycle policy template.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RepositoryName": {
        "description": "The name to use for the repository. The repository name may be specified on its own (such as nginx-web-app) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the repository name. For more information, see Name type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RepositoryPolicyText": {
        "description": "The JSON repository policy text to apply to the repository. For more information, see Amazon ECR repository policies in the Amazon Elastic Container Registry User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecr-repository.html",
    "properties": [
      "EncryptionConfiguration",
      "ImageScanningConfiguration",
      "ImageTagMutability",
      "LifecyclePolicy",
      "RepositoryName",
      "RepositoryPolicyText",
      "Tags"
    ]
  },
  "AWS::ECS::CapacityProvider": {
    "full_properties": {
      "AutoScalingGroupProvider": {
        "description": "The Auto Scaling group settings for the capacity provider.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the capacity provider. If a name is specified, it cannot start with aws, ecs, or fargate. If no name is specified, a default name in the CFNStackName-CFNResourceName-RandomString format is used.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The metadata that you apply to the capacity provider to help you categorize and organize it. Each tag consists of a key and an optional value. You define both.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecs-capacityprovider.html",
    "properties": [
      "AutoScalingGroupProvider",
      "Name",
      "Tags"
    ]
  },
  "AWS::ECS::Cluster": {
    "full_properties": {
      "CapacityProviders": {
        "description": "The short name of one or more capacity providers to associate with the cluster. A capacity provider must be associated with a cluster before it can be included as part of the default capacity provider strategy of the cluster or used in a capacity provider strategy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ClusterName": {
        "description": "A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterSettings": {
        "description": "The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Configuration": {
        "description": "The execute command configuration for the cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefaultCapacityProviderStrategy": {
        "description": "The default capacity provider strategy for the cluster. When services or tasks are run in the cluster with no launch type or capacity provider strategy specified, the default capacity provider strategy is used.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value. You define both.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecs-cluster.html",
    "properties": [
      "CapacityProviders",
      "ClusterName",
      "ClusterSettings",
      "Configuration",
      "DefaultCapacityProviderStrategy",
      "Tags"
    ]
  },
  "AWS::ECS::ClusterCapacityProviderAssociations": {
    "full_properties": {
      "CapacityProviders": {
        "description": "The capacity providers to associate with the cluster.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Cluster": {
        "description": "The cluster the capacity provider association is the target of.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultCapacityProviderStrategy": {
        "description": "The default capacity provider strategy to associate with the cluster.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecs-clustercapacityproviderassociations.html",
    "properties": [
      "CapacityProviders",
      "Cluster",
      "DefaultCapacityProviderStrategy"
    ]
  },
  "AWS::ECS::PrimaryTaskSet": {
    "full_properties": {
      "Cluster": {
        "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Service": {
        "description": "The short name or full Amazon Resource Name (ARN) of the service that the task set exists in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TaskSetId": {
        "description": "The short name or full Amazon Resource Name (ARN) of the task set to set as the primary task set in the deployment.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecs-primarytaskset.html",
    "properties": [
      "Cluster",
      "Service",
      "TaskSetId"
    ]
  },
  "AWS::ECS::Service": {
    "full_properties": {
      "CapacityProviderStrategy": {
        "description": "The capacity provider strategy to use for the service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Cluster": {
        "description": "The short name or full Amazon Resource Name (ARN) of the cluster that you run your service on. If you do not specify a cluster, the default cluster is assumed.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeploymentConfiguration": {
        "description": "Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeploymentController": {
        "description": "The deployment controller to use for the service. If no deployment controller is specified, the default value of ECS is used.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DesiredCount": {
        "description": "The number of instantiations of the specified task definition to place and keep running on your cluster.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "EnableECSManagedTags": {
        "description": "Specifies whether to turn on Amazon ECS managed tags for the tasks within the service. For more information, see Tagging your Amazon ECS resources in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnableExecuteCommand": {
        "description": "Determines whether the execute command functionality is enabled for the service. If true, the execute command functionality is enabled for all containers in tasks as part of the service.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "HealthCheckGracePeriodSeconds": {
        "description": "The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started. This is only used when your service is configured to use a load balancer. If your service has a load balancer defined and you don't specify a health check grace period value, the default value of 0 is used.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "LaunchType": {
        "description": "The launch type on which to run your service. For more information, see Amazon ECS Launch Types in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LoadBalancers": {
        "description": "A list of load balancer objects to associate with the service. If you specify the Role property, LoadBalancers must be specified as well. For information about the number of load balancers that you can specify per service, see Service Load Balancing in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "NetworkConfiguration": {
        "description": "The network configuration for the service. This parameter is required for task definitions that use the awsvpc network mode to receive their own elastic network interface, and it is not supported for other network modes. For more information, see Task Networking in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PlacementConstraints": {
        "description": "An array of placement constraint objects to use for tasks in your service. You can specify a maximum of 10 constraints for each task. This limit includes constraints in the task definition and those specified at runtime.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PlacementStrategies": {
        "description": "The placement strategy objects to use for tasks in your service. You can specify a maximum of five strategy rules per service. For more information, see Task Placement Strategies in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PlatformVersion": {
        "description": "The platform version that your tasks in the service are running on. A platform version is specified only for tasks using the Fargate launch type. If one isn't specified, the LATEST platform version is used. For more information, see AWS Fargate platform versions in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PropagateTags": {
        "description": "Specifies whether to propagate the tags from the task definition or the service to the tasks in the service. If no value is specified, the tags are not propagated. Tags can only be propagated to the tasks within the service during service creation. To add tags to a task after service creation, use the TagResource API action.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Role": {
        "description": "The name or full Amazon Resource Name (ARN) of the IAM role that allows Amazon ECS to make calls to your load balancer on your behalf. This parameter is only permitted if you are using a load balancer with your service and your task definition doesn't use the awsvpc network mode. If you specify the role parameter, you must also specify a load balancer object with the loadBalancers parameter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SchedulingStrategy": {
        "description": "The scheduling strategy to use for the service. For more information, see Services.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceName": {
        "description": "The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. Service names must be unique within a cluster, but you can have similarly named services in multiple clusters within a Region or across multiple Regions.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRegistries": {
        "description": "The details of the service discovery registry to associate with this service. For more information, see Service discovery.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The metadata that you apply to the service to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. When a service is deleted, the tags are deleted as well.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TaskDefinition": {
        "description": "The family and revision (family:revision) or full ARN of the task definition to run in your service. The revision is required in order for the resource to stabilize.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecs-service.html",
    "properties": [
      "CapacityProviderStrategy",
      "Cluster",
      "DeploymentConfiguration",
      "DeploymentController",
      "DesiredCount",
      "EnableECSManagedTags",
      "EnableExecuteCommand",
      "HealthCheckGracePeriodSeconds",
      "LaunchType",
      "LoadBalancers",
      "NetworkConfiguration",
      "PlacementConstraints",
      "PlacementStrategies",
      "PlatformVersion",
      "PropagateTags",
      "Role",
      "SchedulingStrategy",
      "ServiceName",
      "ServiceRegistries",
      "Tags",
      "TaskDefinition"
    ]
  },
  "AWS::ECS::TaskDefinition": {
    "full_properties": {
      "ContainerDefinitions": {
        "description": "A list of container definitions in JSON format that describe the different containers that make up your task. For more information about container definition parameters and defaults, see Amazon ECS Task Definitions in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Cpu": {
        "description": "The number of cpu units used by the task. If you use the EC2 launch type, this field is optional. Any value can be used. If you use the Fargate launch type, this field is required. You must use one of the following values. The value that you choose determines your range of valid values for the memory parameter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EphemeralStorage": {
        "description": "The ephemeral storage settings to use for tasks run with the task definition.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS container agent permission to make AWS API calls on your behalf. The task execution IAM role is required depending on the requirements of your task. For more information, see Amazon ECS task execution IAM role in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "The name of a family that this task definition is registered to. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InferenceAccelerators": {
        "description": "The Elastic Inference accelerators to use for the containers in the task.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "IpcMode": {
        "description": "The IPC resource namespace to use for the containers in the task. The valid values are host, task, or none. If host is specified, then all containers within the tasks that specified the host IPC mode on the same container instance share the same IPC resources with the host Amazon EC2 instance. If task is specified, all containers within the specified task share the same IPC resources. If none is specified, then IPC resources within the containers of a task are private and not shared with other containers in a task or on the container instance. If no value is specified, then the IPC resource namespace sharing depends on the Docker daemon setting on the container instance. For more information, see IPC settings in the Docker run reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Memory": {
        "description": "The amount (in MiB) of memory used by the task.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkMode": {
        "description": "The Docker networking mode to use for the containers in the task. The valid values are none, bridge, awsvpc, and host. The default Docker network mode is bridge. If you are using the Fargate launch type, the awsvpc network mode is required. If you are using the EC2 launch type, any network mode can be used. If the network mode is set to none, you cannot specify port mappings in your container definitions, and the tasks containers do not have external connectivity. The host and awsvpc network modes offer the highest networking performance for containers because they use the EC2 network stack instead of the virtualized network stack provided by the bridge mode.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PidMode": {
        "description": "The process namespace to use for the containers in the task. The valid values are host or task. If host is specified, then all containers within the tasks that specified the host PID mode on the same container instance share the same process namespace with the host Amazon EC2 instance. If task is specified, all containers within the specified task share the same process namespace. If no value is specified, the default is a private namespace. For more information, see PID settings in the Docker run reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PlacementConstraints": {
        "description": "An array of placement constraint objects to use for tasks.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ProxyConfiguration": {
        "description": "The ProxyConfiguration property specifies the configuration details for the App Mesh proxy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RequiresCompatibilities": {
        "description": "The task launch types the task definition was validated against. To determine which task launch types the task definition is validated for, see the TaskDefinition$compatibilities parameter.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "RuntimePlatform": {
        "description": "The operating system that your tasks definitions run on. A platform family is specified only for tasks using the Fargate launch type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The metadata that you apply to the task definition to help you categorize and organize them. Each tag consists of a key and an optional value. You define both of them.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TaskRoleArn": {
        "description": "The short name or full Amazon Resource Name (ARN) of the AWS Identity and Access Management role that grants containers in the task permission to call AWS APIs on your behalf. For more information, see Amazon ECS Task Role in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Volumes": {
        "description": "The list of data volume definitions for the task. For more information, see Using data volumes in tasks in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ecs-taskdefinition.html",
    "properties": [
      "ContainerDefinitions",
      "Cpu",
      "EphemeralStorage",
      "ExecutionRoleArn",
      "Family",
      "InferenceAccelerators",
      "IpcMode",
      "Memory",
      "NetworkMode",
      "PidMode",
      "PlacementConstraints",
      "ProxyConfiguration",
      "RequiresCompatibilities",
      "RuntimePlatform",
      "Tags",
      "TaskRoleArn",
      "Volumes"
    ]
  },
  "AWS::ECS::TaskSet": {
    "full_properties": {
      "Cluster": {
        "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExternalId": {
        "description": "An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a service discovery registry, the tasks in this task set will have the ECS_TASK_SET_EXTERNAL_ID AWS Cloud Map attribute set to the provided value.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LaunchType": {
        "description": "The launch type that new tasks in the task set uses. For more information, see Amazon ECS launch types in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LoadBalancers": {
        "description": "A load balancer object representing the load balancer to use with the task set. The supported load balancer types are either an Application Load Balancer or a Network Load Balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NetworkConfiguration": {
        "description": "The network configuration for the task set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PlatformVersion": {
        "description": "The platform version that the tasks in the task set uses. A platform version is specified only for tasks using the Fargate launch type. If one isn't specified, the LATEST platform version is used.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Scale": {
        "description": "A floating-point percentage of your desired number of tasks to place and keep running in the task set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Service": {
        "description": "The short name or full Amazon Resource Name (ARN) of the service to create the task set in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRegistries": {
        "description": "The details of the service discovery registries to assign to this task set. For more information, see Service discovery.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TaskDefinition": {
        "description": "The task definition for the tasks in the task set to use.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ecs-taskset.html",
    "properties": [
      "Cluster",
      "ExternalId",
      "LaunchType",
      "LoadBalancers",
      "NetworkConfiguration",
      "PlatformVersion",
      "Scale",
      "Service",
      "ServiceRegistries",
      "TaskDefinition"
    ]
  },
  "AWS::EFS::AccessPoint": {
    "full_properties": {
      "AccessPointTags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ClientToken": {
        "description": "The opaque string specified in the request to ensure idempotent creation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FileSystemId": {
        "description": "The ID of the EFS file system that the access point applies to. Accepts only the ID format for input when specifying a file system, for example fs-0123456789abcedf2.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PosixUser": {
        "description": "The full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point that is used for all file operations by NFS clients using the access point.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RootDirectory": {
        "description": "The directory on the Amazon EFS file system that the access point exposes as the root directory to NFS clients using the access point.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-efs-accesspoint.html",
    "properties": [
      "AccessPointTags",
      "ClientToken",
      "FileSystemId",
      "PosixUser",
      "RootDirectory"
    ]
  },
  "AWS::EFS::FileSystem": {
    "full_properties": {
      "AvailabilityZoneName": {
        "description": "Used to create a file system that uses One Zone storage classes. It specifies the AWS Availability Zone in which to create the file system. Use the format us-east-1a to specify the Availability Zone. For more information about One Zone storage classes, see Using EFS storage classes in the Amazon EFS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BackupPolicy": {
        "description": "Use the BackupPolicy to turn automatic backups on or off for the file system.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BypassPolicyLockoutSafetyCheck": {
        "description": "(Optional) A boolean that specifies whether or not to bypass the FileSystemPolicy lockout safety check. The lockout safety check determines whether the policy in the request will lock out, or prevent, the IAM principal that is making the request from making future PutFileSystemPolicy requests on this file system. Set BypassPolicyLockoutSafetyCheck to True only when you intend to prevent the IAM principal that is making the request from making subsequent PutFileSystemPolicy requests on this file system. The default value is False.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Encrypted": {
        "description": "A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying a KmsKeyId for an existing AWS KMS key. If you don't specify a KMS key, then the default KMS key for Amazon EFS, /aws/elasticfilesystem, is used to protect the encrypted file system.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "FileSystemPolicy": {
        "description": "The FileSystemPolicy for the EFS file system. A file system policy is an IAM resource policy used to control NFS access to an EFS file system. For more information, see Using IAM to control NFS access to Amazon EFS in the Amazon EFS User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FileSystemTags": {
        "description": "Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a \"Key\":\"Name\",\"Value\":\"{value}\" key-value pair. Each key must be unique. For more information, see Tagging AWS resources in the AWS General Reference Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ID of the AWS KMS key to be used to protect the encrypted file system. This parameter is only required if you want to use a nondefault KMS key. If this parameter is not specified, the default KMS key for Amazon EFS is used. This ID can be in one of the following formats:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LifecyclePolicies": {
        "description": "An array of LifecyclePolicy objects that define the file system's LifecycleConfiguration object. A LifecycleConfiguration object informs EFS lifecycle management and intelligent tiering of the following:",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PerformanceMode": {
        "description": "The performance mode of the file system. We recommend generalPurpose performance mode for most file systems. File systems using the maxIO performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisionedThroughputInMibps": {
        "description": "The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. Valid values are 1-1024. Required if ThroughputMode is set to provisioned. The upper limit for throughput is 1024 MiB/s. To increase this limit, contact AWS Support. For more information, see Amazon EFS quotas that you can increase in the Amazon EFS User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ThroughputMode": {
        "description": "Specifies the throughput mode for the file system, either bursting or provisioned. If you set ThroughputMode to provisioned, you must also set a value for ProvisionedThroughputInMibps. After you create the file system, you can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes, as long as it’s been more than 24 hours since the last decrease or throughput mode change. For more information, see Specifying throughput with provisioned mode in the Amazon EFS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-efs-filesystem.html",
    "properties": [
      "AvailabilityZoneName",
      "BackupPolicy",
      "BypassPolicyLockoutSafetyCheck",
      "Encrypted",
      "FileSystemPolicy",
      "FileSystemTags",
      "KmsKeyId",
      "LifecyclePolicies",
      "PerformanceMode",
      "ProvisionedThroughputInMibps",
      "ThroughputMode"
    ]
  },
  "AWS::EFS::MountTarget": {
    "full_properties": {
      "FileSystemId": {
        "description": "The ID of the file system for which to create the mount target.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpAddress": {
        "description": "Valid IPv4 address within the address range of the specified subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "Up to five VPC security group IDs, of the form sg-xxxxxxxx. These must be for the same VPC as subnet specified.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The ID of the subnet to add the mount target in. For file systems that use One Zone storage classes, use the subnet that is associated with the file system's Availability Zone.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-efs-mounttarget.html",
    "properties": [
      "FileSystemId",
      "IpAddress",
      "SecurityGroups",
      "SubnetId"
    ]
  },
  "AWS::EKS::Addon": {
    "full_properties": {
      "AddonName": {
        "description": "The name of the add-on.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AddonVersion": {
        "description": "The version of the add-on.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ClusterName": {
        "description": "The name of the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResolveConflicts": {
        "description": "How to resolve field value conflicts for an Amazon EKS add-on. Conflicts are handled based on the value you choose:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ServiceAccountRoleArn": {
        "description": "The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see Amazon EKS node IAM role in the Amazon EKS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The metadata that you apply to the add-on to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Add-on tags do not propagate to any other resources associated with the cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eks-addon.html",
    "properties": [
      "AddonName",
      "AddonVersion",
      "ClusterName",
      "ResolveConflicts",
      "ServiceAccountRoleArn",
      "Tags"
    ]
  },
  "AWS::EKS::Cluster": {
    "full_properties": {
      "EncryptionConfig": {
        "description": "The encryption configuration for the cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "KubernetesNetworkConfig": {
        "description": "The Kubernetes network configuration for the cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Logging": {
        "description": "The logging configuration for your cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The unique name to give to your cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutpostConfig": {
        "description": "An object representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This object isn't available for clusters on the AWS cloud.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ResourcesVpcConfig": {
        "description": "The VPC configuration that's used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. You must specify at least two subnets. You can specify up to five security groups, but we recommend that you use a dedicated security group for your cluster control plane.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. For more information, see Amazon EKS Service IAM Role in the Amazon EKS User Guide .",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The metadata that you apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Cluster tags don't propagate to any other resources associated with the cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Version": {
        "description": "The desired Kubernetes version for your cluster. If you don't specify a value here, the default version available in Amazon EKS is used.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eks-cluster.html",
    "properties": [
      "EncryptionConfig",
      "KubernetesNetworkConfig",
      "Logging",
      "Name",
      "OutpostConfig",
      "ResourcesVpcConfig",
      "RoleArn",
      "Tags",
      "Version"
    ]
  },
  "AWS::EKS::FargateProfile": {
    "full_properties": {
      "ClusterName": {
        "description": "The name of the Amazon EKS cluster to apply the Fargate profile to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FargateProfileName": {
        "description": "The name of the Fargate profile.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PodExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see Pod Execution Role in the Amazon EKS User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Selectors": {
        "description": "The selectors to match for pods to use this Fargate profile. Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Subnets": {
        "description": "The IDs of subnets to launch your pods into. At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The metadata to apply to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eks-fargateprofile.html",
    "properties": [
      "ClusterName",
      "FargateProfileName",
      "PodExecutionRoleArn",
      "Selectors",
      "Subnets",
      "Tags"
    ]
  },
  "AWS::EKS::IdentityProviderConfig": {
    "full_properties": {
      "ClusterName": {
        "description": "The cluster that the configuration is associated to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IdentityProviderConfigName": {
        "description": "The name of the configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Oidc": {
        "description": "An object representing an OpenID Connect (OIDC) identity provider configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The metadata to apply to the provider configuration to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of the identity provider configuration. The only type available is oidc.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-eks-identityproviderconfig.html",
    "properties": [
      "ClusterName",
      "IdentityProviderConfigName",
      "Oidc",
      "Tags",
      "Type"
    ]
  },
  "AWS::EKS::Nodegroup": {
    "full_properties": {
      "AmiType": {
        "description": "The AMI type for your node group. GPU instance types should use the AL2_x86_64_GPU AMI type. Non-GPU instances should use the AL2_x86_64 AMI type. Arm instances should use the AL2_ARM_64 AMI type. All types use the Amazon EKS optimized Amazon Linux 2 AMI. If you specify launchTemplate, and your launch template uses a custom AMI, then don't specify amiType, or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support in the Amazon EKS User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "CapacityType": {
        "description": "The capacity type of your managed node group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterName": {
        "description": "The name of the cluster to create the node group in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DiskSize": {
        "description": "The root device disk size (in GiB) for your node group instances. The default disk size is 20 GiB. If you specify launchTemplate, then don't specify  diskSize, or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support in the Amazon EKS User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "ForceUpdateEnabled": {
        "description": "Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "InstanceTypes": {
        "description": "Specify the instance types for a node group. If you specify a GPU instance type, be sure to specify AL2_x86_64_GPU with the amiType parameter. If you specify launchTemplate, then you can specify zero or one instance type in your launch template or you can specify 0-20 instance types for instanceTypes. If however, you specify an instance type in your launch template and specify any instanceTypes, the node group deployment will fail. If you don't specify an instance type in a launch template or for instanceTypes, then t3.medium is used, by default. If you specify Spot for capacityType, then we recommend specifying multiple values for instanceTypes. For more information, see Managed node group capacity types and Launch template support in the Amazon EKS User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Labels": {
        "description": "The Kubernetes labels applied to the nodes in the node group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LaunchTemplate": {
        "description": "An object representing a node group's launch template specification. If specified, then do not specify instanceTypes, diskSize, or remoteAccess and make sure that the launch template meets the requirements in launchTemplateSpecification.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NodeRole": {
        "description": "The Amazon Resource Name (ARN) of the IAM role to associate with your node group. The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch nodes and register them into a cluster, you must create an IAM role for those nodes to use when they are launched. For more information, see Amazon EKS node IAM role in the  Amazon EKS User Guide . If you specify launchTemplate, then don't specify IamInstanceProfile in your launch template, or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support in the Amazon EKS User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NodegroupName": {
        "description": "The unique name to give your node group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReleaseVersion": {
        "description": "The AMI version of the Amazon EKS optimized AMI to use with your node group (for example, 1.14.7-YYYYMMDD). By default, the latest available AMI version for the node group's current Kubernetes version is used. For more information, see Amazon EKS optimized Linux AMI Versions in the Amazon EKS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RemoteAccess": {
        "description": "The remote access (SSH) configuration to use with your node group. If you specify launchTemplate, then don't specify  remoteAccess, or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support in the Amazon EKS User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ScalingConfig": {
        "description": "The scaling configuration details for the Auto Scaling group that is created for your node group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Subnets": {
        "description": "The subnets to use for the Auto Scaling group that is created for your node group. If you specify launchTemplate, then don't specify  SubnetId in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support in the Amazon EKS User Guide.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The metadata applied to the node group to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Taints": {
        "description": "The Kubernetes taints to be applied to the nodes in the node group when they are created. Effect is one of No_Schedule, Prefer_No_Schedule, or No_Execute. Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes. For more information, see Node taints on managed node groups.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UpdateConfig": {
        "description": "The node group update configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Version": {
        "description": "The Kubernetes version to use for your managed nodes. By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value. If you specify launchTemplate, and your launch template uses a custom AMI, then don't specify  version, or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support in the Amazon EKS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eks-nodegroup.html",
    "properties": [
      "AmiType",
      "CapacityType",
      "ClusterName",
      "DiskSize",
      "ForceUpdateEnabled",
      "InstanceTypes",
      "Labels",
      "LaunchTemplate",
      "NodegroupName",
      "NodeRole",
      "ReleaseVersion",
      "RemoteAccess",
      "ScalingConfig",
      "Subnets",
      "Tags",
      "Taints",
      "UpdateConfig",
      "Version"
    ]
  },
  "AWS::EMR::Cluster": {
    "full_properties": {
      "AdditionalInfo": {
        "description": "A JSON string for selecting additional features.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Applications": {
        "description": "The applications to install on this cluster, for example, Spark, Flink, Oozie, Zeppelin, and so on.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "AutoScalingRole": {
        "description": "An IAM role for automatic scaling policies. The default role is EMR_AutoScaling_DefaultRole. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AutoTerminationPolicy": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BootstrapActions": {
        "description": "A list of bootstrap actions to run before Hadoop starts on the cluster nodes.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Configurations": {
        "description": "Applies only to Amazon EMR releases 4.x and later. The list of Configurations supplied to the EMR cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "CustomAmiId": {
        "description": "Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EbsRootVolumeSize": {
        "description": "The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Instances": {
        "description": "A specification of the number and type of Amazon EC2 instances.",
        "required": true,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "JobFlowRole": {
        "description": "Also called instance profile and EC2 role. An IAM role for an EMR cluster. The EC2 instances of the cluster assume this role. The default role is EMR_EC2_DefaultRole. In order to use the default role, you must have already created it using the CLI or console.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KerberosAttributes": {
        "description": "Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see Use Kerberos Authentication in the Amazon EMR Management Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LogEncryptionKmsKeyId": {
        "description": "The AWS KMS key used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogUri": {
        "description": "The path to the Amazon S3 location where logs for this cluster are stored.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ManagedScalingPolicy": {
        "description": "Creates or updates a managed scaling policy for an Amazon EMR cluster. The managed scaling policy defines the limits for resources, such as EC2 instances that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReleaseLabel": {
        "description": "The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster. Release labels are in the form emr-x.x.x, where x.x.x is an Amazon EMR release version such as emr-5.14.0. For more information about Amazon EMR release versions and included application versions and features, see https://docs.aws.amazon.com/emr/latest/ReleaseGuide/. The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use AmiVersion.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScaleDownBehavior": {
        "description": "The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized. TERMINATE_AT_INSTANCE_HOUR indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. TERMINATE_AT_TASK_COMPLETION indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. TERMINATE_AT_TASK_COMPLETION is available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityConfiguration": {
        "description": "The name of the security configuration applied to the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRole": {
        "description": "The IAM role that Amazon EMR assumes in order to access AWS resources on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StepConcurrencyLevel": {
        "description": "Specifies the number of steps that can be executed concurrently. The default value is 1. The maximum value is 256.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Steps": {
        "description": "A list of steps to run.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags associated with a cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VisibleToAllUsers": {
        "description": "Indicates whether the cluster is visible to all IAM users of the AWS account associated with the cluster. If this value is set to true, all IAM users of that AWS account can view and manage the cluster if they have the proper policy permissions set. If this value is false, only the IAM user that created the cluster can view and manage it. This value can be changed using the SetVisibleToAllUsers action.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticmapreduce-cluster.html",
    "properties": [
      "AdditionalInfo",
      "Applications",
      "AutoScalingRole",
      "AutoTerminationPolicy",
      "BootstrapActions",
      "Configurations",
      "CustomAmiId",
      "EbsRootVolumeSize",
      "Instances",
      "JobFlowRole",
      "KerberosAttributes",
      "LogEncryptionKmsKeyId",
      "LogUri",
      "ManagedScalingPolicy",
      "Name",
      "ReleaseLabel",
      "ScaleDownBehavior",
      "SecurityConfiguration",
      "ServiceRole",
      "StepConcurrencyLevel",
      "Steps",
      "Tags",
      "VisibleToAllUsers"
    ]
  },
  "AWS::EMR::InstanceFleetConfig": {
    "full_properties": {
      "ClusterId": {
        "description": "The unique identifier of the EMR cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceFleetType": {
        "description": "The node type that the instance fleet hosts.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceTypeConfigs": {
        "description": "InstanceTypeConfigs determine the EC2 instances that Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LaunchSpecifications": {
        "description": "The launch specification for the instance fleet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The friendly name of the instance fleet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetOnDemandCapacity": {
        "description": "The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision. When the instance fleet launches, Amazon EMR tries to provision On-Demand instances as specified by InstanceTypeConfig. Each instance configuration has a specified WeightedCapacity. When an On-Demand instance is provisioned, the WeightedCapacity units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a WeightedCapacity of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TargetSpotCapacity": {
        "description": "The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision. When the instance fleet launches, Amazon EMR tries to provision Spot instances as specified by InstanceTypeConfig. Each instance configuration has a specified WeightedCapacity. When a Spot instance is provisioned, the WeightedCapacity units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a WeightedCapacity of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticmapreduce-instancefleetconfig.html",
    "properties": [
      "ClusterId",
      "InstanceFleetType",
      "InstanceTypeConfigs",
      "LaunchSpecifications",
      "Name",
      "TargetOnDemandCapacity",
      "TargetSpotCapacity"
    ]
  },
  "AWS::EMR::InstanceGroupConfig": {
    "full_properties": {
      "AutoScalingPolicy": {
        "description": "AutoScalingPolicy is a subproperty of InstanceGroupConfig. AutoScalingPolicy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. For more information, see Using Automatic Scaling in Amazon EMR in the Amazon EMR Management Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BidPrice": {
        "description": "If specified, indicates that the instance group uses Spot Instances. This is the maximum price you are willing to pay for Spot Instances. Specify OnDemandPrice to set the amount equal to the On-Demand price, or specify an amount in USD.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Configurations": {
        "description": "Amazon EMR releases 4.x or later.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "CustomAmiId": {
        "description": "The custom AMI ID to use for the provisioned instance group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EbsConfiguration": {
        "description": "EbsConfiguration determines the EBS volumes to attach to EMR cluster instances.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "InstanceCount": {
        "description": "Target number of instances for the instance group.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "InstanceRole": {
        "description": "The role of the instance group in the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The EC2 instance type for all instances in the instance group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobFlowId": {
        "description": "The ID of an Amazon EMR cluster that you want to associate this instance group with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Market": {
        "description": "Market type of the EC2 instances used to create a cluster node.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "Friendly name given to the instance group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-instancegroupconfig.html",
    "properties": [
      "AutoScalingPolicy",
      "BidPrice",
      "Configurations",
      "CustomAmiId",
      "EbsConfiguration",
      "InstanceCount",
      "InstanceRole",
      "InstanceType",
      "JobFlowId",
      "Market",
      "Name"
    ]
  },
  "AWS::EMR::SecurityConfiguration": {
    "full_properties": {
      "Name": {
        "description": "The name of the security configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityConfiguration": {
        "description": "The security configuration details in JSON format.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-securityconfiguration.html",
    "properties": [
      "Name",
      "SecurityConfiguration"
    ]
  },
  "AWS::EMR::Step": {
    "full_properties": {
      "ActionOnFailure": {
        "description": "This specifies what action to take when the cluster step fails. Possible values are CANCEL_AND_WAIT and CONTINUE.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "HadoopJarStep": {
        "description": "The HadoopJarStepConfig property type specifies a job flow step consisting of a JAR file whose main function will be executed. The main function submits a job for the cluster to execute as a step on the master node, and then waits for the job to finish or fail before executing subsequent steps.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "JobFlowId": {
        "description": "A string that uniquely identifies the cluster (job flow).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the cluster step.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-step.html",
    "properties": [
      "ActionOnFailure",
      "HadoopJarStep",
      "JobFlowId",
      "Name"
    ]
  },
  "AWS::EMR::Studio": {
    "full_properties": {
      "AuthMode": {
        "description": "Specifies whether the Studio authenticates users using IAM Identity Center or IAM.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultS3Location": {
        "description": "The Amazon S3 location to back up EMR Studio Workspaces and notebook files.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A detailed description of the Amazon EMR Studio.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EngineSecurityGroupId": {
        "description": "The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IdpAuthUrl": {
        "description": "Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IdpRelayStateParameterName": {
        "description": "The name of your identity provider's RelayState parameter.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A descriptive name for the Amazon EMR Studio.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServiceRole": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other AWS services.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserRole": {
        "description": "The Amazon Resource Name (ARN) of the IAM user role that will be assumed by users and groups logged in to a Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies. You only need to specify UserRole when you set AuthMode to SSO.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkspaceSecurityGroupId": {
        "description": "The ID of the Workspace security group associated with the Amazon EMR Studio. The Workspace security group allows outbound network traffic to resources in the Engine security group and to the internet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-studio.html",
    "properties": [
      "AuthMode",
      "DefaultS3Location",
      "Description",
      "EngineSecurityGroupId",
      "IdpAuthUrl",
      "IdpRelayStateParameterName",
      "Name",
      "ServiceRole",
      "SubnetIds",
      "Tags",
      "UserRole",
      "VpcId",
      "WorkspaceSecurityGroupId"
    ]
  },
  "AWS::EMR::StudioSessionMapping": {
    "full_properties": {
      "IdentityName": {
        "description": "The name of the user or group. For more information, see UserName and DisplayName in the IAM Identity Center Identity Store API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IdentityType": {
        "description": "Specifies whether the identity to map to the Amazon EMR Studio is a user or a group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SessionPolicyArn": {
        "description": "The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles. For more information, see Create an EMR Studio user role with session policies in the Amazon EMR Management Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StudioId": {
        "description": "The ID of the Amazon EMR Studio to which the user or group will be mapped.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-studiosessionmapping.html",
    "properties": [
      "IdentityName",
      "IdentityType",
      "SessionPolicyArn",
      "StudioId"
    ]
  },
  "AWS::EMRContainers::VirtualCluster": {
    "full_properties": {
      "ContainerProvider": {
        "description": "The container provider of the virtual cluster.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the virtual cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-emrcontainers-virtualcluster.html",
    "properties": [
      "ContainerProvider",
      "Name",
      "Tags"
    ]
  },
  "AWS::EMRServerless::Application": {
    "full_properties": {
      "AutoStartConfiguration": {
        "description": "The configuration for an application to automatically start on job submission.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AutoStopConfiguration": {
        "description": "The configuration for an application to automatically stop after a certain amount of time being idle.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InitialCapacity": {
        "description": "The initial capacity of the application.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaximumCapacity": {
        "description": "The maximum capacity of the application. This is cumulative across all workers at any given point in time during the lifespan of the application is created. No new resources will be created once any one of the defined limits is hit.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkConfiguration": {
        "description": "The network configuration for customer VPC connectivity for the application.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ReleaseLabel": {
        "description": "The EMR release version associated with the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags assigned to the application.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of application, such as Spark or Hive.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emrserverless-application.html",
    "properties": [
      "AutoStartConfiguration",
      "AutoStopConfiguration",
      "InitialCapacity",
      "MaximumCapacity",
      "Name",
      "NetworkConfiguration",
      "ReleaseLabel",
      "Tags",
      "Type"
    ]
  },
  "AWS::ElastiCache::CacheCluster": {
    "full_properties": {
      "AZMode": {
        "description": "Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "AutoMinorVersionUpgrade": {
        "description": "If you are running Redis engine version 6.0 or later, set this parameter to yes if you want to opt-in to the next minor version upgrade campaign. This parameter is disabled for previous versions.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CacheNodeType": {
        "description": "The compute and memory capacity of the nodes in the node group (shard).",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CacheParameterGroupName": {
        "description": "The name of the parameter group to associate with this cluster. If this argument is omitted, the default parameter group for the specified engine is used. You cannot use any parameter group which has cluster-enabled='yes' when creating a cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CacheSecurityGroupNames": {
        "description": "A list of security group names to associate with this cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CacheSubnetGroupName": {
        "description": "The name of the subnet group to be used for the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterName": {
        "description": "A name for the cache cluster. If you don't specify a name, AWSCloudFormation generates a unique physical ID and uses that ID for the cache cluster. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Engine": {
        "description": "The name of the cache engine to be used for this cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version number of the cache engine to be used for this cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LogDeliveryConfigurations": {
        "description": "Specifies the destination, format and type of the logs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "NotificationTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NumCacheNodes": {
        "description": "The number of cache nodes that the cache cluster should have.",
        "required": true,
        "type": "Number",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "Port": {
        "description": "The port number on which each of the cache nodes  accepts connections.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "PreferredAvailabilityZone": {
        "description": "The EC2 Availability Zone in which the cluster is created.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "PreferredAvailabilityZones": {
        "description": "A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "PreferredMaintenanceWindow": {
        "description": "Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for ddd are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnapshotArns": {
        "description": "A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file is used to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain any commas.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SnapshotName": {
        "description": "The name of a Redis snapshot from which to restore data into the new node group (shard). The snapshot status changes to restoring while the new node group (shard) is being created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnapshotRetentionLimit": {
        "description": "The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot taken today is retained for 5 days before being deleted.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotWindow": {
        "description": "The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags to be added to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitEncryptionEnabled": {
        "description": "A flag that enables in-transit encryption when set to true.  You cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must set TransitEncryptionEnabled to true when you create a cluster.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "One or more VPC security groups associated with the cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-elasticache-cache-cluster.html",
    "properties": [
      "AutoMinorVersionUpgrade",
      "AZMode",
      "CacheNodeType",
      "CacheParameterGroupName",
      "CacheSecurityGroupNames",
      "CacheSubnetGroupName",
      "ClusterName",
      "Engine",
      "EngineVersion",
      "LogDeliveryConfigurations",
      "NotificationTopicArn",
      "NumCacheNodes",
      "Port",
      "PreferredAvailabilityZone",
      "PreferredAvailabilityZones",
      "PreferredMaintenanceWindow",
      "SnapshotArns",
      "SnapshotName",
      "SnapshotRetentionLimit",
      "SnapshotWindow",
      "Tags",
      "TransitEncryptionEnabled",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::ElastiCache::GlobalReplicationGroup": {
    "full_properties": {
      "AutomaticFailoverEnabled": {
        "description": "Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CacheNodeType": {
        "description": "The cache node type of the Global datastore",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CacheParameterGroupName": {
        "description": "The name of the cache parameter group to use with the Global datastore. It must be compatible with the major engine version used by the Global datastore.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EngineVersion": {
        "description": "The Elasticache Redis engine version.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalNodeGroupCount": {
        "description": "The number of node groups that comprise the Global Datastore.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "GlobalReplicationGroupDescription": {
        "description": "The optional description of the Global datastore",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalReplicationGroupIdSuffix": {
        "description": "The suffix name of a Global Datastore. The suffix guarantees uniqueness of the Global Datastore name across multiple regions.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Members": {
        "description": "The replication groups that comprise the Global datastore.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "RegionalConfigurations": {
        "description": "The Regions that comprise the Global Datastore.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticache-globalreplicationgroup.html",
    "properties": [
      "AutomaticFailoverEnabled",
      "CacheNodeType",
      "CacheParameterGroupName",
      "EngineVersion",
      "GlobalNodeGroupCount",
      "GlobalReplicationGroupDescription",
      "GlobalReplicationGroupIdSuffix",
      "Members",
      "RegionalConfigurations"
    ]
  },
  "AWS::ElastiCache::ParameterGroup": {
    "full_properties": {
      "CacheParameterGroupFamily": {
        "description": "The name of the cache parameter group family that this cache parameter group is compatible with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description for this cache parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Properties": {
        "description": "A comma-delimited list of parameter name/value pairs. For more information, see ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A tag that can be added to an ElastiCache parameter group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your parameter groups. A tag with a null Value is permitted.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-elasticache-parameter-group.html",
    "properties": [
      "CacheParameterGroupFamily",
      "Description",
      "Properties",
      "Tags"
    ]
  },
  "AWS::ElastiCache::ReplicationGroup": {
    "full_properties": {
      "AtRestEncryptionEnabled": {
        "description": "A flag that enables encryption at rest when set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "AuthToken": {
        "description": "Reserved parameter. The password used to access a password protected server.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "AutoMinorVersionUpgrade": {
        "description": "If you are running Redis engine version 6.0 or later, set this parameter to yes if you want to opt-in to the next minor version upgrade campaign. This parameter is disabled for previous versions.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutomaticFailoverEnabled": {
        "description": "Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CacheNodeType": {
        "description": "The compute and memory capacity of the nodes in the node group (shard).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CacheParameterGroupName": {
        "description": "The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CacheSecurityGroupNames": {
        "description": "A list of cache security group names to associate with this replication group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CacheSubnetGroupName": {
        "description": "The name of the cache subnet group to be used for the replication group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataTieringEnabled": {
        "description": "Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes. For more information, see Data tiering.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Engine": {
        "description": "The name of the cache engine to be used for the clusters in this replication group. Must be Redis.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version number of the cache engine to be used for the clusters in this replication group. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalReplicationGroupId": {
        "description": "The name of the Global datastore",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The ID of the KMS key used to encrypt the disk on the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogDeliveryConfigurations": {
        "description": "Specifies the destination, format and type of the logs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MultiAZEnabled": {
        "description": "A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see Minimizing Downtime: Multi-AZ.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NodeGroupConfiguration": {
        "description": "NodeGroupConfiguration  is a property of the AWS::ElastiCache::ReplicationGroup resource that configures an Amazon ElastiCache (ElastiCache) Redis cluster node group.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "NotificationTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NumCacheClusters": {
        "description": "The number of clusters this replication group initially has.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "NumNodeGroups": {
        "description": "An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1.",
        "required": false,
        "type": "Number",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "Port": {
        "description": "The port number on which each member of the replication group accepts connections.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "PreferredCacheClusterAZs": {
        "description": "A list of EC2 Availability Zones in which the replication group's clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PreferredMaintenanceWindow": {
        "description": "Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PrimaryClusterId": {
        "description": "The identifier of the cluster that serves as the primary for this replication group. This cluster must already exist and have a status of available.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicasPerNodeGroup": {
        "description": "An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "ReplicationGroupDescription": {
        "description": "A user-created description for the replication group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationGroupId": {
        "description": "The replication group identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroupIds": {
        "description": "One or more Amazon VPC security groups associated with this replication group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnapshotArns": {
        "description": "A list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new replication group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication group will have the number of node groups (console: shards) specified by the parameter NumNodeGroups or the number of node groups configured by NodeGroupConfiguration regardless of the number of ARNs specified here.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SnapshotName": {
        "description": "The name of a snapshot from which to restore data into the new replication group. The snapshot status changes to restoring while the new replication group is being created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnapshotRetentionLimit": {
        "description": "The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotWindow": {
        "description": "The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnapshottingClusterId": {
        "description": "The cluster ID that is used as the daily snapshot source for the replication group. This parameter cannot be set for Redis (cluster mode enabled) replication groups.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags to be added to this resource. Tags are comma-separated key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include multiple tags as shown following: Key=myKey, Value=myKeyValue Key=mySecondKey, Value=mySecondKeyValue. Tags on replication groups will be replicated to all nodes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransitEncryptionEnabled": {
        "description": "A flag that enables in-transit encryption when set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "UserGroupIds": {
        "description": "The ID of user group to associate with the replication group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticache-replicationgroup.html",
    "properties": [
      "AtRestEncryptionEnabled",
      "AuthToken",
      "AutomaticFailoverEnabled",
      "AutoMinorVersionUpgrade",
      "CacheNodeType",
      "CacheParameterGroupName",
      "CacheSecurityGroupNames",
      "CacheSubnetGroupName",
      "DataTieringEnabled",
      "Engine",
      "EngineVersion",
      "GlobalReplicationGroupId",
      "KmsKeyId",
      "LogDeliveryConfigurations",
      "MultiAZEnabled",
      "NodeGroupConfiguration",
      "NotificationTopicArn",
      "NumCacheClusters",
      "NumNodeGroups",
      "Port",
      "PreferredCacheClusterAZs",
      "PreferredMaintenanceWindow",
      "PrimaryClusterId",
      "ReplicasPerNodeGroup",
      "ReplicationGroupDescription",
      "ReplicationGroupId",
      "SecurityGroupIds",
      "SnapshotArns",
      "SnapshotName",
      "SnapshotRetentionLimit",
      "SnapshottingClusterId",
      "SnapshotWindow",
      "Tags",
      "TransitEncryptionEnabled",
      "UserGroupIds"
    ]
  },
  "AWS::ElastiCache::SecurityGroup": {
    "full_properties": {
      "Description": {
        "description": "A description for the cache security group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A tag that can be added to an ElastiCache security group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your security groups. A tag with a null Value is permitted.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-elasticache-security-group.html",
    "properties": [
      "Description",
      "Tags"
    ]
  },
  "AWS::ElastiCache::SecurityGroupIngress": {
    "full_properties": {
      "CacheSecurityGroupName": {
        "description": "The name of the Cache Security Group to authorize.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupName": {
        "description": "Name of the EC2 Security Group to include in the authorization.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupOwnerId": {
        "description": "Specifies the Amazon Account ID of the owner of the EC2 security group specified in the EC2SecurityGroupName property. The Amazon access key ID is not an acceptable value.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-elasticache-security-group-ingress.html",
    "properties": [
      "CacheSecurityGroupName",
      "EC2SecurityGroupName",
      "EC2SecurityGroupOwnerId"
    ]
  },
  "AWS::ElastiCache::SubnetGroup": {
    "full_properties": {
      "CacheSubnetGroupName": {
        "description": "The name for the cache subnet group. This value is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description for the cache subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetIds": {
        "description": "The EC2 subnet IDs for the cache subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A tag that can be added to an ElastiCache subnet group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your subnet groups. A tag with a null Value is permitted.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticache-subnetgroup.html",
    "properties": [
      "CacheSubnetGroupName",
      "Description",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::ElastiCache::User": {
    "full_properties": {
      "AccessString": {
        "description": "Access permissions string used for this user.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Engine": {
        "description": "The current supported value is redis.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NoPasswordRequired": {
        "description": "Indicates a password is not required for this user.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Passwords": {
        "description": "Passwords used for this user. You can create up to two passwords for each user.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserId": {
        "description": "The ID of the user.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserName": {
        "description": "The username of the user.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticache-user.html",
    "properties": [
      "AccessString",
      "Engine",
      "NoPasswordRequired",
      "Passwords",
      "UserId",
      "UserName"
    ]
  },
  "AWS::ElastiCache::UserGroup": {
    "full_properties": {
      "Engine": {
        "description": "The current supported value is redis.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserGroupId": {
        "description": "The ID of the user group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserIds": {
        "description": "The list of user IDs that belong to the user group. A user named default must be included.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticache-usergroup.html",
    "properties": [
      "Engine",
      "UserGroupId",
      "UserIds"
    ]
  },
  "AWS::ElasticBeanstalk::Application": {
    "full_properties": {
      "ApplicationName": {
        "description": "A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Your description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceLifecycleConfig": {
        "description": "Specifies an application resource lifecycle configuration to prevent your application from accumulating too many versions.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticbeanstalk-application.html",
    "properties": [
      "ApplicationName",
      "Description",
      "ResourceLifecycleConfig"
    ]
  },
  "AWS::ElasticBeanstalk::ApplicationVersion": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the Elastic Beanstalk application that is associated with this application version.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of this application version.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SourceBundle": {
        "description": "The Amazon S3 bucket and key that identify the location of the source bundle for this version.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticbeanstalk-applicationversion.html",
    "properties": [
      "ApplicationName",
      "Description",
      "SourceBundle"
    ]
  },
  "AWS::ElasticBeanstalk::ConfigurationTemplate": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the Elastic Beanstalk application to associate with this configuration template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "An optional description for this configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnvironmentId": {
        "description": "The ID of an environment whose settings you want to use to create the configuration template. You must specify EnvironmentId if you don't specify PlatformArn, SolutionStackName, or SourceConfiguration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OptionSettings": {
        "description": "Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk configuration options, see Option Values in the  AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PlatformArn": {
        "description": "The Amazon Resource Name (ARN) of the custom platform. For more information, see  Custom Platforms in the AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SolutionStackName": {
        "description": "The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, 64bit Amazon Linux 2013.09 running Tomcat 7 Java 7. A solution stack specifies the operating system, runtime, and application server for a configuration template. It also determines the set of configuration options as well as the possible and default values. For more information, see Supported Platforms in the  AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceConfiguration": {
        "description": "An Elastic Beanstalk configuration template to base this one on. If specified, Elastic Beanstalk uses the configuration values from the specified configuration template to create a new configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticbeanstalk-configurationtemplate.html",
    "properties": [
      "ApplicationName",
      "Description",
      "EnvironmentId",
      "OptionSettings",
      "PlatformArn",
      "SolutionStackName",
      "SourceConfiguration"
    ]
  },
  "AWS::ElasticBeanstalk::Environment": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the application that is associated with this environment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CNAMEPrefix": {
        "description": "If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Your description for this environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnvironmentName": {
        "description": "A unique name for the environment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "OperationsRole": {
        "description": "The operations role feature of AWS Elastic Beanstalk is in beta release and is subject to change.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OptionSettings": {
        "description": "Key-value pairs defining configuration options for this environment, such as the instance type. These options override the values that are defined in the solution stack or the configuration template. If you remove any options during a stack update, the removed options retain their current values.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PlatformArn": {
        "description": "The Amazon Resource Name (ARN) of the custom platform to use with the environment. For more information, see Custom Platforms in the  AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SolutionStackName": {
        "description": "The name of an Elastic Beanstalk solution stack (platform version) to use with the environment. If specified, Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack. For a list of current solution stacks, see Elastic Beanstalk Supported Platforms in the AWS Elastic Beanstalk Platforms guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies the tags applied to resources in the environment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TemplateName": {
        "description": "The name of the Elastic Beanstalk configuration template to use with the environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tier": {
        "description": "Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "VersionLabel": {
        "description": "The name of the application version to deploy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-beanstalk-environment.html",
    "properties": [
      "ApplicationName",
      "CNAMEPrefix",
      "Description",
      "EnvironmentName",
      "OperationsRole",
      "OptionSettings",
      "PlatformArn",
      "SolutionStackName",
      "Tags",
      "TemplateName",
      "Tier",
      "VersionLabel"
    ]
  },
  "AWS::ElasticLoadBalancing::LoadBalancer": {
    "full_properties": {
      "AccessLoggingPolicy": {
        "description": "Information about where and how access logs are stored for the load balancer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AppCookieStickinessPolicy": {
        "description": "Information about a policy for application-controlled session stickiness.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AvailabilityZones": {
        "description": "The Availability Zones for the load balancer. For load balancers in a VPC, specify Subnets instead.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "ConnectionDrainingPolicy": {
        "description": "If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConnectionSettings": {
        "description": "If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CrossZone": {
        "description": "If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "HealthCheck": {
        "description": "The health check settings to use when evaluating the health of your EC2 instances.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "Instances": {
        "description": "The IDs of the instances for the load balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LBCookieStickinessPolicy": {
        "description": "Information about a policy for duration-based session stickiness.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Listeners": {
        "description": "The listeners for the load balancer. You can specify at most one listener per port.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "LoadBalancerName": {
        "description": "The name of the load balancer. This name must be unique within your set of load balancers for the region.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Policies": {
        "description": "The policies defined for your Classic Load Balancer. Specify only back-end server policies.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Scheme": {
        "description": "The type of load balancer. Valid only for load balancers in a VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "The security groups for the load balancer. Valid only for load balancers in a VPC.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Subnets": {
        "description": "The IDs of the subnets for the load balancer. You can specify at most one subnet per Availability Zone.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "Tags": {
        "description": "The tags associated with a load balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-elb.html",
    "properties": [
      "AccessLoggingPolicy",
      "AppCookieStickinessPolicy",
      "AvailabilityZones",
      "ConnectionDrainingPolicy",
      "ConnectionSettings",
      "CrossZone",
      "HealthCheck",
      "Instances",
      "LBCookieStickinessPolicy",
      "Listeners",
      "LoadBalancerName",
      "Policies",
      "Scheme",
      "SecurityGroups",
      "Subnets",
      "Tags"
    ]
  },
  "AWS::ElasticLoadBalancingV2::Listener": {
    "full_properties": {
      "AlpnPolicy": {
        "description": "[TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Certificates": {
        "description": "The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DefaultActions": {
        "description": "The actions for the default rule. You cannot define a condition for a default rule.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "LoadBalancerArn": {
        "description": "The Amazon Resource Name (ARN) of the load balancer.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port on which the load balancer is listening. You cannot specify a port for a Gateway Load Balancer.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a Gateway Load Balancer.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SslPolicy": {
        "description": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-listener.html",
    "properties": [
      "AlpnPolicy",
      "Certificates",
      "DefaultActions",
      "LoadBalancerArn",
      "Port",
      "Protocol",
      "SslPolicy"
    ]
  },
  "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
    "full_properties": {
      "Certificates": {
        "description": "The certificate. You can specify one certificate per resource.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ListenerArn": {
        "description": "The Amazon Resource Name (ARN) of the listener.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-listenercertificate.html",
    "properties": [
      "Certificates",
      "ListenerArn"
    ]
  },
  "AWS::ElasticLoadBalancingV2::ListenerRule": {
    "full_properties": {
      "Actions": {
        "description": "The actions.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Conditions": {
        "description": "The conditions.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ListenerArn": {
        "description": "The Amazon Resource Name (ARN) of the listener.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Priority": {
        "description": "The rule priority. A listener can't have multiple rules with the same priority.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-listenerrule.html",
    "properties": [
      "Actions",
      "Conditions",
      "ListenerArn",
      "Priority"
    ]
  },
  "AWS::ElasticLoadBalancingV2::LoadBalancer": {
    "full_properties": {
      "IpAddressType": {
        "description": "The IP address type. The possible values are ipv4 (for IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses). You can’t specify dualstack for a load balancer with a UDP or TCP_UDP listener.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LoadBalancerAttributes": {
        "description": "The load balancer attributes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the load balancer. This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with \"internal-\".",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Scheme": {
        "description": "The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "[Application Load Balancers] The IDs of the security groups for the load balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetMappings": {
        "description": "The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Subnets": {
        "description": "The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both. To specify an Elastic IP address, specify subnet mappings instead of subnets.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to the load balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of load balancer. The default is application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-loadbalancer.html",
    "properties": [
      "IpAddressType",
      "LoadBalancerAttributes",
      "Name",
      "Scheme",
      "SecurityGroups",
      "SubnetMappings",
      "Subnets",
      "Tags",
      "Type"
    ]
  },
  "AWS::ElasticLoadBalancingV2::TargetGroup": {
    "full_properties": {
      "HealthCheckEnabled": {
        "description": "Indicates whether health checks are enabled. If the target type is lambda, health checks are disabled by default but can be enabled. If the target type is instance, ip, or alb, health checks are always enabled and cannot be disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "HealthCheckIntervalSeconds": {
        "description": "The approximate amount of time, in seconds, between health checks of an individual target. If the target group protocol is HTTP or HTTPS, the default is 30 seconds. If the target group protocol is TCP, TLS, UDP, or TCP_UDP, the supported values are 10 and 30 seconds and the default is 30 seconds. If the target group protocol is GENEVE, the default is 10 seconds. If the target type is lambda, the default is 35 seconds.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthCheckPath": {
        "description": "[HTTP/HTTPS health checks] The destination for health checks on the targets.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckPort": {
        "description": "The port the load balancer uses when performing health checks on targets. If the protocol is HTTP, HTTPS, TCP, TLS, UDP, or TCP_UDP, the default is traffic-port, which is the port on which each target receives traffic from the load balancer. If the protocol is GENEVE, the default is port 80.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckProtocol": {
        "description": "The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers and Gateway Load Balancers, the default is TCP. The TCP protocol is not supported for health checks if the protocol of the target group is HTTP or HTTPS. The GENEVE, TLS, UDP, and TCP_UDP protocols are not supported for health checks.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckTimeoutSeconds": {
        "description": "The amount of time, in seconds, during which no response from a target means a failed health check. For target groups with a protocol of HTTP, HTTPS, or GENEVE, the default is 5 seconds. For target groups with a protocol of TCP or TLS, this value must be 6 seconds for HTTP health checks and 10 seconds for TCP and HTTPS health checks. If the target type is lambda, the default is 30 seconds.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthyThresholdCount": {
        "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. For target groups with a protocol of HTTP or HTTPS, the default is 5. For target groups with a protocol of TCP, TLS, or GENEVE, the default is 3. If the target type is lambda, the default is 5.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "IpAddressType": {
        "description": "The type of IP address used for this target group. The possible values are ipv4 and ipv6. This is an optional parameter. If not specified, the IP address type defaults to ipv4.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Matcher": {
        "description": "[HTTP/HTTPS health checks] The HTTP or gRPC codes to use when checking for a successful response from a target.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the target group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply. If the protocol is GENEVE, the supported port is 6081.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Protocol": {
        "description": "The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. For Gateway Load Balancers, the supported protocol is GENEVE. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProtocolVersion": {
        "description": "[HTTP/HTTPS protocol] The protocol version. The possible values are GRPC, HTTP1, and HTTP2.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetGroupAttributes": {
        "description": "The attributes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetType": {
        "description": "The type of target that you must specify when registering targets with this target group. You can't specify targets for a target group using more than one target type.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Targets": {
        "description": "The targets.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UnhealthyThresholdCount": {
        "description": "The number of consecutive health check failures required before considering a target unhealthy. If the target group protocol is HTTP or HTTPS, the default is 2. If the target group protocol is TCP or TLS, this value must be the same as the healthy threshold count. If the target group protocol is GENEVE, the default is 3. If the target type is lambda, the default is 2.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply. Otherwise, this parameter is required.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-targetgroup.html",
    "properties": [
      "HealthCheckEnabled",
      "HealthCheckIntervalSeconds",
      "HealthCheckPath",
      "HealthCheckPort",
      "HealthCheckProtocol",
      "HealthCheckTimeoutSeconds",
      "HealthyThresholdCount",
      "IpAddressType",
      "Matcher",
      "Name",
      "Port",
      "Protocol",
      "ProtocolVersion",
      "Tags",
      "TargetGroupAttributes",
      "Targets",
      "TargetType",
      "UnhealthyThresholdCount",
      "VpcId"
    ]
  },
  "AWS::Elasticsearch::Domain": {
    "full_properties": {
      "AccessPolicies": {
        "description": "An AWS Identity and Access Management (IAM) policy document that specifies who can access the OpenSearch Service domain and their permissions. For more information, see Configuring access policies in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AdvancedOptions": {
        "description": "Additional options to specify for the OpenSearch Service domain. For more information, see Advanced cluster parameters in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AdvancedSecurityOptions": {
        "description": "Specifies options for fine-grained access control.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "CognitoOptions": {
        "description": "Configures OpenSearch Service to use Amazon Cognito authentication for OpenSearch Dashboards.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DomainEndpointOptions": {
        "description": "Specifies additional options for the domain endpoint, such as whether to require HTTPS for all traffic or whether to use a custom endpoint rather than the default endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "A name for the OpenSearch Service domain. For valid values, see the DomainName data type in the Amazon OpenSearch Service Developer Guide. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the domain name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EBSOptions": {
        "description": "The configurations of Amazon Elastic Block Store (Amazon EBS) volumes that are attached to data nodes in the OpenSearch Service domain. For more information, see EBS volume size limits in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ElasticsearchClusterConfig": {
        "description": "ElasticsearchClusterConfig is a property of the AWS::Elasticsearch::Domain resource that configures the cluster of an Amazon OpenSearch Service domain.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ElasticsearchVersion": {
        "description": "The version of Elasticsearch to use, such as 2.3. If not specified, 1.5 is used as the default. For information about the versions that OpenSearch Service supports, see Supported versions of OpenSearch and Elasticsearch in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "EncryptionAtRestOptions": {
        "description": "Whether the domain should encrypt data at rest, and if so, the AWS Key Management Service key to use. See Encryption of data at rest for Amazon OpenSearch Service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "LogPublishingOptions": {
        "description": "An object with one or more of the following keys: SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS, INDEX_SLOW_LOGS, AUDIT_LOGS, depending on the types of logs you want to publish. Each key needs a valid LogPublishingOption value.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NodeToNodeEncryptionOptions": {
        "description": "Specifies whether node-to-node encryption is enabled. See Node-to-node encryption for Amazon OpenSearch Service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "SnapshotOptions": {
        "description": "DEPRECATED. The automated snapshot configuration for the OpenSearch Service domain indices.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to associate with the OpenSearch Service domain.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VPCOptions": {
        "description": "The virtual private cloud (VPC) configuration for the OpenSearch Service domain. For more information, see Launching your Amazon OpenSearch Service domains within a VPC in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticsearch-domain.html",
    "properties": [
      "AccessPolicies",
      "AdvancedOptions",
      "AdvancedSecurityOptions",
      "CognitoOptions",
      "DomainEndpointOptions",
      "DomainName",
      "EBSOptions",
      "ElasticsearchClusterConfig",
      "ElasticsearchVersion",
      "EncryptionAtRestOptions",
      "LogPublishingOptions",
      "NodeToNodeEncryptionOptions",
      "SnapshotOptions",
      "Tags",
      "VPCOptions"
    ]
  },
  "AWS::EventSchemas::Discoverer": {
    "full_properties": {
      "CrossAccount": {
        "description": "Allows for the discovery of the event schemas that are sent to the event bus from another account.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description for the discoverer.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SourceArn": {
        "description": "The ARN of the event bus.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags associated with the resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eventschemas-discoverer.html",
    "properties": [
      "CrossAccount",
      "Description",
      "SourceArn",
      "Tags"
    ]
  },
  "AWS::EventSchemas::Registry": {
    "full_properties": {
      "Description": {
        "description": "A description of the registry to be created.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RegistryName": {
        "description": "The name of the schema registry.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags to associate with the registry.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eventschemas-registry.html",
    "properties": [
      "Description",
      "RegistryName",
      "Tags"
    ]
  },
  "AWS::EventSchemas::RegistryPolicy": {
    "full_properties": {
      "Policy": {
        "description": "A resource-based policy.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RegistryName": {
        "description": "The name of the registry.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RevisionId": {
        "description": "The revision ID of the policy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eventschemas-registrypolicy.html",
    "properties": [
      "Policy",
      "RegistryName",
      "RevisionId"
    ]
  },
  "AWS::EventSchemas::Schema": {
    "full_properties": {
      "Content": {
        "description": "The source of the schema definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the schema.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RegistryName": {
        "description": "The name of the schema registry.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SchemaName": {
        "description": "The name of the schema.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags associated with the schema.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of schema.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-eventschemas-schema.html",
    "properties": [
      "Content",
      "Description",
      "RegistryName",
      "SchemaName",
      "Tags",
      "Type"
    ]
  },
  "AWS::Events::ApiDestination": {
    "full_properties": {
      "ConnectionArn": {
        "description": "The ARN of the connection to use for the API destination. The destination endpoint must support the authorization type specified for the connection.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description for the API destination to create.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HttpMethod": {
        "description": "The method to use for the request to the HTTP invocation endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "InvocationEndpoint": {
        "description": "The URL to the HTTP invocation endpoint for the API destination.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "InvocationRateLimitPerSecond": {
        "description": "The maximum number of requests per second to send to the HTTP invocation endpoint.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the API destination to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-events-apidestination.html",
    "properties": [
      "ConnectionArn",
      "Description",
      "HttpMethod",
      "InvocationEndpoint",
      "InvocationRateLimitPerSecond",
      "Name"
    ]
  },
  "AWS::Events::Archive": {
    "full_properties": {
      "ArchiveName": {
        "description": "The name for the archive to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description for the archive.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventPattern": {
        "description": "An event pattern to use to filter events sent to the archive.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RetentionDays": {
        "description": "The number of days to retain events for. Default value is 0. If set to 0, events are retained indefinitely",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SourceArn": {
        "description": "The ARN of the event bus that sends events to the archive.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-events-archive.html",
    "properties": [
      "ArchiveName",
      "Description",
      "EventPattern",
      "RetentionDays",
      "SourceArn"
    ]
  },
  "AWS::Events::Connection": {
    "full_properties": {
      "AuthParameters": {
        "description": "A CreateConnectionAuthRequestParameters object that contains the authorization parameters to use to authorize with the endpoint.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AuthorizationType": {
        "description": "The type of authorization to use for the connection.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description for the connection to create.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the connection to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-events-connection.html",
    "properties": [
      "AuthorizationType",
      "AuthParameters",
      "Description",
      "Name"
    ]
  },
  "AWS::Events::Endpoint": {
    "full_properties": {
      "Description": {
        "description": "A description for the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventBuses": {
        "description": "The event buses being used by the endpoint.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReplicationConfig": {
        "description": "Whether event replication was enabled or disabled for this endpoint. The default state is ENABLED which means you must supply a RoleArn. If you don't have a RoleArn or you don't want event replication enabled, set the state to DISABLED.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The ARN of the role used by event replication for the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RoutingConfig": {
        "description": "The routing configuration of the endpoint.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-events-endpoint.html",
    "properties": [
      "Description",
      "EventBuses",
      "Name",
      "ReplicationConfig",
      "RoleArn",
      "RoutingConfig"
    ]
  },
  "AWS::Events::EventBus": {
    "full_properties": {
      "EventSourceName": {
        "description": "If you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the new event bus.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags to associate with the event bus.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-events-eventbus.html",
    "properties": [
      "EventSourceName",
      "Name",
      "Tags"
    ]
  },
  "AWS::Events::EventBusPolicy": {
    "full_properties": {
      "Action": {
        "description": "The action that you are enabling the other account to perform.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Condition": {
        "description": "This parameter enables you to limit the permission to accounts that fulfill a certain condition, such as being a member of a certain AWS organization. For more information about AWS Organizations, see What Is AWS Organizations in the AWS Organizations User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EventBusName": {
        "description": "The name of the event bus associated with the rule. If you omit this, the default event bus is used.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify \"*\" to permit any account to put events to your default event bus.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Statement": {
        "description": "A JSON string that describes the permission policy statement. You can include a Policy parameter in the request instead of using the StatementId, Action, Principal, or Condition parameters.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StatementId": {
        "description": "An identifier string for the external account that you are granting permissions to. If you later want to revoke the permission for this external account, specify this StatementId when you run RemovePermission.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-events-eventbuspolicy.html",
    "properties": [
      "Action",
      "Condition",
      "EventBusName",
      "Principal",
      "Statement",
      "StatementId"
    ]
  },
  "AWS::Events::Rule": {
    "full_properties": {
      "Description": {
        "description": "The description of the rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventBusName": {
        "description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventPattern": {
        "description": "The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the rule.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the role that is used for target invocation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduleExpression": {
        "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\", \"rate(5 minutes)\". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "State": {
        "description": "The state of the rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-events-rule.html",
    "properties": [
      "Description",
      "EventBusName",
      "EventPattern",
      "Name",
      "RoleArn",
      "ScheduleExpression",
      "State",
      "Targets"
    ]
  },
  "AWS::Evidently::Experiment": {
    "full_properties": {
      "Description": {
        "description": "An optional description of the experiment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MetricGoals": {
        "description": "An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal. You can use up to three metrics in an experiment.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the new experiment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OnlineAbConfig": {
        "description": "A structure that contains the configuration of which variation to use as the \"control\" version. The \"control\" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Project": {
        "description": "The name or the ARN of the project where this experiment is to be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RandomizationSalt": {
        "description": "When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and randomizationSalt. If you omit randomizationSalt, Evidently uses the experiment name as the randomizationSalt.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RemoveSegment": {
        "description": "Set this to true to remove the segment that is associated with this experiment. You can't use this parameter if the experiment is currently running.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RunningStatus": {
        "description": "A structure that you can use to start and stop the experiment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SamplingRate": {
        "description": "The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Segment": {
        "description": "Specifies an audience segment to use in the experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Assigns one or more tags (key-value pairs) to the experiment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Treatments": {
        "description": "An array of structures that describe the configuration of each feature variation used in the experiment.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-evidently-experiment.html",
    "properties": [
      "Description",
      "MetricGoals",
      "Name",
      "OnlineAbConfig",
      "Project",
      "RandomizationSalt",
      "RemoveSegment",
      "RunningStatus",
      "SamplingRate",
      "Segment",
      "Tags",
      "Treatments"
    ]
  },
  "AWS::Evidently::Feature": {
    "full_properties": {
      "DefaultVariation": {
        "description": "The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "An optional description of the feature.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EntityOverrides": {
        "description": "Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EvaluationStrategy": {
        "description": "Specify ALL_RULES to activate the traffic allocation specified by any ongoing launches or experiments. Specify DEFAULT_VARIATION to serve the default variation to all users instead.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the feature. It can include up to 127 characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Project": {
        "description": "The name or ARN of the project that is to contain the new feature.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Assigns one or more tags (key-value pairs) to the feature.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Variations": {
        "description": "An array of structures that contain the configuration of the feature's different variations.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-evidently-feature.html",
    "properties": [
      "DefaultVariation",
      "Description",
      "EntityOverrides",
      "EvaluationStrategy",
      "Name",
      "Project",
      "Tags",
      "Variations"
    ]
  },
  "AWS::Evidently::Launch": {
    "full_properties": {
      "Description": {
        "description": "An optional description for the launch.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionStatus": {
        "description": "A structure that you can use to start and stop the launch.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Groups": {
        "description": "An array of structures that contains the feature and variations that are to be used for the launch. You can up to five launch groups in a launch.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "MetricMonitors": {
        "description": "An array of structures that define the metrics that will be used to monitor the launch performance. You can have up to three metric monitors in the array.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the launch. It can include up to 127 characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Project": {
        "description": "The name or ARN of the project that you want to create the launch in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RandomizationSalt": {
        "description": "When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and randomizationSalt. If you omit randomizationSalt, Evidently uses the launch name as the randomizationsSalt.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduledSplitsConfig": {
        "description": "An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Assigns one or more tags (key-value pairs) to the launch.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-evidently-launch.html",
    "properties": [
      "Description",
      "ExecutionStatus",
      "Groups",
      "MetricMonitors",
      "Name",
      "Project",
      "RandomizationSalt",
      "ScheduledSplitsConfig",
      "Tags"
    ]
  },
  "AWS::Evidently::Project": {
    "full_properties": {
      "AppConfigResource": {
        "description": "Use this parameter if the project will use client-side evaluation powered by AWS AppConfig. Client-side evaluation allows your application to assign variations to user sessions locally instead of by calling the EvaluateFeature operation. This mitigates the latency and availability risks that come with an API call. For more information, see Use client-side evaluation - powered by AWS AppConfig.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DataDelivery": {
        "description": "A structure that contains information about where Evidently is to store evaluation events for longer term storage, if you choose to do so. If you choose not to store these events, Evidently deletes them after using them to produce metrics and other experiment results that you can view.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "An optional description of the project.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the project. It can include up to 127 characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Assigns one or more tags (key-value pairs) to the project.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-evidently-project.html",
    "properties": [
      "AppConfigResource",
      "DataDelivery",
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::Evidently::Segment": {
    "full_properties": {
      "Description": {
        "description": "An optional description for this segment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the segment.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Pattern": {
        "description": "The pattern to use for the segment. For more information about pattern syntax, see Segment rule pattern syntax.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Assigns one or more tags (key-value pairs) to the feature.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-evidently-segment.html",
    "properties": [
      "Description",
      "Name",
      "Pattern",
      "Tags"
    ]
  },
  "AWS::FIS::ExperimentTemplate": {
    "full_properties": {
      "Actions": {
        "description": "The actions for the experiment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description for the experiment template.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LogConfiguration": {
        "description": "The configuration for experiment logging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StopConditions": {
        "description": "The stop conditions.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to apply to the experiment template.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Targets": {
        "description": "The targets for the experiment.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-fis-experimenttemplate.html",
    "properties": [
      "Actions",
      "Description",
      "LogConfiguration",
      "RoleArn",
      "StopConditions",
      "Tags",
      "Targets"
    ]
  },
  "AWS::FMS::NotificationChannel": {
    "full_properties": {
      "SnsRoleName": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that allows Amazon SNS to record AWS Firewall Manager activity.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the SNS topic that collects notifications from AWS Firewall Manager.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-fms-notificationchannel.html",
    "properties": [
      "SnsRoleName",
      "SnsTopicArn"
    ]
  },
  "AWS::FMS::Policy": {
    "full_properties": {
      "DeleteAllPolicyResources": {
        "description": "Used when deleting a policy. If true, Firewall Manager performs cleanup according to the policy type.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ExcludeMap": {
        "description": "Specifies the AWS account IDs and AWS Organizations organizational units (OUs) to exclude from the policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ExcludeResourceTags": {
        "description": "Used only when tags are specified in the ResourceTags property. If this property is True, resources with the specified tags are not in scope of the policy. If it's False, only resources with the specified tags are in scope of the policy.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IncludeMap": {
        "description": "Specifies the AWS account IDs and AWS Organizations organizational units (OUs) to include in the policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PolicyName": {
        "description": "The name of the AWS Firewall Manager policy.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RemediationEnabled": {
        "description": "Indicates if the policy should be automatically applied to new resources.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ResourceTags": {
        "description": "An array of ResourceTag objects, used to explicitly include resources in the policy scope or explicitly exclude them. If this isn't set, then tags aren't used to modify policy scope. See also ExcludeResourceTags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ResourceType": {
        "description": "The type of resource protected by or in scope of the policy. This is in the format shown in the AWS Resource Types Reference. To apply this policy to multiple resource types, specify a resource type of ResourceTypeList and then specify the resource types in a ResourceTypeList.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResourceTypeList": {
        "description": "An array of ResourceType objects. Use this only to specify multiple resource types. To specify a single resource type, use ResourceType.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResourcesCleanUp": {
        "description": "Indicates whether AWS Firewall Manager should automatically remove protections from resources that leave the policy scope and clean up resources that Firewall Manager is managing for accounts when those accounts leave policy scope. For example, Firewall Manager will disassociate a Firewall Manager managed web ACL from a protected customer resource when the customer resource leaves policy scope.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SecurityServicePolicyData": {
        "description": "Details about the security service that is being used to protect the resources.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A collection of key:value pairs associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-fms-policy.html",
    "properties": [
      "DeleteAllPolicyResources",
      "ExcludeMap",
      "ExcludeResourceTags",
      "IncludeMap",
      "PolicyName",
      "RemediationEnabled",
      "ResourcesCleanUp",
      "ResourceTags",
      "ResourceType",
      "ResourceTypeList",
      "SecurityServicePolicyData",
      "Tags"
    ]
  },
  "AWS::FSx::DataRepositoryAssociation": {
    "full_properties": {
      "BatchImportMetaDataOnCreate": {
        "description": "A boolean flag indicating whether an import data repository task to import metadata should run after the data repository association is created. The task runs if this flag is set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "DataRepositoryPath": {
        "description": "The path to the data repository that will be linked to the cache or file system.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FileSystemId": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FileSystemPath": {
        "description": "A path on the Amazon FSx for Lustre file system that points to a high-level directory (such as /ns1/) or subdirectory (such as /ns1/subdir/) that will be mapped 1-1 with DataRepositoryPath. The leading forward slash in the name is required. Two data repository associations cannot have overlapping file system paths. For example, if a data repository is associated with file system path /ns1/, then you cannot link another data repository with file system path /ns1/ns2.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ImportedFileChunkSize": {
        "description": "For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. The maximum number of disks that a single file can be striped across is limited by the total number of disks that make up the file system or cache.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "S3": {
        "description": "The configuration for an Amazon S3 data repository linked to an Amazon FSx for Lustre file system with a data repository association.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-fsx-datarepositoryassociation.html",
    "properties": [
      "BatchImportMetaDataOnCreate",
      "DataRepositoryPath",
      "FileSystemId",
      "FileSystemPath",
      "ImportedFileChunkSize",
      "S3",
      "Tags"
    ]
  },
  "AWS::FSx::FileSystem": {
    "full_properties": {
      "BackupId": {
        "description": "The ID of the file system backup that you are using to create a file system. For more information, see CreateFileSystemFromBackup.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FileSystemType": {
        "description": "The type of Amazon FSx file system, which can be LUSTRE, WINDOWS, ONTAP, or OPENZFS.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FileSystemTypeVersion": {
        "description": "(Optional) For FSx for Lustre file systems, sets the Lustre version for the file system that you're creating. Valid values are 2.10 and 2.12:",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The ID of the AWS Key Management Service (AWS KMS) key used to encrypt Amazon FSx file system data. Used as follows with Amazon FSx file system types:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LustreConfiguration": {
        "description": "The Lustre configuration for the file system being created.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OntapConfiguration": {
        "description": "The ONTAP configuration properties of the FSx for ONTAP file system that you are creating.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OpenZFSConfiguration": {
        "description": "The Amazon FSx for OpenZFS configuration properties for the file system that you are creating.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "A list of IDs specifying the security groups to apply to all network interfaces created for file system access. This list isn't returned in later requests to describe the file system.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "StorageCapacity": {
        "description": "Sets the storage capacity of the file system that you're creating. StorageCapacity is required if you are creating a new file system.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StorageType": {
        "description": "Sets the storage type for the file system that you're creating. Valid values are SSD and HDD.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "Specifies the IDs of the subnets that the file system will be accessible from. For Windows and ONTAP MULTI_AZ_1 deployment types,provide exactly two subnet IDs, one for the preferred file server and one for the standby file server. You specify one of these subnets as the preferred subnet using the WindowsConfiguration > PreferredSubnetID or OntapConfiguration > PreferredSubnetID properties. For more information about Multi-AZ file system configuration, see Availability and durability: Single-AZ and Multi-AZ file systems in the Amazon FSx for Windows User Guide and Availability and durability in the Amazon FSx for ONTAP User Guide.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WindowsConfiguration": {
        "description": "The configuration object for the Microsoft Windows file system you are creating. This value is required if FileSystemType is set to WINDOWS.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-fsx-filesystem.html",
    "properties": [
      "BackupId",
      "FileSystemType",
      "FileSystemTypeVersion",
      "KmsKeyId",
      "LustreConfiguration",
      "OntapConfiguration",
      "OpenZFSConfiguration",
      "SecurityGroupIds",
      "StorageCapacity",
      "StorageType",
      "SubnetIds",
      "Tags",
      "WindowsConfiguration"
    ]
  },
  "AWS::FSx::Snapshot": {
    "full_properties": {
      "Name": {
        "description": "The name of the snapshot.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VolumeId": {
        "description": "The ID of the volume that the snapshot is of.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-fsx-snapshot.html",
    "properties": [
      "Name",
      "Tags",
      "VolumeId"
    ]
  },
  "AWS::FSx::StorageVirtualMachine": {
    "full_properties": {
      "ActiveDirectoryConfiguration": {
        "description": "Describes the Microsoft Active Directory configuration to which the SVM is joined, if applicable.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FileSystemId": {
        "description": "Specifies the FSx for ONTAP file system on which to create the SVM.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the SVM.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RootVolumeSecurityStyle": {
        "description": "The security style of the root volume of the SVM. Specify one of the following values:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SvmAdminPassword": {
        "description": "Specifies the password to use when logging on to the SVM using a secure shell (SSH) connection to the SVM's management endpoint. Doing so enables you to manage the SVM using the NetApp ONTAP CLI or REST API. If you do not specify a password, you can still use the file system's fsxadmin user to manage the SVM. For more information, see  Managing SVMs using the NetApp ONTAP CLI in the FSx for ONTAP User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-fsx-storagevirtualmachine.html",
    "properties": [
      "ActiveDirectoryConfiguration",
      "FileSystemId",
      "Name",
      "RootVolumeSecurityStyle",
      "SvmAdminPassword",
      "Tags"
    ]
  },
  "AWS::FSx::Volume": {
    "full_properties": {
      "BackupId": {
        "description": "Specifies the ID of the volume backup to use to create a new volume.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the volume.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OntapConfiguration": {
        "description": "The configuration of an Amazon FSx for NetApp ONTAP volume.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OpenZFSConfiguration": {
        "description": "The configuration of an Amazon FSx for OpenZFS volume.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VolumeType": {
        "description": "The type of the volume.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-fsx-volume.html",
    "properties": [
      "BackupId",
      "Name",
      "OntapConfiguration",
      "OpenZFSConfiguration",
      "Tags",
      "VolumeType"
    ]
  },
  "AWS::FinSpace::Environment": {
    "full_properties": {
      "DataBundles": {
        "description": "The list of Amazon Resource Names (ARN) of the data bundles to install. Currently supported data bundle ARNs:",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the FinSpace environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FederationMode": {
        "description": "The authentication mode for the environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FederationParameters": {
        "description": "Configuration information when authentication mode is FEDERATED.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The KMS key id used to encrypt in the FinSpace environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the FinSpace environment.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SuperuserParameters": {
        "description": "Configuration information for the superuser.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-finspace-environment.html",
    "properties": [
      "DataBundles",
      "Description",
      "FederationMode",
      "FederationParameters",
      "KmsKeyId",
      "Name",
      "SuperuserParameters"
    ]
  },
  "AWS::Forecast::Dataset": {
    "full_properties": {
      "DataFrequency": {
        "description": "The frequency of data collection. This parameter is required for RELATED_TIME_SERIES datasets.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DatasetName": {
        "description": "The name of the dataset.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatasetType": {
        "description": "The dataset type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Domain": {
        "description": "The domain associated with the dataset.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EncryptionConfig": {
        "description": "A Key Management Service (KMS) key and the Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Schema": {
        "description": "The schema for the dataset. The schema attributes and their order must match the fields in your data. The dataset Domain and DatasetType that you choose determine the minimum required fields in your training data. For information about the required fields for a specific dataset domain and type, see Dataset Domains and Dataset Types.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-forecast-dataset.html",
    "properties": [
      "DataFrequency",
      "DatasetName",
      "DatasetType",
      "Domain",
      "EncryptionConfig",
      "Schema",
      "Tags"
    ]
  },
  "AWS::Forecast::DatasetGroup": {
    "full_properties": {
      "DatasetArns": {
        "description": "An array of Amazon Resource Names (ARNs) of the datasets that you want to include in the dataset group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DatasetGroupName": {
        "description": "The name of the dataset group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Domain": {
        "description": "The domain associated with the dataset group. When you add a dataset to a dataset group, this value and the value specified for the Domain parameter of the CreateDataset operation must match.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-forecast-datasetgroup.html",
    "properties": [
      "DatasetArns",
      "DatasetGroupName",
      "Domain",
      "Tags"
    ]
  },
  "AWS::FraudDetector::Detector": {
    "full_properties": {
      "AssociatedModels": {
        "description": "The models to associate with this detector. You must provide the ARNs of all the models you want to associate.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The detector description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DetectorId": {
        "description": "The name of the detector.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DetectorVersionStatus": {
        "description": "The status of the detector version. If a value is not provided for this property, AWS CloudFormation assumes DRAFT status.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventType": {
        "description": "The event type associated with this detector.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuleExecutionMode": {
        "description": "The rule execution mode for the rules included in the detector version.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Rules": {
        "description": "The rules to include in the detector version.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-frauddetector-detector.html",
    "properties": [
      "AssociatedModels",
      "Description",
      "DetectorId",
      "DetectorVersionStatus",
      "EventType",
      "RuleExecutionMode",
      "Rules",
      "Tags"
    ]
  },
  "AWS::FraudDetector::EntityType": {
    "full_properties": {
      "Description": {
        "description": "The entity type description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The entity type name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A key and value pair.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-frauddetector-entitytype.html",
    "properties": [
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::FraudDetector::EventType": {
    "full_properties": {
      "Description": {
        "description": "The event type description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EntityTypes": {
        "description": "The event type entity types.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "EventVariables": {
        "description": "The event type event variables.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Labels": {
        "description": "The event type labels.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The event type name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-frauddetector-eventtype.html",
    "properties": [
      "Description",
      "EntityTypes",
      "EventVariables",
      "Labels",
      "Name",
      "Tags"
    ]
  },
  "AWS::FraudDetector::Label": {
    "full_properties": {
      "Description": {
        "description": "The label description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The label name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-frauddetector-label.html",
    "properties": [
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::FraudDetector::Outcome": {
    "full_properties": {
      "Description": {
        "description": "The outcome description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The outcome name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-frauddetector-outcome.html",
    "properties": [
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::FraudDetector::Variable": {
    "full_properties": {
      "DataSource": {
        "description": "The data source of the variable.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DataType": {
        "description": "The data type of the variable.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultValue": {
        "description": "The default value of the variable.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the variable.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the variable.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VariableType": {
        "description": "The type of the variable. For more information see Variable types.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-frauddetector-variable.html",
    "properties": [
      "DataSource",
      "DataType",
      "DefaultValue",
      "Description",
      "Name",
      "Tags",
      "VariableType"
    ]
  },
  "AWS::GameLift::Alias": {
    "full_properties": {
      "Description": {
        "description": "A human-readable description of the alias.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A descriptive label that is associated with an alias. Alias names do not need to be unique.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoutingStrategy": {
        "description": "The routing configuration, including routing type and fleet target, for the alias.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-alias.html",
    "properties": [
      "Description",
      "Name",
      "RoutingStrategy"
    ]
  },
  "AWS::GameLift::Build": {
    "full_properties": {
      "Name": {
        "description": "A descriptive label that is associated with a build. Build names do not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OperatingSystem": {
        "description": "The operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build. If your game build contains multiple executables, they all must run on the same operating system. If an operating system is not specified when creating a build, Amazon GameLift uses the default value (WINDOWS_2012). This value cannot be changed later.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageLocation": {
        "description": "Information indicating where your game build files are stored. Use this parameter only when creating a build with files stored in an Amazon S3 bucket that you own. The storage location must specify an Amazon S3 bucket name and key. The location must also specify a role ARN that you set up to allow Amazon GameLift to access your Amazon S3 bucket. The S3 bucket and your new build must be in the same Region.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Version": {
        "description": "Version information that is associated with this build. Version strings do not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-build.html",
    "properties": [
      "Name",
      "OperatingSystem",
      "StorageLocation",
      "Version"
    ]
  },
  "AWS::GameLift::Fleet": {
    "full_properties": {
      "BuildId": {
        "description": "A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateConfiguration": {
        "description": "Prompts GameLift to generate a TLS/SSL certificate for the fleet. GameLift uses the certificates to encrypt traffic between game clients and the game servers running on GameLift. By default, the CertificateConfiguration is DISABLED. You can't change this property after you create the fleet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A human-readable description of the fleet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DesiredEC2Instances": {
        "description": "The number of EC2 instances that you want this fleet to host. When creating a new fleet, GameLift automatically sets this value to \"1\" and initiates a single instance. Once the fleet is active, update this value to trigger GameLift to add or remove instances from the fleet.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "EC2InboundPermissions": {
        "description": "The allowed IP address ranges and port settings that allow inbound traffic to access game sessions on this fleet. If the fleet is hosting a custom game build, this property must be set before players can connect to game sessions. For Realtime Servers fleets, GameLift automatically sets TCP and UDP ranges.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EC2InstanceType": {
        "description": "The GameLift-supported Amazon EC2 instance type to use for all fleet instances. Instance type determines the computing resources that will be used to host your game servers, including CPU, memory, storage, and networking capacity. See Amazon Elastic Compute Cloud Instance Types for detailed descriptions of Amazon EC2 instance types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "FleetType": {
        "description": "Indicates whether to use On-Demand or Spot instances for this fleet. By default, this property is set to ON_DEMAND. Learn more about when to use  On-Demand versus Spot Instances. This property cannot be changed after the fleet is created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceRoleARN": {
        "description": "A unique identifier for an IAM role that manages access to your AWS services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN by using the IAM dashboard in the AWS Management Console. Learn more about using on-box credentials for your game servers at  Access external resources from a game server.  This property cannot be changed after the fleet is created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Locations": {
        "description": "A set of remote locations to deploy additional instances to and manage as part of the fleet. This parameter can only be used when creating fleets in AWS Regions that support multiple locations. You can add any GameLift-supported AWS Region as a remote location, in the form of an AWS Region code such as us-west-2. To create a fleet with instances in the home Region only, omit this parameter.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaxSize": {
        "description": "The maximum number of instances that are allowed in the specified fleet location. If this parameter is not set, the default is 1.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MetricGroups": {
        "description": "The name of an AWS CloudWatch metric group to add this fleet to. A metric group is used to aggregate the metrics for multiple fleets. You can specify an existing metric group name or set a new name to create a new metric group. A fleet can be included in only one metric group at a time.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "The minimum number of instances that are allowed in the specified fleet location. If this parameter is not set, the default is 0.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "A descriptive label that is associated with a fleet. Fleet names do not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NewGameSessionProtectionPolicy": {
        "description": "The status of termination protection for active game sessions on the fleet. By default, this property is set to NoProtection.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PeerVpcAwsAccountId": {
        "description": "Used when peering your GameLift fleet with a VPC, the unique identifier for the AWS account that owns the VPC. You can find your account ID in the AWS Management Console under account settings.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerVpcId": {
        "description": "A unique identifier for a VPC with resources to be accessed by your GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the VPC Dashboard in the AWS Management Console. Learn more about VPC peering in VPC Peering with GameLift Fleets.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceCreationLimitPolicy": {
        "description": "A policy that limits the number of game sessions that an individual player can create on instances in this fleet within a specified span of time.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuntimeConfiguration": {
        "description": "Instructions for how to launch and maintain server processes on instances in the fleet. The runtime configuration defines one or more server process configurations, each identifying a build executable or Realtime script file and the number of processes of that type to run concurrently.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ScriptId": {
        "description": "The unique identifier for a Realtime configuration script to be deployed on fleet instances. You can use either the script ID or ARN. Scripts must be uploaded to GameLift prior to creating the fleet. This fleet property cannot be changed later.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-gamelift-fleet.html",
    "properties": [
      "BuildId",
      "CertificateConfiguration",
      "Description",
      "DesiredEC2Instances",
      "EC2InboundPermissions",
      "EC2InstanceType",
      "FleetType",
      "InstanceRoleARN",
      "Locations",
      "MaxSize",
      "MetricGroups",
      "MinSize",
      "Name",
      "NewGameSessionProtectionPolicy",
      "PeerVpcAwsAccountId",
      "PeerVpcId",
      "ResourceCreationLimitPolicy",
      "RuntimeConfiguration",
      "ScriptId"
    ]
  },
  "AWS::GameLift::GameServerGroup": {
    "full_properties": {
      "AutoScalingPolicy": {
        "description": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting. The scaling policy uses the metric \"PercentUtilizedGameServers\" to maintain a buffer of idle game servers that can immediately accommodate new games and players. After the Auto Scaling group is created, update this value directly in the Auto Scaling group using the AWS console or APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BalancingStrategy": {
        "description": "Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances in the game server group. Method options include the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeleteOption": {
        "description": "The type of delete to perform. To delete a game server group, specify the DeleteOption. Options include the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GameServerGroupName": {
        "description": "A developer-defined identifier for the game server group. The name is unique for each Region in each AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "GameServerProtectionPolicy": {
        "description": "A flag that indicates whether instances in the game server group are protected from early termination. Unprotected instances that have active game servers running might be terminated during a scale-down event, causing players to be dropped from the game. Protected instances cannot be terminated while there are active game servers running except in the event of a forced game server group deletion (see ). An exception to this is with Spot Instances, which can be terminated by AWS regardless of protection status.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceDefinitions": {
        "description": "The set of Amazon EC2 instance types that GameLift FleetIQ can use when balancing and automatically scaling instances in the corresponding Auto Scaling group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "LaunchTemplate": {
        "description": "The Amazon EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group. You can specify the template using either the template name or ID. For help with creating a launch template, see Creating a Launch Template for an Auto Scaling Group in the Amazon Elastic Compute Cloud Auto Scaling User Guide. After the Auto Scaling group is created, update this value directly in the Auto Scaling group using the AWS console or APIs.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaxSize": {
        "description": "The maximum number of instances allowed in the Amazon EC2 Auto Scaling group. During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum. After the Auto Scaling group is created, update this value directly in the Auto Scaling group using the AWS console or APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "The minimum number of instances allowed in the Amazon EC2 Auto Scaling group. During automatic scaling events, GameLift FleetIQ and Amazon EC2 do not scale down the group below this minimum. In production, this value should be set to at least 1. After the Auto Scaling group is created, update this value directly in the Auto Scaling group using the AWS console or APIs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your Amazon EC2 Auto Scaling groups.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of labels to assign to the new game server group resource. Tags are developer-defined key-value pairs. Tagging AWS resources is useful for resource management, access management, and cost allocation. For more information, see  Tagging AWS Resources in the AWS General Reference. Once the resource is created, you can use TagResource, UntagResource, and ListTagsForResource to add, remove, and view tags, respectively. The maximum tag limit may be lower than stated. See the AWS General Reference for actual tagging limits.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSubnets": {
        "description": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group. By default, all GameLift FleetIQ-supported Availability Zones are used. You can use this parameter to specify VPCs that you've set up. This property cannot be updated after the game server group is created, and the corresponding Auto Scaling group will always use the property value that is set with this request, even if the Auto Scaling group is updated directly.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-gameservergroup.html",
    "properties": [
      "AutoScalingPolicy",
      "BalancingStrategy",
      "DeleteOption",
      "GameServerGroupName",
      "GameServerProtectionPolicy",
      "InstanceDefinitions",
      "LaunchTemplate",
      "MaxSize",
      "MinSize",
      "RoleArn",
      "Tags",
      "VpcSubnets"
    ]
  },
  "AWS::GameLift::GameSessionQueue": {
    "full_properties": {
      "CustomEventData": {
        "description": "Information to be added to all events that are related to this game session queue.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Destinations": {
        "description": "A list of fleets and/or fleet aliases that can be used to fulfill game session placement requests in the queue. Destinations are identified by either a fleet ARN or a fleet alias ARN, and are listed in order of placement preference.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "FilterConfiguration": {
        "description": "A list of locations where a queue is allowed to place new game sessions. Locations are specified in the form of AWS Region codes, such as us-west-2. If this parameter is not set, game sessions can be placed in any queue location.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A descriptive label that is associated with game session queue. Queue names must be unique within each Region.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NotificationTarget": {
        "description": "An SNS topic ARN that is set up to receive game session placement notifications. See Setting up notifications for game session placement.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PlayerLatencyPolicies": {
        "description": "A set of policies that act as a sliding cap on player latency. FleetIQ works to deliver low latency for most players in a game session. These policies ensure that no individual player can be placed into a game with unreasonably high latency. Use multiple policies to gradually relax latency requirements a step at a time. Multiple policies are applied based on their maximum allowed latency, starting with the lowest value.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PriorityConfiguration": {
        "description": "Custom settings to use when prioritizing destinations and locations for game session placements. This configuration replaces the FleetIQ default prioritization process. Priority types that are not explicitly named will be automatically applied at the end of the prioritization process.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of labels to assign to the new game session queue resource. Tags are developer-defined key-value pairs. Tagging AWS resources are useful for resource management, access management and cost allocation. For more information, see  Tagging AWS Resources in the  AWS General Reference. Once the resource is created, you can use TagResource, UntagResource, and ListTagsForResource to add, remove, and view tags. The maximum tag limit may be lower than stated. See the AWS General Reference for actual tagging limits.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TimeoutInSeconds": {
        "description": "The maximum time, in seconds, that a new game session placement request remains in the queue. When a request exceeds this time, the game session placement changes to a TIMED_OUT status.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-gamesessionqueue.html",
    "properties": [
      "CustomEventData",
      "Destinations",
      "FilterConfiguration",
      "Name",
      "NotificationTarget",
      "PlayerLatencyPolicies",
      "PriorityConfiguration",
      "Tags",
      "TimeoutInSeconds"
    ]
  },
  "AWS::GameLift::MatchmakingConfiguration": {
    "full_properties": {
      "AcceptanceRequired": {
        "description": "A flag that determines whether a match that was created with this configuration must be accepted by the matched players. To require acceptance, set to TRUE. With this option enabled, matchmaking tickets use the status REQUIRES_ACCEPTANCE to indicate when a completed potential match is waiting for player acceptance.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AcceptanceTimeoutSeconds": {
        "description": "The length of time (in seconds) to wait for players to accept a proposed match, if acceptance is required.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AdditionalPlayerCount": {
        "description": "The number of player slots in a match to keep open for future players. For example, if the configuration's rule set specifies a match for a single 12-person team, and the additional player count is set to 2, only 10 players are selected for the match. This parameter is not used if FlexMatchMode is set to STANDALONE.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "BackfillMode": {
        "description": "The method used to backfill game sessions that are created with this matchmaking configuration. Specify MANUAL when your game manages backfill requests manually or does not use the match backfill feature. Specify AUTOMATIC to have GameLift create a StartMatchBackfill request whenever a game session has one or more open slots. Learn more about manual and automatic backfill in Backfill Existing Games with FlexMatch. Automatic backfill is not available when FlexMatchMode is set to STANDALONE.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CustomEventData": {
        "description": "Information to add to all events related to the matchmaking configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A descriptive label that is associated with matchmaking configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FlexMatchMode": {
        "description": "Indicates whether this matchmaking configuration is being used with GameLift hosting or as a standalone matchmaking solution.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GameProperties": {
        "description": "A set of custom properties for a game session, formatted as key-value pairs. These properties are passed to a game server process with a request to start a new game session. See Start a Game Session. This parameter is not used if FlexMatchMode is set to STANDALONE.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "GameSessionData": {
        "description": "A set of custom game session properties, formatted as a single string value. This data is passed to a game server process with a request to start a new game session. See Start a Game Session. This parameter is not used ifFlexMatchMode is set to STANDALONE.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GameSessionQueueArns": {
        "description": "The Amazon Resource Name (ARN) that is assigned to a GameLift game session queue resource and uniquely identifies it. ARNs are unique across all Regions. Format is arn:aws:gamelift:<region>::gamesessionqueue/<queue name>. Queues can be located in any Region. Queues are used to start new GameLift-hosted game sessions for matches that are created with this matchmaking configuration. If FlexMatchMode is set to STANDALONE, do not set this parameter.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A unique identifier for the matchmaking configuration. This name is used to identify the configuration associated with a matchmaking request or ticket.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NotificationTarget": {
        "description": "An SNS topic ARN that is set up to receive matchmaking notifications. See Setting up notifications for matchmaking for more information.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestTimeoutSeconds": {
        "description": "The maximum duration, in seconds, that a matchmaking ticket can remain in process before timing out. Requests that fail due to timing out can be resubmitted as needed.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "RuleSetName": {
        "description": "A unique identifier for the matchmaking rule set to use with this configuration. You can use either the rule set name or ARN value. A matchmaking configuration can only use rule sets that are defined in the same Region.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of labels to assign to the new matchmaking configuration resource. Tags are developer-defined key-value pairs. Tagging AWS resources are useful for resource management, access management and cost allocation. For more information, see  Tagging AWS Resources in the  AWS General Reference. Once the resource is created, you can use TagResource, UntagResource, and ListTagsForResource to add, remove, and view tags. The maximum tag limit may be lower than stated. See the AWS General Reference for actual tagging limits.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-matchmakingconfiguration.html",
    "properties": [
      "AcceptanceRequired",
      "AcceptanceTimeoutSeconds",
      "AdditionalPlayerCount",
      "BackfillMode",
      "CustomEventData",
      "Description",
      "FlexMatchMode",
      "GameProperties",
      "GameSessionData",
      "GameSessionQueueArns",
      "Name",
      "NotificationTarget",
      "RequestTimeoutSeconds",
      "RuleSetName",
      "Tags"
    ]
  },
  "AWS::GameLift::MatchmakingRuleSet": {
    "full_properties": {
      "Name": {
        "description": "A unique identifier for the matchmaking rule set. A matchmaking configuration identifies the rule set it uses by this name value. Note that the rule set name is different from the optional name field in the rule set body.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RuleSetBody": {
        "description": "A collection of matchmaking rules, formatted as a JSON string. Comments are not allowed in JSON, but most elements support a description field.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of labels to assign to the new matchmaking rule set resource. Tags are developer-defined key-value pairs. Tagging AWS resources are useful for resource management, access management and cost allocation. For more information, see  Tagging AWS Resources in the  AWS General Reference. Once the resource is created, you can use TagResource, UntagResource, and ListTagsForResource to add, remove, and view tags. The maximum tag limit may be lower than stated. See the AWS General Reference for actual tagging limits.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-matchmakingruleset.html",
    "properties": [
      "Name",
      "RuleSetBody",
      "Tags"
    ]
  },
  "AWS::GameLift::Script": {
    "full_properties": {
      "Name": {
        "description": "A descriptive label that is associated with a script. Script names do not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StorageLocation": {
        "description": "The location of the Amazon S3 bucket where a zipped file containing your Realtime scripts is stored. The storage location must specify the Amazon S3 bucket name, the zip file name (the \"key\"), and a role ARN that allows Amazon GameLift to access the Amazon S3 storage location. The S3 bucket must be in the same Region where you want to create a new script. By default, Amazon GameLift uploads the latest version of the zip file; if you have S3 object versioning turned on, you can use the ObjectVersion parameter to specify an earlier version.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of labels to assign to the new script resource. Tags are developer-defined key-value pairs. Tagging AWS resources are useful for resource management, access management and cost allocation. For more information, see  Tagging AWS Resources in the  AWS General Reference. Once the resource is created, you can use TagResource, UntagResource, and ListTagsForResource to add, remove, and view tags. The maximum tag limit may be lower than stated. See the AWS General Reference for actual tagging limits.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Version": {
        "description": "The version that is associated with a build or script. Version strings do not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-script.html",
    "properties": [
      "Name",
      "StorageLocation",
      "Tags",
      "Version"
    ]
  },
  "AWS::GlobalAccelerator::Accelerator": {
    "full_properties": {
      "Enabled": {
        "description": "Indicates whether the accelerator is enabled. The value is true or false. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IpAddressType": {
        "description": "The IP address type that an accelerator supports. For a standard accelerator, the value can be IPV4 or DUAL_STACK.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IpAddresses": {
        "description": "Optionally, if you've added your own IP address pool to Global Accelerator (BYOIP), you can choose IP addresses from your own pool to use for the accelerator's static IP addresses when you create an accelerator. You can specify one or two addresses, separated by a comma. Do not include the /32 suffix.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the accelerator. The name must contain only alphanumeric characters or hyphens (-), and must not begin or end with a hyphen.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Create tags for an accelerator.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-globalaccelerator-accelerator.html",
    "properties": [
      "Enabled",
      "IpAddresses",
      "IpAddressType",
      "Name",
      "Tags"
    ]
  },
  "AWS::GlobalAccelerator::EndpointGroup": {
    "full_properties": {
      "EndpointConfigurations": {
        "description": "The list of endpoint objects.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EndpointGroupRegion": {
        "description": "The AWS Regions where the endpoint group is located.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "HealthCheckIntervalSeconds": {
        "description": "The time—10 seconds or 30 seconds—between health checks for each endpoint. The default value is 30.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthCheckPath": {
        "description": "If the protocol is HTTP/S, then this value provides the ping path that Global Accelerator uses for the destination on the endpoints for health checks. The default is slash (/).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckPort": {
        "description": "The port that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthCheckProtocol": {
        "description": "The protocol that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group. The default value is TCP.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ListenerArn": {
        "description": "The Amazon Resource Name (ARN) of the listener.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortOverrides": {
        "description": "Allows you to override the destination ports used to route traffic to an endpoint. Using a port override lets you map a list of external destination ports (that your users send traffic to) to a list of internal destination ports that you want an application endpoint to receive traffic on.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThresholdCount": {
        "description": "The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "TrafficDialPercentage": {
        "description": "The percentage of traffic to send to an AWS Regions. Additional traffic is distributed to other endpoint groups for this listener.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-globalaccelerator-endpointgroup.html",
    "properties": [
      "EndpointConfigurations",
      "EndpointGroupRegion",
      "HealthCheckIntervalSeconds",
      "HealthCheckPath",
      "HealthCheckPort",
      "HealthCheckProtocol",
      "ListenerArn",
      "PortOverrides",
      "ThresholdCount",
      "TrafficDialPercentage"
    ]
  },
  "AWS::GlobalAccelerator::Listener": {
    "full_properties": {
      "AcceleratorArn": {
        "description": "The Amazon Resource Name (ARN) of your accelerator.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClientAffinity": {
        "description": "Client affinity lets you direct all requests from a user to the same endpoint, if you have stateful applications, regardless of the port and protocol of the client request. Client affinity gives you control over whether to always route each client to the same specific endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortRanges": {
        "description": "The list of port ranges for the connections from clients to the accelerator.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The protocol for the connections from clients to the accelerator.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-globalaccelerator-listener.html",
    "properties": [
      "AcceleratorArn",
      "ClientAffinity",
      "PortRanges",
      "Protocol"
    ]
  },
  "AWS::Glue::Classifier": {
    "full_properties": {
      "CsvClassifier": {
        "description": "A classifier for comma-separated values (CSV).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "GrokClassifier": {
        "description": "A classifier that uses grok.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "JsonClassifier": {
        "description": "A classifier for JSON content.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "XMLClassifier": {
        "description": "A classifier for XML content.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-classifier.html",
    "properties": [
      "CsvClassifier",
      "GrokClassifier",
      "JsonClassifier",
      "XMLClassifier"
    ]
  },
  "AWS::Glue::Connection": {
    "full_properties": {
      "CatalogId": {
        "description": "The ID of the data catalog to create the catalog object in. Currently, this should be the AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConnectionInput": {
        "description": "The connection that you want to create.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-connection.html",
    "properties": [
      "CatalogId",
      "ConnectionInput"
    ]
  },
  "AWS::Glue::Crawler": {
    "full_properties": {
      "Classifiers": {
        "description": "A list of UTF-8 strings that specify the names of custom classifiers that are associated with the crawler.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Configuration": {
        "description": "Crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler's behavior. For more information, see Configuring a Crawler.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CrawlerSecurityConfiguration": {
        "description": "The name of the SecurityConfiguration structure to be used by this crawler.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DatabaseName": {
        "description": "The name of the database in which the crawler's output is stored.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the crawler.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the crawler.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RecrawlPolicy": {
        "description": "A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Role": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that's used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "For scheduled crawlers, the schedule when the crawler runs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SchemaChangePolicy": {
        "description": "The policy that specifies update and delete behaviors for the crawler. The policy tells the crawler what to do in the event that it detects a change in a table that already exists in the customer's database at the time of the crawl. The SchemaChangePolicy does not affect whether or how new tables and partitions are added. New tables and partitions are always created regardless of the SchemaChangePolicy on a crawler.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TablePrefix": {
        "description": "The prefix added to the names of tables that are created.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to use with this crawler.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Targets": {
        "description": "A collection of targets to crawl.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-crawler.html",
    "properties": [
      "Classifiers",
      "Configuration",
      "CrawlerSecurityConfiguration",
      "DatabaseName",
      "Description",
      "Name",
      "RecrawlPolicy",
      "Role",
      "Schedule",
      "SchemaChangePolicy",
      "TablePrefix",
      "Tags",
      "Targets"
    ]
  },
  "AWS::Glue::DataCatalogEncryptionSettings": {
    "full_properties": {
      "CatalogId": {
        "description": "The ID of the Data Catalog in which the settings are created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataCatalogEncryptionSettings": {
        "description": "Contains configuration information for maintaining Data Catalog security.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-datacatalogencryptionsettings.html",
    "properties": [
      "CatalogId",
      "DataCatalogEncryptionSettings"
    ]
  },
  "AWS::Glue::Database": {
    "full_properties": {
      "CatalogId": {
        "description": "The AWS account ID for the account in which to create the catalog object.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatabaseInput": {
        "description": "The metadata for the database.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-database.html",
    "properties": [
      "CatalogId",
      "DatabaseInput"
    ]
  },
  "AWS::Glue::DevEndpoint": {
    "full_properties": {
      "Arguments": {
        "description": "A map of arguments used to configure the DevEndpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EndpointName": {
        "description": "The name of the DevEndpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExtraJarsS3Path": {
        "description": "The path to one or more Java .jar files in an S3 bucket that should be loaded in your DevEndpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExtraPythonLibsS3Path": {
        "description": "The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your DevEndpoint. Multiple values must be complete paths separated by a comma.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlueVersion": {
        "description": "The AWS Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NumberOfNodes": {
        "description": "The number of AWS Glue Data Processing Units (DPUs) allocated to this DevEndpoint.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "NumberOfWorkers": {
        "description": "The number of workers of a defined workerType that are allocated to the development endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PublicKey": {
        "description": "The public key to be used by this DevEndpoint for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PublicKeys": {
        "description": "A list of public keys to be used by the DevEndpoints for authentication. Using this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role used in this DevEndpoint.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityConfiguration": {
        "description": "The name of the SecurityConfiguration structure to be used with this DevEndpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "A list of security group identifiers used in this DevEndpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The subnet ID for this DevEndpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to use with this DevEndpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WorkerType": {
        "description": "The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-devendpoint.html",
    "properties": [
      "Arguments",
      "EndpointName",
      "ExtraJarsS3Path",
      "ExtraPythonLibsS3Path",
      "GlueVersion",
      "NumberOfNodes",
      "NumberOfWorkers",
      "PublicKey",
      "PublicKeys",
      "RoleArn",
      "SecurityConfiguration",
      "SecurityGroupIds",
      "SubnetId",
      "Tags",
      "WorkerType"
    ]
  },
  "AWS::Glue::Job": {
    "full_properties": {
      "AllocatedCapacity": {
        "description": "The number of capacity units that are allocated to this job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Command": {
        "description": "The code that executes a job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Connections": {
        "description": "The connections used for this job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefaultArguments": {
        "description": "The default arguments for this job, specified as name-value pairs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the job.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionClass": {
        "description": "Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionProperty": {
        "description": "The maximum number of concurrent runs that are allowed for this job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "GlueVersion": {
        "description": "Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for jobs of type Spark.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LogUri": {
        "description": "This field is reserved for future use.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxCapacity": {
        "description": "The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaxRetries": {
        "description": "The maximum number of times to retry this job after a JobRun fails.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name you assign to this job definition.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NonOverridableArguments": {
        "description": "Non-overridable arguments for this job, specified as name-value pairs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NotificationProperty": {
        "description": "Specifies configuration properties of a notification.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NumberOfWorkers": {
        "description": "The number of workers of a defined workerType that are allocated when a job runs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Role": {
        "description": "The name or Amazon Resource Name (ARN) of the IAM role associated with this job.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityConfiguration": {
        "description": "The name of the SecurityConfiguration structure to be used with this job.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to use with this job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Timeout": {
        "description": "The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "WorkerType": {
        "description": "The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-job.html",
    "properties": [
      "AllocatedCapacity",
      "Command",
      "Connections",
      "DefaultArguments",
      "Description",
      "ExecutionClass",
      "ExecutionProperty",
      "GlueVersion",
      "LogUri",
      "MaxCapacity",
      "MaxRetries",
      "Name",
      "NonOverridableArguments",
      "NotificationProperty",
      "NumberOfWorkers",
      "Role",
      "SecurityConfiguration",
      "Tags",
      "Timeout",
      "WorkerType"
    ]
  },
  "AWS::Glue::MLTransform": {
    "full_properties": {
      "Description": {
        "description": "A user-defined, long-form description text for the machine learning transform.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlueVersion": {
        "description": "This value determines which version of AWS Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9.  For more information, see AWS Glue Versions in the developer guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InputRecordTables": {
        "description": "A list of AWS Glue table definitions used by the transform.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "MaxCapacity": {
        "description": "The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the AWS Glue pricing page.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaxRetries": {
        "description": "The maximum number of times to retry after an MLTaskRun of the machine learning transform fails.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "A user-defined name for the machine learning transform. Names are required to be unique. Name is optional:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NumberOfWorkers": {
        "description": "The number of workers of a defined workerType that are allocated when a task of the transform runs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Role": {
        "description": "The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. The required permissions include both AWS Glue service role permissions to AWS Glue resources, and Amazon S3 permissions required by the transform.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to use with this machine learning transform. You may use tags to limit access to the machine learning transform. For more information about tags in AWS Glue, see AWS Tags in AWS Glue in the developer guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Timeout": {
        "description": "The timeout in minutes of the machine learning transform.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "TransformEncryption": {
        "description": "The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TransformParameters": {
        "description": "The algorithm-specific parameters that are associated with the machine learning transform.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WorkerType": {
        "description": "The type of predefined worker that is allocated when a task of this transform runs. Accepts a value of Standard, G.1X, or G.2X.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-mltransform.html",
    "properties": [
      "Description",
      "GlueVersion",
      "InputRecordTables",
      "MaxCapacity",
      "MaxRetries",
      "Name",
      "NumberOfWorkers",
      "Role",
      "Tags",
      "Timeout",
      "TransformEncryption",
      "TransformParameters",
      "WorkerType"
    ]
  },
  "AWS::Glue::Partition": {
    "full_properties": {
      "CatalogId": {
        "description": "The AWS account ID of the catalog in which the partion is to be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatabaseName": {
        "description": "The name of the catalog database in which to create the partition.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PartitionInput": {
        "description": "The structure used to create and update a partition.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TableName": {
        "description": "The name of the metadata table in which the partition is to be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-glue-partition.html",
    "properties": [
      "CatalogId",
      "DatabaseName",
      "PartitionInput",
      "TableName"
    ]
  },
  "AWS::Glue::Registry": {
    "full_properties": {
      "Description": {
        "description": "A description of the registry.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the registry.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "AWS tags that contain a key value pair and may be searched by console, command line, or API.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-registry.html",
    "properties": [
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::Glue::Schema": {
    "full_properties": {
      "CheckpointVersion": {
        "description": "Specify the VersionNumber or the IsLatest for setting the checkpoint for the schema. This is only required for updating a checkpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Compatibility": {
        "description": "The compatibility mode of the schema.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DataFormat": {
        "description": "The data format of the schema definition. Currently only AVRO is supported.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the schema if specified when created.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "Name of the schema to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark. No whitespace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Registry": {
        "description": "The registry where a schema is stored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SchemaDefinition": {
        "description": "The schema definition using the DataFormat setting for SchemaName.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "AWS tags that contain a key value pair and may be searched by console, command line, or API.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-schema.html",
    "properties": [
      "CheckpointVersion",
      "Compatibility",
      "DataFormat",
      "Description",
      "Name",
      "Registry",
      "SchemaDefinition",
      "Tags"
    ]
  },
  "AWS::Glue::SchemaVersion": {
    "full_properties": {
      "Schema": {
        "description": "The schema that includes the schema version.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SchemaDefinition": {
        "description": "The schema definition for the schema version.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-glue-schemaversion.html",
    "properties": [
      "Schema",
      "SchemaDefinition"
    ]
  },
  "AWS::Glue::SchemaVersionMetadata": {
    "full_properties": {
      "Key": {
        "description": "A metadata key in a key-value pair for metadata.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SchemaVersionId": {
        "description": "The version number of the schema.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Value": {
        "description": "A metadata key's corresponding value.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-glue-schemaversionmetadata.html",
    "properties": [
      "Key",
      "SchemaVersionId",
      "Value"
    ]
  },
  "AWS::Glue::SecurityConfiguration": {
    "full_properties": {
      "EncryptionConfiguration": {
        "description": "The encryption configuration associated with this security configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the security configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-glue-securityconfiguration.html",
    "properties": [
      "EncryptionConfiguration",
      "Name"
    ]
  },
  "AWS::Glue::Table": {
    "full_properties": {
      "CatalogId": {
        "description": "The ID of the Data Catalog in which to create the Table.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatabaseName": {
        "description": "The name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TableInput": {
        "description": "A structure used to define a table.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-table.html",
    "properties": [
      "CatalogId",
      "DatabaseName",
      "TableInput"
    ]
  },
  "AWS::Glue::Trigger": {
    "full_properties": {
      "Actions": {
        "description": "The actions initiated by this trigger.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of this trigger.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventBatchingCondition": {
        "description": "Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the trigger.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Predicate": {
        "description": "The predicate of this trigger, which defines when it will fire.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "A cron expression used to specify the schedule. For more information, see Time-Based Schedules for Jobs and Crawlers in the AWS Glue Developer Guide. For example, to run something every day at 12:15 UTC, specify cron(15 12 * * ? *).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StartOnCreation": {
        "description": "Set to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to use with this trigger.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of trigger that this is.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkflowName": {
        "description": "The name of the workflow associated with the trigger.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-glue-trigger.html",
    "properties": [
      "Actions",
      "Description",
      "EventBatchingCondition",
      "Name",
      "Predicate",
      "Schedule",
      "StartOnCreation",
      "Tags",
      "Type",
      "WorkflowName"
    ]
  },
  "AWS::Glue::Workflow": {
    "full_properties": {
      "DefaultRunProperties": {
        "description": "A collection of properties to be used as part of each execution of the workflow",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the workflow",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxConcurrentRuns": {
        "description": "You can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the workflow representing the flow",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to use with this workflow.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-workflow.html",
    "properties": [
      "DefaultRunProperties",
      "Description",
      "MaxConcurrentRuns",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::ConnectorDefinition": {
    "full_properties": {
      "InitialVersion": {
        "description": "The connector definition version to include when the connector definition is created. A connector definition version contains a list of connector property types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the connector definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the connector definition. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-connectordefinition.html",
    "properties": [
      "InitialVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::ConnectorDefinitionVersion": {
    "full_properties": {
      "ConnectorDefinitionId": {
        "description": "The ID of the connector definition associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Connectors": {
        "description": "The connectors in this version. Only one instance of a given connector can be added to the connector definition version at a time.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-connectordefinitionversion.html",
    "properties": [
      "ConnectorDefinitionId",
      "Connectors"
    ]
  },
  "AWS::Greengrass::CoreDefinition": {
    "full_properties": {
      "InitialVersion": {
        "description": "The core definition version to include when the core definition is created. Currently, a core definition version can contain only one core.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the core definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the core definition. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-coredefinition.html",
    "properties": [
      "InitialVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::CoreDefinitionVersion": {
    "full_properties": {
      "CoreDefinitionId": {
        "description": "The ID of the core definition associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Cores": {
        "description": "The Greengrass core in this version. Currently, the Cores property for a core definition version can contain only one core.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-coredefinitionversion.html",
    "properties": [
      "CoreDefinitionId",
      "Cores"
    ]
  },
  "AWS::Greengrass::DeviceDefinition": {
    "full_properties": {
      "InitialVersion": {
        "description": "The device definition version to include when the device definition is created. A device definition version contains a list of device property types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the device definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the device definition. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-devicedefinition.html",
    "properties": [
      "InitialVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::DeviceDefinitionVersion": {
    "full_properties": {
      "DeviceDefinitionId": {
        "description": "The ID of the device definition associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Devices": {
        "description": "The devices in this version.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-devicedefinitionversion.html",
    "properties": [
      "DeviceDefinitionId",
      "Devices"
    ]
  },
  "AWS::Greengrass::FunctionDefinition": {
    "full_properties": {
      "InitialVersion": {
        "description": "The function definition version to include when the function definition is created. A function definition version contains a list of function property types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the function definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the function definition. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-functiondefinition.html",
    "properties": [
      "InitialVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::FunctionDefinitionVersion": {
    "full_properties": {
      "DefaultConfig": {
        "description": "The default configuration that applies to all Lambda functions in the group. Individual Lambda functions can override these settings.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "FunctionDefinitionId": {
        "description": "The ID of the function definition associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Functions": {
        "description": "The functions in this version.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-functiondefinitionversion.html",
    "properties": [
      "DefaultConfig",
      "FunctionDefinitionId",
      "Functions"
    ]
  },
  "AWS::Greengrass::Group": {
    "full_properties": {
      "InitialVersion": {
        "description": "The group version to include when the group is created. A group version references the Amazon Resource Name (ARN) of a core definition version, device definition version, subscription definition version, and other version types. The group version must reference a core definition version that contains one core. Other version types are optionally included, depending on your business need.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role attached to the group. This role contains the permissions that Lambda functions and connectors use to interact with other AWS services.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the group. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-group.html",
    "properties": [
      "InitialVersion",
      "Name",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::Greengrass::GroupVersion": {
    "full_properties": {
      "ConnectorDefinitionVersionArn": {
        "description": "The Amazon Resource Name (ARN) of the connector definition version that contains the connectors you want to deploy with the group version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CoreDefinitionVersionArn": {
        "description": "The ARN of the core definition version that contains the core you want to deploy with the group version. Currently, the core definition version can contain only one core.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeviceDefinitionVersionArn": {
        "description": "The ARN of the device definition version that contains the devices you want to deploy with the group version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FunctionDefinitionVersionArn": {
        "description": "The ARN of the function definition version that contains the functions you want to deploy with the group version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GroupId": {
        "description": "The ID of the group associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggerDefinitionVersionArn": {
        "description": "The ARN of the  logger definition version that contains the loggers you want to deploy with the group version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceDefinitionVersionArn": {
        "description": "The ARN of the resource definition version that contains the resources you want to deploy with the group version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubscriptionDefinitionVersionArn": {
        "description": "The ARN of the subscription definition version that contains the subscriptions you want to deploy with the group version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-groupversion.html",
    "properties": [
      "ConnectorDefinitionVersionArn",
      "CoreDefinitionVersionArn",
      "DeviceDefinitionVersionArn",
      "FunctionDefinitionVersionArn",
      "GroupId",
      "LoggerDefinitionVersionArn",
      "ResourceDefinitionVersionArn",
      "SubscriptionDefinitionVersionArn"
    ]
  },
  "AWS::Greengrass::LoggerDefinition": {
    "full_properties": {
      "InitialVersion": {
        "description": "The logger definition version to include when the logger definition is created. A logger definition version contains a list of logger property types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the logger definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the logger definition. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-loggerdefinition.html",
    "properties": [
      "InitialVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::LoggerDefinitionVersion": {
    "full_properties": {
      "LoggerDefinitionId": {
        "description": "The ID of the logger definition associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Loggers": {
        "description": "The loggers in this version.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-loggerdefinitionversion.html",
    "properties": [
      "LoggerDefinitionId",
      "Loggers"
    ]
  },
  "AWS::Greengrass::ResourceDefinition": {
    "full_properties": {
      "InitialVersion": {
        "description": "The resource definition version to include when the resource definition is created. A resource definition version contains a list of resource instance property types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the resource definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the resource definition. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-resourcedefinition.html",
    "properties": [
      "InitialVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::ResourceDefinitionVersion": {
    "full_properties": {
      "ResourceDefinitionId": {
        "description": "The ID of the resource definition associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Resources": {
        "description": "The resources in this version.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-resourcedefinitionversion.html",
    "properties": [
      "ResourceDefinitionId",
      "Resources"
    ]
  },
  "AWS::Greengrass::SubscriptionDefinition": {
    "full_properties": {
      "InitialVersion": {
        "description": "The subscription definition version to include when the subscription definition is created. A subscription definition version contains a list of subscription property types.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the subscription definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the subscription definition. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tagging Your AWS IoT Greengrass Resources in the AWS IoT Greengrass Version 1 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrass-subscriptiondefinition.html",
    "properties": [
      "InitialVersion",
      "Name",
      "Tags"
    ]
  },
  "AWS::Greengrass::SubscriptionDefinitionVersion": {
    "full_properties": {
      "SubscriptionDefinitionId": {
        "description": "The ID of the subscription definition associated with this version. This value is a GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subscriptions": {
        "description": "The subscriptions in this version.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrass-subscriptiondefinitionversion.html",
    "properties": [
      "SubscriptionDefinitionId",
      "Subscriptions"
    ]
  },
  "AWS::GreengrassV2::ComponentVersion": {
    "full_properties": {
      "InlineRecipe": {
        "description": "The recipe to use to create the component. The recipe defines the component's metadata, parameters, dependencies, lifecycle, artifacts, and platform compatibility.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LambdaFunction": {
        "description": "The parameters to create a component from a Lambda function.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the component version. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tag your AWS IoT Greengrass Version 2 resources in the AWS IoT Greengrass V2 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-greengrassv2-componentversion.html",
    "properties": [
      "InlineRecipe",
      "LambdaFunction",
      "Tags"
    ]
  },
  "AWS::GreengrassV2::Deployment": {
    "full_properties": {
      "Components": {
        "description": "The components to deploy. This is a dictionary, where each key is the name of a component, and each key's value is the version and configuration to deploy for that component.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DeploymentName": {
        "description": "The name of the deployment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeploymentPolicies": {
        "description": "The deployment policies for the deployment. These policies define how the deployment updates components and handles failure.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "IotJobConfiguration": {
        "description": "The job configuration for the deployment configuration. The job configuration specifies the rollout, timeout, and stop configurations for the deployment configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Application-specific metadata to attach to the deployment. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see Tag your AWS IoT Greengrass Version 2 resources in the AWS IoT Greengrass V2 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TargetArn": {
        "description": "The ARN of the target AWS IoT thing or thing group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-greengrassv2-deployment.html",
    "properties": [
      "Components",
      "DeploymentName",
      "DeploymentPolicies",
      "IotJobConfiguration",
      "Tags",
      "TargetArn"
    ]
  },
  "AWS::GroundStation::Config": {
    "full_properties": {
      "ConfigData": {
        "description": "Object containing the parameters of a config. Only one subtype may be specified per config. See the subtype definitions for a description of each config subtype.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the config object.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Tags assigned to a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-groundstation-config.html",
    "properties": [
      "ConfigData",
      "Name",
      "Tags"
    ]
  },
  "AWS::GroundStation::DataflowEndpointGroup": {
    "full_properties": {
      "EndpointDetails": {
        "description": "List of Endpoint Details, containing address and port for each endpoint.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Tags assigned to a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-groundstation-dataflowendpointgroup.html",
    "properties": [
      "EndpointDetails",
      "Tags"
    ]
  },
  "AWS::GroundStation::MissionProfile": {
    "full_properties": {
      "ContactPostPassDurationSeconds": {
        "description": "Amount of time in seconds after a contact ends that you’d like to receive a CloudWatch Event indicating the pass has finished. For more information on CloudWatch Events, see the What Is CloudWatch Events?",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ContactPrePassDurationSeconds": {
        "description": "Amount of time in seconds prior to contact start that you'd like to receive a CloudWatch Event indicating an upcoming pass. For more information on CloudWatch Events, see the What Is CloudWatch Events?",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DataflowEdges": {
        "description": "A list containing lists of config ARNs. Each list of config ARNs is an edge, with a \"from\" config and a \"to\" config.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "MinimumViableContactDurationSeconds": {
        "description": "Minimum length of a contact in seconds that Ground Station will return when listing contacts. Ground Station will not return contacts shorter than this duration.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the mission profile.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Tags assigned to the mission profile.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TrackingConfigArn": {
        "description": "The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-groundstation-missionprofile.html",
    "properties": [
      "ContactPostPassDurationSeconds",
      "ContactPrePassDurationSeconds",
      "DataflowEdges",
      "MinimumViableContactDurationSeconds",
      "Name",
      "Tags",
      "TrackingConfigArn"
    ]
  },
  "AWS::GuardDuty::Detector": {
    "full_properties": {
      "DataSources": {
        "description": "Describes which data sources will be enabled for the detector.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Enable": {
        "description": "Specifies whether the detector is to be enabled on creation.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "FindingPublishingFrequency": {
        "description": "Specifies how frequently updated findings are exported.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to be added to a new detector resource. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-guardduty-detector.html",
    "properties": [
      "DataSources",
      "Enable",
      "FindingPublishingFrequency",
      "Tags"
    ]
  },
  "AWS::GuardDuty::Filter": {
    "full_properties": {
      "Action": {
        "description": "Specifies the action that is to be applied to the findings that match the filter.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the filter.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DetectorId": {
        "description": "The ID of the detector belonging to the GuardDuty account that you want to create a filter for.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FindingCriteria": {
        "description": "Represents the criteria to be used in the filter for querying findings.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the filter. Minimum length of 3. Maximum length of 64. Valid characters include alphanumeric characters, dot (.), underscore (_), and dash (-). Spaces are not allowed.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rank": {
        "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to be added to a new filter resource. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-guardduty-filter.html",
    "properties": [
      "Action",
      "Description",
      "DetectorId",
      "FindingCriteria",
      "Name",
      "Rank",
      "Tags"
    ]
  },
  "AWS::GuardDuty::IPSet": {
    "full_properties": {
      "Activate": {
        "description": "Indicates whether or not GuardDuty uses the IPSet.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DetectorId": {
        "description": "The unique ID of the detector of the GuardDuty account that you want to create an IPSet for.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Format": {
        "description": "The format of the file that contains the IPSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Location": {
        "description": "The URI of the file that contains the IPSet.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The user-friendly name to identify the IPSet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to be added to a new IP set resource. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-guardduty-ipset.html",
    "properties": [
      "Activate",
      "DetectorId",
      "Format",
      "Location",
      "Name",
      "Tags"
    ]
  },
  "AWS::GuardDuty::Master": {
    "full_properties": {
      "DetectorId": {
        "description": "The unique ID of the detector of the GuardDuty member account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InvitationId": {
        "description": "The ID of the invitation that is sent to the account designated as a member account. You can find the invitation ID by using the ListInvitation action of the GuardDuty API.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MasterId": {
        "description": "The AWS account ID of the account designated as the GuardDuty administrator account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-guardduty-master.html",
    "properties": [
      "DetectorId",
      "InvitationId",
      "MasterId"
    ]
  },
  "AWS::GuardDuty::Member": {
    "full_properties": {
      "DetectorId": {
        "description": "The ID of the detector associated with the GuardDuty service to add the member to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DisableEmailNotification": {
        "description": "Specifies whether or not to disable email notification for the member account that you invite.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Email": {
        "description": "The email address associated with the member account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MemberId": {
        "description": "The AWS account ID of the account to designate as a member.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Message": {
        "description": "The invitation message that you want to send to the accounts that you're inviting to GuardDuty as members.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Status": {
        "description": "You can use the Status property to update the status of the relationship between the member account and its administrator account. Valid values are Created and Invited when using an AWS::GuardDuty::Member resource. If the value for this property is not provided or set to Created, a member account is created but not invited. If the value of this property is set to Invited, a member account is created and invited.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-guardduty-member.html",
    "properties": [
      "DetectorId",
      "DisableEmailNotification",
      "Email",
      "MemberId",
      "Message",
      "Status"
    ]
  },
  "AWS::GuardDuty::ThreatIntelSet": {
    "full_properties": {
      "Activate": {
        "description": "A Boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DetectorId": {
        "description": "The unique ID of the detector of the GuardDuty account that you want to create a threatIntelSet for.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Format": {
        "description": "The format of the file that contains the ThreatIntelSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Location": {
        "description": "The URI of the file that contains the ThreatIntelSet.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A user-friendly ThreatIntelSet name displayed in all findings that are generated by activity that involves IP addresses included in this ThreatIntelSet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to be added to a new threat list resource. Each tag consists of a key and an optional value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-guardduty-threatintelset.html",
    "properties": [
      "Activate",
      "DetectorId",
      "Format",
      "Location",
      "Name",
      "Tags"
    ]
  },
  "AWS::HealthLake::FHIRDatastore": {
    "full_properties": {
      "DatastoreName": {
        "description": "The user generated name for the Data Store.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatastoreTypeVersion": {
        "description": "The FHIR version of the Data Store. The only supported version is R4.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreloadDataConfig": {
        "description": "The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SseConfiguration": {
        "description": "The server-side encryption key configuration for a customer provided encryption key specified for creating a Data Store.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-healthlake-fhirdatastore.html",
    "properties": [
      "DatastoreName",
      "DatastoreTypeVersion",
      "PreloadDataConfig",
      "SseConfiguration",
      "Tags"
    ]
  },
  "AWS::IAM::AccessKey": {
    "full_properties": {
      "Serial": {
        "description": "This value is specific to CloudFormation and can only be incremented. Incrementing this value notifies CloudFormation that you want to rotate your access key. When you update your stack, CloudFormation will replace the existing access key with a new key.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "The status of the access key. Active means that the key is valid for API calls, while Inactive means it is not.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UserName": {
        "description": "The name of the IAM user that the new key will belong to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-iam-accesskey.html",
    "properties": [
      "Serial",
      "Status",
      "UserName"
    ]
  },
  "AWS::IAM::Group": {
    "full_properties": {
      "GroupName": {
        "description": "The name of the group to create. Do not include the path in this value.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ManagedPolicyArns": {
        "description": "The Amazon Resource Name (ARN) of the IAM policy you want to attach.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Path": {
        "description": "The path to the group. For more information about paths, see IAM identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policies": {
        "description": "Adds or updates an inline policy document that is embedded in the specified IAM group. To view AWS::IAM::Group snippets, see Declaring an IAM Group Resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-iam-group.html",
    "properties": [
      "GroupName",
      "ManagedPolicyArns",
      "Path",
      "Policies"
    ]
  },
  "AWS::IAM::InstanceProfile": {
    "full_properties": {
      "InstanceProfileName": {
        "description": "The name of the instance profile to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Path": {
        "description": "The path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Roles": {
        "description": "The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-instanceprofile.html",
    "properties": [
      "InstanceProfileName",
      "Path",
      "Roles"
    ]
  },
  "AWS::IAM::ManagedPolicy": {
    "full_properties": {
      "Description": {
        "description": "A friendly description of the policy.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Groups": {
        "description": "The name (friendly name, not ARN) of the group to attach the policy to.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ManagedPolicyName": {
        "description": "The friendly name of the policy.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Path": {
        "description": "The path for the policy.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyDocument": {
        "description": "The JSON policy document that you want to use as the content for the new policy.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Roles": {
        "description": "The name (friendly name, not ARN) of the role to attach the policy to.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Users": {
        "description": "The name (friendly name, not ARN) of the IAM user to attach the policy to.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-managedpolicy.html",
    "properties": [
      "Description",
      "Groups",
      "ManagedPolicyName",
      "Path",
      "PolicyDocument",
      "Roles",
      "Users"
    ]
  },
  "AWS::IAM::OIDCProvider": {
    "full_properties": {
      "ClientIdList": {
        "description": "A list of client IDs (also known as audiences) that are associated with the specified IAM OIDC provider resource object. For more information, see CreateOpenIDConnectProvider.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags that are attached to the specified IAM OIDC provider. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThumbprintList": {
        "description": "A list of certificate thumbprints that are associated with the specified IAM OIDC provider resource object. For more information, see CreateOpenIDConnectProvider.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Url": {
        "description": "The URL that the IAM OIDC provider resource object is associated with. For more information, see CreateOpenIDConnectProvider.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iam-oidcprovider.html",
    "properties": [
      "ClientIdList",
      "Tags",
      "ThumbprintList",
      "Url"
    ]
  },
  "AWS::IAM::Policy": {
    "full_properties": {
      "Groups": {
        "description": "The name of the group to associate the policy with.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PolicyDocument": {
        "description": "The policy document.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PolicyName": {
        "description": "The name of the policy document.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Roles": {
        "description": "The name of the role to associate the policy with.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Users": {
        "description": "The name of the user to associate the policy with.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-policy.html",
    "properties": [
      "Groups",
      "PolicyDocument",
      "PolicyName",
      "Roles",
      "Users"
    ]
  },
  "AWS::IAM::Role": {
    "full_properties": {
      "AssumeRolePolicyDocument": {
        "description": "The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see Template Examples. For more information about the elements that you can use in an IAM policy, see IAM Policy Elements Reference in the IAM User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the role that you provide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ManagedPolicyArns": {
        "description": "A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaxSessionDuration": {
        "description": "The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Path": {
        "description": "The path to the role. For more information about paths, see IAM Identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PermissionsBoundary": {
        "description": "The ARN of the policy used to set the permissions boundary for the role.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policies": {
        "description": "Adds or updates an inline policy document that is embedded in the specified IAM role.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RoleName": {
        "description": "A name for the IAM role, up to 64 characters in length. For valid values, see the RoleName parameter for the CreateRole action in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-role.html",
    "properties": [
      "AssumeRolePolicyDocument",
      "Description",
      "ManagedPolicyArns",
      "MaxSessionDuration",
      "Path",
      "PermissionsBoundary",
      "Policies",
      "RoleName",
      "Tags"
    ]
  },
  "AWS::IAM::SAMLProvider": {
    "full_properties": {
      "Name": {
        "description": "The name of the provider to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SamlMetadataDocument": {
        "description": "An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-samlprovider.html",
    "properties": [
      "Name",
      "SamlMetadataDocument",
      "Tags"
    ]
  },
  "AWS::IAM::ServerCertificate": {
    "full_properties": {
      "CertificateBody": {
        "description": "The contents of the public key certificate.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateChain": {
        "description": "The contents of the public key certificate chain.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Path": {
        "description": "The path for the server certificate. For more information about paths, see IAM identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PrivateKey": {
        "description": "The contents of the private key in PEM-encoded format.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServerCertificateName": {
        "description": "The name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags that are attached to the server certificate. For more information about tagging, see Tagging IAM resources in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-servercertificate.html",
    "properties": [
      "CertificateBody",
      "CertificateChain",
      "Path",
      "PrivateKey",
      "ServerCertificateName",
      "Tags"
    ]
  },
  "AWS::IAM::ServiceLinkedRole": {
    "full_properties": {
      "AWSServiceName": {
        "description": "The service principal for the AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: elasticbeanstalk.amazonaws.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CustomSuffix": {
        "description": "",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the role.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-servicelinkedrole.html",
    "properties": [
      "AWSServiceName",
      "CustomSuffix",
      "Description"
    ]
  },
  "AWS::IAM::User": {
    "full_properties": {
      "Groups": {
        "description": "A list of group names to which you want to add the user.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LoginProfile": {
        "description": "Creates a password for the specified IAM user. A password allows an IAM user to access AWS services through the AWS Management Console.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ManagedPolicyArns": {
        "description": "A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the user.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Path": {
        "description": "The path for the user name. For more information about paths, see IAM identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PermissionsBoundary": {
        "description": "The ARN of the policy that is used to set the permissions boundary for the user.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policies": {
        "description": "Adds or updates an inline policy document that is embedded in the specified IAM user. To view AWS::IAM::User snippets, see Declaring an IAM User Resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags that you want to attach to the new user. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserName": {
        "description": "The name of the user to create. Do not include the path in this value.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-iam-user.html",
    "properties": [
      "Groups",
      "LoginProfile",
      "ManagedPolicyArns",
      "Path",
      "PermissionsBoundary",
      "Policies",
      "Tags",
      "UserName"
    ]
  },
  "AWS::IAM::UserToGroupAddition": {
    "full_properties": {
      "GroupName": {
        "description": "The name of the group to update.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Users": {
        "description": "A list of the names of the users that you want to add to the group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-iam-addusertogroup.html",
    "properties": [
      "GroupName",
      "Users"
    ]
  },
  "AWS::IAM::VirtualMFADevice": {
    "full_properties": {
      "Path": {
        "description": "The path for the virtual MFA device. For more information about paths, see IAM identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags that you want to attach to the new IAM virtual MFA device. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Users": {
        "description": "The IAM user associated with this virtual MFA device.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "VirtualMfaDeviceName": {
        "description": "The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iam-virtualmfadevice.html",
    "properties": [
      "Path",
      "Tags",
      "Users",
      "VirtualMfaDeviceName"
    ]
  },
  "AWS::IVS::Channel": {
    "full_properties": {
      "Authorized": {
        "description": "Whether the channel is authorized.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "LatencyMode": {
        "description": "Channel latency mode. Valid values:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "Channel name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RecordingConfigurationArn": {
        "description": "The ARN of a RecordingConfiguration resource. An empty string indicates that recording is disabled for the channel. A RecordingConfiguration ARN indicates that recording is enabled using the specified recording configuration. See the  RecordingConfiguration resource for more information and an example.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately. Valid values:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ivs-channel.html",
    "properties": [
      "Authorized",
      "LatencyMode",
      "Name",
      "RecordingConfigurationArn",
      "Tags",
      "Type"
    ]
  },
  "AWS::IVS::PlaybackKeyPair": {
    "full_properties": {
      "Name": {
        "description": "Playback-key-pair name. The value does not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PublicKeyMaterial": {
        "description": "The public portion of a customer-generated key pair.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ivs-playbackkeypair.html",
    "properties": [
      "Name",
      "PublicKeyMaterial",
      "Tags"
    ]
  },
  "AWS::IVS::RecordingConfiguration": {
    "full_properties": {
      "DestinationConfiguration": {
        "description": "A destination configuration contains information about where recorded video will be stored. See the  DestinationConfiguration property type for more information.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "Recording-configuration name. The value does not need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThumbnailConfiguration": {
        "description": "A thumbnail configuration enables/disables the recording of thumbnails for a live session and controls the interval at which thumbnails are generated for the live session. See the  ThumbnailConfiguration property type for more information.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ivs-recordingconfiguration.html",
    "properties": [
      "DestinationConfiguration",
      "Name",
      "Tags",
      "ThumbnailConfiguration"
    ]
  },
  "AWS::IVS::StreamKey": {
    "full_properties": {
      "ChannelArn": {
        "description": "Channel ARN for the stream.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ivs-streamkey.html",
    "properties": [
      "ChannelArn",
      "Tags"
    ]
  },
  "AWS::IdentityStore::Group": {
    "full_properties": {
      "Description": {
        "description": "A string containing the description of the group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "IdentityStoreId": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-identitystore-group.html",
    "properties": [
      "Description",
      "DisplayName",
      "IdentityStoreId"
    ]
  },
  "AWS::IdentityStore::GroupMembership": {
    "full_properties": {
      "GroupId": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "IdentityStoreId": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MemberId": {
        "description": "An object containing the identifier of a group member. Setting MemberId's UserId field to a specific User's ID indicates we should consider that User as a group member.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-identitystore-groupmembership.html",
    "properties": [
      "GroupId",
      "IdentityStoreId",
      "MemberId"
    ]
  },
  "AWS::ImageBuilder::Component": {
    "full_properties": {
      "ChangeDescription": {
        "description": "The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Data": {
        "description": "Component data contains inline YAML document content for the component. Alternatively, you can specify the uri of a YAML document file stored in Amazon S3. However, you cannot specify both properties.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the component. Describes the contents of the component.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The ID of the KMS key that should be used to encrypt this component.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the component.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Platform": {
        "description": "The platform of the component.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SupportedOsVersions": {
        "description": "The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags of the component.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Uri": {
        "description": "The uri of a YAML component document file. This must be an S3 URL (s3://bucket/key), and the requester must have permission to access the S3 bucket it points to. If you use Amazon S3, you can specify component content up to your service quota.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Version": {
        "description": "The component version. For example, 1.0.0.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-imagebuilder-component.html",
    "properties": [
      "ChangeDescription",
      "Data",
      "Description",
      "KmsKeyId",
      "Name",
      "Platform",
      "SupportedOsVersions",
      "Tags",
      "Uri",
      "Version"
    ]
  },
  "AWS::ImageBuilder::ContainerRecipe": {
    "full_properties": {
      "Components": {
        "description": "Build and test components that are included in the container recipe. Recipes require a minimum of one build component, and can have a maximum of 20 build and test components in any combination.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ContainerType": {
        "description": "Specifies the type of container, such as Docker.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the container recipe.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DockerfileTemplateData": {
        "description": "Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DockerfileTemplateUri": {
        "description": "The S3 URI for the Dockerfile that will be used to build your container image.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ImageOsVersionOverride": {
        "description": "Specifies the operating system version for the base image.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceConfiguration": {
        "description": "A group of options that can be used to configure an instance for building and testing container images.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "Identifies which KMS key is used to encrypt the container image for distribution to the target Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the container recipe.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParentImage": {
        "description": "The base image for the container recipe.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PlatformOverride": {
        "description": "Specifies the operating system platform when you use a custom base image.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags that are attached to the container recipe.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TargetRepository": {
        "description": "The destination repository for the container image.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Version": {
        "description": "The semantic version of the container recipe.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkingDirectory": {
        "description": "The working directory for use during build and test workflows.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-imagebuilder-containerrecipe.html",
    "properties": [
      "Components",
      "ContainerType",
      "Description",
      "DockerfileTemplateData",
      "DockerfileTemplateUri",
      "ImageOsVersionOverride",
      "InstanceConfiguration",
      "KmsKeyId",
      "Name",
      "ParentImage",
      "PlatformOverride",
      "Tags",
      "TargetRepository",
      "Version",
      "WorkingDirectory"
    ]
  },
  "AWS::ImageBuilder::DistributionConfiguration": {
    "full_properties": {
      "Description": {
        "description": "The description of this distribution configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Distributions": {
        "description": "The distributions of this distribution configuration formatted as an array of Distribution objects.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of this distribution configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags of this distribution configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-imagebuilder-distributionconfiguration.html",
    "properties": [
      "Description",
      "Distributions",
      "Name",
      "Tags"
    ]
  },
  "AWS::ImageBuilder::Image": {
    "full_properties": {
      "ContainerRecipeArn": {
        "description": "The Amazon Resource Name (ARN) of the container recipe that is used for this pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DistributionConfigurationArn": {
        "description": "The Amazon Resource Name (ARN) of the distribution configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnhancedImageMetadataEnabled": {
        "description": "Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ImageRecipeArn": {
        "description": "The Amazon Resource Name (ARN) of the image recipe.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ImageTestsConfiguration": {
        "description": "The configuration settings for your image test components, which includes a toggle that allows you to turn off tests, and a timeout setting.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "InfrastructureConfigurationArn": {
        "description": "The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags of the image.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-imagebuilder-image.html",
    "properties": [
      "ContainerRecipeArn",
      "DistributionConfigurationArn",
      "EnhancedImageMetadataEnabled",
      "ImageRecipeArn",
      "ImageTestsConfiguration",
      "InfrastructureConfigurationArn",
      "Tags"
    ]
  },
  "AWS::ImageBuilder::ImagePipeline": {
    "full_properties": {
      "ContainerRecipeArn": {
        "description": "The Amazon Resource Name (ARN) of the container recipe that is used for this pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of this image pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DistributionConfigurationArn": {
        "description": "The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnhancedImageMetadataEnabled": {
        "description": "Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ImageRecipeArn": {
        "description": "The Amazon Resource Name (ARN) of the image recipe associated with this image pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageTestsConfiguration": {
        "description": "The configuration of the image tests that run after image creation to ensure the quality of the image that was created.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InfrastructureConfigurationArn": {
        "description": "The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the image pipeline.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Schedule": {
        "description": "The schedule of the image pipeline. A schedule configures how often and when a pipeline automatically creates a new image.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Status": {
        "description": "The status of the image pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags of this image pipeline.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-imagebuilder-imagepipeline.html",
    "properties": [
      "ContainerRecipeArn",
      "Description",
      "DistributionConfigurationArn",
      "EnhancedImageMetadataEnabled",
      "ImageRecipeArn",
      "ImageTestsConfiguration",
      "InfrastructureConfigurationArn",
      "Name",
      "Schedule",
      "Status",
      "Tags"
    ]
  },
  "AWS::ImageBuilder::ImageRecipe": {
    "full_properties": {
      "AdditionalInstanceConfiguration": {
        "description": "Before you create a new AMI, Image Builder launches temporary Amazon EC2 instances to build and test your image configuration. Instance configuration adds a layer of control over those instances. You can define settings and add scripts to run when an instance is launched from your AMI.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BlockDeviceMappings": {
        "description": "The block device mappings to apply when creating images from this recipe.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Components": {
        "description": "The components of the image recipe. Components are orchestration documents that define a sequence of steps for downloading, installing, configuring, and testing software packages. They also define validation and security hardening steps. A component is defined using a YAML document format.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the image recipe.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the image recipe.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParentImage": {
        "description": "The parent image of the image recipe. The string must be either an Image ARN or an AMI ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags of the image recipe.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Version": {
        "description": "The semantic version of the image recipe.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkingDirectory": {
        "description": "The working directory to be used during build and test workflows.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-imagebuilder-imagerecipe.html",
    "properties": [
      "AdditionalInstanceConfiguration",
      "BlockDeviceMappings",
      "Components",
      "Description",
      "Name",
      "ParentImage",
      "Tags",
      "Version",
      "WorkingDirectory"
    ]
  },
  "AWS::ImageBuilder::InfrastructureConfiguration": {
    "full_properties": {
      "Description": {
        "description": "The description of the infrastructure configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceMetadataOptions": {
        "description": "The instance metadata option settings for the infrastructure configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceProfileName": {
        "description": "The instance profile of the infrastructure configuration.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceTypes": {
        "description": "The instance types of the infrastructure configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "KeyPair": {
        "description": "The Amazon EC2 key pair of the infrastructure configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Logging": {
        "description": "The logging configuration defines where Image Builder uploads your logs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the infrastructure configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceTags": {
        "description": "The tags attached to the resource created by Image Builder.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "The security group IDs of the infrastructure configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the SNS topic for the infrastructure configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The subnet ID of the infrastructure configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags of the infrastructure configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TerminateInstanceOnFailure": {
        "description": "The terminate instance on failure configuration of the infrastructure configuration.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-imagebuilder-infrastructureconfiguration.html",
    "properties": [
      "Description",
      "InstanceMetadataOptions",
      "InstanceProfileName",
      "InstanceTypes",
      "KeyPair",
      "Logging",
      "Name",
      "ResourceTags",
      "SecurityGroupIds",
      "SnsTopicArn",
      "SubnetId",
      "Tags",
      "TerminateInstanceOnFailure"
    ]
  },
  "AWS::Inspector::AssessmentTarget": {
    "full_properties": {
      "AssessmentTargetName": {
        "description": "The name of the Amazon Inspector assessment target. The name must be unique within the AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceGroupArn": {
        "description": "The ARN that specifies the resource group that is used to create the assessment target. If resourceGroupArn is not specified, all EC2 instances in the current AWS account and Region are included in the assessment target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-inspector-assessmenttarget.html",
    "properties": [
      "AssessmentTargetName",
      "ResourceGroupArn"
    ]
  },
  "AWS::Inspector::AssessmentTemplate": {
    "full_properties": {
      "AssessmentTargetArn": {
        "description": "The ARN of the assessment target to be included in the assessment template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AssessmentTemplateName": {
        "description": "The user-defined name that identifies the assessment template that you want to create. You can create several assessment templates for the same assessment target. The names of the assessment templates that correspond to a particular assessment target must be unique.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DurationInSeconds": {
        "description": "The duration of the assessment run in seconds.",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "RulesPackageArns": {
        "description": "The ARNs of the rules packages that you want to use in the assessment template.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "UserAttributesForFindings": {
        "description": "The user-defined attributes that are assigned to every finding that is generated by the assessment run that uses this assessment template. Within an assessment template, each key must be unique.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-inspector-assessmenttemplate.html",
    "properties": [
      "AssessmentTargetArn",
      "AssessmentTemplateName",
      "DurationInSeconds",
      "RulesPackageArns",
      "UserAttributesForFindings"
    ]
  },
  "AWS::Inspector::ResourceGroup": {
    "full_properties": {
      "ResourceGroupTags": {
        "description": "The tags (key and value pairs) that will be associated with the resource group.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-inspector-resourcegroup.html",
    "properties": [
      "ResourceGroupTags"
    ]
  },
  "AWS::InspectorV2::Filter": {
    "full_properties": {
      "Description": {
        "description": "A description of the filter.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FilterAction": {
        "description": "The action that is to be applied to the findings that match the filter.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "FilterCriteria": {
        "description": "Details on the filter criteria associated with this filter.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the filter.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-inspectorv2-filter.html",
    "properties": [
      "Description",
      "FilterAction",
      "FilterCriteria",
      "Name"
    ]
  },
  "AWS::IoT1Click::Device": {
    "full_properties": {
      "DeviceId": {
        "description": "The ID of the device, such as G030PX0312744DWM.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Enabled": {
        "description": "A Boolean value indicating whether the device is enabled (true) or not (false).",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot1click-device.html",
    "properties": [
      "DeviceId",
      "Enabled"
    ]
  },
  "AWS::IoT1Click::Placement": {
    "full_properties": {
      "AssociatedDevices": {
        "description": "The devices to associate with the placement, as defined by a mapping of zero or more key-value pairs wherein the key is a template name and the value is a device ID.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Attributes": {
        "description": "The user-defined attributes associated with the placement.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PlacementName": {
        "description": "The name of the placement.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProjectName": {
        "description": "The name of the project containing the placement.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot1click-placement.html",
    "properties": [
      "AssociatedDevices",
      "Attributes",
      "PlacementName",
      "ProjectName"
    ]
  },
  "AWS::IoT1Click::Project": {
    "full_properties": {
      "Description": {
        "description": "The description of the project.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PlacementTemplate": {
        "description": "An object describing the project's placement specifications.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ProjectName": {
        "description": "The name of the project from which to obtain information.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot1click-project.html",
    "properties": [
      "Description",
      "PlacementTemplate",
      "ProjectName"
    ]
  },
  "AWS::IoT::AccountAuditConfiguration": {
    "full_properties": {
      "AccountId": {
        "description": "The ID of the account. You can use the expression !Sub \"${AWS::AccountId}\" to use your account ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AuditCheckConfigurations": {
        "description": "Specifies which audit checks are enabled and disabled for this account.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AuditNotificationTargetConfigurations": {
        "description": "Information about the targets to which audit notifications are sent.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the role that grants permission to AWS IoT to access information about your devices, policies, certificates, and other items as required when performing an audit.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-accountauditconfiguration.html",
    "properties": [
      "AccountId",
      "AuditCheckConfigurations",
      "AuditNotificationTargetConfigurations",
      "RoleArn"
    ]
  },
  "AWS::IoT::Authorizer": {
    "full_properties": {
      "AuthorizerFunctionArn": {
        "description": "The authorizer's Lambda function ARN.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerName": {
        "description": "The authorizer name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableCachingForHttp": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SigningDisabled": {
        "description": "Specifies whether AWS IoT validates the token signature in an authorization request.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "The status of the authorizer.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the custom authorizer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TokenKeyName": {
        "description": "The key used to extract the token from the HTTP headers.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenSigningPublicKeys": {
        "description": "The public keys used to validate the token signature returned by your custom authentication service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-authorizer.html",
    "properties": [
      "AuthorizerFunctionArn",
      "AuthorizerName",
      "EnableCachingForHttp",
      "SigningDisabled",
      "Status",
      "Tags",
      "TokenKeyName",
      "TokenSigningPublicKeys"
    ]
  },
  "AWS::IoT::CACertificate": {
    "full_properties": {
      "AutoRegistrationStatus": {
        "description": "Whether the CA certificate is configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\".",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CACertificatePem": {
        "description": "The certificate data in PEM format.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateMode": {
        "description": "The mode of the CA.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RegistrationConfig": {
        "description": "Information about the registration configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RemoveAutoRegistration": {
        "description": "If true, removes auto registration.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Status": {
        "description": "The status of the CA certificate.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VerificationCertificatePem": {
        "description": "The private key verification certificate.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-cacertificate.html",
    "properties": [
      "AutoRegistrationStatus",
      "CACertificatePem",
      "CertificateMode",
      "RegistrationConfig",
      "RemoveAutoRegistration",
      "Status",
      "Tags",
      "VerificationCertificatePem"
    ]
  },
  "AWS::IoT::Certificate": {
    "full_properties": {
      "CACertificatePem": {
        "description": "The CA certificate used to sign the device certificate being registered, not available when CertificateMode is SNI_ONLY.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateMode": {
        "description": "Specifies which mode of certificate registration to use with this resource. Valid options are DEFAULT with CaCertificatePem and CertificatePem, SNI_ONLY with CertificatePem, and Default with CertificateSigningRequest.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificatePem": {
        "description": "The certificate data in PEM format. Requires SNI_ONLY for the certificate mode or the accompanying CACertificatePem for registration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateSigningRequest": {
        "description": "The certificate signing request (CSR).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "The status of the certificate.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-certificate.html",
    "properties": [
      "CACertificatePem",
      "CertificateMode",
      "CertificatePem",
      "CertificateSigningRequest",
      "Status"
    ]
  },
  "AWS::IoT::CustomMetric": {
    "full_properties": {
      "DisplayName": {
        "description": "The friendly name in the console for the custom metric. This name doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. You can update the friendly name after you define it.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "The name of the custom metric. This will be used in the metric report submitted from the device/thing. The name can't begin with aws:. You can’t change the name after you define it.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MetricType": {
        "description": "The type of the custom metric. Types include string-list, ip-address-list, number-list, and number.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the custom metric.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-custommetric.html",
    "properties": [
      "DisplayName",
      "MetricName",
      "MetricType",
      "Tags"
    ]
  },
  "AWS::IoT::Dimension": {
    "full_properties": {
      "Name": {
        "description": "A unique identifier for the dimension.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StringValues": {
        "description": "Specifies the value or list of values for the dimension. For TOPIC_FILTER dimensions, this is a pattern used to match the MQTT topic (for example, \"admin/#\").",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the dimension.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "Specifies the type of dimension. Supported types: TOPIC_FILTER.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-dimension.html",
    "properties": [
      "Name",
      "StringValues",
      "Tags",
      "Type"
    ]
  },
  "AWS::IoT::DomainConfiguration": {
    "full_properties": {
      "AuthorizerConfig": {
        "description": "An object that specifies the authorization service for a domain.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DomainConfigurationName": {
        "description": "The name of the domain configuration. This value must be unique to a region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainConfigurationStatus": {
        "description": "The status to which the domain configuration should be updated.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The name of the domain.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServerCertificateArns": {
        "description": "The ARNs of the certificates that AWS IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for AWS-managed domains.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ServiceType": {
        "description": "The type of service delivered by the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the domain configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ValidationCertificateArn": {
        "description": "The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for AWS-managed domains.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-domainconfiguration.html",
    "properties": [
      "AuthorizerConfig",
      "DomainConfigurationName",
      "DomainConfigurationStatus",
      "DomainName",
      "ServerCertificateArns",
      "ServiceType",
      "Tags",
      "ValidationCertificateArn"
    ]
  },
  "AWS::IoT::FleetMetric": {
    "full_properties": {
      "AggregationField": {
        "description": "The field to aggregate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AggregationType": {
        "description": "The type of the aggregation query.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The fleet metric description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IndexName": {
        "description": "The name of the index to search.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "The name of the fleet metric to create.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Period": {
        "description": "The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "QueryString": {
        "description": "The search query string.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "QueryVersion": {
        "description": "The query version.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the fleet metric.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Unit": {
        "description": "Used to support unit transformation such as milliseconds to seconds. Must be a unit supported by CW metric. Default to null.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-fleetmetric.html",
    "properties": [
      "AggregationField",
      "AggregationType",
      "Description",
      "IndexName",
      "MetricName",
      "Period",
      "QueryString",
      "QueryVersion",
      "Tags",
      "Unit"
    ]
  },
  "AWS::IoT::JobTemplate": {
    "full_properties": {
      "AbortConfig": {
        "description": "The criteria that determine when and how a job abort takes place.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the job template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Document": {
        "description": "The job document.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DocumentSource": {
        "description": "An S3 link to the job document to use in the template. Required if you don't specify a value for document.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobArn": {
        "description": "The ARN of the job to use as the basis for the job template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobExecutionsRetryConfig": {
        "description": "Allows you to create the criteria to retry a job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "JobExecutionsRolloutConfig": {
        "description": "Allows you to create a staged rollout of a job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "JobTemplateId": {
        "description": "A unique identifier for the job template. We recommend using a UUID. Alpha-numeric characters, \"-\", and \"_\" are valid for use here.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PresignedUrlConfig": {
        "description": "Configuration for pre-signed S3 URLs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the job template.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TimeoutConfig": {
        "description": "Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to IN_PROGRESS. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to TIMED_OUT.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-jobtemplate.html",
    "properties": [
      "AbortConfig",
      "Description",
      "Document",
      "DocumentSource",
      "JobArn",
      "JobExecutionsRetryConfig",
      "JobExecutionsRolloutConfig",
      "JobTemplateId",
      "PresignedUrlConfig",
      "Tags",
      "TimeoutConfig"
    ]
  },
  "AWS::IoT::Logging": {
    "full_properties": {
      "AccountId": {
        "description": "The account ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultLogLevel": {
        "description": "The default log level. Valid Values: DEBUG | INFO | ERROR | WARN | DISABLED",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The role ARN used for the log.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-logging.html",
    "properties": [
      "AccountId",
      "DefaultLogLevel",
      "RoleArn"
    ]
  },
  "AWS::IoT::MitigationAction": {
    "full_properties": {
      "ActionName": {
        "description": "The friendly name of the mitigation action.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ActionParams": {
        "description": "The set of parameters for this mitigation action. The parameters vary, depending on the kind of action you apply.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The IAM role ARN used to apply this mitigation action.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the mitigation action.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-mitigationaction.html",
    "properties": [
      "ActionName",
      "ActionParams",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::IoT::Policy": {
    "full_properties": {
      "PolicyDocument": {
        "description": "The JSON document that describes the policy.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PolicyName": {
        "description": "The policy name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-policy.html",
    "properties": [
      "PolicyDocument",
      "PolicyName"
    ]
  },
  "AWS::IoT::PolicyPrincipalAttachment": {
    "full_properties": {
      "PolicyName": {
        "description": "The name of the AWS IoT policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-policyprincipalattachment.html",
    "properties": [
      "PolicyName",
      "Principal"
    ]
  },
  "AWS::IoT::ProvisioningTemplate": {
    "full_properties": {
      "Description": {
        "description": "The description of the fleet provisioning template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "True to enable the fleet provisioning template, otherwise false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PreProvisioningHook": {
        "description": "Creates a pre-provisioning hook template.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ProvisioningRoleArn": {
        "description": "The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the fleet provisioning template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TemplateBody": {
        "description": "The JSON formatted contents of the fleet provisioning template version.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateName": {
        "description": "The name of the fleet provisioning template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TemplateType": {
        "description": "The type of the provisioning template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-provisioningtemplate.html",
    "properties": [
      "Description",
      "Enabled",
      "PreProvisioningHook",
      "ProvisioningRoleArn",
      "Tags",
      "TemplateBody",
      "TemplateName",
      "TemplateType"
    ]
  },
  "AWS::IoT::ResourceSpecificLogging": {
    "full_properties": {
      "LogLevel": {
        "description": "The default log level.Valid Values: DEBUG | INFO | ERROR | WARN | DISABLED",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetName": {
        "description": "The target name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetType": {
        "description": "The target type. Valid Values: DEFAULT | THING_GROUP",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-resourcespecificlogging.html",
    "properties": [
      "LogLevel",
      "TargetName",
      "TargetType"
    ]
  },
  "AWS::IoT::RoleAlias": {
    "full_properties": {
      "CredentialDurationSeconds": {
        "description": "The number of seconds for which the credential is valid.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "RoleAlias": {
        "description": "The role alias.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The role ARN.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-rolealias.html",
    "properties": [
      "CredentialDurationSeconds",
      "RoleAlias",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::IoT::ScheduledAudit": {
    "full_properties": {
      "DayOfMonth": {
        "description": "The day of the month on which the scheduled audit is run (if the frequency is \"MONTHLY\"). If days 29-31 are specified, and the month does not have that many days, the audit takes place on the \"LAST\" day of the month.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DayOfWeek": {
        "description": "The day of the week on which the scheduled audit is run (if the frequency is \"WEEKLY\" or \"BIWEEKLY\").",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Frequency": {
        "description": "How often the scheduled audit occurs.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduledAuditName": {
        "description": "The name of the scheduled audit.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the scheduled audit.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetCheckNames": {
        "description": "Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use DescribeAccountAuditConfiguration to see the list of all checks, including those that are enabled or use UpdateAccountAuditConfiguration to select which checks are enabled.)",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-scheduledaudit.html",
    "properties": [
      "DayOfMonth",
      "DayOfWeek",
      "Frequency",
      "ScheduledAuditName",
      "Tags",
      "TargetCheckNames"
    ]
  },
  "AWS::IoT::SecurityProfile": {
    "full_properties": {
      "AdditionalMetricsToRetainV2": {
        "description": "A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it's also retained for any metric specified here. Can be used with custom metrics; can't be used with dimensions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AlertTargets": {
        "description": "Specifies the destinations to which alerts are sent. (Alerts are always sent to the console.) Alerts are generated when a device (thing) violates a behavior.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Behaviors": {
        "description": "Specifies the behaviors that, when violated by a device (thing), cause an alert.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecurityProfileDescription": {
        "description": "A description of the security profile.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityProfileName": {
        "description": "The name you gave to the security profile.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the security profile.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetArns": {
        "description": "The ARN of the target (thing group) to which the security profile is attached.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-securityprofile.html",
    "properties": [
      "AdditionalMetricsToRetainV2",
      "AlertTargets",
      "Behaviors",
      "SecurityProfileDescription",
      "SecurityProfileName",
      "Tags",
      "TargetArns"
    ]
  },
  "AWS::IoT::Thing": {
    "full_properties": {
      "AttributePayload": {
        "description": "A string that contains up to three key value pairs. Maximum length of 800. Duplicates not allowed.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ThingName": {
        "description": "The name of the thing to update.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-thing.html",
    "properties": [
      "AttributePayload",
      "ThingName"
    ]
  },
  "AWS::IoT::ThingPrincipalAttachment": {
    "full_properties": {
      "Principal": {
        "description": "The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ThingName": {
        "description": "The name of the AWS IoT thing.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-thingprincipalattachment.html",
    "properties": [
      "Principal",
      "ThingName"
    ]
  },
  "AWS::IoT::TopicRule": {
    "full_properties": {
      "RuleName": {
        "description": "The name of the rule.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the topic rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TopicRulePayload": {
        "description": "The rule payload.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-topicrule.html",
    "properties": [
      "RuleName",
      "Tags",
      "TopicRulePayload"
    ]
  },
  "AWS::IoT::TopicRuleDestination": {
    "full_properties": {
      "HttpUrlProperties": {
        "description": "Properties of the HTTP URL.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "A topic rule destination was created but has not been confirmed. You can set status to IN_PROGRESS by calling UpdateTopicRuleDestination. Calling UpdateTopicRuleDestination causes a new confirmation challenge to be sent to your confirmation endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcProperties": {
        "description": "Properties of the virtual private cloud (VPC) connection.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-topicruledestination.html",
    "properties": [
      "HttpUrlProperties",
      "Status",
      "VpcProperties"
    ]
  },
  "AWS::IoTAnalytics::Channel": {
    "full_properties": {
      "ChannelName": {
        "description": "The name of the channel.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ChannelStorage": {
        "description": "Where channel data is stored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RetentionPeriod": {
        "description": "How long, in days, message data is kept for the channel.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the channel.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotanalytics-channel.html",
    "properties": [
      "ChannelName",
      "ChannelStorage",
      "RetentionPeriod",
      "Tags"
    ]
  },
  "AWS::IoTAnalytics::Dataset": {
    "full_properties": {
      "Actions": {
        "description": "The DatasetAction objects that automatically create the dataset contents.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ContentDeliveryRules": {
        "description": "When dataset contents are created they are delivered to destinations specified here.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DatasetName": {
        "description": "The name of the dataset.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LateDataRules": {
        "description": "A list of data rules that send notifications to CloudWatch, when data arrives late. To specify lateDataRules, the dataset must use a DeltaTimer filter.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RetentionPeriod": {
        "description": "Optional. How long, in days, message data is kept for the dataset.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the data set.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Triggers": {
        "description": "The DatasetTrigger objects that specify when the dataset is automatically updated.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VersioningConfiguration": {
        "description": "Optional. How many versions of dataset contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the retentionPeriod parameter. For more information, see Keeping Multiple Versions of AWS IoT Analytics datasets in the  AWS IoT Analytics User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotanalytics-dataset.html",
    "properties": [
      "Actions",
      "ContentDeliveryRules",
      "DatasetName",
      "LateDataRules",
      "RetentionPeriod",
      "Tags",
      "Triggers",
      "VersioningConfiguration"
    ]
  },
  "AWS::IoTAnalytics::Datastore": {
    "full_properties": {
      "DatastoreName": {
        "description": "The name of the data store.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatastorePartitions": {
        "description": "Information about the partition dimensions in a data store.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DatastoreStorage": {
        "description": "Where data store data is stored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FileFormatConfiguration": {
        "description": "Contains the configuration information of file formats.  AWS IoT Analytics data stores support JSON and Parquet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RetentionPeriod": {
        "description": "How long, in days, message data is kept for the data store. When customerManagedS3 storage is selected, this parameter is ignored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the data store.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotanalytics-datastore.html",
    "properties": [
      "DatastoreName",
      "DatastorePartitions",
      "DatastoreStorage",
      "FileFormatConfiguration",
      "RetentionPeriod",
      "Tags"
    ]
  },
  "AWS::IoTAnalytics::Pipeline": {
    "full_properties": {
      "PipelineActivities": {
        "description": "A list of \"PipelineActivity\" objects. Activities perform transformations on your messages, such as removing, renaming or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "PipelineName": {
        "description": "The name of the pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the pipeline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotanalytics-pipeline.html",
    "properties": [
      "PipelineActivities",
      "PipelineName",
      "Tags"
    ]
  },
  "AWS::IoTCoreDeviceAdvisor::SuiteDefinition": {
    "full_properties": {
      "SuiteDefinitionConfiguration": {
        "description": "The configuration of the Suite Definition. Listed below are the required elements of the SuiteDefinitionConfiguration.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata that can be used to manage the the Suite Definition.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotcoredeviceadvisor-suitedefinition.html",
    "properties": [
      "SuiteDefinitionConfiguration",
      "Tags"
    ]
  },
  "AWS::IoTEvents::AlarmModel": {
    "full_properties": {
      "AlarmCapabilities": {
        "description": "Contains the configuration information of alarm state changes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AlarmEventActions": {
        "description": "Contains information about one or more alarm actions.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AlarmModelDescription": {
        "description": "The description of the alarm model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AlarmModelName": {
        "description": "The name of the alarm model.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AlarmRule": {
        "description": "Defines when your alarm is invoked.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Key": {
        "description": "An input attribute used as a key to create an alarm. AWS IoT Events routes inputs associated with this key to the alarm.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Severity": {
        "description": "A non-negative integer that reflects the severity level of the alarm.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see Tagging your AWS IoT Events resources in the AWS IoT Events Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotevents-alarmmodel.html",
    "properties": [
      "AlarmCapabilities",
      "AlarmEventActions",
      "AlarmModelDescription",
      "AlarmModelName",
      "AlarmRule",
      "Key",
      "RoleArn",
      "Severity",
      "Tags"
    ]
  },
  "AWS::IoTEvents::DetectorModel": {
    "full_properties": {
      "DetectorModelDefinition": {
        "description": "Information that defines how a detector operates.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DetectorModelDescription": {
        "description": "A brief description of the detector model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DetectorModelName": {
        "description": "The name of the detector model.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EvaluationMethod": {
        "description": "Information about the order in which events are evaluated and how actions are executed.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Key": {
        "description": "The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the role that grants permission to AWS IoT Events to perform its operations.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotevents-detectormodel.html",
    "properties": [
      "DetectorModelDefinition",
      "DetectorModelDescription",
      "DetectorModelName",
      "EvaluationMethod",
      "Key",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::IoTEvents::Input": {
    "full_properties": {
      "InputDefinition": {
        "description": "The definition of the input.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InputDescription": {
        "description": "A brief description of the input.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InputName": {
        "description": "The name of the input.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotevents-input.html",
    "properties": [
      "InputDefinition",
      "InputDescription",
      "InputName",
      "Tags"
    ]
  },
  "AWS::IoTFleetHub::Application": {
    "full_properties": {
      "ApplicationDescription": {
        "description": "An optional description of the web application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ApplicationName": {
        "description": "The name of the web application.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The ARN of the role that the web application assumes when it interacts with AWS IoT Core.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A set of key/value pairs that you can use to manage the web application resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotfleethub-application.html",
    "properties": [
      "ApplicationDescription",
      "ApplicationName",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::IoTFleetWise::Campaign": {
    "full_properties": {
      "Action": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "CollectionScheme": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Compression": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataExtraDimensions": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the campaign.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DiagnosticsMode": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExpiryTime": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of a campaign.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PostTriggerCollectionDuration": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Priority": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "SignalCatalogArn": {
        "description": "The ARN of the signal catalog associated with the campaign.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SignalsToCollect": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SpoolingMode": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StartTime": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetArn": {
        "description": "The ARN of a vehicle or fleet to which the campaign is deployed.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iotfleetwise-campaign.html",
    "properties": [
      "Action",
      "CollectionScheme",
      "Compression",
      "DataExtraDimensions",
      "Description",
      "DiagnosticsMode",
      "ExpiryTime",
      "Name",
      "PostTriggerCollectionDuration",
      "Priority",
      "SignalCatalogArn",
      "SignalsToCollect",
      "SpoolingMode",
      "StartTime",
      "Tags",
      "TargetArn"
    ]
  },
  "AWS::IoTFleetWise::DecoderManifest": {
    "full_properties": {
      "Description": {
        "description": "A brief description of the decoder manifest.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ModelManifestArn": {
        "description": "The ARN of a vehicle model (model manifest) associated with the decoder manifest.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the decoder manifest.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkInterfaces": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SignalDecoders": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Status": {
        "description": "The state of the decoder manifest. If the status is ACTIVE, the decoder manifest can't be edited. If the status is marked DRAFT, you can edit the decoder manifest.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotfleetwise-decodermanifest.html",
    "properties": [
      "Description",
      "ModelManifestArn",
      "Name",
      "NetworkInterfaces",
      "SignalDecoders",
      "Status",
      "Tags"
    ]
  },
  "AWS::IoTFleetWise::Fleet": {
    "full_properties": {
      "Description": {
        "description": "A brief description of the fleet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Id": {
        "description": "The unique ID of the fleet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SignalCatalogArn": {
        "description": "The ARN of the signal catalog associated with the fleet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotfleetwise-fleet.html",
    "properties": [
      "Description",
      "Id",
      "SignalCatalogArn",
      "Tags"
    ]
  },
  "AWS::IoTFleetWise::ModelManifest": {
    "full_properties": {
      "Description": {
        "description": "A brief description of the vehicle model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the vehicle model.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Nodes": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SignalCatalogArn": {
        "description": "The ARN of the signal catalog associated with the vehicle model.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Status": {
        "description": "The state of the vehicle model. If the status is ACTIVE, the vehicle model can't be edited. If the status is DRAFT, you can edit the vehicle model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotfleetwise-modelmanifest.html",
    "properties": [
      "Description",
      "Name",
      "Nodes",
      "SignalCatalogArn",
      "Status",
      "Tags"
    ]
  },
  "AWS::IoTFleetWise::SignalCatalog": {
    "full_properties": {
      "Description": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the signal catalog.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Nodes": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotfleetwise-signalcatalog.html",
    "properties": [
      "Description",
      "Name",
      "Nodes",
      "Tags"
    ]
  },
  "AWS::IoTFleetWise::Vehicle": {
    "full_properties": {
      "AssociationBehavior": {
        "description": "An option to create a new AWS IoT thing when creating a vehicle, or to validate an existing thing as a vehicle.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Attributes": {
        "description": "Static information about a vehicle in a key-value pair. For example: \"engine Type\" : \"v6\"",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DecoderManifestArn": {
        "description": "The Amazon Resource Name (ARN) of a decoder manifest associated with the vehicle to create.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ModelManifestArn": {
        "description": "The ARN of the vehicle model (model manifest) to create the vehicle from.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Metadata which can be used to manage the vehicle.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotfleetwise-vehicle.html",
    "properties": [
      "AssociationBehavior",
      "Attributes",
      "DecoderManifestArn",
      "ModelManifestArn",
      "Name",
      "Tags"
    ]
  },
  "AWS::IoTSiteWise::AccessPolicy": {
    "full_properties": {
      "AccessPolicyIdentity": {
        "description": "The identity for this access policy. Choose an IAM Identity Center user, an IAM Identity Center group, or an IAM user.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AccessPolicyPermission": {
        "description": "The permission level for this access policy. Choose either a ADMINISTRATOR or VIEWER. Note that a project ADMINISTRATOR is also known as a project owner.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AccessPolicyResource": {
        "description": "The AWS IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotsitewise-accesspolicy.html",
    "properties": [
      "AccessPolicyIdentity",
      "AccessPolicyPermission",
      "AccessPolicyResource"
    ]
  },
  "AWS::IoTSiteWise::Asset": {
    "full_properties": {
      "AssetDescription": {
        "description": "A description for the asset.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AssetHierarchies": {
        "description": "A list of asset hierarchies that each contain a hierarchyLogicalId. A hierarchy specifies allowed parent/child asset relationships.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AssetModelId": {
        "description": "The ID of the asset model from which to create the asset.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AssetName": {
        "description": "A unique, friendly name for the asset.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AssetProperties": {
        "description": "The list of asset properties for the asset.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs that contain metadata for the asset. For more information, see Tagging your AWS IoT SiteWise resources in the AWS IoT SiteWise User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotsitewise-asset.html",
    "properties": [
      "AssetDescription",
      "AssetHierarchies",
      "AssetModelId",
      "AssetName",
      "AssetProperties",
      "Tags"
    ]
  },
  "AWS::IoTSiteWise::AssetModel": {
    "full_properties": {
      "AssetModelCompositeModels": {
        "description": "The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. You can use composite asset models to define alarms on this asset model.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AssetModelDescription": {
        "description": "A description for the asset model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AssetModelHierarchies": {
        "description": "The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see Defining relationships between assets in the AWS IoT SiteWiseUser Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AssetModelName": {
        "description": "A unique, friendly name for the asset model.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AssetModelProperties": {
        "description": "The property definitions of the asset model. For more information, see Defining data properties in the AWS IoT SiteWise User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs that contain metadata for the asset. For more information, see Tagging your AWS IoT SiteWise resources in the AWS IoT SiteWise User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotsitewise-assetmodel.html",
    "properties": [
      "AssetModelCompositeModels",
      "AssetModelDescription",
      "AssetModelHierarchies",
      "AssetModelName",
      "AssetModelProperties",
      "Tags"
    ]
  },
  "AWS::IoTSiteWise::Dashboard": {
    "full_properties": {
      "DashboardDefinition": {
        "description": "The dashboard definition specified in a JSON literal. For detailed information, see Creating dashboards (CLI) in the AWS IoT SiteWise User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DashboardDescription": {
        "description": "A description for the dashboard.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DashboardName": {
        "description": "A friendly name for the dashboard.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProjectId": {
        "description": "The ID of the project in which to create the dashboard.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pairs that contain metadata for the dashboard. For more information, see Tagging your AWS IoT SiteWise resources in the AWS IoT SiteWise User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotsitewise-dashboard.html",
    "properties": [
      "DashboardDefinition",
      "DashboardDescription",
      "DashboardName",
      "ProjectId",
      "Tags"
    ]
  },
  "AWS::IoTSiteWise::Gateway": {
    "full_properties": {
      "GatewayCapabilitySummaries": {
        "description": "A list of gateway capability summaries that each contain a namespace and status. Each gateway capability defines data sources for the gateway. To retrieve a capability configuration's definition, use DescribeGatewayCapabilityConfiguration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "GatewayName": {
        "description": "A unique, friendly name for the gateway.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "GatewayPlatform": {
        "description": "The gateway's platform. You can only specify one platform in a gateway.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pairs that contain metadata for the gateway. For more information, see Tagging your AWS IoT SiteWise resources in the AWS IoT SiteWise User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotsitewise-gateway.html",
    "properties": [
      "GatewayCapabilitySummaries",
      "GatewayName",
      "GatewayPlatform",
      "Tags"
    ]
  },
  "AWS::IoTSiteWise::Portal": {
    "full_properties": {
      "Alarms": {
        "description": "Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see Monitoring with alarms in the AWS IoT SiteWise Application Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NotificationSenderEmail": {
        "description": "The email address that sends alarm notifications.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortalAuthMode": {
        "description": "The service to use to authenticate users to the portal. Choose from the following options:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortalContactEmail": {
        "description": "The AWS administrator's contact email address.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PortalDescription": {
        "description": "A description for the portal.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortalName": {
        "description": "A friendly name for the portal.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf. For more information, see Using service roles for AWS IoT SiteWise Monitor in the AWS IoT SiteWise User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs that contain metadata for the portal. For more information, see Tagging your AWS IoT SiteWise resources in the AWS IoT SiteWise User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotsitewise-portal.html",
    "properties": [
      "Alarms",
      "NotificationSenderEmail",
      "PortalAuthMode",
      "PortalContactEmail",
      "PortalDescription",
      "PortalName",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::IoTSiteWise::Project": {
    "full_properties": {
      "AssetIds": {
        "description": "A list that contains the IDs of each asset associated with the project.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PortalId": {
        "description": "The ID of the portal in which to create the project.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProjectDescription": {
        "description": "A description for the project.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProjectName": {
        "description": "A friendly name for the project.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs that contain metadata for the project. For more information, see Tagging your AWS IoT SiteWise resources in the AWS IoT SiteWise User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotsitewise-project.html",
    "properties": [
      "AssetIds",
      "PortalId",
      "ProjectDescription",
      "ProjectName",
      "Tags"
    ]
  },
  "AWS::IoTTwinMaker::ComponentType": {
    "full_properties": {
      "ComponentTypeId": {
        "description": "The ID of the component type.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the component type.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExtendsFrom": {
        "description": "The name of the parent component type that this component type extends.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Functions": {
        "description": "An object that maps strings to the functions in the component type. Each string in the mapping must be unique to this object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IsSingleton": {
        "description": "A boolean value that specifies whether an entity can have more than one component of this type.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PropertyDefinitions": {
        "description": "An object that maps strings to the property definitions in the component type. Each string in the mapping must be unique to this object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The ComponentType tags.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WorkspaceId": {
        "description": "The ID of the workspace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iottwinmaker-componenttype.html",
    "properties": [
      "ComponentTypeId",
      "Description",
      "ExtendsFrom",
      "Functions",
      "IsSingleton",
      "PropertyDefinitions",
      "Tags",
      "WorkspaceId"
    ]
  },
  "AWS::IoTTwinMaker::Entity": {
    "full_properties": {
      "Components": {
        "description": "An object that maps strings to the components in the entity. Each string in the mapping must be unique to this object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the entity.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EntityId": {
        "description": "The entity ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EntityName": {
        "description": "The entity name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ParentEntityId": {
        "description": "The ID of the parent entity.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata that you can use to manage the entity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WorkspaceId": {
        "description": "The ID of the workspace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iottwinmaker-entity.html",
    "properties": [
      "Components",
      "Description",
      "EntityId",
      "EntityName",
      "ParentEntityId",
      "Tags",
      "WorkspaceId"
    ]
  },
  "AWS::IoTTwinMaker::Scene": {
    "full_properties": {
      "Capabilities": {
        "description": "A list of capabilities that the scene uses to render.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ContentLocation": {
        "description": "The relative path that specifies the location of the content definition file.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of this scene.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SceneId": {
        "description": "The scene ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The ComponentType tags.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WorkspaceId": {
        "description": "The ID of the workspace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iottwinmaker-scene.html",
    "properties": [
      "Capabilities",
      "ContentLocation",
      "Description",
      "SceneId",
      "Tags",
      "WorkspaceId"
    ]
  },
  "AWS::IoTTwinMaker::Workspace": {
    "full_properties": {
      "Description": {
        "description": "The description of the workspace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Role": {
        "description": "The ARN of the execution role associated with the workspace.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "S3Location": {
        "description": "The ARN of the S3 bucket where resources associated with the workspace are stored.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Metadata that you can use to manage the workspace.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WorkspaceId": {
        "description": "The ID of the workspace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iottwinmaker-workspace.html",
    "properties": [
      "Description",
      "Role",
      "S3Location",
      "Tags",
      "WorkspaceId"
    ]
  },
  "AWS::IoTWireless::Destination": {
    "full_properties": {
      "Description": {
        "description": "The description of the new resource. Maximum length is 2048 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Expression": {
        "description": "The rule name to send messages to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ExpressionType": {
        "description": "The type of value in Expression.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the new resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the IAM Role that authorizes the destination.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-destination.html",
    "properties": [
      "Description",
      "Expression",
      "ExpressionType",
      "Name",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::IoTWireless::DeviceProfile": {
    "full_properties": {
      "LoRaWAN": {
        "description": "LoRaWAN device profile object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the new resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-deviceprofile.html",
    "properties": [
      "LoRaWAN",
      "Name",
      "Tags"
    ]
  },
  "AWS::IoTWireless::FuotaTask": {
    "full_properties": {
      "AssociateMulticastGroup": {
        "description": "The ID of the multicast group to associate with a FUOTA task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AssociateWirelessDevice": {
        "description": "The ID of the wireless device to associate with a multicast group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the new resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisassociateMulticastGroup": {
        "description": "The ID of the multicast group to disassociate from a FUOTA task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisassociateWirelessDevice": {
        "description": "The ID of the wireless device to disassociate from a FUOTA task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FirmwareUpdateImage": {
        "description": "The S3 URI points to a firmware update image that is to be used with a FUOTA task.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "FirmwareUpdateRole": {
        "description": "The firmware update role that is to be used with a FUOTA task.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LoRaWAN": {
        "description": "The LoRaWAN information used with a FUOTA task.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of a FUOTA task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-fuotatask.html",
    "properties": [
      "AssociateMulticastGroup",
      "AssociateWirelessDevice",
      "Description",
      "DisassociateMulticastGroup",
      "DisassociateWirelessDevice",
      "FirmwareUpdateImage",
      "FirmwareUpdateRole",
      "LoRaWAN",
      "Name",
      "Tags"
    ]
  },
  "AWS::IoTWireless::MulticastGroup": {
    "full_properties": {
      "AssociateWirelessDevice": {
        "description": "The ID of the wireless device to associate with a multicast group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the multicast group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisassociateWirelessDevice": {
        "description": "The ID of the wireless device to disassociate from a multicast group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LoRaWAN": {
        "description": "The LoRaWAN information that is to be used with the multicast group.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the multicast group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-multicastgroup.html",
    "properties": [
      "AssociateWirelessDevice",
      "Description",
      "DisassociateWirelessDevice",
      "LoRaWAN",
      "Name",
      "Tags"
    ]
  },
  "AWS::IoTWireless::NetworkAnalyzerConfiguration": {
    "full_properties": {
      "Description": {
        "description": "The description of the resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "Name of the network analyzer configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TraceContent": {
        "description": "Trace content for your wireless gateway and wireless device resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WirelessDevices": {
        "description": "Wireless device resources to add to the network analyzer configuration. Provide the WirelessDeviceId of the resource to add in the input array.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WirelessGateways": {
        "description": "Wireless gateway resources to add to the network analyzer configuration. Provide the WirelessGatewayId of the resource to add in the input array.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-networkanalyzerconfiguration.html",
    "properties": [
      "Description",
      "Name",
      "Tags",
      "TraceContent",
      "WirelessDevices",
      "WirelessGateways"
    ]
  },
  "AWS::IoTWireless::PartnerAccount": {
    "full_properties": {
      "PartnerAccountId": {
        "description": "The ID of the partner account to update.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Sidewalk": {
        "description": "The Sidewalk account credentials.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-partneraccount.html",
    "properties": [
      "PartnerAccountId",
      "Sidewalk",
      "Tags"
    ]
  },
  "AWS::IoTWireless::ServiceProfile": {
    "full_properties": {
      "LoRaWAN": {
        "description": "LoRaWAN service profile object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the new resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-serviceprofile.html",
    "properties": [
      "LoRaWAN",
      "Name",
      "Tags"
    ]
  },
  "AWS::IoTWireless::TaskDefinition": {
    "full_properties": {
      "AutoCreateTasks": {
        "description": "Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the new resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Update": {
        "description": "Information about the gateways to update.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-taskdefinition.html",
    "properties": [
      "AutoCreateTasks",
      "Name",
      "Tags",
      "Update"
    ]
  },
  "AWS::IoTWireless::WirelessDevice": {
    "full_properties": {
      "Description": {
        "description": "The description of the new resource. Maximum length is 2048.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationName": {
        "description": "The name of the destination to assign to the new wireless device. Can have only have alphanumeric, - (hyphen) and _ (underscore) characters and it can't have any spaces.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LastUplinkReceivedAt": {
        "description": "The date and time when the most recent uplink was received.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LoRaWAN": {
        "description": "The device configuration information to use to create the wireless device. Must be at least one of OtaaV10x, OtaaV11, AbpV11, or AbpV10x.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the new resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThingArn": {
        "description": "The ARN of the thing to associate with the wireless device.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Type": {
        "description": "The wireless device type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-wirelessdevice.html",
    "properties": [
      "Description",
      "DestinationName",
      "LastUplinkReceivedAt",
      "LoRaWAN",
      "Name",
      "Tags",
      "ThingArn",
      "Type"
    ]
  },
  "AWS::IoTWireless::WirelessGateway": {
    "full_properties": {
      "Description": {
        "description": "The description of the new resource. The maximum length is 2048 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LastUplinkReceivedAt": {
        "description": "The date and time when the most recent uplink was received.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LoRaWAN": {
        "description": "The gateway configuration information to use to create the wireless gateway.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the new resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags are an array of key-value pairs to attach to the specified resource. Tags can have a minimum of 0 and a maximum of 50 items.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThingArn": {
        "description": "The ARN of the thing to associate with the wireless gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ThingName": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iotwireless-wirelessgateway.html",
    "properties": [
      "Description",
      "LastUplinkReceivedAt",
      "LoRaWAN",
      "Name",
      "Tags",
      "ThingArn",
      "ThingName"
    ]
  },
  "AWS::KMS::Alias": {
    "full_properties": {
      "AliasName": {
        "description": "Specifies the alias name. This value must begin with alias/ followed by a name, such as alias/ExampleAlias.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetKeyId": {
        "description": "Associates the alias with the specified customer managed key. The KMS key must be in the same AWS account and Region.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kms-alias.html",
    "properties": [
      "AliasName",
      "TargetKeyId"
    ]
  },
  "AWS::KMS::Key": {
    "full_properties": {
      "Description": {
        "description": "A description of the KMS key. Use a description that helps you to distinguish this KMS key from others in the account, such as its intended use.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableKeyRotation": {
        "description": "Enables automatic rotation of the key material for the specified KMS key. By default, automatic key rotation is not enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether the KMS key is enabled. Disabled KMS keys cannot be used in cryptographic operations.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KeyPolicy": {
        "description": "The key policy that authorizes use of the KMS key. The key policy must conform to the following rules.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KeySpec": {
        "description": "Specifies the type of KMS key to create. The default value, SYMMETRIC_DEFAULT, creates a KMS key with a 256-bit symmetric key for encryption and decryption. In China Regions, SYMMETRIC_DEFAULT creates a 128-bit symmetric key that uses SM4 encryption. You can't change the KeySpec value after the KMS key is created. For help choosing a key spec for your KMS key, see Choosing a KMS key type in the AWS Key Management Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyUsage": {
        "description": "Determines the cryptographic operations for which you can use the KMS key. The default value is ENCRYPT_DECRYPT. This property is required for asymmetric KMS keys and HMAC KMS keys. You can't change the KeyUsage value after the KMS key is created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MultiRegion": {
        "description": "Creates a multi-Region primary key that you can replicate in other AWS Regions. You can't change the MultiRegion value after the KMS key is created.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "PendingWindowInDays": {
        "description": "Specifies the number of days in the waiting period before AWS KMS deletes a KMS key that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Assigns one or more tags to the replica key.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kms-key.html",
    "properties": [
      "Description",
      "Enabled",
      "EnableKeyRotation",
      "KeyPolicy",
      "KeySpec",
      "KeyUsage",
      "MultiRegion",
      "PendingWindowInDays",
      "Tags"
    ]
  },
  "AWS::KMS::ReplicaKey": {
    "full_properties": {
      "Description": {
        "description": "A description of the KMS key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KeyPolicy": {
        "description": "The key policy that authorizes use of the replica key.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PendingWindowInDays": {
        "description": "Specifies the number of days in the waiting period before AWS KMS deletes a replica key that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PrimaryKeyArn": {
        "description": "Specifies the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS partition. You can create only one replica of a given primary key in each AWS Region .",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Assigns one or more tags to the replica key.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kms-replicakey.html",
    "properties": [
      "Description",
      "Enabled",
      "KeyPolicy",
      "PendingWindowInDays",
      "PrimaryKeyArn",
      "Tags"
    ]
  },
  "AWS::KafkaConnect::Connector": {
    "full_properties": {
      "Capacity": {
        "description": "The connector's compute capacity settings.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConnectorConfiguration": {
        "description": "The configuration of the connector.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ConnectorDescription": {
        "description": "The description of the connector.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConnectorName": {
        "description": "The name of the connector.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KafkaCluster": {
        "description": "The details of the Apache Kafka cluster to which the connector is connected.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KafkaClusterClientAuthentication": {
        "description": "The type of client authentication used to connect to the Apache Kafka cluster. The value is NONE when no client authentication is used.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KafkaClusterEncryptionInTransit": {
        "description": "Details of encryption in transit to the Apache Kafka cluster.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KafkaConnectVersion": {
        "description": "The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogDelivery": {
        "description": "The settings for delivering connector logs to Amazon CloudWatch Logs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Plugins": {
        "description": "Specifies which plugin to use for the connector. You must specify a single-element list. Amazon MSK Connect does not currently support specifying multiple plugins.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ServiceExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon Web Services resources.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkerConfiguration": {
        "description": "The worker configurations that are in use with the connector.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-kafkaconnect-connector.html",
    "properties": [
      "Capacity",
      "ConnectorConfiguration",
      "ConnectorDescription",
      "ConnectorName",
      "KafkaCluster",
      "KafkaClusterClientAuthentication",
      "KafkaClusterEncryptionInTransit",
      "KafkaConnectVersion",
      "LogDelivery",
      "Plugins",
      "ServiceExecutionRoleArn",
      "WorkerConfiguration"
    ]
  },
  "AWS::Kendra::DataSource": {
    "full_properties": {
      "CustomDocumentEnrichmentConfiguration": {
        "description": "Configuration information for altering document metadata and content during the document ingestion process.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DataSourceConfiguration": {
        "description": "Configuration information for an Amazon Kendra data source. The contents of the configuration depend on the type of data source. You can only specify one type of data source in the configuration. Choose from one of the following data sources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the data source.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IndexId": {
        "description": "The identifier of the index that should be associated with this data source.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the data source.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of a role with permission to access the data source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "Sets the frequency that Amazon Kendra checks the documents in your data source and updates the index. If you don't set a schedule, Amazon Kendra doesn't periodically update the index.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of the data source.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-kendra-datasource.html",
    "properties": [
      "CustomDocumentEnrichmentConfiguration",
      "DataSourceConfiguration",
      "Description",
      "IndexId",
      "Name",
      "RoleArn",
      "Schedule",
      "Tags",
      "Type"
    ]
  },
  "AWS::Kendra::Faq": {
    "full_properties": {
      "Description": {
        "description": "A description of the FAQ.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FileFormat": {
        "description": "The format of the input file. You can choose between a basic CSV format, a CSV format that includes customs attributes in a header, and a JSON format that includes custom attributes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IndexId": {
        "description": "The identifier of the index that contains the FAQ.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name that you assigned the FAQ when you created or updated the FAQ.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQ.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "S3Path": {
        "description": "The Amazon Simple Storage Service (Amazon S3) location of the FAQ input data.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kendra-faq.html",
    "properties": [
      "Description",
      "FileFormat",
      "IndexId",
      "Name",
      "RoleArn",
      "S3Path",
      "Tags"
    ]
  },
  "AWS::Kendra::Index": {
    "full_properties": {
      "CapacityUnits": {
        "description": "Specifies capacity units configured for your index. You can add and remove capacity units to tune an index to your requirements. You can set capacity units only for Enterprise edition indexes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the index.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentMetadataConfigurations": {
        "description": "Specifies the properties of an index field. You can add either a custom or a built-in field. You can add and remove built-in fields at any time. When a built-in field is removed it's configuration reverts to the default for the field. Custom fields can't be removed from an index after they are added.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Edition": {
        "description": "Indicates whether the index is a enterprise edition index or a developer edition index. Valid values are DEVELOPER_EDITION and ENTERPRISE_EDITION.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the index.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "An IAM role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role used when you use the BatchPutDocument operation to index documents from an Amazon S3 bucket.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerSideEncryptionConfiguration": {
        "description": "The identifier of the AWS KMS customer managed key (CMK) to use to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserContextPolicy": {
        "description": "The user context policy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UserTokenConfigurations": {
        "description": "Defines the type of user token used for the index.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kendra-index.html",
    "properties": [
      "CapacityUnits",
      "Description",
      "DocumentMetadataConfigurations",
      "Edition",
      "Name",
      "RoleArn",
      "ServerSideEncryptionConfiguration",
      "Tags",
      "UserContextPolicy",
      "UserTokenConfigurations"
    ]
  },
  "AWS::Kinesis::Stream": {
    "full_properties": {
      "Name": {
        "description": "The name of the Kinesis stream. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the stream name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RetentionPeriodHours": {
        "description": "The number of hours for the data records that are stored in shards to remain accessible. The default value is 24. For more information about the stream retention period, see Changing the Data Retention Period in the Amazon Kinesis Developer Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ShardCount": {
        "description": "The number of shards that the stream uses. For greater provisioned throughput, increase the number of shards.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "StreamEncryption": {
        "description": "When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream. Removing this property from your stack template and updating your stack disables encryption.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StreamModeDetails": {
        "description": "Specifies the capacity mode to which you want to set your data stream. Currently, in Kinesis Data Streams, you can choose between an on-demand capacity mode and a provisioned capacity mode for your data streams.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to associate with the Kinesis stream. For information about constraints for this property, see Tag Restrictions in the Amazon Kinesis Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesis-stream.html",
    "properties": [
      "Name",
      "RetentionPeriodHours",
      "ShardCount",
      "StreamEncryption",
      "StreamModeDetails",
      "Tags"
    ]
  },
  "AWS::Kinesis::StreamConsumer": {
    "full_properties": {
      "ConsumerName": {
        "description": "The name of the consumer is something you choose when you register the consumer.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StreamARN": {
        "description": "The ARN of the stream with which you registered the consumer.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-kinesis-streamconsumer.html",
    "properties": [
      "ConsumerName",
      "StreamARN"
    ]
  },
  "AWS::KinesisAnalytics::Application": {
    "full_properties": {
      "ApplicationCode": {
        "description": "One or more SQL statements that read input data, transform it, and generate output. For example, you can write a SQL statement that reads data from one in-application stream, generates a running average of the number of advertisement clicks by vendor, and insert resulting rows in another in-application stream using pumps. For more information about the typical pattern, see Application Code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ApplicationDescription": {
        "description": "Summary description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ApplicationName": {
        "description": "Name of your Amazon Kinesis Analytics application (for example, sample-app).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Inputs": {
        "description": "Use this parameter to configure the application input.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalytics-application.html",
    "properties": [
      "ApplicationCode",
      "ApplicationDescription",
      "ApplicationName",
      "Inputs"
    ]
  },
  "AWS::KinesisAnalytics::ApplicationOutput": {
    "full_properties": {
      "ApplicationName": {
        "description": "Name of the application to which you want to add the output configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Output": {
        "description": "An array of objects, each describing one output configuration. In the output configuration, you specify the name of an in-application stream, a destination (that is, an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream, or an AWS Lambda function), and record the formation to use when writing to the destination.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalytics-applicationoutput.html",
    "properties": [
      "ApplicationName",
      "Output"
    ]
  },
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
    "full_properties": {
      "ApplicationName": {
        "description": "Name of an existing application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReferenceDataSource": {
        "description": "The reference data source can be an object in your Amazon S3 bucket. Amazon Kinesis Analytics reads the object and copies the data into the in-application table that is created. You provide an S3 bucket, object key name, and the resulting in-application table that is created. You must also provide an IAM role with the necessary permissions that Amazon Kinesis Analytics can assume to read the object from your S3 bucket on your behalf.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalytics-applicationreferencedatasource.html",
    "properties": [
      "ApplicationName",
      "ReferenceDataSource"
    ]
  },
  "AWS::KinesisAnalyticsV2::Application": {
    "full_properties": {
      "ApplicationConfiguration": {
        "description": "Use this parameter to configure the application.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ApplicationDescription": {
        "description": "The description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ApplicationMaintenanceConfiguration": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ApplicationMode": {
        "description": "To create a Kinesis Data Analytics Studio notebook, you must set the mode to INTERACTIVE. However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ApplicationName": {
        "description": "The name of the application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RunConfiguration": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuntimeEnvironment": {
        "description": "The runtime environment for the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceExecutionRole": {
        "description": "Specifies the IAM role that the application uses to access external resources.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of one or more tags to assign to the application. A tag is a key-value pair that identifies an application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalyticsv2-application.html",
    "properties": [
      "ApplicationConfiguration",
      "ApplicationDescription",
      "ApplicationMaintenanceConfiguration",
      "ApplicationMode",
      "ApplicationName",
      "RunConfiguration",
      "RuntimeEnvironment",
      "ServiceExecutionRole",
      "Tags"
    ]
  },
  "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CloudWatchLoggingOption": {
        "description": "Provides a description of Amazon CloudWatch logging options, including the log stream Amazon Resource Name (ARN).",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html",
    "properties": [
      "ApplicationName",
      "CloudWatchLoggingOption"
    ]
  },
  "AWS::KinesisAnalyticsV2::ApplicationOutput": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Output": {
        "description": "Describes a SQL-based Kinesis Data Analytics application's output configuration, in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalyticsv2-applicationoutput.html",
    "properties": [
      "ApplicationName",
      "Output"
    ]
  },
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReferenceDataSource": {
        "description": "For a SQL-based Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html",
    "properties": [
      "ApplicationName",
      "ReferenceDataSource"
    ]
  },
  "AWS::KinesisFirehose::DeliveryStream": {
    "full_properties": {
      "AmazonopensearchserviceDestinationConfiguration": {
        "description": "The destination in Amazon OpenSearch Service. You can specify only one destination.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeliveryStreamEncryptionConfigurationInput": {
        "description": "Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeliveryStreamName": {
        "description": "The name of the delivery stream.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeliveryStreamType": {
        "description": "The delivery stream type. This can be one of the following values:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ElasticsearchDestinationConfiguration": {
        "description": "An Amazon ES destination for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "ExtendedS3DestinationConfiguration": {
        "description": "An Amazon S3 destination for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "HttpEndpointDestinationConfiguration": {
        "description": "Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KinesisStreamSourceConfiguration": {
        "description": "When a Kinesis stream is used as the source for the delivery stream, a KinesisStreamSourceConfiguration containing the Kinesis stream ARN and the role ARN for the source stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RedshiftDestinationConfiguration": {
        "description": "An Amazon Redshift destination for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "S3DestinationConfiguration": {
        "description": "The S3DestinationConfiguration property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "SplunkDestinationConfiguration": {
        "description": "The configuration of a destination in Splunk for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A set of tags to assign to the delivery stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the delivery stream. For more information about tags, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisfirehose-deliverystream.html",
    "properties": [
      "AmazonopensearchserviceDestinationConfiguration",
      "DeliveryStreamEncryptionConfigurationInput",
      "DeliveryStreamName",
      "DeliveryStreamType",
      "ElasticsearchDestinationConfiguration",
      "ExtendedS3DestinationConfiguration",
      "HttpEndpointDestinationConfiguration",
      "KinesisStreamSourceConfiguration",
      "RedshiftDestinationConfiguration",
      "S3DestinationConfiguration",
      "SplunkDestinationConfiguration",
      "Tags"
    ]
  },
  "AWS::KinesisVideo::SignalingChannel": {
    "full_properties": {
      "MessageTtlSeconds": {
        "description": "The period of time a signaling channel retains undelivered messages before they are discarded.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the signaling channel that you are creating. It must be unique for each AWS account and AWS Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "A type of the signaling channel that you are creating. Currently, SINGLE_MASTER is the only supported channel type.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisvideo-signalingchannel.html",
    "properties": [
      "MessageTtlSeconds",
      "Name",
      "Tags",
      "Type"
    ]
  },
  "AWS::KinesisVideo::Stream": {
    "full_properties": {
      "DataRetentionInHours": {
        "description": "How long the stream retains data, in hours.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DeviceName": {
        "description": "The name of the device that is associated with the stream.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MediaType": {
        "description": "The MediaType of the stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the stream.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisvideo-stream.html",
    "properties": [
      "DataRetentionInHours",
      "DeviceName",
      "KmsKeyId",
      "MediaType",
      "Name",
      "Tags"
    ]
  },
  "AWS::LakeFormation::DataCellsFilter": {
    "full_properties": {
      "ColumnNames": {
        "description": "An array of UTF-8 strings. A list of column names.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ColumnWildcard": {
        "description": "A wildcard with exclusions. You must specify either a ColumnNames list or the ColumnWildCard.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DatabaseName": {
        "description": "UTF-8 string, not less than 1 or more than 255 bytes long, matching the single-line string pattern.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "UTF-8 string, not less than 1 or more than 255 bytes long, matching the single-line string pattern.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RowFilter": {
        "description": "A PartiQL predicate.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TableCatalogId": {
        "description": "Catalog id string, not less than 1 or more than 255 bytes long, matching the single-line string pattern.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TableName": {
        "description": "UTF-8 string, not less than 1 or more than 255 bytes long, matching the single-line string pattern.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lakeformation-datacellsfilter.html",
    "properties": [
      "ColumnNames",
      "ColumnWildcard",
      "DatabaseName",
      "Name",
      "RowFilter",
      "TableCatalogId",
      "TableName"
    ]
  },
  "AWS::LakeFormation::DataLakeSettings": {
    "full_properties": {
      "Admins": {
        "description": "A list of AWS Lake Formation principals.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TrustedResourceOwners": {
        "description": "An array of UTF-8 strings.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lakeformation-datalakesettings.html",
    "properties": [
      "Admins",
      "TrustedResourceOwners"
    ]
  },
  "AWS::LakeFormation::Permissions": {
    "full_properties": {
      "DataLakePrincipal": {
        "description": "The AWS Lake Formation principal.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Permissions": {
        "description": "The permissions granted or revoked.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PermissionsWithGrantOption": {
        "description": "Indicates the ability to grant permissions (as a subset of permissions granted).",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Resource": {
        "description": "A structure for the resource.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lakeformation-permissions.html",
    "properties": [
      "DataLakePrincipal",
      "Permissions",
      "PermissionsWithGrantOption",
      "Resource"
    ]
  },
  "AWS::LakeFormation::PrincipalPermissions": {
    "full_properties": {
      "Catalog": {
        "description": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Permissions": {
        "description": "The permissions granted or revoked.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PermissionsWithGrantOption": {
        "description": "Indicates the ability to grant permissions (as a subset of permissions granted).",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The principal to be granted a permission.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Resource": {
        "description": "The resource to be granted or revoked permissions.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lakeformation-principalpermissions.html",
    "properties": [
      "Catalog",
      "Permissions",
      "PermissionsWithGrantOption",
      "Principal",
      "Resource"
    ]
  },
  "AWS::LakeFormation::Resource": {
    "full_properties": {
      "ResourceArn": {
        "description": "The Amazon Resource Name (ARN) of the resource.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The IAM role that registered a resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UseServiceLinkedRole": {
        "description": "Designates a trusted caller, an IAM principal, by registering this caller with the Data Catalog.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lakeformation-resource.html",
    "properties": [
      "ResourceArn",
      "RoleArn",
      "UseServiceLinkedRole"
    ]
  },
  "AWS::LakeFormation::Tag": {
    "full_properties": {
      "CatalogId": {
        "description": "Catalog id string, not less than 1 or more than 255 bytes long, matching the single-line string pattern.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TagKey": {
        "description": "UTF-8 string, not less than 1 or more than 255 bytes long, matching the single-line string pattern.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TagValues": {
        "description": "An array of UTF-8 strings, not less than 1 or more than 50 strings.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lakeformation-tag.html",
    "properties": [
      "CatalogId",
      "TagKey",
      "TagValues"
    ]
  },
  "AWS::LakeFormation::TagAssociation": {
    "full_properties": {
      "LFTags": {
        "description": "A structure containing an LF-tag key-value pair.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Resource": {
        "description": "UTF-8 string (valid values: DATABASE | TABLE).",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lakeformation-tagassociation.html",
    "properties": [
      "LFTags",
      "Resource"
    ]
  },
  "AWS::Lambda::Alias": {
    "full_properties": {
      "Description": {
        "description": "A description of the alias.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "The name of the Lambda function.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FunctionVersion": {
        "description": "The function version that the alias invokes.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the alias.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisionedConcurrencyConfig": {
        "description": "Specifies a provisioned concurrency configuration for a function's alias.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoutingConfig": {
        "description": "The routing configuration of the alias.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lambda-alias.html",
    "properties": [
      "Description",
      "FunctionName",
      "FunctionVersion",
      "Name",
      "ProvisionedConcurrencyConfig",
      "RoutingConfig"
    ]
  },
  "AWS::Lambda::CodeSigningConfig": {
    "full_properties": {
      "AllowedPublishers": {
        "description": "List of allowed publishers.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CodeSigningPolicies": {
        "description": "The code signing policy controls the validation failure action for signature mismatch or expiry.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "Code signing configuration description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lambda-codesigningconfig.html",
    "properties": [
      "AllowedPublishers",
      "CodeSigningPolicies",
      "Description"
    ]
  },
  "AWS::Lambda::EventInvokeConfig": {
    "full_properties": {
      "DestinationConfig": {
        "description": "A destination for events after they have been sent to a function for processing.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "The name of the Lambda function.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MaximumEventAgeInSeconds": {
        "description": "The maximum age of a request that Lambda sends to a function for processing.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaximumRetryAttempts": {
        "description": "The maximum number of times to retry when the function returns an error.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Qualifier": {
        "description": "The identifier of a version or alias.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-eventinvokeconfig.html",
    "properties": [
      "DestinationConfig",
      "FunctionName",
      "MaximumEventAgeInSeconds",
      "MaximumRetryAttempts",
      "Qualifier"
    ]
  },
  "AWS::Lambda::EventSourceMapping": {
    "full_properties": {
      "AmazonManagedKafkaEventSourceConfig": {
        "description": "Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "BatchSize": {
        "description": "The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "BisectBatchOnFunctionError": {
        "description": "(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DestinationConfig": {
        "description": "(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "When true, the event source mapping is active. When false, Lambda pauses polling and invocation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventSourceArn": {
        "description": "The Amazon Resource Name (ARN) of the event source.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FilterCriteria": {
        "description": "An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see Lambda event filtering.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "The name of the Lambda function.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "FunctionResponseTypes": {
        "description": "(Streams and SQS) A list of current response type enums applied to the event source mapping.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaximumBatchingWindowInSeconds": {
        "description": "The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaximumRecordAgeInSeconds": {
        "description": "(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaximumRetryAttempts": {
        "description": "(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ParallelizationFactor": {
        "description": "(Streams only) The number of batches to process concurrently from each shard. The default value is 1.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Queues": {
        "description": "(Amazon MQ) The name of the Amazon MQ broker destination queue to consume.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SelfManagedEventSource": {
        "description": "The self-managed Apache Kafka cluster for your event source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SelfManagedKafkaEventSourceConfig": {
        "description": "Specific configuration settings for a self-managed Apache Kafka event source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SourceAccessConfigurations": {
        "description": "An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "StartingPosition": {
        "description": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StartingPositionTimestamp": {
        "description": "With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Topics": {
        "description": "The name of the Kafka topic.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TumblingWindowInSeconds": {
        "description": "(Streams only) The duration in seconds of a processing window. The range is between 1 second and 900 seconds.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lambda-eventsourcemapping.html",
    "properties": [
      "AmazonManagedKafkaEventSourceConfig",
      "BatchSize",
      "BisectBatchOnFunctionError",
      "DestinationConfig",
      "Enabled",
      "EventSourceArn",
      "FilterCriteria",
      "FunctionName",
      "FunctionResponseTypes",
      "MaximumBatchingWindowInSeconds",
      "MaximumRecordAgeInSeconds",
      "MaximumRetryAttempts",
      "ParallelizationFactor",
      "Queues",
      "SelfManagedEventSource",
      "SelfManagedKafkaEventSourceConfig",
      "SourceAccessConfigurations",
      "StartingPosition",
      "StartingPositionTimestamp",
      "Topics",
      "TumblingWindowInSeconds"
    ]
  },
  "AWS::Lambda::Function": {
    "full_properties": {
      "Architectures": {
        "description": "The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is x86_64.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Code": {
        "description": "The code for the function.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CodeSigningConfigArn": {
        "description": "To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeadLetterConfig": {
        "description": "A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see Dead Letter Queues.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the function.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Environment": {
        "description": "Environment variables that are accessible from function code during execution.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EphemeralStorage": {
        "description": "The size of the function’s /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10240 MB.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FileSystemConfigs": {
        "description": "Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an AWS::EFS::MountTarget resource, you must also specify a DependsOn attribute to ensure that the mount target is created or updated before the function.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "The name of the Lambda function, up to 64 characters in length. If you don't specify a name, AWS CloudFormation generates one.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Handler": {
        "description": "The name of the method within your code that Lambda calls to execute your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see Programming Model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageConfig": {
        "description": "Configuration values that override the container image Dockerfile settings. See Container settings.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyArn": {
        "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Layers": {
        "description": "A list of function layers to add to the function's execution environment. Specify each layer by its ARN, including the version.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MemorySize": {
        "description": "The amount of  memory available to the function at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PackageType": {
        "description": "The type of deployment package. Set to Image for container image and set Zip for .zip file archive.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReservedConcurrentExecutions": {
        "description": "The number of simultaneous executions to reserve for the function.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Role": {
        "description": "The Amazon Resource Name (ARN) of the function's execution role.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Runtime": {
        "description": "The identifier of the function's runtime. Runtime is required if the deployment package is a .zip file archive.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags to apply to the function.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Timeout": {
        "description": "The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For additional information, see Lambda execution environment.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "TracingConfig": {
        "description": "Set Mode to Active to sample and trace a subset of incoming requests with X-Ray.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lambda-function.html",
    "properties": [
      "Architectures",
      "Code",
      "CodeSigningConfigArn",
      "DeadLetterConfig",
      "Description",
      "Environment",
      "EphemeralStorage",
      "FileSystemConfigs",
      "FunctionName",
      "Handler",
      "ImageConfig",
      "KmsKeyArn",
      "Layers",
      "MemorySize",
      "PackageType",
      "ReservedConcurrentExecutions",
      "Role",
      "Runtime",
      "Tags",
      "Timeout",
      "TracingConfig",
      "VpcConfig"
    ]
  },
  "AWS::Lambda::LayerVersion": {
    "full_properties": {
      "CompatibleArchitectures": {
        "description": "A list of compatible instruction set architectures.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "CompatibleRuntimes": {
        "description": "A list of compatible function runtimes. Used for filtering with ListLayers and ListLayerVersions.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Content": {
        "description": "The function layer archive.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LayerName": {
        "description": "The name or Amazon Resource Name (ARN) of the layer.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LicenseInfo": {
        "description": "The layer's software license. It can be any of the following:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-layerversion.html",
    "properties": [
      "CompatibleArchitectures",
      "CompatibleRuntimes",
      "Content",
      "Description",
      "LayerName",
      "LicenseInfo"
    ]
  },
  "AWS::Lambda::LayerVersionPermission": {
    "full_properties": {
      "Action": {
        "description": "The API action that grants access to the layer. For example, lambda:GetLayerVersion.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LayerVersionArn": {
        "description": "The name or Amazon Resource Name (ARN) of the layer.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OrganizationId": {
        "description": "With the principal set to *, grant permission to all accounts in the specified organization.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "An account ID, or * to grant layer usage permission to all accounts in an organization, or all AWS accounts (if organizationId is not specified). For the last case, make sure that you really do want all AWS accounts to have usage permission to this layer.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-layerversionpermission.html",
    "properties": [
      "Action",
      "LayerVersionArn",
      "OrganizationId",
      "Principal"
    ]
  },
  "AWS::Lambda::Permission": {
    "full_properties": {
      "Action": {
        "description": "The action that the principal can use on the function. For example, lambda:InvokeFunction or lambda:GetFunction.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventSourceToken": {
        "description": "For Alexa Smart Home functions, a token that must be supplied by the invoker.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FunctionName": {
        "description": "The name of the Lambda function, version, or alias.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FunctionUrlAuthType": {
        "description": "The type of authentication that your function URL uses. Set to AWS_IAM if you want to restrict access to authenticated IAM users only. Set to NONE if you want to bypass IAM authentication to create a public endpoint. For more information, see  Security and auth model for Lambda function URLs.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The AWS service or account that invokes the function. If you specify a service, use SourceArn or SourceAccount to limit who can invoke the function through that service.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrincipalOrgID": {
        "description": "The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceAccount": {
        "description": "For Amazon S3, the ID of the account that owns the resource. Use this together with SourceArn to ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceArn": {
        "description": "For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-permission.html",
    "properties": [
      "Action",
      "EventSourceToken",
      "FunctionName",
      "FunctionUrlAuthType",
      "Principal",
      "PrincipalOrgID",
      "SourceAccount",
      "SourceArn"
    ]
  },
  "AWS::Lambda::Url": {
    "full_properties": {
      "AuthType": {
        "description": "The type of authentication that your function URL uses. Set to AWS_IAM if you want to restrict access to authenticated IAM users only. Set to NONE if you want to bypass IAM authentication to create a public endpoint. For more information, see  Security and auth model for Lambda function URLs.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Cors": {
        "description": "The Cross-Origin Resource Sharing (CORS) settings for your function URL.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InvokeMode": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Qualifier": {
        "description": "The alias name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetFunctionArn": {
        "description": "The name of the Lambda function.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-url.html",
    "properties": [
      "AuthType",
      "Cors",
      "InvokeMode",
      "Qualifier",
      "TargetFunctionArn"
    ]
  },
  "AWS::Lambda::Version": {
    "full_properties": {
      "CodeSha256": {
        "description": "Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.",
        "required": false,
        "type": "String",
        "update_causes": [
          "unavailable",
          "none"
        ]
      },
      "Description": {
        "description": "A description for the version to override the description in the function configuration. Updates are not supported for this property.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "The name of the Lambda function.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisionedConcurrencyConfig": {
        "description": "Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "unavailable",
          "none"
        ]
      }
    },
    "path": "aws-resource-lambda-version.html",
    "properties": [
      "CodeSha256",
      "Description",
      "FunctionName",
      "ProvisionedConcurrencyConfig"
    ]
  },
  "AWS::Lex::Bot": {
    "full_properties": {
      "AutoBuildBotLocales": {
        "description": "Indicates whether Amazon Lex V2 should automatically build the locales for the bot after a change.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "BotFileS3Location": {
        "description": "The Amazon S3 location of files used to import a bot. The files must be in the import format specified in JSON format for importing and exporting in the Amazon Lex developer guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BotLocales": {
        "description": "A list of locales for the bot.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "BotTags": {
        "description": "A list of tags to add to the bot. You can only add tags when you import a bot. You can't use the UpdateBot operation to update tags. To update tags, use the TagResource operation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DataPrivacy": {
        "description": "Provides information on additional privacy protections Amazon Lex should use with the bot's data.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the version.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IdleSessionTTLInSeconds": {
        "description": "The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the field to filter the list of bots.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role used to build and run the bot.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TestBotAliasSettings": {
        "description": "Specifies configuration settings for the alias used to test the bot. If the TestBotAliasSettings property is not specified, the settings are configured with default values.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TestBotAliasTags": {
        "description": "A list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can't use the UpdateAlias operation to update tags. To update tags on the test alias, use the TagResource operation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lex-bot.html",
    "properties": [
      "AutoBuildBotLocales",
      "BotFileS3Location",
      "BotLocales",
      "BotTags",
      "DataPrivacy",
      "Description",
      "IdleSessionTTLInSeconds",
      "Name",
      "RoleArn",
      "TestBotAliasSettings",
      "TestBotAliasTags"
    ]
  },
  "AWS::Lex::BotAlias": {
    "full_properties": {
      "BotAliasLocaleSettings": {
        "description": "Maps configuration information to a specific locale. You can use this parameter to specify a specific Lambda function to run different functions in different locales.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "BotAliasName": {
        "description": "The name of the bot alias.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "BotAliasTags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "BotId": {
        "description": "The unique identifier of the bot.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BotVersion": {
        "description": "The version of the bot that the bot alias references.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ConversationLogSettings": {
        "description": "Specifies whether Amazon Lex logs text and audio for conversations with the bot. When you enable conversation logs, text logs store text input, transcripts of audio input, and associated metadata in Amazon CloudWatch logs. Audio logs store input in Amazon S3.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the bot alias.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SentimentAnalysisSettings": {
        "description": "Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lex-botalias.html",
    "properties": [
      "BotAliasLocaleSettings",
      "BotAliasName",
      "BotAliasTags",
      "BotId",
      "BotVersion",
      "ConversationLogSettings",
      "Description",
      "SentimentAnalysisSettings"
    ]
  },
  "AWS::Lex::BotVersion": {
    "full_properties": {
      "BotId": {
        "description": "The unique identifier of the bot.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BotVersionLocaleSpecification": {
        "description": "Specifies the locales that Amazon Lex adds to this version. You can choose the Draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the version.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lex-botversion.html",
    "properties": [
      "BotId",
      "BotVersionLocaleSpecification",
      "Description"
    ]
  },
  "AWS::Lex::ResourcePolicy": {
    "full_properties": {
      "Policy": {
        "description": "A resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow IAM syntax. If the policy isn't valid, Amazon Lex returns a validation exception.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResourceArn": {
        "description": "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lex-resourcepolicy.html",
    "properties": [
      "Policy",
      "ResourceArn"
    ]
  },
  "AWS::LicenseManager::Grant": {
    "full_properties": {
      "AllowedOperations": {
        "description": "Allowed operations for the grant.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "GrantName": {
        "description": "Grant name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HomeRegion": {
        "description": "Home Region of the grant.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LicenseArn": {
        "description": "License ARN.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Principals": {
        "description": "The grant principals. This value should be specified as an Amazon Resource Name (ARN).",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Status": {
        "description": "Granted license status.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-licensemanager-grant.html",
    "properties": [
      "AllowedOperations",
      "GrantName",
      "HomeRegion",
      "LicenseArn",
      "Principals",
      "Status"
    ]
  },
  "AWS::LicenseManager::License": {
    "full_properties": {
      "Beneficiary": {
        "description": "License beneficiary.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ConsumptionConfiguration": {
        "description": "Configuration for consumption of the license.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Entitlements": {
        "description": "License entitlements.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "HomeRegion": {
        "description": "Home Region of the license.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Issuer": {
        "description": "License issuer.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LicenseMetadata": {
        "description": "License metadata.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LicenseName": {
        "description": "License name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProductName": {
        "description": "Product name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProductSKU": {
        "description": "Product SKU.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Status": {
        "description": "License status.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Validity": {
        "description": "Date and time range during which the license is valid, in ISO8601-UTC format.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-licensemanager-license.html",
    "properties": [
      "Beneficiary",
      "ConsumptionConfiguration",
      "Entitlements",
      "HomeRegion",
      "Issuer",
      "LicenseMetadata",
      "LicenseName",
      "ProductName",
      "ProductSKU",
      "Status",
      "Validity"
    ]
  },
  "AWS::Lightsail::Alarm": {
    "full_properties": {
      "AlarmName": {
        "description": "The name of the alarm.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ComparisonOperator": {
        "description": "The arithmetic operation to use when comparing the specified statistic and threshold.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ContactProtocols": {
        "description": "The contact protocols for the alarm, such as Email, SMS (text messaging), or both.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DatapointsToAlarm": {
        "description": "The number of data points within the evaluation periods that must be breaching to cause the alarm to go to the ALARM state.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "EvaluationPeriods": {
        "description": "The number of periods over which data is compared to the specified threshold.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "The name of the metric associated with the alarm.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "MonitoredResourceName": {
        "description": "The name of the Lightsail resource that the alarm monitors.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "NotificationEnabled": {
        "description": "A Boolean value indicating whether the alarm is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NotificationTriggers": {
        "description": "The alarm states that trigger a notification.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Threshold": {
        "description": "The value against which the specified statistic is compared.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TreatMissingData": {
        "description": "Specifies how the alarm handles missing data points.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-alarm.html",
    "properties": [
      "AlarmName",
      "ComparisonOperator",
      "ContactProtocols",
      "DatapointsToAlarm",
      "EvaluationPeriods",
      "MetricName",
      "MonitoredResourceName",
      "NotificationEnabled",
      "NotificationTriggers",
      "Threshold",
      "TreatMissingData"
    ]
  },
  "AWS::Lightsail::Bucket": {
    "full_properties": {
      "AccessRules": {
        "description": "An object that describes the access rules for the bucket.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BucketName": {
        "description": "The name of the bucket.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BundleId": {
        "description": "The bundle ID for the bucket (for example, small_1_0).",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ObjectVersioning": {
        "description": "Indicates whether object versioning is enabled for the bucket.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ReadOnlyAccessAccounts": {
        "description": "An array of AWS account IDs that have read-only access to the bucket.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ResourcesReceivingAccess": {
        "description": "An array of Lightsail instances that have access to the bucket.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-bucket.html",
    "properties": [
      "AccessRules",
      "BucketName",
      "BundleId",
      "ObjectVersioning",
      "ReadOnlyAccessAccounts",
      "ResourcesReceivingAccess",
      "Tags"
    ]
  },
  "AWS::Lightsail::Certificate": {
    "full_properties": {
      "CertificateName": {
        "description": "The name of the certificate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainName": {
        "description": "The domain name of the certificate.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "SubjectAlternativeNames": {
        "description": "An array of strings that specify the alternate domains (such as example.org) and subdomains (such as blog.example.com) of the certificate.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-certificate.html",
    "properties": [
      "CertificateName",
      "DomainName",
      "SubjectAlternativeNames",
      "Tags"
    ]
  },
  "AWS::Lightsail::Container": {
    "full_properties": {
      "ContainerServiceDeployment": {
        "description": "An object that describes the current container deployment of the container service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "IsDisabled": {
        "description": "A Boolean value indicating whether the container service is disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Power": {
        "description": "The power specification of the container service.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PublicDomainNames": {
        "description": "The public domain name of the container service, such as example.com and www.example.com.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Scale": {
        "description": "The scale specification of the container service.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "ServiceName": {
        "description": "The name of the container service.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-container.html",
    "properties": [
      "ContainerServiceDeployment",
      "IsDisabled",
      "Power",
      "PublicDomainNames",
      "Scale",
      "ServiceName",
      "Tags"
    ]
  },
  "AWS::Lightsail::Database": {
    "full_properties": {
      "AvailabilityZone": {
        "description": "The Availability Zone for the database.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "BackupRetention": {
        "description": "A Boolean value indicating whether automated backup retention is enabled for the database.",
        "required": false,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "CaCertificateIdentifier": {
        "description": "The certificate associated with the database.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterDatabaseName": {
        "description": "The meaning of this parameter differs according to the database engine you use.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "MasterUserPassword": {
        "description": "The password for the primary user of the database. The password can include any printable ASCII character except the following: /, \", or @. It cannot contain spaces.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The name for the primary user.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "PreferredBackupWindow": {
        "description": "The daily time range during which automated backups are created for the database (for example, 16:00-16:30).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range during which system maintenance can occur for the database, formatted as follows: ddd:hh24:mi-ddd:hh24:mi. For example, Tue:17:00-Tue:17:30.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "A Boolean value indicating whether the database is accessible to anyone on the internet.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RelationalDatabaseBlueprintId": {
        "description": "The blueprint ID for the database (for example, mysql_8_0).",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "RelationalDatabaseBundleId": {
        "description": "The bundle ID for the database (for example, medium_1_0).",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "RelationalDatabaseName": {
        "description": "The name of the instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RelationalDatabaseParameters": {
        "description": "An array of parameters for the database.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RotateMasterUserPassword": {
        "description": "A Boolean value indicating whether to change the primary user password to a new, strong password generated by Lightsail.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-database.html",
    "properties": [
      "AvailabilityZone",
      "BackupRetention",
      "CaCertificateIdentifier",
      "MasterDatabaseName",
      "MasterUsername",
      "MasterUserPassword",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "RelationalDatabaseBlueprintId",
      "RelationalDatabaseBundleId",
      "RelationalDatabaseName",
      "RelationalDatabaseParameters",
      "RotateMasterUserPassword",
      "Tags"
    ]
  },
  "AWS::Lightsail::Disk": {
    "full_properties": {
      "AddOns": {
        "description": "An array of add-ons for the disk.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The AWS Region and Availability Zone location for the disk (for example, us-east-1a).",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "DiskName": {
        "description": "The name of the disk.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SizeInGb": {
        "description": "The size of the disk in GB.",
        "required": true,
        "type": "Number",
        "update_causes": "unavailable"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-disk.html",
    "properties": [
      "AddOns",
      "AvailabilityZone",
      "DiskName",
      "SizeInGb",
      "Tags"
    ]
  },
  "AWS::Lightsail::Distribution": {
    "full_properties": {
      "BundleId": {
        "description": "The ID of the bundle applied to the distribution.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "CacheBehaviorSettings": {
        "description": "An object that describes the cache behavior settings of the distribution.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CacheBehaviors": {
        "description": "An array of objects that describe the per-path cache behavior of the distribution.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CertificateName": {
        "description": "The name of the SSL/TLS certificate attached to the distribution.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultCacheBehavior": {
        "description": "An object that describes the default cache behavior of the distribution.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DistributionName": {
        "description": "The name of the distribution",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpAddressType": {
        "description": "The IP address type of the distribution.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "IsEnabled": {
        "description": "A Boolean value indicating whether the distribution is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Origin": {
        "description": "An object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-distribution.html",
    "properties": [
      "BundleId",
      "CacheBehaviors",
      "CacheBehaviorSettings",
      "CertificateName",
      "DefaultCacheBehavior",
      "DistributionName",
      "IpAddressType",
      "IsEnabled",
      "Origin",
      "Tags"
    ]
  },
  "AWS::Lightsail::Instance": {
    "full_properties": {
      "AddOns": {
        "description": "An array of add-ons for the instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone for the instance.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "BlueprintId": {
        "description": "The blueprint ID for the instance (for example, os_amlinux_2016_03).",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "BundleId": {
        "description": "The bundle ID for the instance (for example, micro_1_0).",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Hardware": {
        "description": "The hardware properties for the instance, such as the vCPU count, attached disks, and amount of RAM.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "InstanceName": {
        "description": "The name of the instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyPairName": {
        "description": "The name of the key pair to use for the instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Networking": {
        "description": "The public ports and the monthly amount of data transfer allocated for the instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserData": {
        "description": "The optional launch script for the instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-instance.html",
    "properties": [
      "AddOns",
      "AvailabilityZone",
      "BlueprintId",
      "BundleId",
      "Hardware",
      "InstanceName",
      "KeyPairName",
      "Networking",
      "Tags",
      "UserData"
    ]
  },
  "AWS::Lightsail::LoadBalancer": {
    "full_properties": {
      "AttachedInstances": {
        "description": "The Lightsail instances to attach to the load balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "HealthCheckPath": {
        "description": "The path on the attached instance where the health check will be performed. If no path is specified, the load balancer tries to make a request to the default (root) page (/index.html).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstancePort": {
        "description": "The port that the load balancer uses to direct traffic to your Lightsail instances. For HTTP traffic, specify port 80. For HTTPS traffic, specify port 443.",
        "required": true,
        "type": "Number",
        "update_causes": "unavailable"
      },
      "IpAddressType": {
        "description": "The IP address type of the load balancer.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "LoadBalancerName": {
        "description": "The name of the load balancer.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "SessionStickinessEnabled": {
        "description": "A Boolean value indicating whether session stickiness is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SessionStickinessLBCookieDurationSeconds": {
        "description": "The time period, in seconds, after which the load balancer session stickiness cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TlsPolicyName": {
        "description": "The name of the TLS security policy for the load balancer.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lightsail-loadbalancer.html",
    "properties": [
      "AttachedInstances",
      "HealthCheckPath",
      "InstancePort",
      "IpAddressType",
      "LoadBalancerName",
      "SessionStickinessEnabled",
      "SessionStickinessLBCookieDurationSeconds",
      "Tags",
      "TlsPolicyName"
    ]
  },
  "AWS::Lightsail::LoadBalancerTlsCertificate": {
    "full_properties": {
      "CertificateAlternativeNames": {
        "description": "An array of alternative domain names and subdomain names for your SSL/TLS certificate.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      },
      "CertificateDomainName": {
        "description": "The domain name for the SSL/TLS certificate. For example, example.com or www.example.com.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "CertificateName": {
        "description": "The name of the SSL/TLS certificate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "HttpsRedirectionEnabled": {
        "description": "A Boolean value indicating whether HTTPS redirection is enabled for the load balancer that the TLS certificate is attached to.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IsAttached": {
        "description": "A Boolean value indicating whether the SSL/TLS certificate is attached to a Lightsail load balancer.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "LoadBalancerName": {
        "description": "The name of the load balancer that the SSL/TLS certificate is attached to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lightsail-loadbalancertlscertificate.html",
    "properties": [
      "CertificateAlternativeNames",
      "CertificateDomainName",
      "CertificateName",
      "HttpsRedirectionEnabled",
      "IsAttached",
      "LoadBalancerName"
    ]
  },
  "AWS::Lightsail::StaticIp": {
    "full_properties": {
      "AttachedTo": {
        "description": "The instance that the static IP is attached to.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StaticIpName": {
        "description": "The name of the static IP.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lightsail-staticip.html",
    "properties": [
      "AttachedTo",
      "StaticIpName"
    ]
  },
  "AWS::Location::GeofenceCollection": {
    "full_properties": {
      "CollectionName": {
        "description": "A custom name for the geofence collection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "An optional description for the geofence collection.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "A key identifier for an AWS KMS customer managed key. Enter a key ID, key ARN, alias name, or alias ARN.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlan": {
        "description": "No longer used. If included, the only allowed value is RequestBasedUsage.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlanDataSource": {
        "description": "This parameter is no longer used.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-location-geofencecollection.html",
    "properties": [
      "CollectionName",
      "Description",
      "KmsKeyId",
      "PricingPlan",
      "PricingPlanDataSource"
    ]
  },
  "AWS::Location::Map": {
    "full_properties": {
      "Configuration": {
        "description": "Specifies the MapConfiguration, including the map style, for the map resource that you create. The map style defines the look of maps and the data provider for your map resource.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "An optional description for the map resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MapName": {
        "description": "The name for the map resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlan": {
        "description": "No longer used. If included, the only allowed value is RequestBasedUsage.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-location-map.html",
    "properties": [
      "Configuration",
      "Description",
      "MapName",
      "PricingPlan"
    ]
  },
  "AWS::Location::PlaceIndex": {
    "full_properties": {
      "DataSource": {
        "description": "Specifies the geospatial data provider for the new place index.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataSourceConfiguration": {
        "description": "Specifies the data storage option for requesting Places.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The optional description for the place index resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IndexName": {
        "description": "The name of the place index resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlan": {
        "description": "No longer used. If included, the only allowed value is RequestBasedUsage.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-location-placeindex.html",
    "properties": [
      "DataSource",
      "DataSourceConfiguration",
      "Description",
      "IndexName",
      "PricingPlan"
    ]
  },
  "AWS::Location::RouteCalculator": {
    "full_properties": {
      "CalculatorName": {
        "description": "The name of the route calculator resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataSource": {
        "description": "Specifies the data provider of traffic and road network data.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The optional description for the route calculator resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlan": {
        "description": "No longer used. If included, the only allowed value is RequestBasedUsage.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-location-routecalculator.html",
    "properties": [
      "CalculatorName",
      "DataSource",
      "Description",
      "PricingPlan"
    ]
  },
  "AWS::Location::Tracker": {
    "full_properties": {
      "Description": {
        "description": "An optional description for the tracker resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "A key identifier for an AWS KMS customer managed key. Enter a key ID, key ARN, alias name, or alias ARN.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PositionFiltering": {
        "description": "Specifies the position filtering for the tracker resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlan": {
        "description": "No longer used. If included, the only allowed value is RequestBasedUsage.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlanDataSource": {
        "description": "This parameter is no longer used.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TrackerName": {
        "description": "The name for the tracker resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-location-tracker.html",
    "properties": [
      "Description",
      "KmsKeyId",
      "PositionFiltering",
      "PricingPlan",
      "PricingPlanDataSource",
      "TrackerName"
    ]
  },
  "AWS::Location::TrackerConsumer": {
    "full_properties": {
      "ConsumerArn": {
        "description": "The Amazon Resource Name (ARN) for the geofence collection that consumes the tracker resource updates.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TrackerName": {
        "description": "The name for the tracker resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-location-trackerconsumer.html",
    "properties": [
      "ConsumerArn",
      "TrackerName"
    ]
  },
  "AWS::Logs::Destination": {
    "full_properties": {
      "DestinationName": {
        "description": "The name of the destination.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationPolicy": {
        "description": "An IAM policy document that governs which AWS accounts can create subscription filters against this destination.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The ARN of an IAM role that permits CloudWatch Logs to send data to the specified AWS resource.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetArn": {
        "description": "The Amazon Resource Name (ARN) of the physical target where the log events are delivered (for example, a Kinesis stream).",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-logs-destination.html",
    "properties": [
      "DestinationName",
      "DestinationPolicy",
      "RoleArn",
      "TargetArn"
    ]
  },
  "AWS::Logs::LogGroup": {
    "full_properties": {
      "KmsKeyId": {
        "description": "The Amazon Resource Name (ARN) of the AWS KMS key to use when encrypting log data.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LogGroupName": {
        "description": "The name of the log group. If you don't specify a name, AWS CloudFormation generates a unique ID for the log group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RetentionInDays": {
        "description": "The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2192, 2557, 2922, 3288, and 3653.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to the log group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-logs-loggroup.html",
    "properties": [
      "KmsKeyId",
      "LogGroupName",
      "RetentionInDays",
      "Tags"
    ]
  },
  "AWS::Logs::LogStream": {
    "full_properties": {
      "LogGroupName": {
        "description": "The name of the log group where the log stream is created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogStreamName": {
        "description": "The name of the log stream. The name must be unique within the log group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-logs-logstream.html",
    "properties": [
      "LogGroupName",
      "LogStreamName"
    ]
  },
  "AWS::Logs::MetricFilter": {
    "full_properties": {
      "FilterName": {
        "description": "The name of the metric filter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FilterPattern": {
        "description": "A filter pattern for extracting metric data out of ingested log events. For more information, see Filter and Pattern Syntax.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LogGroupName": {
        "description": "The name of an existing log group that you want to associate with this metric filter.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MetricTransformations": {
        "description": "The metric transformations.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-logs-metricfilter.html",
    "properties": [
      "FilterName",
      "FilterPattern",
      "LogGroupName",
      "MetricTransformations"
    ]
  },
  "AWS::Logs::QueryDefinition": {
    "full_properties": {
      "LogGroupNames": {
        "description": "Use this parameter if you want the query to query only certain log groups.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the query definition.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "QueryString": {
        "description": "The query string to use for this query definition. For more information, see  CloudWatch Logs Insights Query Syntax.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-logs-querydefinition.html",
    "properties": [
      "LogGroupNames",
      "Name",
      "QueryString"
    ]
  },
  "AWS::Logs::ResourcePolicy": {
    "full_properties": {
      "PolicyDocument": {
        "description": "The details of the policy. It must be formatted in JSON, and you must use backslashes to escape characters that need to be escaped in JSON strings, such as double quote marks.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PolicyName": {
        "description": "The name of the resource policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-logs-resourcepolicy.html",
    "properties": [
      "PolicyDocument",
      "PolicyName"
    ]
  },
  "AWS::Logs::SubscriptionFilter": {
    "full_properties": {
      "DestinationArn": {
        "description": "The Amazon Resource Name (ARN) of the destination.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FilterPattern": {
        "description": "The filtering expressions that restrict what gets delivered to the destination AWS resource. For more information about the filter pattern syntax, see Filter and Pattern Syntax.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogGroupName": {
        "description": "The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered and delivered to the specified AWS resource if the filter pattern matches the log events.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested log events to the destination stream. You don't need to provide the ARN when you are working with a logical destination for cross-account delivery.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-logs-subscriptionfilter.html",
    "properties": [
      "DestinationArn",
      "FilterPattern",
      "LogGroupName",
      "RoleArn"
    ]
  },
  "AWS::LookoutEquipment::InferenceScheduler": {
    "full_properties": {
      "DataDelayOffsetInMinutes": {
        "description": "A period of time (in minutes) by which inference on the data is delayed after the data starts. For instance, if an offset delay time of five minutes was selected, inference will not begin on the data until the first data measurement after the five minute mark. For example, if five minutes is selected, the inference scheduler will wake up at the configured frequency with the additional five minute delay time to check the customer S3 bucket. The customer can upload data at the same frequency and they don't need to stop and restart the scheduler when uploading new data.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DataInputConfiguration": {
        "description": "Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DataOutputConfiguration": {
        "description": "Specifies configuration information for the output results for the inference scheduler, including the Amazon S3 location for the output.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DataUploadFrequency": {
        "description": "How often data is uploaded to the source S3 bucket for the input data. This value is the length of time between data uploads. For instance, if you select 5 minutes, Amazon Lookout for Equipment will upload the real-time data to the source bucket once every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment starts a scheduled inference on your data. In this example, it starts once every 5 minutes.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "InferenceSchedulerName": {
        "description": "The name of the inference scheduler.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModelName": {
        "description": "The name of the ML model used for the inference scheduler.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of a role with permission to access the data source being used for the inference.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerSideKmsKeyId": {
        "description": "Provides the identifier of the AWS KMS key used to encrypt inference scheduler data by Amazon Lookout for Equipment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Any tags associated with the inference scheduler.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lookoutequipment-inferencescheduler.html",
    "properties": [
      "DataDelayOffsetInMinutes",
      "DataInputConfiguration",
      "DataOutputConfiguration",
      "DataUploadFrequency",
      "InferenceSchedulerName",
      "ModelName",
      "RoleArn",
      "ServerSideKmsKeyId",
      "Tags"
    ]
  },
  "AWS::LookoutMetrics::Alert": {
    "full_properties": {
      "Action": {
        "description": "Action that will be triggered when there is an alert.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "AlertDescription": {
        "description": "A description of the alert.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AlertName": {
        "description": "The name of the alert.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AlertSensitivityThreshold": {
        "description": "An integer from 0 to 100 specifying the alert sensitivity threshold.",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "AnomalyDetectorArn": {
        "description": "The ARN of the detector to which the alert is attached.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lookoutmetrics-alert.html",
    "properties": [
      "Action",
      "AlertDescription",
      "AlertName",
      "AlertSensitivityThreshold",
      "AnomalyDetectorArn"
    ]
  },
  "AWS::LookoutMetrics::AnomalyDetector": {
    "full_properties": {
      "AnomalyDetectorConfig": {
        "description": "Contains information about the configuration of the anomaly detector.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AnomalyDetectorDescription": {
        "description": "A description of the detector.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AnomalyDetectorName": {
        "description": "The name of the detector.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyArn": {
        "description": "The ARN of the KMS key to use to encrypt your data.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MetricSetList": {
        "description": "The detector's dataset.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lookoutmetrics-anomalydetector.html",
    "properties": [
      "AnomalyDetectorConfig",
      "AnomalyDetectorDescription",
      "AnomalyDetectorName",
      "KmsKeyArn",
      "MetricSetList"
    ]
  },
  "AWS::LookoutVision::Project": {
    "full_properties": {
      "ProjectName": {
        "description": "The name of the project.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lookoutvision-project.html",
    "properties": [
      "ProjectName"
    ]
  },
  "AWS::M2::Application": {
    "full_properties": {
      "Definition": {
        "description": "The application definition for a particular application. You can specify either inline JSON or an Amazon S3 bucket location.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EngineType": {
        "description": "The type of the target platform for this application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-m2-application.html",
    "properties": [
      "Definition",
      "Description",
      "EngineType",
      "Name",
      "Tags"
    ]
  },
  "AWS::M2::Environment": {
    "full_properties": {
      "Description": {
        "description": "The description of the runtime environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineType": {
        "description": "The target platform for the runtime environment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version of the runtime engine.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HighAvailabilityConfig": {
        "description": "Defines the details of a high availability configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceType": {
        "description": "The instance type of the runtime environment.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the runtime environment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreferredMaintenanceWindow": {
        "description": "Configures the maintenance window you want for the runtime environment. If you do not provide a value, a random system-generated value will be assigned.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "Specifies whether the runtime environment is publicly accessible.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "SecurityGroupIds": {
        "description": "The list of security groups for the VPC associated with this runtime environment.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "StorageConfigurations": {
        "description": "Defines the storage configuration for a runtime environment.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The list of subnets associated with the VPC for this runtime environment.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-m2-environment.html",
    "properties": [
      "Description",
      "EngineType",
      "EngineVersion",
      "HighAvailabilityConfig",
      "InstanceType",
      "Name",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "SecurityGroupIds",
      "StorageConfigurations",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::MSK::BatchScramSecret": {
    "full_properties": {
      "ClusterArn": {
        "description": "The Amazon Resource Name (ARN) of the MSK cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecretArnList": {
        "description": "A list of Amazon Secrets Manager secret ARNs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-msk-batchscramsecret.html",
    "properties": [
      "ClusterArn",
      "SecretArnList"
    ]
  },
  "AWS::MSK::Cluster": {
    "full_properties": {
      "BrokerNodeGroupInfo": {
        "description": "The setup to be used for brokers in the cluster.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ClientAuthentication": {
        "description": "Includes information related to client authentication.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ClusterName": {
        "description": "The name of the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConfigurationInfo": {
        "description": "The Amazon MSK configuration to use for the cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CurrentVersion": {
        "description": "The version of the cluster that you want to update.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EncryptionInfo": {
        "description": "Includes all encryption-related information.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EnhancedMonitoring": {
        "description": "Specifies the level of monitoring for the MSK cluster. The possible values are DEFAULT, PER_BROKER, and PER_TOPIC_PER_BROKER.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KafkaVersion": {
        "description": "The version of Apache Kafka. For more information, see Supported Apache Kafka versions in the Amazon MSK Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LoggingInfo": {
        "description": "You can configure your Amazon MSK cluster to send broker logs to different destination types. This is a container for the configuration details related to broker logs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NumberOfBrokerNodes": {
        "description": "The number of broker nodes you want in the Amazon MSK cluster. You can submit an update to increase the number of broker nodes in a cluster.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "OpenMonitoring": {
        "description": "The settings for open monitoring.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StorageMode": {
        "description": "This controls storage mode for supported storage tiers.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A map of key:value pairs to apply to this resource. Both key and value are of type String.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-msk-cluster.html",
    "properties": [
      "BrokerNodeGroupInfo",
      "ClientAuthentication",
      "ClusterName",
      "ConfigurationInfo",
      "CurrentVersion",
      "EncryptionInfo",
      "EnhancedMonitoring",
      "KafkaVersion",
      "LoggingInfo",
      "NumberOfBrokerNodes",
      "OpenMonitoring",
      "StorageMode",
      "Tags"
    ]
  },
  "AWS::MSK::Configuration": {
    "full_properties": {
      "Description": {
        "description": "The description of the configuration.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KafkaVersionsList": {
        "description": "A list of the versions of Apache Kafka with which you can use this MSK configuration. You can use this configuration for an MSK cluster only if the Apache Kafka version specified for the cluster appears in this list.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the configuration. Configuration names are strings that match the regex \"^[0-9A-Za-z][0-9A-Za-z-]{0,}$\".",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServerProperties": {
        "description": "Contents of the server.properties file. When using the API, you must ensure that the contents of the file are base64 encoded. When using the console, the SDK, or the CLI, the contents of server.properties can be in plaintext.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-msk-configuration.html",
    "properties": [
      "Description",
      "KafkaVersionsList",
      "Name",
      "ServerProperties"
    ]
  },
  "AWS::MSK::ServerlessCluster": {
    "full_properties": {
      "ClientAuthentication": {
        "description": "Specifies client authentication information for the serverless cluster.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ClusterName": {
        "description": "The name of the serverless cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A map of key:value pairs to apply to this serverless cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "VpcConfigs": {
        "description": "VPC configuration information.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-msk-serverlesscluster.html",
    "properties": [
      "ClientAuthentication",
      "ClusterName",
      "Tags",
      "VpcConfigs"
    ]
  },
  "AWS::MWAA::Environment": {
    "full_properties": {
      "AirflowConfigurationOptions": {
        "description": "A list of key-value pairs containing the Airflow configuration options for your environment. For example, core.default_timezone: utc. To learn more, see Apache Airflow configuration options.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AirflowVersion": {
        "description": "The version of Apache Airflow to use for the environment. If no value is specified, defaults to the latest version. Valid values: 2.0.2, 1.10.12, 2.2.2.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DagS3Path": {
        "description": "The relative path to the DAGs folder on your Amazon S3 bucket. For example, dags. To learn more, see Adding or updating DAGs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnvironmentClass": {
        "description": "The environment class type. Valid values: mw1.small, mw1.medium, mw1.large. To learn more, see Amazon MWAA environment class.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access AWS resources in your environment. For example, arn:aws:iam::123456789:role/my-execution-role. To learn more, see Amazon MWAA Execution role.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKey": {
        "description": "The AWS Key Management Service (KMS) key to encrypt and decrypt the data in your environment. You can use an AWS KMS key managed by MWAA, or a customer-managed KMS key (advanced).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggingConfiguration": {
        "description": "The Apache Airflow logs being sent to CloudWatch Logs: DagProcessingLogs, SchedulerLogs, TaskLogs, WebserverLogs, WorkerLogs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaxWorkers": {
        "description": "The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the MaxWorkers field. For example, 20. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in MinWorkers.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MinWorkers": {
        "description": "The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the MaxWorkers field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the MinWorkers field. For example, 2.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of your Amazon MWAA environment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkConfiguration": {
        "description": "The VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see About networking on Amazon MWAA.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PluginsS3ObjectVersion": {
        "description": "The version of the plugins.zip file on your Amazon S3 bucket. To learn more, see Installing custom plugins.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PluginsS3Path": {
        "description": "The relative path to the plugins.zip file on your Amazon S3 bucket. For example, plugins.zip. To learn more, see Installing custom plugins.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequirementsS3ObjectVersion": {
        "description": "The version of the requirements.txt file on your Amazon S3 bucket. To learn more, see Installing Python dependencies.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequirementsS3Path": {
        "description": "The relative path to the requirements.txt file on your Amazon S3 bucket. For example, requirements.txt. To learn more, see Installing Python dependencies.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Schedulers": {
        "description": "The number of schedulers that you want to run in your environment. Valid values:",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SourceBucketArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, arn:aws:s3:::my-airflow-bucket-unique-name. To learn more, see Create an Amazon S3 bucket for Amazon MWAA.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The key-value tag pairs associated to your environment. For example, \"Environment\": \"Staging\". To learn more, see Tagging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WebserverAccessMode": {
        "description": "The Apache Airflow Web server access mode. To learn more, see Apache Airflow access modes. Valid values: PRIVATE_ONLY or PUBLIC_ONLY.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "WeeklyMaintenanceWindowStart": {
        "description": "The day and time of the week to start weekly maintenance updates of your environment in the following format: DAY:HH:MM. For example: TUE:03:30. You can specify a start time in 30 minute increments only. Supported input includes the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mwaa-environment.html",
    "properties": [
      "AirflowConfigurationOptions",
      "AirflowVersion",
      "DagS3Path",
      "EnvironmentClass",
      "ExecutionRoleArn",
      "KmsKey",
      "LoggingConfiguration",
      "MaxWorkers",
      "MinWorkers",
      "Name",
      "NetworkConfiguration",
      "PluginsS3ObjectVersion",
      "PluginsS3Path",
      "RequirementsS3ObjectVersion",
      "RequirementsS3Path",
      "Schedulers",
      "SourceBucketArn",
      "Tags",
      "WebserverAccessMode",
      "WeeklyMaintenanceWindowStart"
    ]
  },
  "AWS::Macie::AllowList": {
    "full_properties": {
      "Criteria": {
        "description": "The criteria that specify the text or text pattern to ignore. The criteria can be the location and name of an Amazon S3 object that lists specific text to ignore (S3WordsList), or a regular expression (Regex) that defines a text pattern to ignore.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A custom description of the allow list. The description can contain 1-512 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A custom name for the allow list. The name can contain 1-128 characters.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to the allow list.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-macie-allowlist.html",
    "properties": [
      "Criteria",
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::Macie::CustomDataIdentifier": {
    "full_properties": {
      "Description": {
        "description": "A custom description of the custom data identifier. The description can contain 1-512 characters.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IgnoreWords": {
        "description": "An array of character sequences (ignore words) to exclude from the results. If text matches the regular expression (Regex) but it contains a string in this array, Amazon Macie ignores the text and doesn't include it in the results.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Keywords": {
        "description": "An array of character sequences (keywords), one of which must precede and be in proximity (MaximumMatchDistance) of the regular expression (Regex) to match.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "MaximumMatchDistance": {
        "description": "The maximum number of characters that can exist between the end of at least one complete character sequence specified by the Keywords array and the end of text that matches the regular expression (Regex). If a complete keyword precedes all the text that matches the regular expression and the keyword is within the specified distance, Amazon Macie includes the result.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A custom name for the custom data identifier. The name can contain 1-128 characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Regex": {
        "description": "The regular expression (regex) that defines the text pattern to match. The expression can contain 1-512 characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-macie-customdataidentifier.html",
    "properties": [
      "Description",
      "IgnoreWords",
      "Keywords",
      "MaximumMatchDistance",
      "Name",
      "Regex"
    ]
  },
  "AWS::Macie::FindingsFilter": {
    "full_properties": {
      "Action": {
        "description": "The action to perform on findings that match the filter criteria (FindingCriteria). Valid values are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A custom description of the findings filter. The description can contain 1-512 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FindingCriteria": {
        "description": "The criteria to use to filter findings.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A custom name for the findings filter. The name can contain 3-64 characters.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Position": {
        "description": "The position of the findings filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to findings.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-macie-findingsfilter.html",
    "properties": [
      "Action",
      "Description",
      "FindingCriteria",
      "Name",
      "Position"
    ]
  },
  "AWS::Macie::Session": {
    "full_properties": {
      "FindingPublishingFrequency": {
        "description": "Specifies how often Amazon Macie publishes updates to policy findings for the account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events). Valid values are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Status": {
        "description": "The status of Amazon Macie for the account. Valid values are: ENABLED, start or resume all Macie activities for the account; and, PAUSED, suspend all Macie activities for the account.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-macie-session.html",
    "properties": [
      "FindingPublishingFrequency",
      "Status"
    ]
  },
  "AWS::ManagedBlockchain::Member": {
    "full_properties": {
      "InvitationId": {
        "description": "The unique identifier of the invitation to join the network sent to the account that creates the member.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MemberConfiguration": {
        "description": "Configuration properties of the member.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NetworkConfiguration": {
        "description": "Configuration properties of the network to which the member belongs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NetworkId": {
        "description": "The unique identifier of the network to which the member belongs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-managedblockchain-member.html",
    "properties": [
      "InvitationId",
      "MemberConfiguration",
      "NetworkConfiguration",
      "NetworkId"
    ]
  },
  "AWS::ManagedBlockchain::Node": {
    "full_properties": {
      "MemberId": {
        "description": "The unique identifier of the member to which the node belongs. Applies only to Hyperledger Fabric.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkId": {
        "description": "The unique identifier of the network for the node.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NodeConfiguration": {
        "description": "Configuration properties of a peer node.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-managedblockchain-node.html",
    "properties": [
      "MemberId",
      "NetworkId",
      "NodeConfiguration"
    ]
  },
  "AWS::MediaConnect::Flow": {
    "full_properties": {
      "AvailabilityZone": {
        "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the flow.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Source": {
        "description": "The settings for the source that you want to use for the new flow.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SourceFailoverConfig": {
        "description": "The settings for source failover.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconnect-flow.html",
    "properties": [
      "AvailabilityZone",
      "Name",
      "Source",
      "SourceFailoverConfig"
    ]
  },
  "AWS::MediaConnect::FlowEntitlement": {
    "full_properties": {
      "DataTransferSubscriberFeePercent": {
        "description": "The percentage of the entitlement data transfer fee that you want the subscriber to be responsible for.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the entitlement. This description appears only on the MediaConnect console and is not visible outside of the current AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Encryption": {
        "description": "The type of encryption that MediaConnect will use on the output that is associated with the entitlement.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EntitlementStatus": {
        "description": "An indication of whether the new entitlement should be enabled or disabled as soon as it is created. If you don’t specify the entitlementStatus field in your request, MediaConnect sets it to ENABLED.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FlowArn": {
        "description": "The Amazon Resource Name (ARN) of the flow.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the entitlement. This value must be unique within the current flow.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subscribers": {
        "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconnect-flowentitlement.html",
    "properties": [
      "DataTransferSubscriberFeePercent",
      "Description",
      "Encryption",
      "EntitlementStatus",
      "FlowArn",
      "Name",
      "Subscribers"
    ]
  },
  "AWS::MediaConnect::FlowOutput": {
    "full_properties": {
      "CidrAllowList": {
        "description": "The range of IP addresses that are allowed to initiate output requests to this flow. Format the IP addresses as a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the output. This description is not visible outside of the current AWS account even if the account grants entitlements to other accounts.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Destination": {
        "description": "The IP address where you want to send the output.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Encryption": {
        "description": "The encryption credentials that you want to use for the output.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FlowArn": {
        "description": "The Amazon Resource Name (ARN) of the flow.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MaxLatency": {
        "description": "The maximum latency in milliseconds for Zixi-based streams.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MinLatency": {
        "description": "The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the VPC interface.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port to use when MediaConnect distributes content to the output.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The protocol to use for the output.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RemoteId": {
        "description": "The identifier that is assigned to the Zixi receiver. This parameter applies only to outputs that use Zixi pull.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SmoothingLatency": {
        "description": "The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "StreamId": {
        "description": "The stream ID that you want to use for the transport. This parameter applies only to Zixi-based streams.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcInterfaceAttachment": {
        "description": "The VPC interface that you want to send your output to.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconnect-flowoutput.html",
    "properties": [
      "CidrAllowList",
      "Description",
      "Destination",
      "Encryption",
      "FlowArn",
      "MaxLatency",
      "MinLatency",
      "Name",
      "Port",
      "Protocol",
      "RemoteId",
      "SmoothingLatency",
      "StreamId",
      "VpcInterfaceAttachment"
    ]
  },
  "AWS::MediaConnect::FlowSource": {
    "full_properties": {
      "Decryption": {
        "description": "The type of encryption that is used on the content ingested from the source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the source. This description is not visible outside of the current AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EntitlementArn": {
        "description": "The ARN of the entitlement that allows you to subscribe to the flow. The entitlement is set by the content originator, and the ARN is generated as part of the originator's flow.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FlowArn": {
        "description": "The Amazon Resource Name (ARN) of the flow.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IngestPort": {
        "description": "The port that the flow listens on for incoming content. If the protocol of the source is Zixi, the port must be set to 2088.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaxBitrate": {
        "description": "The maximum bitrate for RIST, RTP, and RTP-FEC streams.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MaxLatency": {
        "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based, Zixi-based, and Fujitsu-based streams.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the source.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Protocol": {
        "description": "The protocol that the source uses to deliver the content to MediaConnect.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StreamId": {
        "description": "The stream ID that you want to use for the transport. This parameter applies only to Zixi-based streams.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcInterfaceName": {
        "description": "The name of the VPC interface that you want to send your output to.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "WhitelistCidr": {
        "description": "The range of IP addresses that are allowed to contribute content to your source. Format the IP addresses as a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconnect-flowsource.html",
    "properties": [
      "Decryption",
      "Description",
      "EntitlementArn",
      "FlowArn",
      "IngestPort",
      "MaxBitrate",
      "MaxLatency",
      "Name",
      "Protocol",
      "StreamId",
      "VpcInterfaceName",
      "WhitelistCidr"
    ]
  },
  "AWS::MediaConnect::FlowVpcInterface": {
    "full_properties": {
      "FlowArn": {
        "description": "The Amazon Resource Name (ARN) of the flow.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the VPC Interface. This value must be unique within the current flow.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the role that you created when you set up MediaConnect as a trusted service.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "The VPC security groups that you want MediaConnect to use for your VPC configuration. You must include at least one security group in the request.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The subnet IDs that you want to use for your VPC interface.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconnect-flowvpcinterface.html",
    "properties": [
      "FlowArn",
      "Name",
      "RoleArn",
      "SecurityGroupIds",
      "SubnetId"
    ]
  },
  "AWS::MediaConvert::JobTemplate": {
    "full_properties": {
      "AccelerationSettings": {
        "description": "Accelerated transcoding can significantly speed up jobs with long, visually complex content. Outputs that use this feature incur pro-tier pricing. For information about feature limitations, For more information, see Job Limitations for Accelerated Transcoding in AWS Elemental MediaConvert in the AWS Elemental MediaConvert User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Category": {
        "description": "Optional. A category for the job template you are creating",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "Optional. A description of the job template you are creating.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HopDestinations": {
        "description": "Optional. Configuration for a destination queue to which the job can hop once a customer-defined minimum wait time has passed. For more information, see Setting Up Queue Hopping to Avoid Long Waits in the AWS Elemental MediaConvert User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the job template you are creating.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Priority": {
        "description": "Specify the relative priority for this job. In any given queue, the service begins processing the job with the highest value first. When more than one job has the same priority, the service begins processing the job that you submitted first. If you don't specify a priority, the service uses the default value 0. Minimum: -50 Maximum: 50",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Queue": {
        "description": "Optional. The queue that jobs created from this template are assigned to. Specify the Amazon Resource Name (ARN) of the queue. For example, arn:aws:mediaconvert:us-west-2:505474453218:queues/Default. If you don't specify this, jobs will go to the default queue.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SettingsJson": {
        "description": "Specify, in JSON format, the transcoding job settings for this job template. This specification must conform to the AWS Elemental MediaConvert job validation. For information about forming this specification, see the Remarks section later in this topic.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StatusUpdateInterval": {
        "description": "Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconvert-jobtemplate.html",
    "properties": [
      "AccelerationSettings",
      "Category",
      "Description",
      "HopDestinations",
      "Name",
      "Priority",
      "Queue",
      "SettingsJson",
      "StatusUpdateInterval",
      "Tags"
    ]
  },
  "AWS::MediaConvert::Preset": {
    "full_properties": {
      "Category": {
        "description": "The new category for the preset, if you are changing it.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The new description for the preset, if you are changing it.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the preset that you are modifying.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SettingsJson": {
        "description": "Specify, in JSON format, the transcoding job settings for this output preset. This specification must conform to the AWS Elemental MediaConvert job validation. For information about forming this specification, see the Remarks section later in this topic.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconvert-preset.html",
    "properties": [
      "Category",
      "Description",
      "Name",
      "SettingsJson",
      "Tags"
    ]
  },
  "AWS::MediaConvert::Queue": {
    "full_properties": {
      "Description": {
        "description": "Optional. A description of the queue that you are creating.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the queue that you are creating.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PricingPlan": {
        "description": "When you use AWS CloudFormation, you can create only on-demand queues. Therefore, always set PricingPlan to the value \"ON_DEMAND\" when declaring an AWS::MediaConvert::Queue in your AWS CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Status": {
        "description": "Initial state of the queue. Queues can be either ACTIVE or PAUSED. If you create a paused queue, then jobs that you send to that queue won't begin.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediaconvert-queue.html",
    "properties": [
      "Description",
      "Name",
      "PricingPlan",
      "Status",
      "Tags"
    ]
  },
  "AWS::MediaLive::Channel": {
    "full_properties": {
      "CdiInputSpecification": {
        "description": "Specification of CDI inputs for this channel.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ChannelClass": {
        "description": "The class for this channel. For a channel with two pipelines, the class is STANDARD. For a channel with one pipeline, the class is SINGLE_PIPELINE.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Destinations": {
        "description": "The settings that identify the destination for the outputs in this MediaLive output package.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EncoderSettings": {
        "description": "The encoding configuration for the output content.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InputAttachments": {
        "description": "The list of input attachments for the channel.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InputSpecification": {
        "description": "The input specification for this channel. It specifies the key characteristics of the inputs for this channel: the maximum bitrate, the resolution, and the codec.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LogLevel": {
        "description": "The verbosity for logging activity for this channel. Charges for logging (which are generated through Amazon CloudWatch Logging) are higher for higher verbosities.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for this audio selector. The AudioDescription (in an output) references this name in order to identify a specific input audio to include in that output.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The IAM role for MediaLive to assume when running this channel. The role is identified by its ARN.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A collection of tags for this channel. Each tag is a key-value pair.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Vpc": {
        "description": "Settings to enable VPC mode in the channel, so that the endpoints for all outputs are in your VPC.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-medialive-channel.html",
    "properties": [
      "CdiInputSpecification",
      "ChannelClass",
      "Destinations",
      "EncoderSettings",
      "InputAttachments",
      "InputSpecification",
      "LogLevel",
      "Name",
      "RoleArn",
      "Tags",
      "Vpc"
    ]
  },
  "AWS::MediaLive::Input": {
    "full_properties": {
      "Destinations": {
        "description": "Settings that apply only if the input is a push type of input.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InputDevices": {
        "description": "Settings that apply only if the input is an Elemental Link input.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InputSecurityGroups": {
        "description": "The list of input security groups (referenced by IDs) to attach to the input if the input is a push type.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MediaConnectFlows": {
        "description": "Settings that apply only if the input is a MediaConnect input.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the input.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The IAM role for MediaLive to assume when creating a MediaConnect input or Amazon VPC input. This doesn't apply to other types of inputs. The role is identified by its ARN.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Sources": {
        "description": "Settings that apply only if the input is a pull type of input.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A collection of tags for this input. Each tag is a key-value pair.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type for this input.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Vpc": {
        "description": "Settings that apply only if the input is an push input where the source is on Amazon VPC.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-medialive-input.html",
    "properties": [
      "Destinations",
      "InputDevices",
      "InputSecurityGroups",
      "MediaConnectFlows",
      "Name",
      "RoleArn",
      "Sources",
      "Tags",
      "Type",
      "Vpc"
    ]
  },
  "AWS::MediaLive::InputSecurityGroup": {
    "full_properties": {
      "Tags": {
        "description": "A collection of tags for this input security group. Each tag is a key-value pair.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WhitelistRules": {
        "description": "The list of IPv4 CIDR addresses to include in the input security group as \"allowed\" addresses.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-medialive-inputsecuritygroup.html",
    "properties": [
      "Tags",
      "WhitelistRules"
    ]
  },
  "AWS::MediaPackage::Asset": {
    "full_properties": {
      "Id": {
        "description": "Unique identifier that you assign to the asset.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PackagingGroupId": {
        "description": "The ID of the packaging group associated with this asset.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceId": {
        "description": "Unique identifier for this asset, as it's configured in the key provider service.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SourceArn": {
        "description": "The ARN for the source content in Amazon S3.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SourceRoleArn": {
        "description": "The ARN for the IAM role that provides AWS Elemental MediaPackage access to the Amazon S3 bucket where the source content is stored. Valid format: arn:aws:iam::{accountID}:role/{name}",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to the asset.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediapackage-asset.html",
    "properties": [
      "Id",
      "PackagingGroupId",
      "ResourceId",
      "SourceArn",
      "SourceRoleArn",
      "Tags"
    ]
  },
  "AWS::MediaPackage::Channel": {
    "full_properties": {
      "Description": {
        "description": "Any descriptive information that you want to add to the channel for future identification purposes.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EgressAccessLogs": {
        "description": "Configures egress access logs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Id": {
        "description": "Unique identifier that you assign to the channel.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IngressAccessLogs": {
        "description": "Configures ingress access logs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to the channel.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-mediapackage-channel.html",
    "properties": [
      "Description",
      "EgressAccessLogs",
      "Id",
      "IngressAccessLogs",
      "Tags"
    ]
  },
  "AWS::MediaPackage::OriginEndpoint": {
    "full_properties": {
      "Authorization": {
        "description": "Parameters for CDN authorization.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ChannelId": {
        "description": "The ID of the channel associated with this endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "CmafPackage": {
        "description": "Parameters for Common Media Application Format (CMAF) packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DashPackage": {
        "description": "Parameters for DASH packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "Any descriptive information that you want to add to the endpoint for future identification purposes.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HlsPackage": {
        "description": "Parameters for Apple HLS packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Id": {
        "description": "The manifest ID is required and must be unique within the OriginEndpoint. The ID can't be changed after the endpoint is created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ManifestName": {
        "description": "A short string that's appended to the end of the endpoint URL to create a unique path to this endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MssPackage": {
        "description": "Parameters for Microsoft Smooth Streaming packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Origination": {
        "description": "Controls video origination from this endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StartoverWindowSeconds": {
        "description": "Maximum duration (seconds) of content to retain for startover playback. Omit this attribute or enter 0 to indicate that startover playback is disabled for this endpoint.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to the endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TimeDelaySeconds": {
        "description": "Minimum duration (seconds) of delay to enforce on the playback of live content. Omit this attribute or enter 0 to indicate that there is no time delay in effect for this endpoint.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Whitelist": {
        "description": "The IP addresses that can access this endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediapackage-originendpoint.html",
    "properties": [
      "Authorization",
      "ChannelId",
      "CmafPackage",
      "DashPackage",
      "Description",
      "HlsPackage",
      "Id",
      "ManifestName",
      "MssPackage",
      "Origination",
      "StartoverWindowSeconds",
      "Tags",
      "TimeDelaySeconds",
      "Whitelist"
    ]
  },
  "AWS::MediaPackage::PackagingConfiguration": {
    "full_properties": {
      "CmafPackage": {
        "description": "Parameters for CMAF packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DashPackage": {
        "description": "Parameters for DASH-ISO packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HlsPackage": {
        "description": "Parameters for Apple HLS packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Id": {
        "description": "Unique identifier that you assign to the packaging configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MssPackage": {
        "description": "Parameters for Microsoft Smooth Streaming packaging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PackagingGroupId": {
        "description": "The ID of the packaging group associated with this packaging configuration.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to the packaging configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediapackage-packagingconfiguration.html",
    "properties": [
      "CmafPackage",
      "DashPackage",
      "HlsPackage",
      "Id",
      "MssPackage",
      "PackagingGroupId",
      "Tags"
    ]
  },
  "AWS::MediaPackage::PackagingGroup": {
    "full_properties": {
      "Authorization": {
        "description": "Parameters for CDN authorization.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EgressAccessLogs": {
        "description": "The configuration parameters for egress access logging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Id": {
        "description": "Unique identifier that you assign to the packaging group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to assign to the packaging group.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-mediapackage-packaginggroup.html",
    "properties": [
      "Authorization",
      "EgressAccessLogs",
      "Id",
      "Tags"
    ]
  },
  "AWS::MediaStore::Container": {
    "full_properties": {
      "AccessLoggingEnabled": {
        "description": "The state of access logging on the container. This value is false by default, indicating that AWS Elemental MediaStore does not send access logs to Amazon CloudWatch Logs. When you enable access logging on the container, MediaStore changes this value to true, indicating that the service delivers access logs for objects stored in that container to CloudWatch Logs.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ContainerName": {
        "description": "The name for the container. The name must be from 1 to 255 characters. Container names must be unique to your AWS account within a specific region. As an example, you could create a container named movies in every region, as long as you don’t have an existing container with that name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CorsPolicy": {
        "description": "Sets the cross-origin resource sharing (CORS) configuration on a container so that the container can service cross-origin requests. For example, you might want to enable a request whose origin is http://www.example.com to access your AWS Elemental MediaStore container at my.example.container.com by using the browser's XMLHttpRequest capability.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LifecyclePolicy": {
        "description": "Writes an object lifecycle policy to a container. If the container already has an object lifecycle policy, the service replaces the existing policy with the new policy. It takes up to 20 minutes for the change to take effect.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MetricPolicy": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Policy": {
        "description": "Creates an access policy for the specified container to restrict the users and clients that can access it. For information about the data that is included in an access policy, see the AWS Identity and Access Management User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediastore-container.html",
    "properties": [
      "AccessLoggingEnabled",
      "ContainerName",
      "CorsPolicy",
      "LifecyclePolicy",
      "MetricPolicy",
      "Policy",
      "Tags"
    ]
  },
  "AWS::MediaTailor::PlaybackConfiguration": {
    "full_properties": {
      "AdDecisionServerUrl": {
        "description": "The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AvailSuppression": {
        "description": "The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Bumper": {
        "description": "The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CdnConfiguration": {
        "description": "The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConfigurationAliases": {
        "description": "The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DashConfiguration": {
        "description": "The configuration for DASH content.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LivePreRollConfiguration": {
        "description": "The configuration for pre-roll ad insertion.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ManifestProcessingRules": {
        "description": "The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The identifier for the playback configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PersonalizationThresholdSeconds": {
        "description": "Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in MediaTailor.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SlateAdUrl": {
        "description": "The URL for a high-quality video asset to transcode and use to fill in time that's not used by ads. MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to assign to the playback configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TranscodeProfileName": {
        "description": "The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VideoContentSourceUrl": {
        "description": "The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-mediatailor-playbackconfiguration.html",
    "properties": [
      "AdDecisionServerUrl",
      "AvailSuppression",
      "Bumper",
      "CdnConfiguration",
      "ConfigurationAliases",
      "DashConfiguration",
      "LivePreRollConfiguration",
      "ManifestProcessingRules",
      "Name",
      "PersonalizationThresholdSeconds",
      "SlateAdUrl",
      "Tags",
      "TranscodeProfileName",
      "VideoContentSourceUrl"
    ]
  },
  "AWS::MemoryDB::ACL": {
    "full_properties": {
      "ACLName": {
        "description": "The name of the Access Control List.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserNames": {
        "description": "The list of users that belong to the Access Control List.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-memorydb-acl.html",
    "properties": [
      "ACLName",
      "Tags",
      "UserNames"
    ]
  },
  "AWS::MemoryDB::Cluster": {
    "full_properties": {
      "ACLName": {
        "description": "The name of the Access Control List to associate with the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "When set to true, the cluster will automatically receive minor engine version upgrades after launch.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ClusterName": {
        "description": "The name of the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EngineVersion": {
        "description": "The Redis engine version used by the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FinalSnapshotName": {
        "description": "The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. MemoryDB creates the snapshot, and then deletes the cluster immediately afterward.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ID of the KMS key used to encrypt the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MaintenanceWindow": {
        "description": "Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NodeType": {
        "description": "The cluster's node type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NumReplicasPerShard": {
        "description": "The number of replicas to apply to each shard.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "NumShards": {
        "description": "The number of shards in the cluster.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ParameterGroupName": {
        "description": "The name of the parameter group used by the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Port": {
        "description": "The port used by the cluster.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "SecurityGroupIds": {
        "description": "A list of security group names to associate with this cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnapshotArns": {
        "description": "A list of Amazon Resource Names (ARN) that uniquely identify the RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new cluster. The Amazon S3 object name in the ARN cannot contain any commas.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SnapshotName": {
        "description": "The name of a snapshot from which to restore data into the new cluster. The snapshot status changes to restoring while the new cluster is being created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnapshotRetentionLimit": {
        "description": "The number of days for which MemoryDB retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotWindow": {
        "description": "The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00 If you do not specify this parameter, MemoryDB automatically chooses an appropriate time range.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the ARN of the SNS topic, such as arn:aws:memorydb:us-east-1:123456789012:mySNSTopic",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicStatus": {
        "description": "The SNS topic must be in Active status to receive notifications.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetGroupName": {
        "description": "The name of the subnet group used by the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TLSEnabled": {
        "description": "A flag to indicate if In-transit encryption is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-memorydb-cluster.html",
    "properties": [
      "ACLName",
      "AutoMinorVersionUpgrade",
      "ClusterName",
      "Description",
      "EngineVersion",
      "FinalSnapshotName",
      "KmsKeyId",
      "MaintenanceWindow",
      "NodeType",
      "NumReplicasPerShard",
      "NumShards",
      "ParameterGroupName",
      "Port",
      "SecurityGroupIds",
      "SnapshotArns",
      "SnapshotName",
      "SnapshotRetentionLimit",
      "SnapshotWindow",
      "SnsTopicArn",
      "SnsTopicStatus",
      "SubnetGroupName",
      "Tags",
      "TLSEnabled"
    ]
  },
  "AWS::MemoryDB::ParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "The name of the parameter group family that this  parameter group is compatible with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParameterGroupName": {
        "description": "The name of the parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "Returns the detailed parameter list for the parameter group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-memorydb-parametergroup.html",
    "properties": [
      "Description",
      "Family",
      "ParameterGroupName",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::MemoryDB::SubnetGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the subnet group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetGroupName": {
        "description": "The name of the subnet group to be used for the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "A list of Amazon VPC subnet IDs for the subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-memorydb-subnetgroup.html",
    "properties": [
      "Description",
      "SubnetGroupName",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::MemoryDB::User": {
    "full_properties": {
      "AccessString": {
        "description": "Access permissions string used for this user.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AuthenticationMode": {
        "description": "Denotes whether the user requires a password to authenticate.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserName": {
        "description": "The name of the user.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-memorydb-user.html",
    "properties": [
      "AccessString",
      "AuthenticationMode",
      "Tags",
      "UserName"
    ]
  },
  "AWS::Neptune::DBCluster": {
    "full_properties": {
      "AssociatedRoles": {
        "description": "Provides a list of the Amazon Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon services on your behalf.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AvailabilityZones": {
        "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "BackupRetentionPeriod": {
        "description": "Specifies the number of days for which automatic DB snapshots are retained.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DBClusterIdentifier": {
        "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterParameterGroupName": {
        "description": "Provides the name of the DB cluster parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeletionProtection": {
        "description": "Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnableCloudwatchLogsExports": {
        "description": "Specifies a list of log types that are enabled for export to CloudWatch Logs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EngineVersion": {
        "description": "Indicates the database engine version.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IamAuthEnabled": {
        "description": "True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "If StorageEncrypted is true, the Amazon KMS key identifier for the encrypted DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "Specifies the port that the database engine is listening on.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PreferredBackupWindow": {
        "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RestoreToTime": {
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestoreType": {
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnapshotIdentifier": {
        "description": "Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceDBClusterIdentifier": {
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "Indicates whether the DB cluster is encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags assigned to this cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UseLatestRestorableTime": {
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "VpcSecurityGroupIds": {
        "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbcluster.html",
    "properties": [
      "AssociatedRoles",
      "AvailabilityZones",
      "BackupRetentionPeriod",
      "DBClusterIdentifier",
      "DBClusterParameterGroupName",
      "DBSubnetGroupName",
      "DeletionProtection",
      "EnableCloudwatchLogsExports",
      "EngineVersion",
      "IamAuthEnabled",
      "KmsKeyId",
      "Port",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "RestoreToTime",
      "RestoreType",
      "SnapshotIdentifier",
      "SourceDBClusterIdentifier",
      "StorageEncrypted",
      "Tags",
      "UseLatestRestorableTime",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::Neptune::DBClusterParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "Provides the customer-specified description for this DB cluster parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "Must be neptune1.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "Provides the name of the DB cluster parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "The parameters to set for this DB cluster parameter group.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to this parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbclusterparametergroup.html",
    "properties": [
      "Description",
      "Family",
      "Name",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::Neptune::DBInstance": {
    "full_properties": {
      "AllowMajorVersionUpgrade": {
        "description": "Indicates that major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. This parameter must be set to true when specifying a value for the EngineVersion parameter that is a different major version than the DB instance's current version.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "Indicates that minor version patches are applied automatically.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "Specifies the name of the Availability Zone the DB instance is located in.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterIdentifier": {
        "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBInstanceClass": {
        "description": "Contains the name of the compute and memory capacity class of the DB instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DBInstanceIdentifier": {
        "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBParameterGroupName": {
        "description": "The name of an existing DB parameter group or a reference to an AWS::Neptune::DBParameterGroup resource created in the template. If any of the data members of the referenced parameter group are changed during an update, the DB instance might need to be restarted, which causes some interruption. If the parameter group contains static parameters, whether they were changed or not, an update triggers a reboot.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBSnapshotIdentifier": {
        "description": "This parameter is not supported.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBSubnetGroupName": {
        "description": "A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new virtual private cloud (VPC).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreferredMaintenanceWindow": {
        "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for this DB instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbinstance.html",
    "properties": [
      "AllowMajorVersionUpgrade",
      "AutoMinorVersionUpgrade",
      "AvailabilityZone",
      "DBClusterIdentifier",
      "DBInstanceClass",
      "DBInstanceIdentifier",
      "DBParameterGroupName",
      "DBSnapshotIdentifier",
      "DBSubnetGroupName",
      "PreferredMaintenanceWindow",
      "Tags"
    ]
  },
  "AWS::Neptune::DBParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "Provides the customer-specified description for this DB parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "Must be neptune1.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "Provides the name of the DB parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "The parameters to set for this DB parameter group.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to this parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbparametergroup.html",
    "properties": [
      "Description",
      "Family",
      "Name",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::Neptune::DBSubnetGroup": {
    "full_properties": {
      "DBSubnetGroupDescription": {
        "description": "Provides the description of the DB subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "The name of the DB subnet group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The Amazon EC2 subnet IDs for the DB subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to the DB subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbsubnetgroup.html",
    "properties": [
      "DBSubnetGroupDescription",
      "DBSubnetGroupName",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::NetworkFirewall::Firewall": {
    "full_properties": {
      "DeleteProtection": {
        "description": "A flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the firewall.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FirewallName": {
        "description": "The descriptive name of the firewall. You can't change the name of a firewall after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FirewallPolicyArn": {
        "description": "The Amazon Resource Name (ARN) of the firewall policy.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "FirewallPolicyChangeProtection": {
        "description": "A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SubnetChangeProtection": {
        "description": "A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SubnetMappings": {
        "description": "The public subnets that Network Firewall is using for the firewall. Each subnet must belong to a different Availability Zone.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The unique identifier of the VPC where the firewall is in use. You can't change the VPC of a firewall after you create the firewall.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkfirewall-firewall.html",
    "properties": [
      "DeleteProtection",
      "Description",
      "FirewallName",
      "FirewallPolicyArn",
      "FirewallPolicyChangeProtection",
      "SubnetChangeProtection",
      "SubnetMappings",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::NetworkFirewall::FirewallPolicy": {
    "full_properties": {
      "Description": {
        "description": "A description of the firewall policy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FirewallPolicy": {
        "description": "The traffic filtering behavior of a firewall policy, defined in a collection of stateless and stateful rule groups and other settings.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FirewallPolicyName": {
        "description": "The descriptive name of the firewall policy. You can't change the name of a firewall policy after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkfirewall-firewallpolicy.html",
    "properties": [
      "Description",
      "FirewallPolicy",
      "FirewallPolicyName",
      "Tags"
    ]
  },
  "AWS::NetworkFirewall::LoggingConfiguration": {
    "full_properties": {
      "FirewallArn": {
        "description": "The Amazon Resource Name (ARN) of the AWS::NetworkFirewall::Firewall that the logging configuration is associated with. You can't change the firewall specification after you create the logging configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FirewallName": {
        "description": "The name of the firewall that the logging configuration is associated with. You can't change the firewall specification after you create the logging configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggingConfiguration": {
        "description": "Defines how AWS Network Firewall performs logging for a AWS::NetworkFirewall::Firewall.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkfirewall-loggingconfiguration.html",
    "properties": [
      "FirewallArn",
      "FirewallName",
      "LoggingConfiguration"
    ]
  },
  "AWS::NetworkFirewall::RuleGroup": {
    "full_properties": {
      "Capacity": {
        "description": "The maximum operating resources that this rule group can use. You can't change a rule group's capacity setting after you create the rule group. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the rule group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RuleGroup": {
        "description": "An object that defines the rule group rules.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuleGroupName": {
        "description": "The descriptive name of the rule group. You can't change the name of a rule group after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkfirewall-rulegroup.html",
    "properties": [
      "Capacity",
      "Description",
      "RuleGroup",
      "RuleGroupName",
      "Tags",
      "Type"
    ]
  },
  "AWS::NetworkManager::ConnectAttachment": {
    "full_properties": {
      "CoreNetworkId": {
        "description": "The core network ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EdgeLocation": {
        "description": "The Region where the edge is located.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Options": {
        "description": "Options for creating a Connect attachment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags associated with the Connect attachment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TransportAttachmentId": {
        "description": "The ID of the attachment between the two connections.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkmanager-connectattachment.html",
    "properties": [
      "CoreNetworkId",
      "EdgeLocation",
      "Options",
      "Tags",
      "TransportAttachmentId"
    ]
  },
  "AWS::NetworkManager::ConnectPeer": {
    "full_properties": {
      "BgpOptions": {
        "description": "The BGP peer options.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ConnectAttachmentId": {
        "description": "The ID of Connect peer.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CoreNetworkAddress": {
        "description": "The IP address of a core network.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InsideCidrBlocks": {
        "description": "The inside IP addresses used for a Connect peer configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PeerAddress": {
        "description": "The IP address of the Connect peer.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The list of key-value tags associated with the Connect peer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkmanager-connectpeer.html",
    "properties": [
      "BgpOptions",
      "ConnectAttachmentId",
      "CoreNetworkAddress",
      "InsideCidrBlocks",
      "PeerAddress",
      "Tags"
    ]
  },
  "AWS::NetworkManager::CoreNetwork": {
    "full_properties": {
      "Description": {
        "description": "The description of a core network.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalNetworkId": {
        "description": "The ID of the global network that your core network is a part of.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyDocument": {
        "description": "Describes a core network policy. For more information, see Core network policies.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The list of key-value tags associated with a core network.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkmanager-corenetwork.html",
    "properties": [
      "Description",
      "GlobalNetworkId",
      "PolicyDocument",
      "Tags"
    ]
  },
  "AWS::NetworkManager::CustomerGatewayAssociation": {
    "full_properties": {
      "CustomerGatewayArn": {
        "description": "The Amazon Resource Name (ARN) of the customer gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeviceId": {
        "description": "The ID of the device.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "GlobalNetworkId": {
        "description": "The ID of the global network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LinkId": {
        "description": "The ID of the link.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkmanager-customergatewayassociation.html",
    "properties": [
      "CustomerGatewayArn",
      "DeviceId",
      "GlobalNetworkId",
      "LinkId"
    ]
  },
  "AWS::NetworkManager::Device": {
    "full_properties": {
      "Description": {
        "description": "A description of the device.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalNetworkId": {
        "description": "The ID of the global network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Location": {
        "description": "The site location.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Model": {
        "description": "The model of the device.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SerialNumber": {
        "description": "The serial number of the device.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SiteId": {
        "description": "The site ID.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the device.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The device type.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Vendor": {
        "description": "The vendor of the device.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkmanager-device.html",
    "properties": [
      "Description",
      "GlobalNetworkId",
      "Location",
      "Model",
      "SerialNumber",
      "SiteId",
      "Tags",
      "Type",
      "Vendor"
    ]
  },
  "AWS::NetworkManager::GlobalNetwork": {
    "full_properties": {
      "Description": {
        "description": "A description of the global network.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the global network.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkmanager-globalnetwork.html",
    "properties": [
      "Description",
      "Tags"
    ]
  },
  "AWS::NetworkManager::Link": {
    "full_properties": {
      "Bandwidth": {
        "description": "The bandwidth for the link.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the link.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalNetworkId": {
        "description": "The ID of the global network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Provider": {
        "description": "The provider of the link.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SiteId": {
        "description": "The ID of the site.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the link.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of the link.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkmanager-link.html",
    "properties": [
      "Bandwidth",
      "Description",
      "GlobalNetworkId",
      "Provider",
      "SiteId",
      "Tags",
      "Type"
    ]
  },
  "AWS::NetworkManager::LinkAssociation": {
    "full_properties": {
      "DeviceId": {
        "description": "The device ID for the link association.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "GlobalNetworkId": {
        "description": "The ID of the global network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LinkId": {
        "description": "The ID of the link.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkmanager-linkassociation.html",
    "properties": [
      "DeviceId",
      "GlobalNetworkId",
      "LinkId"
    ]
  },
  "AWS::NetworkManager::Site": {
    "full_properties": {
      "Description": {
        "description": "A description of your site.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalNetworkId": {
        "description": "The ID of the global network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Location": {
        "description": "The site location. This information is used for visualization in the Network Manager console. If you specify the address, the latitude and longitude are automatically calculated.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the site.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-networkmanager-site.html",
    "properties": [
      "Description",
      "GlobalNetworkId",
      "Location",
      "Tags"
    ]
  },
  "AWS::NetworkManager::SiteToSiteVpnAttachment": {
    "full_properties": {
      "CoreNetworkId": {
        "description": "The core network ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags associated with the site-to-site VPN attachment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpnConnectionArn": {
        "description": "The ARN of the site-to-site VPN attachment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkmanager-sitetositevpnattachment.html",
    "properties": [
      "CoreNetworkId",
      "Tags",
      "VpnConnectionArn"
    ]
  },
  "AWS::NetworkManager::TransitGatewayRegistration": {
    "full_properties": {
      "GlobalNetworkId": {
        "description": "The ID of the global network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TransitGatewayArn": {
        "description": "The Amazon Resource Name (ARN) of the transit gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkmanager-transitgatewayregistration.html",
    "properties": [
      "GlobalNetworkId",
      "TransitGatewayArn"
    ]
  },
  "AWS::NetworkManager::VpcAttachment": {
    "full_properties": {
      "CoreNetworkId": {
        "description": "The core network ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Options": {
        "description": "Options for creating the VPC attachment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SubnetArns": {
        "description": "The subnet ARNs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags associated with the VPC attachment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcArn": {
        "description": "The ARN of the VPC attachment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-networkmanager-vpcattachment.html",
    "properties": [
      "CoreNetworkId",
      "Options",
      "SubnetArns",
      "Tags",
      "VpcArn"
    ]
  },
  "AWS::NimbleStudio::LaunchProfile": {
    "full_properties": {
      "Description": {
        "description": "A human-readable description of the launch profile.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Ec2SubnetIds": {
        "description": "Unique identifiers for a collection of EC2 subnets.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "LaunchProfileProtocolVersions": {
        "description": "The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name for the launch profile.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StreamConfiguration": {
        "description": "A configuration for a streaming session.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StudioComponentIds": {
        "description": "Unique identifiers for a collection of studio components that can be used with this launch profile.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "StudioId": {
        "description": "The unique identifier for a studio resource. In Nimble Studio, all other resources are contained in a studio resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-nimblestudio-launchprofile.html",
    "properties": [
      "Description",
      "Ec2SubnetIds",
      "LaunchProfileProtocolVersions",
      "Name",
      "StreamConfiguration",
      "StudioComponentIds",
      "StudioId",
      "Tags"
    ]
  },
  "AWS::NimbleStudio::StreamingImage": {
    "full_properties": {
      "Description": {
        "description": "A human-readable description of the streaming image.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Ec2ImageId": {
        "description": "The ID of an EC2 machine image with which to create the streaming image.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name for a streaming image resource.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StudioId": {
        "description": "The unique identifier for a studio resource. In Nimble Studio, all other resources are contained in a studio resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-nimblestudio-streamingimage.html",
    "properties": [
      "Description",
      "Ec2ImageId",
      "Name",
      "StudioId",
      "Tags"
    ]
  },
  "AWS::NimbleStudio::Studio": {
    "full_properties": {
      "AdminRoleArn": {
        "description": "The IAM role that studio admins assume when logging in to the Nimble Studio portal.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "A friendly name for the studio.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StudioEncryptionConfiguration": {
        "description": "Configuration of the encryption method that is used for the studio.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StudioName": {
        "description": "The name of the studio, as included in the URL when accessing it in the Nimble Studio portal.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "UserRoleArn": {
        "description": "The IAM role that studio users assume when logging in to the Nimble Studio portal.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-nimblestudio-studio.html",
    "properties": [
      "AdminRoleArn",
      "DisplayName",
      "StudioEncryptionConfiguration",
      "StudioName",
      "Tags",
      "UserRoleArn"
    ]
  },
  "AWS::NimbleStudio::StudioComponent": {
    "full_properties": {
      "Configuration": {
        "description": "The configuration of the studio component, based on component type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A human-readable description for the studio component resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Ec2SecurityGroupIds": {
        "description": "The EC2 security groups that control access to the studio component.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InitializationScripts": {
        "description": "Initialization scripts for studio components.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name for the studio component resource.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ScriptParameters": {
        "description": "Parameters for the studio component scripts.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "StudioId": {
        "description": "The unique identifier for a studio resource. In Nimble Studio, all other resources are contained in a studio resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Subtype": {
        "description": "The specific subtype of a studio component.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of the studio component.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-nimblestudio-studiocomponent.html",
    "properties": [
      "Configuration",
      "Description",
      "Ec2SecurityGroupIds",
      "InitializationScripts",
      "Name",
      "ScriptParameters",
      "StudioId",
      "Subtype",
      "Tags",
      "Type"
    ]
  },
  "AWS::OpenSearchService::Domain": {
    "full_properties": {
      "AccessPolicies": {
        "description": "An AWS Identity and Access Management (IAM) policy document that specifies who can access the OpenSearch Service domain and their permissions. For more information, see Configuring access policies in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AdvancedOptions": {
        "description": "Additional options to specify for the OpenSearch Service domain. For more information, see AdvancedOptions in the OpenSearch Service configuration API reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AdvancedSecurityOptions": {
        "description": "Specifies options for fine-grained access control.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ClusterConfig": {
        "description": "ClusterConfig is a property of the AWS::OpenSearchService::Domain resource that configures an Amazon OpenSearch Service cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CognitoOptions": {
        "description": "Configures OpenSearch Service to use Amazon Cognito authentication for OpenSearch Dashboards.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DomainEndpointOptions": {
        "description": "Specifies additional options for the domain endpoint, such as whether to require HTTPS for all traffic or whether to use a custom endpoint rather than the default endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "A name for the OpenSearch Service domain. For valid values, see the DomainName data type in the Amazon OpenSearch Service Developer Guide. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the domain name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EBSOptions": {
        "description": "The configurations of Amazon Elastic Block Store (Amazon EBS) volumes that are attached to data nodes in the OpenSearch Service domain. For more information, see EBS volume size limits in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EncryptionAtRestOptions": {
        "description": "Whether the domain should encrypt data at rest, and if so, the AWS KMS key to use. See Encryption of data at rest for Amazon OpenSearch Service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EngineVersion": {
        "description": "The version of OpenSearch to use. The value must be in the format OpenSearch_X.Y or Elasticsearch_X.Y. If not specified, the latest version of OpenSearch is used. For information about the versions that OpenSearch Service supports, see Supported versions of OpenSearch and Elasticsearch in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "LogPublishingOptions": {
        "description": "An object with one or more of the following keys: SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS, INDEX_SLOW_LOGS, AUDIT_LOGS, depending on the types of logs you want to publish. Each key needs a valid LogPublishingOption value. For the full syntax, see the examples.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NodeToNodeEncryptionOptions": {
        "description": "Specifies whether node-to-node encryption is enabled. See Node-to-node encryption for Amazon OpenSearch Service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SnapshotOptions": {
        "description": "DEPRECATED. The automated snapshot configuration for the OpenSearch Service domain indices.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to associate with the OpenSearch Service domain.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VPCOptions": {
        "description": "The virtual private cloud (VPC) configuration for the OpenSearch Service domain. For more information, see Launching your Amazon OpenSearch Service domains within a VPC in the Amazon OpenSearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-opensearchservice-domain.html",
    "properties": [
      "AccessPolicies",
      "AdvancedOptions",
      "AdvancedSecurityOptions",
      "ClusterConfig",
      "CognitoOptions",
      "DomainEndpointOptions",
      "DomainName",
      "EBSOptions",
      "EncryptionAtRestOptions",
      "EngineVersion",
      "LogPublishingOptions",
      "NodeToNodeEncryptionOptions",
      "SnapshotOptions",
      "Tags",
      "VPCOptions"
    ]
  },
  "AWS::OpsWorks::App": {
    "full_properties": {
      "AppSource": {
        "description": "A Source object that specifies the app repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Attributes": {
        "description": "One or more user-defined key/value pairs to be added to the stack attributes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DataSources": {
        "description": "The app's data source.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Domains": {
        "description": "The app virtual host settings, with multiple domains separated by commas. For example: 'www.example.com, example.com'",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EnableSsl": {
        "description": "Whether to enable SSL for the app.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Environment": {
        "description": "An array of EnvironmentVariable objects that specify environment variables to be associated with the app. After you deploy the app, these variables are defined on the associated app server instance. For more information, see  Environment Variables.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The app name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Shortname": {
        "description": "The app's short name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SslConfiguration": {
        "description": "An SslConfiguration object with the SSL configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StackId": {
        "description": "The stack ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The app type. Each supported type is associated with a particular layer. For example, PHP applications are associated with a PHP layer. AWS OpsWorks Stacks deploys an application to those instances that are members of the corresponding layer. If your app isn't one of the standard types, or you prefer to implement your own Deploy recipes, specify other.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-app.html",
    "properties": [
      "AppSource",
      "Attributes",
      "DataSources",
      "Description",
      "Domains",
      "EnableSsl",
      "Environment",
      "Name",
      "Shortname",
      "SslConfiguration",
      "StackId",
      "Type"
    ]
  },
  "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
    "full_properties": {
      "ElasticLoadBalancerName": {
        "description": "The Elastic Load Balancing instance name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LayerId": {
        "description": "The AWS OpsWorks layer ID to which the Elastic Load Balancing load balancer is attached.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-elbattachment.html",
    "properties": [
      "ElasticLoadBalancerName",
      "LayerId"
    ]
  },
  "AWS::OpsWorks::Instance": {
    "full_properties": {
      "AgentVersion": {
        "description": "The default AWS OpsWorks Stacks agent version. You have the following options:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AmiId": {
        "description": "A custom AMI ID to be used to create the instance. The AMI should be based on one of the supported operating systems. For more information, see Using Custom AMIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Architecture": {
        "description": "The instance architecture. The default option is x86_64. Instance types do not necessarily support both architectures. For a list of the architectures that are supported by the different instance types, see Instance Families and Types.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoScalingType": {
        "description": "For load-based or time-based instances, the type. Windows stacks can use only time-based instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone of the AWS OpsWorks instance, such as us-east-2a.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BlockDeviceMappings": {
        "description": "An array of BlockDeviceMapping objects that specify the instance's block devices. For more information, see Block Device Mapping. Note that block device mappings are not supported for custom AMIs.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "EbsOptimized": {
        "description": "Whether to create an Amazon EBS-optimized instance.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ElasticIps": {
        "description": "A list of Elastic IP addresses to associate with the instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Hostname": {
        "description": "The instance host name. The following are character limits for instance host names.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstallUpdatesOnBoot": {
        "description": "Whether to install operating system and package updates when the instance boots. The default value is true. To control when updates are installed, set this value to false. You must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or by manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "InstanceType": {
        "description": "The instance type, such as t2.micro. For a list of supported instance types, open the stack in the console, choose Instances, and choose + Instance. The Size list contains the currently supported types. For more information, see Instance Families and Types. The parameter values that you use to specify the various types are in the API Name column of the Available Instance Types table.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "LayerIds": {
        "description": "An array that contains the instance's layer IDs.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Os": {
        "description": "The instance's operating system, which must be set to one of the following.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RootDeviceType": {
        "description": "The instance root device type. For more information, see Storage for the Root Device.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SshKeyName": {
        "description": "The instance's Amazon EC2 key-pair name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StackId": {
        "description": "The stack ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the instance's subnet. If the stack is running in a VPC, you can use this parameter to override the stack's default subnet ID value and direct AWS OpsWorks Stacks to launch the instance in a different subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tenancy": {
        "description": "The instance's tenancy option. The default option is no tenancy, or if the instance is running in a VPC, inherit tenancy settings from the VPC. The following are valid values for this parameter: dedicated, default, or host. Because there are costs associated with changes in tenancy options, we recommend that you research tenancy options before choosing them for your instances. For more information about dedicated hosts, see Dedicated Hosts Overview and Amazon EC2 Dedicated Hosts. For more information about dedicated instances, see Dedicated Instances and Amazon EC2 Dedicated Instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TimeBasedAutoScaling": {
        "description": "The time-based scaling configuration for the instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "VirtualizationType": {
        "description": "The instance's virtualization type, paravirtual or hvm.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Volumes": {
        "description": "A list of AWS OpsWorks volume IDs to associate with the instance. For more information, see AWS::OpsWorks::Volume.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-instance.html",
    "properties": [
      "AgentVersion",
      "AmiId",
      "Architecture",
      "AutoScalingType",
      "AvailabilityZone",
      "BlockDeviceMappings",
      "EbsOptimized",
      "ElasticIps",
      "Hostname",
      "InstallUpdatesOnBoot",
      "InstanceType",
      "LayerIds",
      "Os",
      "RootDeviceType",
      "SshKeyName",
      "StackId",
      "SubnetId",
      "Tenancy",
      "TimeBasedAutoScaling",
      "VirtualizationType",
      "Volumes"
    ]
  },
  "AWS::OpsWorks::Layer": {
    "full_properties": {
      "Attributes": {
        "description": "One or more user-defined key-value pairs to be added to the stack attributes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AutoAssignElasticIps": {
        "description": "Whether to automatically assign an Elastic IP address to the layer's instances. For more information, see How to Edit a Layer.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutoAssignPublicIps": {
        "description": "For stacks that are running in a VPC, whether to automatically assign a public IP address to the layer's instances. For more information, see How to Edit a Layer.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CustomInstanceProfileArn": {
        "description": "The ARN of an IAM profile to be used for the layer's EC2 instances. For more information about IAM ARNs, see Using Identifiers.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CustomJson": {
        "description": "A JSON-formatted string containing custom stack configuration and deployment attributes to be installed on the layer's instances. For more information, see  Using Custom JSON. This feature is supported as of version 1.7.42 of the AWS CLI.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomRecipes": {
        "description": "A LayerCustomRecipes object that specifies the layer custom recipes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomSecurityGroupIds": {
        "description": "An array containing the layer custom security group IDs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EnableAutoHealing": {
        "description": "Whether to disable auto healing for the layer.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "InstallUpdatesOnBoot": {
        "description": "Whether to install operating system and package updates when the instance boots. The default value is true. To control when updates are installed, set this value to false. You must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or by manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "LifecycleEventConfiguration": {
        "description": "A LifeCycleEventConfiguration object that you can use to configure the Shutdown event to specify an execution timeout and enable or disable Elastic Load Balancer connection draining.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoadBasedAutoScaling": {
        "description": "The load-based scaling configuration for the AWS OpsWorks layer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The layer name, which is used by the console. Layer names can be a maximum of 32 characters.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Packages": {
        "description": "An array of Package objects that describes the layer packages.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Shortname": {
        "description": "For custom layers only, use this parameter to specify the layer's short name, which is used internally by AWS OpsWorks Stacks and by Chef recipes. The short name is also used as the name for the directory where your app files are installed. It can have a maximum of 32 characters, which are limited to the alphanumeric characters, '-', '_', and '.'.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StackId": {
        "description": "The layer stack ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies one or more sets of tags (key–value pairs) to associate with this AWS OpsWorks layer. Use tags to manage your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The layer type. A stack cannot have more than one built-in layer of the same type. It can have any number of custom layers. Built-in layers are not available in Chef 12 stacks.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UseEbsOptimizedInstances": {
        "description": "Whether to use Amazon EBS-optimized instances.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "VolumeConfigurations": {
        "description": "A VolumeConfigurations object that describes the layer's Amazon EBS volumes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-layer.html",
    "properties": [
      "Attributes",
      "AutoAssignElasticIps",
      "AutoAssignPublicIps",
      "CustomInstanceProfileArn",
      "CustomJson",
      "CustomRecipes",
      "CustomSecurityGroupIds",
      "EnableAutoHealing",
      "InstallUpdatesOnBoot",
      "LifecycleEventConfiguration",
      "LoadBasedAutoScaling",
      "Name",
      "Packages",
      "Shortname",
      "StackId",
      "Tags",
      "Type",
      "UseEbsOptimizedInstances",
      "VolumeConfigurations"
    ]
  },
  "AWS::OpsWorks::Stack": {
    "full_properties": {
      "AgentVersion": {
        "description": "The default AWS OpsWorks Stacks agent version. You have the following options:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Attributes": {
        "description": "One or more user-defined key-value pairs to be added to the stack attributes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ChefConfiguration": {
        "description": "A ChefConfiguration object that specifies whether to enable Berkshelf and the Berkshelf version on Chef 11.10 stacks. For more information, see Create a New Stack.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CloneAppIds": {
        "description": "If you're cloning an AWS OpsWorks stack, a list of AWS OpsWorks application stack IDs from the source stack to include in the cloned stack.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ClonePermissions": {
        "description": "If you're cloning an AWS OpsWorks stack, indicates whether to clone the source stack's permissions.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ConfigurationManager": {
        "description": "The configuration manager. When you create a stack we recommend that you use the configuration manager to specify the Chef version: 12, 11.10, or 11.4 for Linux stacks, or 12.2 for Windows stacks. The default value for Linux stacks is currently 12.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomCookbooksSource": {
        "description": "Contains the information required to retrieve an app or cookbook from a repository. For more information, see Adding Apps or Cookbooks and Recipes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomJson": {
        "description": "A string that contains user-defined, custom JSON. It can be used to override the corresponding default stack configuration attribute values or to pass data to recipes. The string should be in the following format:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefaultAvailabilityZone": {
        "description": "The stack's default Availability Zone, which must be in the specified region. For more information, see Regions and Endpoints. If you also specify a value for DefaultSubnetId, the subnet must be in the same zone. For more information, see the VpcId parameter description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultInstanceProfileArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM profile that is the default profile for all of the stack's EC2 instances. For more information about IAM ARNs, see Using Identifiers.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultOs": {
        "description": "The stack's default operating system, which is installed on every instance unless you specify a different operating system when you create the instance. You can specify one of the following.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultRootDeviceType": {
        "description": "The default root device type. This value is the default for all instances in the stack, but you can override it when you create an instance. The default option is instance-store. For more information, see Storage for the Root Device.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultSshKeyName": {
        "description": "A default Amazon EC2 key pair name. The default value is none. If you specify a key pair name, AWS OpsWorks installs the public key on the instance and you can use the private key with an SSH client to log in to the instance. For more information, see  Using SSH to Communicate with an Instance and  Managing SSH Access. You can override this setting by specifying a different key pair, or no key pair, when you create an instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultSubnetId": {
        "description": "The stack's default subnet ID. All instances are launched into this subnet unless you specify another subnet ID when you create the instance. This parameter is required if you specify a value for the VpcId parameter. If you also specify a value for DefaultAvailabilityZone, the subnet must be in that zone.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EcsClusterArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Elastic Container Service (Amazon ECS) cluster to register with the AWS OpsWorks stack.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ElasticIps": {
        "description": "A list of Elastic IP addresses to register with the AWS OpsWorks stack.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "HostnameTheme": {
        "description": "The stack's host name theme, with spaces replaced by underscores. The theme is used to generate host names for the stack's instances. By default, HostnameTheme is set to Layer_Dependent, which creates host names by appending integers to the layer's short name. The other themes are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The stack name. Stack names can be a maximum of 64 characters.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RdsDbInstances": {
        "description": "The Amazon Relational Database Service (Amazon RDS) database instance to register with the AWS OpsWorks stack.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceRoleArn": {
        "description": "The stack's IAM role, which allows AWS OpsWorks Stacks to work with AWS resources on your behalf. You must set this parameter to the Amazon Resource Name (ARN) for an existing IAM role. For more information about IAM ARNs, see Using Identifiers.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceStackId": {
        "description": "If you're cloning an AWS OpsWorks stack, the stack ID of the source AWS OpsWorks stack to clone.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A map that contains tag keys and tag values that are attached to a stack or layer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UseCustomCookbooks": {
        "description": "Whether the stack uses custom cookbooks.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "UseOpsworksSecurityGroups": {
        "description": "Whether to associate the AWS OpsWorks Stacks built-in security groups with the stack's layers.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC that the stack is to be launched into. The VPC must be in the stack's region. All instances are launched into this VPC. You cannot change the ID later.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-opsworks-stack.html",
    "properties": [
      "AgentVersion",
      "Attributes",
      "ChefConfiguration",
      "CloneAppIds",
      "ClonePermissions",
      "ConfigurationManager",
      "CustomCookbooksSource",
      "CustomJson",
      "DefaultAvailabilityZone",
      "DefaultInstanceProfileArn",
      "DefaultOs",
      "DefaultRootDeviceType",
      "DefaultSshKeyName",
      "DefaultSubnetId",
      "EcsClusterArn",
      "ElasticIps",
      "HostnameTheme",
      "Name",
      "RdsDbInstances",
      "ServiceRoleArn",
      "SourceStackId",
      "Tags",
      "UseCustomCookbooks",
      "UseOpsworksSecurityGroups",
      "VpcId"
    ]
  },
  "AWS::OpsWorks::UserProfile": {
    "full_properties": {
      "AllowSelfManagement": {
        "description": "Whether users can specify their own SSH public key through the My Settings page. For more information, see Managing User Permissions.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IamUserArn": {
        "description": "The user's IAM ARN.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SshPublicKey": {
        "description": "The user's SSH public key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SshUsername": {
        "description": "The user's SSH user name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-userprofile.html",
    "properties": [
      "AllowSelfManagement",
      "IamUserArn",
      "SshPublicKey",
      "SshUsername"
    ]
  },
  "AWS::OpsWorks::Volume": {
    "full_properties": {
      "Ec2VolumeId": {
        "description": "The Amazon EC2 volume ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MountPoint": {
        "description": "The volume mount point. For example, \"/mnt/disk1\".",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The volume name. Volume names are a maximum of 128 characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StackId": {
        "description": "The stack ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-opsworks-volume.html",
    "properties": [
      "Ec2VolumeId",
      "MountPoint",
      "Name",
      "StackId"
    ]
  },
  "AWS::OpsWorksCM::Server": {
    "full_properties": {
      "AssociatePublicIpAddress": {
        "description": "Associate a public IP address with a server that you are launching. Valid values are true or false. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "BackupId": {
        "description": "If you specify this field, AWS OpsWorks CM creates the server by using the backup represented by BackupId.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BackupRetentionCount": {
        "description": "The number of automated backups that you want to keep. Whenever a new backup is created, AWS OpsWorks CM deletes the oldest backups if this number is exceeded. The default value is 1.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "CustomCertificate": {
        "description": "Supported on servers running Chef Automate 2.0 only. A PEM-formatted HTTPS certificate. The value can be be a single, self-signed certificate, or a certificate chain. If you specify a custom certificate, you must also specify values for CustomDomain and CustomPrivateKey. The following are requirements for the CustomCertificate value:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CustomDomain": {
        "description": "Supported on servers running Chef Automate 2.0 only. An optional public endpoint of a server, such as https://aws.my-company.com. To access the server, create a CNAME DNS record in your preferred DNS service that points the custom domain to the endpoint that is generated when the server is created (the value of the CreateServer Endpoint attribute). You cannot access the server by using the generated Endpoint value if the server is using a custom domain. If you specify a custom domain, you must also specify values for CustomCertificate and CustomPrivateKey.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CustomPrivateKey": {
        "description": "Supported on servers running Chef Automate 2.0 only. A private key in PEM format for connecting to the server by using HTTPS. The private key must not be encrypted; it cannot be protected by a password or passphrase. If you specify a custom private key, you must also specify values for CustomDomain and CustomCertificate.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DisableAutomatedBackup": {
        "description": "Enable or disable scheduled backups. Valid values are true or false. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Engine": {
        "description": "The configuration management engine to use. Valid values include ChefAutomate and Puppet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineAttributes": {
        "description": "Optional engine attributes on a specified server.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EngineModel": {
        "description": "The engine model of the server. Valid values in this release include Monolithic for Puppet and Single for Chef.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The major release version of the engine that you want to use. For a Chef server, the valid value for EngineVersion is currently 2. For a Puppet server, valid values are 2019 or 2017.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceProfileArn": {
        "description": "The ARN of the instance profile that your Amazon EC2 instances use.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The Amazon EC2 instance type to use. For example, m5.large.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyPair": {
        "description": "The Amazon EC2 key pair to set for the instance. This parameter is optional; if desired, you may specify this parameter to connect to your instances by using SSH.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreferredBackupWindow": {
        "description": "The start time for a one-hour period during which AWS OpsWorks CM backs up application-level data on your server if automated backups are enabled. Valid values must be specified in one of the following formats:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The start time for a one-hour period each week during which AWS OpsWorks CM performs maintenance on the instance. Valid values must be specified in the following format: DDD:HH:MM. MM must be specified as 00. The specified time is in coordinated universal time (UTC). The default value is a random one-hour period on Tuesday, Wednesday, or Friday. See TimeWindowDefinition for more information.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "A list of security group IDs to attach to the Amazon EC2 instance. If you add this parameter, the specified security groups must be within the VPC that is specified by SubnetIds.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ServerName": {
        "description": "The name of the server. The server name must be unique within your AWS account, within each region. Server names must start with a letter; then letters, numbers, or hyphens (-) are allowed, up to a maximum of 40 characters.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRoleArn": {
        "description": "The service role that the AWS OpsWorks CM service backend uses to work with your account. Although the AWS OpsWorks management console typically creates the service role for you, if you are using the AWS CLI or API commands, run the service-role-creation.yaml AWS CloudFormation template, located at https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml. This template creates a CloudFormation stack that includes the service role and instance profile that you need.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The IDs of subnets in which to launch the server EC2 instance.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A map that contains tag keys and tag values to attach to an AWS OpsWorks for Chef Automate or OpsWorks for Puppet Enterprise server.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworkscm-server.html",
    "properties": [
      "AssociatePublicIpAddress",
      "BackupId",
      "BackupRetentionCount",
      "CustomCertificate",
      "CustomDomain",
      "CustomPrivateKey",
      "DisableAutomatedBackup",
      "Engine",
      "EngineAttributes",
      "EngineModel",
      "EngineVersion",
      "InstanceProfileArn",
      "InstanceType",
      "KeyPair",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "SecurityGroupIds",
      "ServerName",
      "ServiceRoleArn",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::Panorama::ApplicationInstance": {
    "full_properties": {
      "ApplicationInstanceIdToReplace": {
        "description": "The ID of an application instance to replace with the new instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultRuntimeContextDevice": {
        "description": "The device's ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description for the application instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeviceId": {
        "description": "A device's ID.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ManifestOverridesPayload": {
        "description": "Setting overrides for the application manifest.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ManifestPayload": {
        "description": "The application's manifest document.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the application instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RuntimeRoleArn": {
        "description": "The ARN of a runtime role for the application instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StatusFilter": {
        "description": "Only include instances with a specific status.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Tags for the application instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-panorama-applicationinstance.html",
    "properties": [
      "ApplicationInstanceIdToReplace",
      "DefaultRuntimeContextDevice",
      "Description",
      "DeviceId",
      "ManifestOverridesPayload",
      "ManifestPayload",
      "Name",
      "RuntimeRoleArn",
      "StatusFilter",
      "Tags"
    ]
  },
  "AWS::Panorama::Package": {
    "full_properties": {
      "PackageName": {
        "description": "A name for the package.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags for the package.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-panorama-package.html",
    "properties": [
      "PackageName",
      "Tags"
    ]
  },
  "AWS::Panorama::PackageVersion": {
    "full_properties": {
      "MarkLatest": {
        "description": "Whether to mark the new version as the latest version.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "OwnerAccount": {
        "description": "An owner account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PackageId": {
        "description": "A package ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PackageVersion": {
        "description": "A package version.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PatchVersion": {
        "description": "A patch version.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UpdatedLatestPatchVersion": {
        "description": "If the version was marked latest, the new version to maker as latest.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-panorama-packageversion.html",
    "properties": [
      "MarkLatest",
      "OwnerAccount",
      "PackageId",
      "PackageVersion",
      "PatchVersion",
      "UpdatedLatestPatchVersion"
    ]
  },
  "AWS::Personalize::Dataset": {
    "full_properties": {
      "DatasetGroupArn": {
        "description": "The Amazon Resource Name (ARN) of the dataset group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatasetImportJob": {
        "description": "Describes a job that imports training data from a data source (Amazon S3 bucket) to an Amazon Personalize dataset.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DatasetType": {
        "description": "One of the following values:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the dataset.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SchemaArn": {
        "description": "The ARN of the associated schema.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-personalize-dataset.html",
    "properties": [
      "DatasetGroupArn",
      "DatasetImportJob",
      "DatasetType",
      "Name",
      "SchemaArn"
    ]
  },
  "AWS::Personalize::DatasetGroup": {
    "full_properties": {
      "Domain": {
        "description": "The domain of a Domain dataset group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyArn": {
        "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key used to encrypt the datasets.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the dataset group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the IAM role that has permissions to create the dataset group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-personalize-datasetgroup.html",
    "properties": [
      "Domain",
      "KmsKeyArn",
      "Name",
      "RoleArn"
    ]
  },
  "AWS::Personalize::Schema": {
    "full_properties": {
      "Domain": {
        "description": "The domain of a schema that you created for a dataset in a Domain dataset group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the schema.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Schema": {
        "description": "The schema.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-personalize-schema.html",
    "properties": [
      "Domain",
      "Name",
      "Schema"
    ]
  },
  "AWS::Personalize::Solution": {
    "full_properties": {
      "DatasetGroupArn": {
        "description": "The Amazon Resource Name (ARN) of the dataset group that provides the training data.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventType": {
        "description": "The event type (for example, 'click' or 'like') that is used for training the model. If no eventType is provided, Amazon Personalize uses all interactions for training with equal weight regardless of type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the solution.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PerformAutoML": {
        "description": "When true, Amazon Personalize performs a search for the best USER_PERSONALIZATION recipe from the list specified in the solution configuration (recipeArn must not be specified). When false (the default), Amazon Personalize uses recipeArn for training.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "PerformHPO": {
        "description": "Whether to perform hyperparameter optimization (HPO) on the chosen recipe. The default is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "RecipeArn": {
        "description": "The ARN of the recipe used to create the solution.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SolutionConfig": {
        "description": "Describes the configuration properties for the solution.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-personalize-solution.html",
    "properties": [
      "DatasetGroupArn",
      "EventType",
      "Name",
      "PerformAutoML",
      "PerformHPO",
      "RecipeArn",
      "SolutionConfig"
    ]
  },
  "AWS::Pinpoint::ADMChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the ADM channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClientId": {
        "description": "The Client ID that you received from Amazon to send messages by using ADM.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ClientSecret": {
        "description": "The Client Secret that you received from Amazon to send messages by using ADM.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether to enable the ADM channel for the application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-admchannel.html",
    "properties": [
      "ApplicationId",
      "ClientId",
      "ClientSecret",
      "Enabled"
    ]
  },
  "AWS::Pinpoint::APNSChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the APNs channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BundleId": {
        "description": "The bundle identifier that's assigned to your iOS app. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Certificate": {
        "description": "The APNs client certificate that you received from Apple. Specify this value if you want Amazon Pinpoint to communicate with APNs by using an APNs certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultAuthenticationMethod": {
        "description": "The default authentication method that you want Amazon Pinpoint to use when authenticating with APNs. Valid options are key or certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether to enable the APNs channel for the application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PrivateKey": {
        "description": "The private key for the APNs client certificate that you want Amazon Pinpoint to use to communicate with APNs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TeamId": {
        "description": "The identifier that's assigned to your Apple Developer Account team. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKey": {
        "description": "The authentication key to use for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKeyId": {
        "description": "The key identifier that's assigned to your APNs signing key. Specify this value if you want Amazon Pinpoint to communicate with APNs by using APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-apnschannel.html",
    "properties": [
      "ApplicationId",
      "BundleId",
      "Certificate",
      "DefaultAuthenticationMethod",
      "Enabled",
      "PrivateKey",
      "TeamId",
      "TokenKey",
      "TokenKeyId"
    ]
  },
  "AWS::Pinpoint::APNSSandboxChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the APNs sandbox channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BundleId": {
        "description": "The bundle identifier that's assigned to your iOS app. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Certificate": {
        "description": "The APNs client certificate that you received from Apple. Specify this value if you want Amazon Pinpoint to communicate with APNs by using an APNs certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultAuthenticationMethod": {
        "description": "The default authentication method that you want Amazon Pinpoint to use when authenticating with APNs. Valid options are key or certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether to enable the APNs Sandbox channel for the Amazon Pinpoint application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PrivateKey": {
        "description": "The private key for the APNs client certificate that you want Amazon Pinpoint to use to communicate with APNs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TeamId": {
        "description": "The identifier that's assigned to your Apple Developer Account team. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKey": {
        "description": "The authentication key to use for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKeyId": {
        "description": "The key identifier that's assigned to your APNs signing key. Specify this value if you want Amazon Pinpoint to communicate with APNs by using APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-apnssandboxchannel.html",
    "properties": [
      "ApplicationId",
      "BundleId",
      "Certificate",
      "DefaultAuthenticationMethod",
      "Enabled",
      "PrivateKey",
      "TeamId",
      "TokenKey",
      "TokenKeyId"
    ]
  },
  "AWS::Pinpoint::APNSVoipChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the APNs VoIP channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BundleId": {
        "description": "The bundle identifier that's assigned to your iOS app. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Certificate": {
        "description": "The APNs client certificate that you received from Apple. Specify this value if you want Amazon Pinpoint to communicate with APNs by using an APNs certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultAuthenticationMethod": {
        "description": "The default authentication method that you want Amazon Pinpoint to use when authenticating with APNs. Valid options are key or certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether to enable the APNs VoIP channel for the Amazon Pinpoint application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PrivateKey": {
        "description": "The private key for the APNs client certificate that you want Amazon Pinpoint to use to communicate with APNs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TeamId": {
        "description": "The identifier that's assigned to your Apple Developer Account team. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKey": {
        "description": "The authentication key to use for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKeyId": {
        "description": "The key identifier that's assigned to your APNs signing key. Specify this value if you want Amazon Pinpoint to communicate with APNs by using APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-apnsvoipchannel.html",
    "properties": [
      "ApplicationId",
      "BundleId",
      "Certificate",
      "DefaultAuthenticationMethod",
      "Enabled",
      "PrivateKey",
      "TeamId",
      "TokenKey",
      "TokenKeyId"
    ]
  },
  "AWS::Pinpoint::APNSVoipSandboxChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the application that the APNs VoIP sandbox channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BundleId": {
        "description": "The bundle identifier that's assigned to your iOS app. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Certificate": {
        "description": "The APNs client certificate that you received from Apple. Specify this value if you want Amazon Pinpoint to communicate with the APNs sandbox environment by using an APNs certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultAuthenticationMethod": {
        "description": "The default authentication method that you want Amazon Pinpoint to use when authenticating with APNs. Valid options are key or certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether the APNs VoIP sandbox channel is enabled for the application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PrivateKey": {
        "description": "The private key for the APNs client certificate that you want Amazon Pinpoint to use to communicate with the APNs sandbox environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TeamId": {
        "description": "The identifier that's assigned to your Apple developer account team. This identifier is used for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKey": {
        "description": "The authentication key to use for APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TokenKeyId": {
        "description": "The key identifier that's assigned to your APNs signing key. Specify this value if you want Amazon Pinpoint to communicate with the APNs sandbox environment by using APNs tokens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-apnsvoipsandboxchannel.html",
    "properties": [
      "ApplicationId",
      "BundleId",
      "Certificate",
      "DefaultAuthenticationMethod",
      "Enabled",
      "PrivateKey",
      "TeamId",
      "TokenKey",
      "TokenKeyId"
    ]
  },
  "AWS::Pinpoint::App": {
    "full_properties": {
      "Name": {
        "description": "The display name of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-app.html",
    "properties": [
      "Name",
      "Tags"
    ]
  },
  "AWS::Pinpoint::ApplicationSettings": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CampaignHook": {
        "description": "The settings for the Lambda function to use by default as a code hook for campaigns in the application. To override these settings for a specific campaign, use the Campaign resource to define custom Lambda function settings for the campaign.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CloudWatchMetricsEnabled": {
        "description": "Specifies whether to enable application-related alarms in Amazon CloudWatch.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Limits": {
        "description": "The default sending limits for campaigns in the application. To override these limits for a specific campaign, use the Campaign resource to define custom limits for the campaign.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "QuietTime": {
        "description": "The default quiet time for campaigns in the application. Quiet time is a specific time range when campaigns don't send messages to endpoints, if all the following conditions are met:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-applicationsettings.html",
    "properties": [
      "ApplicationId",
      "CampaignHook",
      "CloudWatchMetricsEnabled",
      "Limits",
      "QuietTime"
    ]
  },
  "AWS::Pinpoint::BaiduChannel": {
    "full_properties": {
      "ApiKey": {
        "description": "The API key that you received from the Baidu Cloud Push service to communicate with the service.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that you're configuring the Baidu channel for.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Enabled": {
        "description": "Specifies whether to enable the Baidu channel for the application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SecretKey": {
        "description": "The secret key that you received from the Baidu Cloud Push service to communicate with the service.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-baiduchannel.html",
    "properties": [
      "ApiKey",
      "ApplicationId",
      "Enabled",
      "SecretKey"
    ]
  },
  "AWS::Pinpoint::Campaign": {
    "full_properties": {
      "AdditionalTreatments": {
        "description": "An array of requests that defines additional treatments for the campaign, in addition to the default treatment for the campaign.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the campaign is associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CampaignHook": {
        "description": "Specifies the Lambda function to use as a code hook for a campaign.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomDeliveryConfiguration": {
        "description": "The delivery configuration settings for sending the treatment through a custom channel. This object is required if the MessageConfiguration object for the treatment specifies a CustomMessage object.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A custom description of the campaign.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HoldoutPercent": {
        "description": "The allocated percentage of users (segment members) who shouldn't receive messages from the campaign.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "IsPaused": {
        "description": "Specifies whether to pause the campaign. A paused campaign doesn't run unless you resume it by changing this value to false. If you restart a campaign, the campaign restarts from the beginning and not at the point you paused it.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Limits": {
        "description": "The messaging limits for the campaign.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MessageConfiguration": {
        "description": "The message configuration settings for the campaign.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the campaign.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Priority": {
        "description": "An integer between 1 and 5, inclusive, that represents the priority of the in-app message campaign, where 1 is the highest priority and 5 is the lowest. If there are multiple messages scheduled to be displayed at the same time, the priority determines the order in which those messages are displayed.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "The schedule settings for the campaign.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SegmentId": {
        "description": "The unique identifier for the segment to associate with the campaign.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SegmentVersion": {
        "description": "The version of the segment to associate with the campaign.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateConfiguration": {
        "description": "The message template to use for the treatment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TreatmentDescription": {
        "description": "A custom description of the default treatment for the campaign.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TreatmentName": {
        "description": "A custom name of the default treatment for the campaign, if the campaign has multiple treatments. A treatment is a variation of a campaign that's used for A/B testing.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-campaign.html",
    "properties": [
      "AdditionalTreatments",
      "ApplicationId",
      "CampaignHook",
      "CustomDeliveryConfiguration",
      "Description",
      "HoldoutPercent",
      "IsPaused",
      "Limits",
      "MessageConfiguration",
      "Name",
      "Priority",
      "Schedule",
      "SegmentId",
      "SegmentVersion",
      "Tags",
      "TemplateConfiguration",
      "TreatmentDescription",
      "TreatmentName"
    ]
  },
  "AWS::Pinpoint::EmailChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that you're specifying the email channel for.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ConfigurationSet": {
        "description": "The Amazon SES configuration set that you want to apply to messages that you send through the channel.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Specifies whether to enable the email channel for the application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "FromAddress": {
        "description": "The verified email address that you want to send email from when you send email through the channel.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Identity": {
        "description": "The Amazon Resource Name (ARN) of the identity, verified with Amazon Simple Email Service (Amazon SES), that you want to use when you send email through the channel.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The ARN of the AWS Identity and Access Management (IAM) role that you want Amazon Pinpoint to use when it submits email-related event data for the channel.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-emailchannel.html",
    "properties": [
      "ApplicationId",
      "ConfigurationSet",
      "Enabled",
      "FromAddress",
      "Identity",
      "RoleArn"
    ]
  },
  "AWS::Pinpoint::EmailTemplate": {
    "full_properties": {
      "DefaultSubstitutions": {
        "description": "A JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that's based on the template, you can override these defaults with message-specific and address-specific variables and values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HtmlPart": {
        "description": "The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Subject": {
        "description": "The subject line, or title, to use in email messages that are based on the message template.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateDescription": {
        "description": "A custom description of the message template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateName": {
        "description": "The name of the message template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TextPart": {
        "description": "The message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don't render HTML content and clients that are connected to high-latency networks, such as mobile devices.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-emailtemplate.html",
    "properties": [
      "DefaultSubstitutions",
      "HtmlPart",
      "Subject",
      "Tags",
      "TemplateDescription",
      "TemplateName",
      "TextPart"
    ]
  },
  "AWS::Pinpoint::EventStream": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that you want to export data from.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationStreamArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Kinesis data stream or Amazon Kinesis Data Firehose delivery stream that you want to publish event data to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The AWS Identity and Access Management (IAM) role that authorizes Amazon Pinpoint to publish event data to the stream in your AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-eventstream.html",
    "properties": [
      "ApplicationId",
      "DestinationStreamArn",
      "RoleArn"
    ]
  },
  "AWS::Pinpoint::GCMChannel": {
    "full_properties": {
      "ApiKey": {
        "description": "The Web API key, also called the server key, that you received from Google to communicate with Google services.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the GCM channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Enabled": {
        "description": "Specifies whether to enable the GCM channel for the Amazon Pinpoint application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-gcmchannel.html",
    "properties": [
      "ApiKey",
      "ApplicationId",
      "Enabled"
    ]
  },
  "AWS::Pinpoint::InAppTemplate": {
    "full_properties": {
      "Content": {
        "description": "An object that contains information about the content of an in-app message, including its title and body text, text colors, background colors, images, buttons, and behaviors.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CustomConfig": {
        "description": "Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Layout": {
        "description": "A string that determines the appearance of the in-app message. You can specify one of the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateDescription": {
        "description": "An optional description of the in-app template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateName": {
        "description": "The name of the in-app message template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-pinpoint-inapptemplate.html",
    "properties": [
      "Content",
      "CustomConfig",
      "Layout",
      "Tags",
      "TemplateDescription",
      "TemplateName"
    ]
  },
  "AWS::Pinpoint::PushTemplate": {
    "full_properties": {
      "ADM": {
        "description": "The message template to use for the ADM (Amazon Device Messaging) channel. This message template overrides the default template for push notification channels (Default).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "APNS": {
        "description": "The message template to use for the APNs (Apple Push Notification service) channel. This message template overrides the default template for push notification channels (Default).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Baidu": {
        "description": "The message template to use for the Baidu (Baidu Cloud Push) channel. This message template overrides the default template for push notification channels (Default).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Default": {
        "description": "The default message template to use for push notification channels.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefaultSubstitutions": {
        "description": "A JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that's based on the template, you can override these defaults with message-specific and address-specific variables and values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GCM": {
        "description": "The message template to use for the GCM channel, which is used to send notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service. This message template overrides the default template for push notification channels (Default).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateDescription": {
        "description": "A custom description of the message template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateName": {
        "description": "The name of the message template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-pinpoint-pushtemplate.html",
    "properties": [
      "ADM",
      "APNS",
      "Baidu",
      "Default",
      "DefaultSubstitutions",
      "GCM",
      "Tags",
      "TemplateDescription",
      "TemplateName"
    ]
  },
  "AWS::Pinpoint::SMSChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the SMS channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Enabled": {
        "description": "Specifies whether to enable the SMS channel for the application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SenderId": {
        "description": "The identity that you want to display on recipients' devices when they receive messages from the SMS channel.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ShortCode": {
        "description": "The registered short code that you want to use when you send messages through the SMS channel.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-smschannel.html",
    "properties": [
      "ApplicationId",
      "Enabled",
      "SenderId",
      "ShortCode"
    ]
  },
  "AWS::Pinpoint::Segment": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the segment is associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Dimensions": {
        "description": "The criteria that define the dimensions for the segment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the segment.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SegmentGroups": {
        "description": "The segment group to use and the dimensions to apply to the group's base segments in order to build the segment. A segment group can consist of zero or more base segments. Your request can include only one segment group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-segment.html",
    "properties": [
      "ApplicationId",
      "Dimensions",
      "Name",
      "SegmentGroups",
      "Tags"
    ]
  },
  "AWS::Pinpoint::SmsTemplate": {
    "full_properties": {
      "Body": {
        "description": "The message body to use in text messages that are based on the message template.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultSubstitutions": {
        "description": "A JSON object that specifies the default values to use for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable. When you create a message that's based on the template, you can override these defaults with message-specific and address-specific variables and values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateDescription": {
        "description": "A custom description of the message template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TemplateName": {
        "description": "The name of the message template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-pinpoint-smstemplate.html",
    "properties": [
      "Body",
      "DefaultSubstitutions",
      "Tags",
      "TemplateDescription",
      "TemplateName"
    ]
  },
  "AWS::Pinpoint::VoiceChannel": {
    "full_properties": {
      "ApplicationId": {
        "description": "The unique identifier for the Amazon Pinpoint application that the voice channel applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Enabled": {
        "description": "Specifies whether to enable the voice channel for the application.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpoint-voicechannel.html",
    "properties": [
      "ApplicationId",
      "Enabled"
    ]
  },
  "AWS::PinpointEmail::ConfigurationSet": {
    "full_properties": {
      "DeliveryOptions": {
        "description": "An object that defines the dedicated IP pool that is used to send emails that you send using the configuration set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the configuration set.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReputationOptions": {
        "description": "An object that defines whether or not Amazon Pinpoint collects reputation metrics for the emails that you send that use the configuration set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SendingOptions": {
        "description": "An object that defines whether or not Amazon Pinpoint can send email that you send using the configuration set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An object that defines the tags (keys and values) that you want to associate with the configuration set.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TrackingOptions": {
        "description": "An object that defines the open and click tracking options for emails that you send using the configuration set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpointemail-configurationset.html",
    "properties": [
      "DeliveryOptions",
      "Name",
      "ReputationOptions",
      "SendingOptions",
      "Tags",
      "TrackingOptions"
    ]
  },
  "AWS::PinpointEmail::ConfigurationSetEventDestination": {
    "full_properties": {
      "ConfigurationSetName": {
        "description": "The name of the configuration set that contains the event destination that you want to modify.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventDestination": {
        "description": "An object that defines the event destination.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EventDestinationName": {
        "description": "The name of the event destination that you want to modify.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-pinpointemail-configurationseteventdestination.html",
    "properties": [
      "ConfigurationSetName",
      "EventDestination",
      "EventDestinationName"
    ]
  },
  "AWS::PinpointEmail::DedicatedIpPool": {
    "full_properties": {
      "PoolName": {
        "description": "The name of the dedicated IP pool.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An object that defines the tags (keys and values) that you want to associate with the dedicated IP pool.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpointemail-dedicatedippool.html",
    "properties": [
      "PoolName",
      "Tags"
    ]
  },
  "AWS::PinpointEmail::Identity": {
    "full_properties": {
      "DkimSigningEnabled": {
        "description": "For domain identities, this attribute is used to enable or disable DomainKeys Identified Mail (DKIM) signing for the domain.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "FeedbackForwardingEnabled": {
        "description": "Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "MailFromAttributes": {
        "description": "Used to enable or disable the custom Mail-From domain configuration for an email identity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The address or domain of the identity, such as sender@example.com or example.co.uk.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An object that defines the tags (keys and values) that you want to associate with the email identity.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-pinpointemail-identity.html",
    "properties": [
      "DkimSigningEnabled",
      "FeedbackForwardingEnabled",
      "MailFromAttributes",
      "Name",
      "Tags"
    ]
  },
  "AWS::QLDB::Ledger": {
    "full_properties": {
      "DeletionProtection": {
        "description": "Specifies whether the ledger is protected from being deleted by any user. If not defined during ledger creation, this feature is enabled (true) by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KmsKey": {
        "description": "The key in AWS Key Management Service (AWS KMS) to use for encryption of data at rest in the ledger. For more information, see Encryption at rest in the Amazon QLDB Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the ledger that you want to create. The name must be unique among all of the ledgers in your AWS account in the current Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PermissionsMode": {
        "description": "The permissions mode to assign to the ledger that you want to create. This parameter can have one of the following values:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-qldb-ledger.html",
    "properties": [
      "DeletionProtection",
      "KmsKey",
      "Name",
      "PermissionsMode",
      "Tags"
    ]
  },
  "AWS::QLDB::Stream": {
    "full_properties": {
      "ExclusiveEndTime": {
        "description": "The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InclusiveStartTime": {
        "description": "The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: 2019-06-13T21:36:34Z.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KinesisConfiguration": {
        "description": "The configuration settings of the Kinesis Data Streams destination for your stream request.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LedgerName": {
        "description": "The name of the ledger.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StreamName": {
        "description": "The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-qldb-stream.html",
    "properties": [
      "ExclusiveEndTime",
      "InclusiveStartTime",
      "KinesisConfiguration",
      "LedgerName",
      "RoleArn",
      "StreamName",
      "Tags"
    ]
  },
  "AWS::QuickSight::Analysis": {
    "full_properties": {
      "AnalysisId": {
        "description": "The ID for the analysis that you're creating. This ID displays in the URL of the analysis.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AwsAccountId": {
        "description": "The ID of the AWS account where you are creating an analysis.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Errors": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A descriptive name for the analysis that you're creating. This name displays for the analysis in the Amazon QuickSight console.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "The parameter names and override values that you want to use. An analysis can have any parameter type, and some parameters might accept multiple values.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Permissions": {
        "description": "A structure that describes the principals and the resource-level permissions on an analysis. You can use the Permissions structure to grant permissions by providing a list of AWS Identity and Access Management (IAM) action information for each principal listed by Amazon Resource Name (ARN).",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SourceEntity": {
        "description": "A source entity to use for the analysis that you're creating. This metadata structure contains details that describe a source template and one or more datasets.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Contains a map of the key-value pairs for the resource tag or tags assigned to the analysis.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThemeArn": {
        "description": "The ARN for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-quicksight-analysis.html",
    "properties": [
      "AnalysisId",
      "AwsAccountId",
      "Errors",
      "Name",
      "Parameters",
      "Permissions",
      "SourceEntity",
      "Tags",
      "ThemeArn"
    ]
  },
  "AWS::QuickSight::Dashboard": {
    "full_properties": {
      "AwsAccountId": {
        "description": "The ID of the AWS account where you want to create the dashboard.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DashboardId": {
        "description": "The ID for the dashboard, also added to the IAM policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DashboardPublishOptions": {
        "description": "Options for publishing the dashboard when you create it:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The display name of the dashboard.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Permissions": {
        "description": "A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SourceEntity": {
        "description": "The entity that you are using as a source when you create the dashboard. In SourceEntity, you specify the type of object that you want to use. You can only create a dashboard from a template, so you use a SourceTemplate entity. If you need to create a dashboard from an analysis, first convert the analysis to a template by using the CreateTemplate API operation. For SourceTemplate, specify the Amazon Resource Name (ARN) of the source template. The SourceTemplateARN can contain any AWS account; and any QuickSight-supported AWS Region.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThemeArn": {
        "description": "The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same AWS account where you create the dashboard.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VersionDescription": {
        "description": "A description for the first version of the dashboard being created.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-quicksight-dashboard.html",
    "properties": [
      "AwsAccountId",
      "DashboardId",
      "DashboardPublishOptions",
      "Name",
      "Parameters",
      "Permissions",
      "SourceEntity",
      "Tags",
      "ThemeArn",
      "VersionDescription"
    ]
  },
  "AWS::QuickSight::DataSet": {
    "full_properties": {
      "AwsAccountId": {
        "description": "The AWS account ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ColumnGroups": {
        "description": "Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ColumnLevelPermissionRules": {
        "description": "A set of one or more definitions of a ColumnLevelPermissionRule .",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DataSetId": {
        "description": "An ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataSetUsageConfiguration": {
        "description": "The usage configuration to apply to child datasets that reference this dataset as a source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FieldFolders": {
        "description": "The folder that contains fields and nested subfolders for your dataset.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ImportMode": {
        "description": "Indicates whether you want to import the data into SPICE.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IngestionWaitPolicy": {
        "description": "The wait policy to use when creating or updating a Dataset. The default is to wait for SPICE ingestion to finish with timeout of 36 hours.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LogicalTableMap": {
        "description": "Configures the combination and transformation of the data from the physical tables.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The display name for the dataset.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Permissions": {
        "description": "A list of resource permissions on the dataset.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PhysicalTableMap": {
        "description": "Declares the physical tables that are available in the underlying data sources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RowLevelPermissionDataSet": {
        "description": "The row-level security configuration for the data that you want to create.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-quicksight-dataset.html",
    "properties": [
      "AwsAccountId",
      "ColumnGroups",
      "ColumnLevelPermissionRules",
      "DataSetId",
      "DataSetUsageConfiguration",
      "FieldFolders",
      "ImportMode",
      "IngestionWaitPolicy",
      "LogicalTableMap",
      "Name",
      "Permissions",
      "PhysicalTableMap",
      "RowLevelPermissionDataSet",
      "Tags"
    ]
  },
  "AWS::QuickSight::DataSource": {
    "full_properties": {
      "AlternateDataSourceParameters": {
        "description": "A set of alternate data source parameters that you want to share for the credentials stored with this data source. The credentials are applied in tandem with the data source parameters when you copy a data source by using a create or update request. The API operation compares the DataSourceParameters structure that's in the request with the structures in the AlternateDataSourceParameters allow list. If the structures are an exact match, the request is allowed to use the credentials from this existing data source. If the AlternateDataSourceParameters list is null, the Credentials originally used with this DataSourceParameters are automatically allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AwsAccountId": {
        "description": "The AWS account ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Credentials": {
        "description": "The credentials Amazon QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DataSourceId": {
        "description": "An ID for the data source. This ID is unique per AWS Region for each AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataSourceParameters": {
        "description": "The parameters that Amazon QuickSight uses to connect to your underlying source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ErrorInfo": {
        "description": "Error information from the last update or the creation of the data source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A display name for the data source.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Permissions": {
        "description": "A list of resource permissions on the data source.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SslProperties": {
        "description": "Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of the data source. To return a list of all data sources, use ListDataSources.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcConnectionProperties": {
        "description": "Use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-quicksight-datasource.html",
    "properties": [
      "AlternateDataSourceParameters",
      "AwsAccountId",
      "Credentials",
      "DataSourceId",
      "DataSourceParameters",
      "ErrorInfo",
      "Name",
      "Permissions",
      "SslProperties",
      "Tags",
      "Type",
      "VpcConnectionProperties"
    ]
  },
  "AWS::QuickSight::Template": {
    "full_properties": {
      "AwsAccountId": {
        "description": "The ID for the AWS account that the group is in. You use the ID for the AWS account that contains your Amazon QuickSight account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A display name for the template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Permissions": {
        "description": "A list of resource permissions to be set on the template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SourceEntity": {
        "description": "The entity that you are using as a source when you create the template. In SourceEntity, you specify the type of object you're using as source: SourceTemplate for a template or SourceAnalysis for an analysis. Both of these require an Amazon Resource Name (ARN). For SourceTemplate, specify the ARN of the source template. For SourceAnalysis, specify the ARN of the source analysis. The SourceTemplate ARN can contain any AWS account and any Amazon QuickSight-supported AWS Region.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TemplateId": {
        "description": "An ID for the template that you want to create. This template is unique per AWS Region; in each AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VersionDescription": {
        "description": "A description of the current template version being created. This API operation creates the first version of the template. Every time UpdateTemplate is called, a new version is created. Each version of the template maintains a description of the version in the VersionDescription field.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-quicksight-template.html",
    "properties": [
      "AwsAccountId",
      "Name",
      "Permissions",
      "SourceEntity",
      "Tags",
      "TemplateId",
      "VersionDescription"
    ]
  },
  "AWS::QuickSight::Theme": {
    "full_properties": {
      "AwsAccountId": {
        "description": "The ID of the AWS account where you want to store the new theme.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "BaseThemeId": {
        "description": "The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Configuration": {
        "description": "The theme configuration, which contains the theme display properties.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A display name for the theme.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Permissions": {
        "description": "A valid grouping of resource permissions to apply to the new theme.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A map of the key-value pairs for the resource tag or tags that you want to add to the resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ThemeId": {
        "description": "An ID for the theme that you want to create. The theme ID is unique per AWS Region in each AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VersionDescription": {
        "description": "A description of the first version of the theme that you're creating. Every time UpdateTheme is called, a new version is created. Each version of the theme has a description of the version in the VersionDescription field.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-quicksight-theme.html",
    "properties": [
      "AwsAccountId",
      "BaseThemeId",
      "Configuration",
      "Name",
      "Permissions",
      "Tags",
      "ThemeId",
      "VersionDescription"
    ]
  },
  "AWS::RAM::ResourceShare": {
    "full_properties": {
      "AllowExternalPrincipals": {
        "description": "Specifies whether principals outside your organization in AWS Organizations can be associated with a resource share. A value of true lets you share with individual AWS accounts that are not in your organization. A value of false only has meaning if your account is a member of an AWS Organization. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "Specifies the name of the resource share.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PermissionArns": {
        "description": "Specifies the Amazon Resource Names (ARNs) of the AWS RAM permission to associate with the resource share. If you do not specify an ARN for the permission, AWS RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Principals": {
        "description": "Specifies a list of one or more principals to associate with the resource share.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ResourceArns": {
        "description": "Specifies a list of one or more ARNs of the resources to associate with the resource share.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ram-resourceshare.html",
    "properties": [
      "AllowExternalPrincipals",
      "Name",
      "PermissionArns",
      "Principals",
      "ResourceArns",
      "Tags"
    ]
  },
  "AWS::RDS::DBCluster": {
    "full_properties": {
      "AllocatedStorage": {
        "description": "The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AssociatedRoles": {
        "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZones": {
        "description": "A list of Availability Zones (AZs) where instances in the DB cluster can be created. For information on AWS Regions and Availability Zones, see Choosing the Regions and Availability Zones in the Amazon Aurora User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "BacktrackWindow": {
        "description": "The target backtrack window, in seconds. To disable backtracking, set this value to 0.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "BackupRetentionPeriod": {
        "description": "The number of days for which automated backups are retained.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "CopyTagsToSnapshot": {
        "description": "A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DBClusterIdentifier": {
        "description": "The DB cluster identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterInstanceClass": {
        "description": "The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBClusterParameterGroupName": {
        "description": "The name of the DB cluster parameter group to associate with this DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBInstanceParameterGroupName": {
        "description": "The name of the DB parameter group to apply to all instances of the DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "A DB subnet group that you want to associate with this DB cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DatabaseName": {
        "description": "The name of your database. If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see Naming Constraints in the Amazon Aurora User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeletionProtection": {
        "description": "A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Domain": {
        "description": "Indicates the directory ID of the Active Directory to create the DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainIAMRoleName": {
        "description": "Specifies the name of the IAM role to use when making API calls to the Directory Service.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableCloudwatchLogsExports": {
        "description": "The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see  Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Aurora User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EnableHttpEndpoint": {
        "description": "A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnableIAMDatabaseAuthentication": {
        "description": "A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Engine": {
        "description": "The name of the database engine to be used for this DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "EngineMode": {
        "description": "The DB engine mode of the DB cluster, either provisioned, serverless, parallelquery, global, or multimaster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version number of the database engine to use.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "GlobalClusterIdentifier": {
        "description": "If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster. To define the primary database cluster of the global cluster, use the AWS::RDS::GlobalCluster resource.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Iops": {
        "description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, the default KMS key is used. If you specify this property, you must set the StorageEncrypted property to true.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MasterUserPassword": {
        "description": "The master password for the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The name of the master user for the DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "MonitoringInterval": {
        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MonitoringRoleArn": {
        "description": "The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role, see Setting up and enabling Enhanced Monitoring in the Amazon RDS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkType": {
        "description": "The network type of the DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PerformanceInsightsEnabled": {
        "description": "A value that indicates whether to turn on Performance Insights for the DB cluster.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PerformanceInsightsKmsKeyId": {
        "description": "The AWS KMS key identifier for encryption of Performance Insights data.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PerformanceInsightsRetentionPeriod": {
        "description": "The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Port": {
        "description": "The port number on which the DB instances in the DB cluster accept connections.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PreferredBackupWindow": {
        "description": "The daily time range during which automated backups are created. For more information, see Backup Window in the Amazon Aurora User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "A value that indicates whether the DB cluster is publicly accessible.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ReplicationSourceIdentifier": {
        "description": "The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RestoreType": {
        "description": "The type of restore to be performed. You can specify one of the following values:",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ScalingConfiguration": {
        "description": "The ScalingConfiguration property type specifies the scaling configuration of an Aurora Serverless DB cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServerlessV2ScalingConfiguration": {
        "description": "The ServerlessV2ScalingConfiguration property type specifies the scaling configuration of an Aurora Serverless V2 DB cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SnapshotIdentifier": {
        "description": "The identifier for the DB snapshot or DB cluster snapshot to restore from.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SourceDBClusterIdentifier": {
        "description": "When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceRegion": {
        "description": "The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, us-east-1.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "Indicates whether the DB cluster is encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "StorageType": {
        "description": "Specifies the storage type to be associated with the DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this DB cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UseLatestRestorableTime": {
        "description": "A value that indicates whether to restore the DB cluster to the latest restorable backup time. By default, the DB cluster is not restored to the latest restorable backup time.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "VpcSecurityGroupIds": {
        "description": "A list of EC2 VPC security groups to associate with this DB cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-dbcluster.html",
    "properties": [
      "AllocatedStorage",
      "AssociatedRoles",
      "AutoMinorVersionUpgrade",
      "AvailabilityZones",
      "BacktrackWindow",
      "BackupRetentionPeriod",
      "CopyTagsToSnapshot",
      "DatabaseName",
      "DBClusterIdentifier",
      "DBClusterInstanceClass",
      "DBClusterParameterGroupName",
      "DBInstanceParameterGroupName",
      "DBSubnetGroupName",
      "DeletionProtection",
      "Domain",
      "DomainIAMRoleName",
      "EnableCloudwatchLogsExports",
      "EnableHttpEndpoint",
      "EnableIAMDatabaseAuthentication",
      "Engine",
      "EngineMode",
      "EngineVersion",
      "GlobalClusterIdentifier",
      "Iops",
      "KmsKeyId",
      "MasterUsername",
      "MasterUserPassword",
      "MonitoringInterval",
      "MonitoringRoleArn",
      "NetworkType",
      "PerformanceInsightsEnabled",
      "PerformanceInsightsKmsKeyId",
      "PerformanceInsightsRetentionPeriod",
      "Port",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "ReplicationSourceIdentifier",
      "RestoreType",
      "ScalingConfiguration",
      "ServerlessV2ScalingConfiguration",
      "SnapshotIdentifier",
      "SourceDBClusterIdentifier",
      "SourceRegion",
      "StorageEncrypted",
      "StorageType",
      "Tags",
      "UseLatestRestorableTime",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::RDS::DBClusterParameterGroup": {
    "full_properties": {
      "DBClusterParameterGroupName": {
        "description": "The name of the DB cluster parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A friendly description for this DB cluster parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a DB engine and engine version compatible with that DB cluster parameter group family.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "Provides a list of parameters for the DB cluster parameter group.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this DB cluster parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-dbclusterparametergroup.html",
    "properties": [
      "DBClusterParameterGroupName",
      "Description",
      "Family",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::RDS::DBInstance": {
    "full_properties": {
      "AllocatedStorage": {
        "description": "The amount of storage in gibibytes (GiB) to be initially allocated for the database instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AllowMajorVersionUpgrade": {
        "description": "A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AssociatedRoles": {
        "description": "The AWS Identity and Access Management (IAM) roles associated with the DB instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.",
        "required": false,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones, see Regions and Availability Zones.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "BackupRetentionPeriod": {
        "description": "The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.",
        "required": false,
        "type": "Number",
        "update_causes": "interrupt"
      },
      "CACertificateIdentifier": {
        "description": "The identifier of the CA certificate for this DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CharacterSetName": {
        "description": "For supported engines, indicates that the DB instance should be associated with the specified character set.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CopyTagsToSnapshot": {
        "description": "A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CustomIAMInstanceProfile": {
        "description": "The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterIdentifier": {
        "description": "The identifier of the DB cluster that the instance will belong to.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBInstanceClass": {
        "description": "The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DBInstanceIdentifier": {
        "description": "A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DBName": {
        "description": "The meaning of this parameter differs according to the database engine you use.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBParameterGroupName": {
        "description": "The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DBSecurityGroups": {
        "description": "A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DBSnapshotIdentifier": {
        "description": "The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBSubnetGroupName": {
        "description": "A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeleteAutomatedBackups": {
        "description": "A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DeletionProtection": {
        "description": "A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see  Deleting a DB Instance.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Domain": {
        "description": "The Active Directory directory ID to create the DB instance in. Currently, only Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainIAMRoleName": {
        "description": "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableCloudwatchLogsExports": {
        "description": "The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs  in the Amazon Relational Database Service User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EnableIAMDatabaseAuthentication": {
        "description": "A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnablePerformanceInsights": {
        "description": "A value that indicates whether to enable Performance Insights for the DB instance. For more information, see Using Amazon Performance Insights in the Amazon RDS User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Engine": {
        "description": "The name of the database engine that you want to use for this DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "EngineVersion": {
        "description": "The version number of the database engine to use.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Iops": {
        "description": "The number of I/O operations per second (IOPS) that the database provisions. The value must be equal to or greater than 1000.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ARN of the AWS KMS key that's used to encrypt the DB instance, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, AWS CloudFormation uses the default KMS key. If you specify this property, you must set the StorageEncrypted property to true.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LicenseModel": {
        "description": "License model information for this DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUserPassword": {
        "description": "The password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\".",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The master user name for the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MaxAllocatedStorage": {
        "description": "The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MonitoringInterval": {
        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify 0. The default is 0.",
        "required": false,
        "type": "Number",
        "update_causes": "interrupt"
      },
      "MonitoringRoleArn": {
        "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role, see Setting Up and Enabling Enhanced Monitoring in the Amazon RDS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MultiAZ": {
        "description": "Specifies whether the database instance is a Multi-AZ DB instance deployment. You can't set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "NcharCharacterSetName": {
        "description": "The name of the NCHAR character set for the Oracle DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkType": {
        "description": "The network type of the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OptionGroupName": {
        "description": "Indicates that the DB instance should be associated with the specified option group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PerformanceInsightsKMSKeyId": {
        "description": "The AWS KMS key identifier for encryption of Performance Insights data.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "PerformanceInsightsRetentionPeriod": {
        "description": "The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Port": {
        "description": "The port number on which the database accepts connections.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreferredBackupWindow": {
        "description": "The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter. For more information, see Backup Window in the Amazon RDS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "ProcessorFeatures": {
        "description": "The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PromotionTier": {
        "description": "A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ReplicaMode": {
        "description": "The open mode of an Oracle read replica. For more information, see Working with Oracle Read Replicas for Amazon RDS in the Amazon RDS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SourceDBInstanceIdentifier": {
        "description": "If you want to create a read replica DB instance, specify the ID of the source DB instance. Each DB instance can have a limited number of read replicas. For more information, see Working with Read Replicas in the Amazon RDS User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "SourceRegion": {
        "description": "The ID of the region that contains the source DB instance for the read replica.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "StorageType": {
        "description": "Specifies the storage type to be associated with the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this DB instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Timezone": {
        "description": "The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "UseDefaultProcessorFeatures": {
        "description": "A value that indicates whether the DB instance class of the DB instance uses its default processor features.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "VPCSecurityGroups": {
        "description": "A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-dbinstance.html",
    "properties": [
      "AllocatedStorage",
      "AllowMajorVersionUpgrade",
      "AssociatedRoles",
      "AutoMinorVersionUpgrade",
      "AvailabilityZone",
      "BackupRetentionPeriod",
      "CACertificateIdentifier",
      "CharacterSetName",
      "CopyTagsToSnapshot",
      "CustomIAMInstanceProfile",
      "DBClusterIdentifier",
      "DBInstanceClass",
      "DBInstanceIdentifier",
      "DBName",
      "DBParameterGroupName",
      "DBSecurityGroups",
      "DBSnapshotIdentifier",
      "DBSubnetGroupName",
      "DeleteAutomatedBackups",
      "DeletionProtection",
      "Domain",
      "DomainIAMRoleName",
      "EnableCloudwatchLogsExports",
      "EnableIAMDatabaseAuthentication",
      "EnablePerformanceInsights",
      "Engine",
      "EngineVersion",
      "Iops",
      "KmsKeyId",
      "LicenseModel",
      "MasterUsername",
      "MasterUserPassword",
      "MaxAllocatedStorage",
      "MonitoringInterval",
      "MonitoringRoleArn",
      "MultiAZ",
      "NcharCharacterSetName",
      "NetworkType",
      "OptionGroupName",
      "PerformanceInsightsKMSKeyId",
      "PerformanceInsightsRetentionPeriod",
      "Port",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "ProcessorFeatures",
      "PromotionTier",
      "PubliclyAccessible",
      "ReplicaMode",
      "SourceDBInstanceIdentifier",
      "SourceRegion",
      "StorageEncrypted",
      "StorageType",
      "Tags",
      "Timezone",
      "UseDefaultProcessorFeatures",
      "VPCSecurityGroups"
    ]
  },
  "AWS::RDS::DBParameterGroup": {
    "full_properties": {
      "DBParameterGroupName": {
        "description": "The name of the DB parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Provides the customer-specified description for this DB parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a DB engine and engine version compatible with that DB parameter group family.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "An array of parameter names and values for the parameter update. At least one parameter name and value must be supplied. Subsequent arguments are optional.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this DB parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-dbparametergroup.html",
    "properties": [
      "DBParameterGroupName",
      "Description",
      "Family",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::RDS::DBProxy": {
    "full_properties": {
      "Auth": {
        "description": "The authorization mechanism that the proxy uses.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "DBProxyName": {
        "description": "The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DebugLogging": {
        "description": "Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EngineFamily": {
        "description": "The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify MYSQL. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify POSTGRESQL. For RDS for Microsoft SQL Server, specify SQLSERVER.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IdleClientTimeout": {
        "description": "The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "RequireTLS": {
        "description": "A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "One or more VPC security group IDs to associate with the new proxy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSubnetIds": {
        "description": "One or more VPC subnet IDs to associate with the new proxy.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-rds-dbproxy.html",
    "properties": [
      "Auth",
      "DBProxyName",
      "DebugLogging",
      "EngineFamily",
      "IdleClientTimeout",
      "RequireTLS",
      "RoleArn",
      "Tags",
      "VpcSecurityGroupIds",
      "VpcSubnetIds"
    ]
  },
  "AWS::RDS::DBProxyEndpoint": {
    "full_properties": {
      "DBProxyEndpointName": {
        "description": "The name of the DB proxy endpoint to create.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBProxyName": {
        "description": "The name of the DB proxy associated with the DB proxy endpoint that you create.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetRole": {
        "description": "A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcSecurityGroupIds": {
        "description": "The VPC security group IDs for the DB proxy endpoint that you create. You can specify a different set of security group IDs than for the original DB proxy. The default is the default security group for the VPC.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSubnetIds": {
        "description": "The VPC subnet IDs for the DB proxy endpoint that you create. You can specify a different set of subnet IDs than for the original DB proxy.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-rds-dbproxyendpoint.html",
    "properties": [
      "DBProxyEndpointName",
      "DBProxyName",
      "Tags",
      "TargetRole",
      "VpcSecurityGroupIds",
      "VpcSubnetIds"
    ]
  },
  "AWS::RDS::DBProxyTargetGroup": {
    "full_properties": {
      "ConnectionPoolConfigurationInfo": {
        "description": "Settings that control the size and behavior of the connection pool associated with a DBProxyTargetGroup.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DBClusterIdentifiers": {
        "description": "One or more DB cluster identifiers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DBInstanceIdentifiers": {
        "description": "One or more DB instance identifiers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DBProxyName": {
        "description": "The identifier of the DBProxy that is associated with the DBProxyTargetGroup.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetGroupName": {
        "description": "The identifier for the target group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-rds-dbproxytargetgroup.html",
    "properties": [
      "ConnectionPoolConfigurationInfo",
      "DBClusterIdentifiers",
      "DBInstanceIdentifiers",
      "DBProxyName",
      "TargetGroupName"
    ]
  },
  "AWS::RDS::DBSecurityGroup": {
    "full_properties": {
      "DBSecurityGroupIngress": {
        "description": "Ingress rules to be applied to the DB security group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "EC2VpcId": {
        "description": "The identifier of an Amazon VPC. This property indicates the VPC that this DB security group belongs to.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GroupDescription": {
        "description": "Provides the description of the DB security group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this DB security group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-rds-security-group.html",
    "properties": [
      "DBSecurityGroupIngress",
      "EC2VpcId",
      "GroupDescription",
      "Tags"
    ]
  },
  "AWS::RDS::DBSecurityGroupIngress": {
    "full_properties": {
      "CIDRIP": {
        "description": "The IP range to authorize.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBSecurityGroupName": {
        "description": "The name of the DB security group to add authorization to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupId": {
        "description": "Id of the EC2 security group to authorize. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupName": {
        "description": "Name of the EC2 security group to authorize. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupOwnerId": {
        "description": "AWS account number of the owner of the EC2 security group specified in the EC2SecurityGroupName parameter. The AWS access key ID isn't an acceptable value. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-security-group-ingress.html",
    "properties": [
      "CIDRIP",
      "DBSecurityGroupName",
      "EC2SecurityGroupId",
      "EC2SecurityGroupName",
      "EC2SecurityGroupOwnerId"
    ]
  },
  "AWS::RDS::DBSubnetGroup": {
    "full_properties": {
      "DBSubnetGroupDescription": {
        "description": "The description for the DB subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "The name for the DB subnet group. This value is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The EC2 Subnet IDs for the DB subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this DB subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-dbsubnetgroup.html",
    "properties": [
      "DBSubnetGroupDescription",
      "DBSubnetGroupName",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::RDS::EventSubscription": {
    "full_properties": {
      "Enabled": {
        "description": "A value that indicates whether to activate the subscription. If the event notification subscription isn't activated, the subscription is created but not active.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventCategories": {
        "description": "A list of event categories for a particular source type (SourceType) that you want to subscribe to. You can see a list of the categories for a given source type in the \"Amazon RDS event categories and event messages\" section of the Amazon RDS User Guide or the Amazon Aurora User Guide. You can also see this list by using the DescribeEventCategories operation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceIds": {
        "description": "The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It can't end with a hyphen or contain two consecutive hyphens.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SourceType": {
        "description": "The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, set this parameter to db-instance. If this value isn't specified, all events are returned.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubscriptionName": {
        "description": "The name of the subscription.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this subscription.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-eventsubscription.html",
    "properties": [
      "Enabled",
      "EventCategories",
      "SnsTopicArn",
      "SourceIds",
      "SourceType",
      "SubscriptionName",
      "Tags"
    ]
  },
  "AWS::RDS::GlobalCluster": {
    "full_properties": {
      "DeletionProtection": {
        "description": "The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Engine": {
        "description": "The name of the database engine to be used for this DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The engine version of the Aurora global database.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GlobalClusterIdentifier": {
        "description": "The cluster identifier of the global database cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceDBClusterIdentifier": {
        "description": "The DB cluster identifier or Amazon Resource Name (ARN) to use as the primary cluster of the global database.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "The storage encryption setting for the global database cluster.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-rds-globalcluster.html",
    "properties": [
      "DeletionProtection",
      "Engine",
      "EngineVersion",
      "GlobalClusterIdentifier",
      "SourceDBClusterIdentifier",
      "StorageEncrypted"
    ]
  },
  "AWS::RDS::OptionGroup": {
    "full_properties": {
      "EngineName": {
        "description": "Specifies the name of the engine that this option group should be associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MajorEngineVersion": {
        "description": "Specifies the major version of the engine that this option group should be associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OptionConfigurations": {
        "description": "A list of options and the settings for each option.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OptionGroupDescription": {
        "description": "The description of the option group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OptionGroupName": {
        "description": "The name of the option group to be created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An optional array of key-value pairs to apply to this option group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-optiongroup.html",
    "properties": [
      "EngineName",
      "MajorEngineVersion",
      "OptionConfigurations",
      "OptionGroupDescription",
      "OptionGroupName",
      "Tags"
    ]
  },
  "AWS::RUM::AppMonitor": {
    "full_properties": {
      "AppMonitorConfiguration": {
        "description": "A structure that contains much of the configuration data for the app monitor. If you are using Amazon Cognito for authorization, you must include this structure in your request, and it must include the ID of the Amazon Cognito identity pool to use for authorization. If you don't include AppMonitorConfiguration, you must set up your own authorization method. For more information, see Authorize your application to send data to AWS.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CwLogEnabled": {
        "description": "Data collected by CloudWatch RUM is kept by RUM for 30 days and then deleted. This parameter specifies whether CloudWatch RUM sends a copy of this telemetry data to Amazon CloudWatch Logs in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur Amazon CloudWatch Logs charges.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Domain": {
        "description": "The top-level internet domain name for which your application has administrative authority. This parameter is required.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the app monitor. This parameter is required.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Assigns one or more tags (key-value pairs) to the app monitor.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rum-appmonitor.html",
    "properties": [
      "AppMonitorConfiguration",
      "CwLogEnabled",
      "Domain",
      "Name",
      "Tags"
    ]
  },
  "AWS::Redshift::Cluster": {
    "full_properties": {
      "AllowVersionUpgrade": {
        "description": "If true, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AquaConfigurationStatus": {
        "description": "This parameter is retired. It does not set the AQUA configuration status. Amazon Redshift automatically determines whether to use AQUA (Advanced Query Accelerator).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutomatedSnapshotRetentionPeriod": {
        "description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with CreateClusterSnapshot in the Amazon Redshift API Reference.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AvailabilityZoneRelocation": {
        "description": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is created.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZoneRelocationStatus": {
        "description": "Describes the status of the Availability Zone relocation operation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Classic": {
        "description": "A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false, the resize type is elastic.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ClusterIdentifier": {
        "description": "A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. The identifier also appears in the Amazon Redshift console.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterParameterGroupName": {
        "description": "The name of the parameter group to be associated with this cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ClusterSecurityGroups": {
        "description": "A list of security groups to be associated with this cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ClusterSubnetGroupName": {
        "description": "The name of a cluster subnet group to be associated with this cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterType": {
        "description": "The type of the cluster. When cluster type is specified as",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ClusterVersion": {
        "description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBName": {
        "description": "The name of the first database to be created when the cluster is created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeferMaintenance": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DeferMaintenanceDuration": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "DeferMaintenanceEndTime": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeferMaintenanceStartTime": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationRegion": {
        "description": "The destination region that snapshots are automatically copied to when cross-region snapshot copy is enabled.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ElasticIp": {
        "description": "The Elastic IP (EIP) address for the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Encrypted": {
        "description": "If true, the data in the cluster is encrypted at rest.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnhancedVpcRouting": {
        "description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "HsmClientCertificateIdentifier": {
        "description": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HsmConfigurationIdentifier": {
        "description": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IamRoles": {
        "description": "A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LoggingProperties": {
        "description": "Specifies logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaintenanceTrackName": {
        "description": "An optional parameter for the name of the maintenance track for the cluster. If you don't provide a maintenance track name, the cluster is assigned to the current track.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ManualSnapshotRetentionPeriod": {
        "description": "The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MasterUserPassword": {
        "description": "The password associated with the admin user account for the cluster that is being created.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The user name associated with the admin user account for the cluster that is being created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NodeType": {
        "description": "The node type to be provisioned for the cluster. For information about node types, go to  Working with Clusters in the Amazon Redshift Cluster Management Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NumberOfNodes": {
        "description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OwnerAccount": {
        "description": "The AWS account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port number on which the cluster accepts incoming connections.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "If true, the cluster can be accessed from a public network.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ResourceAction": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RevisionTarget": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RotateEncryptionKey": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SnapshotClusterIdentifier": {
        "description": "The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnapshotCopyGrantName": {
        "description": "The name of the snapshot copy grant.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnapshotCopyManual": {
        "description": "Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SnapshotCopyRetentionPeriod": {
        "description": "The number of days to retain automated snapshots in the destination AWS Region after they are copied from the source AWS Region.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotIdentifier": {
        "description": "The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive. You can specify this parameter or snapshotArn, but not both.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tag instances.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-cluster.html",
    "properties": [
      "AllowVersionUpgrade",
      "AquaConfigurationStatus",
      "AutomatedSnapshotRetentionPeriod",
      "AvailabilityZone",
      "AvailabilityZoneRelocation",
      "AvailabilityZoneRelocationStatus",
      "Classic",
      "ClusterIdentifier",
      "ClusterParameterGroupName",
      "ClusterSecurityGroups",
      "ClusterSubnetGroupName",
      "ClusterType",
      "ClusterVersion",
      "DBName",
      "DeferMaintenance",
      "DeferMaintenanceDuration",
      "DeferMaintenanceEndTime",
      "DeferMaintenanceStartTime",
      "DestinationRegion",
      "ElasticIp",
      "Encrypted",
      "EnhancedVpcRouting",
      "HsmClientCertificateIdentifier",
      "HsmConfigurationIdentifier",
      "IamRoles",
      "KmsKeyId",
      "LoggingProperties",
      "MaintenanceTrackName",
      "ManualSnapshotRetentionPeriod",
      "MasterUsername",
      "MasterUserPassword",
      "NodeType",
      "NumberOfNodes",
      "OwnerAccount",
      "Port",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "ResourceAction",
      "RevisionTarget",
      "RotateEncryptionKey",
      "SnapshotClusterIdentifier",
      "SnapshotCopyGrantName",
      "SnapshotCopyManual",
      "SnapshotCopyRetentionPeriod",
      "SnapshotIdentifier",
      "Tags",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::Redshift::ClusterParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "The description of the parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParameterGroupFamily": {
        "description": "The name of the cluster parameter group family that this cluster parameter group is compatible with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The list of tags for the cluster parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-clusterparametergroup.html",
    "properties": [
      "Description",
      "ParameterGroupFamily",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::Redshift::ClusterSecurityGroup": {
    "full_properties": {
      "Description": {
        "description": "A description for the security group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this security group. Use tags to manage your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-clustersecuritygroup.html",
    "properties": [
      "Description",
      "Tags"
    ]
  },
  "AWS::Redshift::ClusterSecurityGroupIngress": {
    "full_properties": {
      "CIDRIP": {
        "description": "The IP range to be added the Amazon Redshift security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterSecurityGroupName": {
        "description": "The name of the security group to which the ingress rule is added.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EC2SecurityGroupName": {
        "description": "The EC2 security group to be added the Amazon Redshift security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EC2SecurityGroupOwnerId": {
        "description": "The AWS account number of the owner of the security group specified by the EC2SecurityGroupName parameter. The AWS Access Key ID is not an acceptable value.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-redshift-clustersecuritygroupingress.html",
    "properties": [
      "CIDRIP",
      "ClusterSecurityGroupName",
      "EC2SecurityGroupName",
      "EC2SecurityGroupOwnerId"
    ]
  },
  "AWS::Redshift::ClusterSubnetGroup": {
    "full_properties": {
      "Description": {
        "description": "A description for the subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetIds": {
        "description": "An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this subnet group. Use tags to manage your resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-clustersubnetgroup.html",
    "properties": [
      "Description",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::Redshift::EndpointAccess": {
    "full_properties": {
      "ClusterIdentifier": {
        "description": "The cluster identifier of the cluster associated with the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EndpointName": {
        "description": "The name of the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceOwner": {
        "description": "The AWS account ID of the owner of the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetGroupName": {
        "description": "The subnet group name where Amazon Redshift chooses to deploy the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcEndpoint": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSecurityGroups": {
        "description": "The security groups associated with the endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-endpointaccess.html",
    "properties": [
      "ClusterIdentifier",
      "EndpointName",
      "ResourceOwner",
      "SubnetGroupName",
      "VpcEndpoint",
      "VpcSecurityGroupIds",
      "VpcSecurityGroups"
    ]
  },
  "AWS::Redshift::EndpointAuthorization": {
    "full_properties": {
      "Account": {
        "description": "The AAWS account ID of either the cluster owner (grantor) or grantee. If Grantee parameter is true, then the Account value is of the grantor.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterIdentifier": {
        "description": "The cluster identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Force": {
        "description": "Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "VpcIds": {
        "description": "The virtual private cloud (VPC) identifiers to grant access to.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-endpointauthorization.html",
    "properties": [
      "Account",
      "ClusterIdentifier",
      "Force",
      "VpcIds"
    ]
  },
  "AWS::Redshift::EventSubscription": {
    "full_properties": {
      "Enabled": {
        "description": "A boolean value; set to true to activate the subscription, and set to false to create the subscription but not activate it.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventCategories": {
        "description": "Specifies the Amazon Redshift event categories to be published by the event notification subscription.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Severity": {
        "description": "Specifies the Amazon Redshift event severity to be published by the event notification subscription.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SourceIds": {
        "description": "A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SourceType": {
        "description": "The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your AWS account. You must specify a source type in order to specify source IDs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubscriptionName": {
        "description": "The name of the event subscription to be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tag instances.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-eventsubscription.html",
    "properties": [
      "Enabled",
      "EventCategories",
      "Severity",
      "SnsTopicArn",
      "SourceIds",
      "SourceType",
      "SubscriptionName",
      "Tags"
    ]
  },
  "AWS::Redshift::ScheduledAction": {
    "full_properties": {
      "Enable": {
        "description": "If true, the schedule is enabled. If false, the scheduled action does not trigger. For more information about state of the scheduled action, see AWS::Redshift::ScheduledAction.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EndTime": {
        "description": "The end time in UTC when the schedule is no longer active. After this time, the scheduled action does not trigger.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IamRole": {
        "description": "The IAM role to assume to run the scheduled action. This IAM role must have permission to run the Amazon Redshift API operation in the scheduled action. This IAM role must allow the Amazon Redshift scheduler (Principal scheduler.redshift.amazonaws.com) to assume permissions on your behalf.  For more information about the IAM role to use with the Amazon Redshift scheduler, see Using Identity-Based Policies for Amazon Redshift in the Amazon Redshift Cluster Management Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "The schedule for a one-time (at format) or recurring (cron format) scheduled action. Schedule invocations must be separated by at least one hour.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduledActionDescription": {
        "description": "The description of the scheduled action.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduledActionName": {
        "description": "The name of the scheduled action.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StartTime": {
        "description": "The start time in UTC when the schedule is active. Before this time, the scheduled action does not trigger.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TargetAction": {
        "description": "A JSON format string of the Amazon Redshift API operation with input parameters.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-scheduledaction.html",
    "properties": [
      "Enable",
      "EndTime",
      "IamRole",
      "Schedule",
      "ScheduledActionDescription",
      "ScheduledActionName",
      "StartTime",
      "TargetAction"
    ]
  },
  "AWS::RedshiftServerless::Namespace": {
    "full_properties": {
      "AdminUserPassword": {
        "description": "The password of the administrator for the primary database created in the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AdminUsername": {
        "description": "The username of the administrator for the primary database created in the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DbName": {
        "description": "The name of the primary database created in the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultIamRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role to set as a default in the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FinalSnapshotName": {
        "description": "The name of the snapshot to be created before the namespace is deleted.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FinalSnapshotRetentionPeriod": {
        "description": "How long to retain the final snapshot.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "IamRoles": {
        "description": "A list of IAM roles to associate with the namespace.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ID of the AWS Key Management Service key used to encrypt your data.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LogExports": {
        "description": "The types of logs the namespace can export. Available export types are userlog, connectionlog, and useractivitylog.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "NamespaceName": {
        "description": "The name of the namespace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The map of the key-value pairs used to tag the namespace.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-redshiftserverless-namespace.html",
    "properties": [
      "AdminUsername",
      "AdminUserPassword",
      "DbName",
      "DefaultIamRoleArn",
      "FinalSnapshotName",
      "FinalSnapshotRetentionPeriod",
      "IamRoles",
      "KmsKeyId",
      "LogExports",
      "NamespaceName",
      "Tags"
    ]
  },
  "AWS::RedshiftServerless::Workgroup": {
    "full_properties": {
      "BaseCapacity": {
        "description": "The base compute capacity of the workgroup in Redshift Processing Units (RPUs).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ConfigParameters": {
        "description": "A list of parameters to set for finer control over a database. Available options are datestyle, enable_user_activity_logging, query_group, search_path, and max_query_execution_time.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EnhancedVpcRouting": {
        "description": "The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NamespaceName": {
        "description": "The namespace the workgroup is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PubliclyAccessible": {
        "description": "A value that specifies whether the workgroup can be accessible from a public network.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "A list of security group IDs to associate with the workgroup.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetIds": {
        "description": "A list of subnet IDs the workgroup is associated with.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The map of the key-value pairs used to tag the workgroup.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WorkgroupName": {
        "description": "The name of the workgroup.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-redshiftserverless-workgroup.html",
    "properties": [
      "BaseCapacity",
      "ConfigParameters",
      "EnhancedVpcRouting",
      "NamespaceName",
      "PubliclyAccessible",
      "SecurityGroupIds",
      "SubnetIds",
      "Tags",
      "WorkgroupName"
    ]
  },
  "AWS::RefactorSpaces::Application": {
    "full_properties": {
      "ApiGatewayProxy": {
        "description": "The endpoint URL of the Amazon API Gateway proxy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EnvironmentIdentifier": {
        "description": "The unique identifier of the environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProxyType": {
        "description": "The proxy type of the proxy created within the application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags assigned to the application.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the virtual private cloud (VPC).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-refactorspaces-application.html",
    "properties": [
      "ApiGatewayProxy",
      "EnvironmentIdentifier",
      "Name",
      "ProxyType",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::RefactorSpaces::Environment": {
    "full_properties": {
      "Description": {
        "description": "A description of the environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkFabricType": {
        "description": "The network fabric type of the environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags assigned to the environment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-refactorspaces-environment.html",
    "properties": [
      "Description",
      "Name",
      "NetworkFabricType",
      "Tags"
    ]
  },
  "AWS::RefactorSpaces::Route": {
    "full_properties": {
      "ApplicationIdentifier": {
        "description": "The unique identifier of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultRoute": {
        "description": "Configuration for the default route type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EnvironmentIdentifier": {
        "description": "The unique identifier of the environment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RouteType": {
        "description": "The route type of the route.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceIdentifier": {
        "description": "The unique identifier of the service.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags assigned to the route.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UriPathRoute": {
        "description": "The configuration for the URI path route type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-refactorspaces-route.html",
    "properties": [
      "ApplicationIdentifier",
      "DefaultRoute",
      "EnvironmentIdentifier",
      "RouteType",
      "ServiceIdentifier",
      "Tags",
      "UriPathRoute"
    ]
  },
  "AWS::RefactorSpaces::Service": {
    "full_properties": {
      "ApplicationIdentifier": {
        "description": "The unique identifier of the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EndpointType": {
        "description": "The endpoint type of the service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnvironmentIdentifier": {
        "description": "The unique identifier of the environment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LambdaEndpoint": {
        "description": "A summary of the configuration for the AWS Lambda endpoint type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags assigned to the service.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UrlEndpoint": {
        "description": "The summary of the configuration for the URL endpoint type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the virtual private cloud (VPC).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-refactorspaces-service.html",
    "properties": [
      "ApplicationIdentifier",
      "Description",
      "EndpointType",
      "EnvironmentIdentifier",
      "LambdaEndpoint",
      "Name",
      "Tags",
      "UrlEndpoint",
      "VpcId"
    ]
  },
  "AWS::Rekognition::Collection": {
    "full_properties": {
      "CollectionId": {
        "description": "ID for the collection that you are creating.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A set of tags (key-value pairs) that you want to attach to the collection.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rekognition-collection.html",
    "properties": [
      "CollectionId",
      "Tags"
    ]
  },
  "AWS::Rekognition::Project": {
    "full_properties": {
      "ProjectName": {
        "description": "The name of the project to create.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-rekognition-project.html",
    "properties": [
      "ProjectName"
    ]
  },
  "AWS::Rekognition::StreamProcessor": {
    "full_properties": {
      "BoundingBoxRegionsOfInterest": {
        "description": "List of BoundingBox objects, each of which denotes a region of interest on screen. For more information, see the BoundingBox field of RegionOfInterest.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ConnectedHomeSettings": {
        "description": "Connected home settings to use on a streaming video. You can use a stream processor for connected home features and select what you want the stream processor to detect, such as people or pets. When the stream processor has started, one notification is sent for each object class specified. For more information, see the ConnectedHome section of StreamProcessorSettings.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DataSharingPreference": {
        "description": "Allows you to opt in or opt out to share data with Rekognition to improve model performance. You can choose this option at the account level or on a per-stream basis. Note that if you opt out at the account level this setting is ignored on individual streams. For more information, see StreamProcessorDataSharingPreference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "FaceSearchSettings": {
        "description": "The input parameters used to recognize faces in a streaming video analyzed by an Amazon Rekognition stream processor. For more information regarding the contents of the parameters, see FaceSearchSettings.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KinesisDataStream": {
        "description": "Amazon Rekognition's Video Stream Processor takes a Kinesis video stream as input. This is the Amazon Kinesis Data Streams instance to which the Amazon Rekognition stream processor streams the analysis results. This must be created within the constraints specified at KinesisDataStream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KinesisVideoStream": {
        "description": "The Kinesis video stream that provides the source of the streaming video for an Amazon Rekognition Video stream processor. For more information, see KinesisVideoStream.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The identifier for your Amazon Key Management Service key (Amazon KMS key). Optional parameter for connected home stream processors used to encrypt results and data published to your Amazon S3 bucket. For more information, see the KMSKeyId section of CreateStreamProcessor.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The Name attribute specifies the name of the stream processor and it must be within the constraints described in the Name section of StreamProcessor. If you don't specify a name, Amazon CloudFormation generates a unique ID and uses that ID for the stream processor name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NotificationChannel": {
        "description": "The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the object detection results and completion status of a video analysis operation. Amazon Rekognition publishes a notification the first time an object of interest or a person is detected in the video stream. Amazon Rekognition also publishes an end-of-session notification with a summary when the stream processing session is complete. For more information, see StreamProcessorNotificationChannel.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PolygonRegionsOfInterest": {
        "description": "A set of ordered lists of Point objects. Each entry of the set contains a polygon denoting a region of interest on the screen. Each polygon is an ordered list of Point  objects. For more information, see the Polygon field of RegionOfInterest.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the IAM role that allows access to the stream processor. The IAM role provides Rekognition read permissions to the Kinesis stream. It also provides write permissions to an Amazon S3 bucket and Amazon Simple Notification Service topic for a connected home stream processor. This is required for both face search and connected home stream processors. For information about constraints, see the RoleArn section of CreateStreamProcessor.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "S3Destination": {
        "description": "The Amazon S3 bucket location to which Amazon Rekognition publishes the detailed inference results of a video analysis operation. For more information, see the S3Destination section of StreamProcessorOutput.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A set of tags (key-value pairs) that you want to attach to the stream processor. For more information, see the Tags section of CreateStreamProcessor.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rekognition-streamprocessor.html",
    "properties": [
      "BoundingBoxRegionsOfInterest",
      "ConnectedHomeSettings",
      "DataSharingPreference",
      "FaceSearchSettings",
      "KinesisDataStream",
      "KinesisVideoStream",
      "KmsKeyId",
      "Name",
      "NotificationChannel",
      "PolygonRegionsOfInterest",
      "RoleArn",
      "S3Destination",
      "Tags"
    ]
  },
  "AWS::ResilienceHub::App": {
    "full_properties": {
      "AppAssessmentSchedule": {
        "description": "Assessment execution schedule with 'Daily' or 'Disabled' values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AppTemplateBody": {
        "description": "A string containing a full Resilience Hub app template body.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The optional description for an app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResiliencyPolicyArn": {
        "description": "The Amazon Resource Name (ARN) of the resiliency policy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceMappings": {
        "description": "An array of ResourceMapping objects.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags assigned to the resource. A tag is a label that you assign to an AWS resource. Each tag consists of a key/value pair.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-resiliencehub-app.html",
    "properties": [
      "AppAssessmentSchedule",
      "AppTemplateBody",
      "Description",
      "Name",
      "ResiliencyPolicyArn",
      "ResourceMappings",
      "Tags"
    ]
  },
  "AWS::ResilienceHub::ResiliencyPolicy": {
    "full_properties": {
      "DataLocationConstraint": {
        "description": "Specifies a high-level geographical location constraint for where your resilience policy data can be stored.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policy": {
        "description": "The resiliency policy.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PolicyDescription": {
        "description": "The description for the policy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PolicyName": {
        "description": "The name of the policy",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags assigned to the resource. A tag is a label that you assign to an AWS resource. Each tag consists of a key/value pair.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tier": {
        "description": "The tier for this resiliency policy, ranging from the highest severity (MissionCritical) to lowest (NonCritical).",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-resiliencehub-resiliencypolicy.html",
    "properties": [
      "DataLocationConstraint",
      "Policy",
      "PolicyDescription",
      "PolicyName",
      "Tags",
      "Tier"
    ]
  },
  "AWS::ResourceGroups::Group": {
    "full_properties": {
      "Configuration": {
        "description": "The service configuration currently associated with the resource group and in effect for the members of the resource group. A Configuration consists of one or more ConfigurationItem entries. For information about service configurations for resource groups and how to construct them, see Service configurations for resource groups in the AWS Resource Groups User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the resource group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of a resource group. The name must be unique within the AWS Region in which you create the resource. To create multiple resource groups based on the same CloudFormation stack, you must generate unique names for each.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceQuery": {
        "description": "The resource query structure that is used to dynamically determine which AWS resources are members of the associated resource group. For more information about queries and how to construct them, see Build queries and groups in AWS Resource Groups in the AWS Resource Groups User Guide",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Resources": {
        "description": "A list of the Amazon Resource Names (ARNs) of AWS resources that you want to add to the specified group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tag key and value pairs that are attached to the resource group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-resourcegroups-group.html",
    "properties": [
      "Configuration",
      "Description",
      "Name",
      "ResourceQuery",
      "Resources",
      "Tags"
    ]
  },
  "AWS::RoboMaker::Fleet": {
    "full_properties": {
      "Name": {
        "description": "The name of the fleet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The list of all tags added to the fleet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-robomaker-fleet.html",
    "properties": [
      "Name",
      "Tags"
    ]
  },
  "AWS::RoboMaker::Robot": {
    "full_properties": {
      "Architecture": {
        "description": "The architecture of the robot.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Fleet": {
        "description": "The Amazon Resource Name (ARN) of the fleet to which the robot will be registered.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GreengrassGroupId": {
        "description": "The Greengrass group associated with the robot.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the robot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A map that contains tag keys and tag values that are attached to the robot.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-robomaker-robot.html",
    "properties": [
      "Architecture",
      "Fleet",
      "GreengrassGroupId",
      "Name",
      "Tags"
    ]
  },
  "AWS::RoboMaker::RobotApplication": {
    "full_properties": {
      "CurrentRevisionId": {
        "description": "The current revision id.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Environment": {
        "description": "The environment of the robot application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the robot application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RobotSoftwareSuite": {
        "description": "The robot software suite used by the robot application.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Sources": {
        "description": "The sources of the robot application.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A map that contains tag keys and tag values that are attached to the robot application.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-robomaker-robotapplication.html",
    "properties": [
      "CurrentRevisionId",
      "Environment",
      "Name",
      "RobotSoftwareSuite",
      "Sources",
      "Tags"
    ]
  },
  "AWS::RoboMaker::RobotApplicationVersion": {
    "full_properties": {
      "Application": {
        "description": "The application information for the robot application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CurrentRevisionId": {
        "description": "The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-robomaker-robotapplicationversion.html",
    "properties": [
      "Application",
      "CurrentRevisionId"
    ]
  },
  "AWS::RoboMaker::SimulationApplication": {
    "full_properties": {
      "CurrentRevisionId": {
        "description": "The current revision id.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Environment": {
        "description": "The environment of the simulation application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the simulation application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RenderingEngine": {
        "description": "The rendering engine for the simulation application.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RobotSoftwareSuite": {
        "description": "The robot software suite used by the simulation application.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SimulationSoftwareSuite": {
        "description": "The simulation software suite used by the simulation application.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Sources": {
        "description": "The sources of the simulation application.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A map that contains tag keys and tag values that are attached to the simulation application.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-robomaker-simulationapplication.html",
    "properties": [
      "CurrentRevisionId",
      "Environment",
      "Name",
      "RenderingEngine",
      "RobotSoftwareSuite",
      "SimulationSoftwareSuite",
      "Sources",
      "Tags"
    ]
  },
  "AWS::RoboMaker::SimulationApplicationVersion": {
    "full_properties": {
      "Application": {
        "description": "The application information for the simulation application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CurrentRevisionId": {
        "description": "The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-robomaker-simulationapplicationversion.html",
    "properties": [
      "Application",
      "CurrentRevisionId"
    ]
  },
  "AWS::RolesAnywhere::CRL": {
    "full_properties": {
      "CrlData": {
        "description": "x509 v3 Certificate Revocation List to revoke auth for corresponding certificates presented in CreateSession operations",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "The enabled status of the resource.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The customer specified name of the resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of Tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TrustAnchorArn": {
        "description": "The ARN of the TrustAnchor the certificate revocation list (CRL) will provide revocation for.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rolesanywhere-crl.html",
    "properties": [
      "CrlData",
      "Enabled",
      "Name",
      "Tags",
      "TrustAnchorArn"
    ]
  },
  "AWS::RolesAnywhere::Profile": {
    "full_properties": {
      "DurationSeconds": {
        "description": "The number of seconds vended session credentials will be valid for",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "The enabled status of the resource.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ManagedPolicyArns": {
        "description": "A list of managed policy ARNs. Managed policies identified by this list will be applied to the vended session credentials.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The customer specified name of the resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequireInstanceProperties": {
        "description": "Specifies whether instance properties are required in CreateSession requests with this profile.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RoleArns": {
        "description": "A list of IAM role ARNs that can be assumed when this profile is specified in a CreateSession request.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SessionPolicy": {
        "description": "A session policy that will applied to the trust boundary of the vended session credentials.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of Tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rolesanywhere-profile.html",
    "properties": [
      "DurationSeconds",
      "Enabled",
      "ManagedPolicyArns",
      "Name",
      "RequireInstanceProperties",
      "RoleArns",
      "SessionPolicy",
      "Tags"
    ]
  },
  "AWS::RolesAnywhere::TrustAnchor": {
    "full_properties": {
      "Enabled": {
        "description": "Indicates whether the trust anchor is enabled.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the trust anchor.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Source": {
        "description": "The trust anchor type and its related certificate data.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags to attach to the trust anchor.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rolesanywhere-trustanchor.html",
    "properties": [
      "Enabled",
      "Name",
      "Source",
      "Tags"
    ]
  },
  "AWS::Route53::CidrCollection": {
    "full_properties": {
      "Locations": {
        "description": "A complex type that contains information about the list of CIDR locations.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of a CIDR collection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53-cidrcollection.html",
    "properties": [
      "Locations",
      "Name"
    ]
  },
  "AWS::Route53::DNSSEC": {
    "full_properties": {
      "HostedZoneId": {
        "description": "A unique string (ID) that is used to identify a hosted zone. For example: Z00001111A1ABCaaABC11.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53-dnssec.html",
    "properties": [
      "HostedZoneId"
    ]
  },
  "AWS::Route53::HealthCheck": {
    "full_properties": {
      "HealthCheckConfig": {
        "description": "A complex type that contains detailed information about one health check.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckTags": {
        "description": "The HealthCheckTags property describes key-value pairs that are associated with an AWS::Route53::HealthCheck resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53-healthcheck.html",
    "properties": [
      "HealthCheckConfig",
      "HealthCheckTags"
    ]
  },
  "AWS::Route53::HostedZone": {
    "full_properties": {
      "HostedZoneConfig": {
        "description": "A complex type that contains an optional comment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HostedZoneTags": {
        "description": "Adds, edits, or deletes tags for a health check or a hosted zone.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the domain. Specify a fully qualified domain name, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "QueryLoggingConfig": {
        "description": "Creates a configuration for DNS query logging. After you create a query logging configuration, Amazon Route 53 begins to publish log data to an Amazon CloudWatch Logs log group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VPCs": {
        "description": "Private hosted zones: A complex type that contains information about the VPCs that are associated with the specified hosted zone.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53-hostedzone.html",
    "properties": [
      "HostedZoneConfig",
      "HostedZoneTags",
      "Name",
      "QueryLoggingConfig",
      "VPCs"
    ]
  },
  "AWS::Route53::KeySigningKey": {
    "full_properties": {
      "HostedZoneId": {
        "description": "The unique string (ID) that is used to identify a hosted zone. For example: Z00001111A1ABCaaABC11.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyManagementServiceArn": {
        "description": "The Amazon resource name (ARN) for a customer managed customer master key (CMK) in AWS Key Management Service  (AWS KMS ). The KeyManagementServiceArn must be unique for each key-signing key (KSK) in a single hosted zone. For example: arn:aws:kms:us-east-1:111122223333:key/111a2222-a11b-1ab1-2ab2-1ab21a2b3a111.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A string used to identify a key-signing key (KSK). Name can include numbers, letters, and underscores (_). Name must be unique for each key-signing key in the same hosted zone.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "A string that represents the current key-signing key (KSK) status.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53-keysigningkey.html",
    "properties": [
      "HostedZoneId",
      "KeyManagementServiceArn",
      "Name",
      "Status"
    ]
  },
  "AWS::Route53::RecordSet": {
    "full_properties": {
      "AliasTarget": {
        "description": "Alias resource record sets only: Information about the AWS resource, such as a CloudFront distribution or an Amazon S3 bucket, that you want to route traffic to.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CidrRoutingConfig": {
        "description": "The object that is specified in resource record set object when you are linking a resource record set to a CIDR location.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Comment": {
        "description": "Optional: Any comments you want to include about a change batch request.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Failover": {
        "description": "Failover resource record sets only: To configure failover, you add the Failover element to two resource record sets. For one resource record set, you specify PRIMARY as the value for Failover; for the other resource record set, you specify SECONDARY. In addition, you include the HealthCheckId element and specify the health check that you want Amazon Route 53 to perform for each resource record set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "GeoLocation": {
        "description": "Geolocation resource record sets only: A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query. For example, if you want all queries from Africa to be routed to a web server with an IP address of 192.0.2.111, create a resource record set with a Type of A and a ContinentCode of AF.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckId": {
        "description": "If you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the HealthCheckId element and specify the ID of the applicable health check.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HostedZoneId": {
        "description": "The ID of the hosted zone that you want to create records in.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "HostedZoneName": {
        "description": "The name of the hosted zone that you want to create records in. You must include a trailing dot (for example, www.example.com.) as part of the HostedZoneName.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MultiValueAnswer": {
        "description": "Multivalue answer resource record sets only: To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify true for MultiValueAnswer. Note the following:",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "For ChangeResourceRecordSets requests, the name of the record that you want to create, update, or delete. For ListResourceRecordSets responses, the name of a record in the specified hosted zone.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Region": {
        "description": "Latency-based resource record sets only: The Amazon EC2 Region where you created the resource that this resource record set refers to. The resource typically is an AWS resource, such as an EC2 instance or an ELB load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ResourceRecords": {
        "description": "One or more values that correspond with the value that you specified for the Type property. For example, if you specified A for Type, you specify one or more IP addresses in IPv4 format for ResourceRecords. For information about the format of values for each record type, see Supported DNS Resource Record Types in the Amazon Route 53 Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SetIdentifier": {
        "description": "Resource record sets that have a routing policy other than simple: An identifier that differentiates among multiple resource record sets that have the same combination of name and type, such as multiple weighted resource record sets named acme.example.com that have a type of A. In a group of resource record sets that have the same name and type, the value of SetIdentifier must be unique for each resource record set.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TTL": {
        "description": "The resource record cache time to live (TTL), in seconds. Note the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Type": {
        "description": "The DNS record type. For information about different record types and how data is encoded for them, see Supported DNS Resource Record Types in the Amazon Route 53 Developer Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Weight": {
        "description": "Weighted resource record sets only: Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Route 53 then responds to queries based on the ratio of a resource's weight to the total. Note the following:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-route53-recordset.html",
    "properties": [
      "AliasTarget",
      "CidrRoutingConfig",
      "Comment",
      "Failover",
      "GeoLocation",
      "HealthCheckId",
      "HostedZoneId",
      "HostedZoneName",
      "MultiValueAnswer",
      "Name",
      "Region",
      "ResourceRecords",
      "SetIdentifier",
      "TTL",
      "Type",
      "Weight"
    ]
  },
  "AWS::Route53::RecordSetGroup": {
    "full_properties": {
      "Comment": {
        "description": "Optional: Any comments you want to include about a change batch request.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HostedZoneId": {
        "description": "The ID of the hosted zone that you want to create records in.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "HostedZoneName": {
        "description": "The name of the hosted zone that you want to create records in. You must include a trailing dot (for example, www.example.com.) as part of the HostedZoneName.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RecordSets": {
        "description": "A complex type that contains one RecordSet element for each record that you want to create.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53-recordsetgroup.html",
    "properties": [
      "Comment",
      "HostedZoneId",
      "HostedZoneName",
      "RecordSets"
    ]
  },
  "AWS::Route53RecoveryControl::Cluster": {
    "full_properties": {
      "Name": {
        "description": "Name of the cluster. You can use any non-white space character in the name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The value for a tag.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53recoverycontrol-cluster.html",
    "properties": [
      "Name",
      "Tags"
    ]
  },
  "AWS::Route53RecoveryControl::ControlPanel": {
    "full_properties": {
      "ClusterArn": {
        "description": "The Amazon Resource Name (ARN) of the cluster for the control panel.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the control panel. You can use any non-white space character in the name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The value for a tag.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53recoverycontrol-controlpanel.html",
    "properties": [
      "ClusterArn",
      "Name",
      "Tags"
    ]
  },
  "AWS::Route53RecoveryControl::RoutingControl": {
    "full_properties": {
      "ClusterArn": {
        "description": "The Amazon Resource Name (ARN) of the cluster that includes the routing control.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ControlPanelArn": {
        "description": "The Amazon Resource Name (ARN) of the control panel that includes the routing control.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the routing control. You can use any non-white space character in the name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53recoverycontrol-routingcontrol.html",
    "properties": [
      "ClusterArn",
      "ControlPanelArn",
      "Name"
    ]
  },
  "AWS::Route53RecoveryControl::SafetyRule": {
    "full_properties": {
      "AssertionRule": {
        "description": "An assertion rule enforces that, when you change a routing control state, that the criteria that you set in the rule configuration is met. Otherwise, the change to the routing control is not accepted. For example, the criteria might be that at least one routing control state is On after the transaction so that traffic continues to flow to at least one cell for the application. This ensures that you avoid a fail-open scenario.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ControlPanelArn": {
        "description": "The Amazon Resource Name (ARN) for the control panel.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "GatingRule": {
        "description": "A gating rule verifies that a gating routing control or set of gating routing controls, evaluates as true, based on a rule configuration that you specify, which allows a set of routing control state changes to complete.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the assertion rule. The name must be unique within a control panel. You can use any non-white space character in the name except the following: & > < ' (single quote) \" (double quote) ; (semicolon)",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RuleConfig": {
        "description": "The criteria that you set for specific assertion controls (routing controls) that designate how many control states must be ON as the result of a transaction. For example, if you have three assertion controls, you might specify ATLEAST 2 for your rule configuration. This means that at least two assertion controls must be ON, so that at least two AWS Regions have traffic flowing to them.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The value for a tag.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53recoverycontrol-safetyrule.html",
    "properties": [
      "AssertionRule",
      "ControlPanelArn",
      "GatingRule",
      "Name",
      "RuleConfig",
      "Tags"
    ]
  },
  "AWS::Route53RecoveryReadiness::Cell": {
    "full_properties": {
      "CellName": {
        "description": "The name of the cell to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Cells": {
        "description": "A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific AWS Regions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A collection of tags associated with a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53recoveryreadiness-cell.html",
    "properties": [
      "CellName",
      "Cells",
      "Tags"
    ]
  },
  "AWS::Route53RecoveryReadiness::ReadinessCheck": {
    "full_properties": {
      "ReadinessCheckName": {
        "description": "The name of the readiness check to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceSetName": {
        "description": "The name of the resource set to check.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A collection of tags associated with a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53recoveryreadiness-readinesscheck.html",
    "properties": [
      "ReadinessCheckName",
      "ResourceSetName",
      "Tags"
    ]
  },
  "AWS::Route53RecoveryReadiness::RecoveryGroup": {
    "full_properties": {
      "Cells": {
        "description": "A list of the cell Amazon Resource Names (ARNs) in the recovery group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RecoveryGroupName": {
        "description": "The name of the recovery group to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A collection of tags associated with a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53recoveryreadiness-recoverygroup.html",
    "properties": [
      "Cells",
      "RecoveryGroupName",
      "Tags"
    ]
  },
  "AWS::Route53RecoveryReadiness::ResourceSet": {
    "full_properties": {
      "ResourceSetName": {
        "description": "The name of the resource set to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceSetType": {
        "description": "The resource type of the resources in the resource set. Enter one of the following values for resource type:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Resources": {
        "description": "A list of resource objects in the resource set.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A tag to associate with the parameters for a resource set.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53recoveryreadiness-resourceset.html",
    "properties": [
      "Resources",
      "ResourceSetName",
      "ResourceSetType",
      "Tags"
    ]
  },
  "AWS::Route53Resolver::FirewallDomainList": {
    "full_properties": {
      "DomainFileUrl": {
        "description": "The fully qualified URL or URI of the file stored in Amazon Simple Storage Service (Amazon S3) that contains the list of domains to import.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Domains": {
        "description": "A list of the domain lists that you have defined.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the domain list.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of the tag keys and values that you want to associate with the domain list.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53resolver-firewalldomainlist.html",
    "properties": [
      "DomainFileUrl",
      "Domains",
      "Name",
      "Tags"
    ]
  },
  "AWS::Route53Resolver::FirewallRuleGroup": {
    "full_properties": {
      "FirewallRules": {
        "description": "A list of the rules that you have defined.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the rule group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of the tag keys and values that you want to associate with the rule group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53resolver-firewallrulegroup.html",
    "properties": [
      "FirewallRules",
      "Name",
      "Tags"
    ]
  },
  "AWS::Route53Resolver::FirewallRuleGroupAssociation": {
    "full_properties": {
      "FirewallRuleGroupId": {
        "description": "The unique identifier of the firewall rule group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MutationProtection": {
        "description": "If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the association.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Priority": {
        "description": "The setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of the tag keys and values that you want to associate with the rule group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The unique identifier of the VPC that is associated with the rule group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53resolver-firewallrulegroupassociation.html",
    "properties": [
      "FirewallRuleGroupId",
      "MutationProtection",
      "Name",
      "Priority",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::Route53Resolver::ResolverConfig": {
    "full_properties": {
      "AutodefinedReverseFlag": {
        "description": "Represents the desired status of AutodefinedReverse. The only supported value on creation is DISABLE. Deletion of this resource will return AutodefinedReverse to its default value of ENABLED.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceId": {
        "description": "The ID of the Amazon Virtual Private Cloud VPC that you're configuring Resolver for.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53resolver-resolverconfig.html",
    "properties": [
      "AutodefinedReverseFlag",
      "ResourceId"
    ]
  },
  "AWS::Route53Resolver::ResolverDNSSECConfig": {
    "full_properties": {
      "ResourceId": {
        "description": "The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53resolver-resolverdnssecconfig.html",
    "properties": [
      "ResourceId"
    ]
  },
  "AWS::Route53Resolver::ResolverEndpoint": {
    "full_properties": {
      "Direction": {
        "description": "Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpAddresses": {
        "description": "The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Route 53 Resolver doesn't support updating tags through CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53resolver-resolverendpoint.html",
    "properties": [
      "Direction",
      "IpAddresses",
      "Name",
      "SecurityGroupIds",
      "Tags"
    ]
  },
  "AWS::Route53Resolver::ResolverQueryLoggingConfig": {
    "full_properties": {
      "DestinationArn": {
        "description": "The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the query logging configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53resolver-resolverqueryloggingconfig.html",
    "properties": [
      "DestinationArn",
      "Name"
    ]
  },
  "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation": {
    "full_properties": {
      "ResolverQueryLogConfigId": {
        "description": "The ID of the query logging configuration that a VPC is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceId": {
        "description": "The ID of the Amazon VPC that is associated with the query logging configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53resolver-resolverqueryloggingconfigassociation.html",
    "properties": [
      "ResolverQueryLogConfigId",
      "ResourceId"
    ]
  },
  "AWS::Route53Resolver::ResolverRule": {
    "full_properties": {
      "DomainName": {
        "description": "DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps. If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name for the Resolver rule, which you specified when you created the Resolver rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResolverEndpointId": {
        "description": "The ID of the endpoint that the rule is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RuleType": {
        "description": "When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Route 53 Resolver doesn't support updating tags through CloudFormation.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetIps": {
        "description": "An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53resolver-resolverrule.html",
    "properties": [
      "DomainName",
      "Name",
      "ResolverEndpointId",
      "RuleType",
      "Tags",
      "TargetIps"
    ]
  },
  "AWS::Route53Resolver::ResolverRuleAssociation": {
    "full_properties": {
      "Name": {
        "description": "The name of an association between a Resolver rule and a VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResolverRuleId": {
        "description": "The ID of the Resolver rule that you associated with the VPC that is specified by VPCId.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VPCId": {
        "description": "The ID of the VPC that you associated the Resolver rule with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-route53resolver-resolverruleassociation.html",
    "properties": [
      "Name",
      "ResolverRuleId",
      "VPCId"
    ]
  },
  "AWS::S3::AccessPoint": {
    "full_properties": {
      "Bucket": {
        "description": "The name of the bucket associated with this access point.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of this access point. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the access point name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Policy": {
        "description": "The access point policy associated with this access point.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PolicyStatus": {
        "description": "The container element for a bucket's policy status.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PublicAccessBlockConfiguration": {
        "description": "The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see The Meaning of \"Public\" in the Amazon S3 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "VpcConfiguration": {
        "description": "The Virtual Private Cloud (VPC) configuration for this access point, if one exists.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-s3-accesspoint.html",
    "properties": [
      "Bucket",
      "Name",
      "Policy",
      "PolicyStatus",
      "PublicAccessBlockConfiguration",
      "VpcConfiguration"
    ]
  },
  "AWS::S3::Bucket": {
    "full_properties": {
      "AccelerateConfiguration": {
        "description": "Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see Amazon S3 Transfer Acceleration in the Amazon S3 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AccessControl": {
        "description": "A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see Canned ACL in the Amazon S3 User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AnalyticsConfigurations": {
        "description": "Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "BucketEncryption": {
        "description": "Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS) bucket. For information about the Amazon S3 default encryption feature, see Amazon S3 Default Encryption for S3 Buckets in the Amazon S3 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BucketName": {
        "description": "A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow Amazon S3 bucket restrictions and limitations. For more information, see Rules for naming Amazon S3 buckets in the Amazon S3 User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CorsConfiguration": {
        "description": "Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing in the Amazon S3 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IntelligentTieringConfigurations": {
        "description": "Defines how Amazon S3 handles Intelligent-Tiering storage.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InventoryConfigurations": {
        "description": "Specifies the inventory configuration for an Amazon S3 bucket. For more information, see GET Bucket inventory in the Amazon S3 API Reference.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LifecycleConfiguration": {
        "description": "Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see Object Lifecycle Management in the Amazon S3 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoggingConfiguration": {
        "description": "Settings that define where logs are stored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MetricsConfigurations": {
        "description": "Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see PutBucketMetricsConfiguration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "NotificationConfiguration": {
        "description": "Configuration that defines how Amazon S3 handles bucket notifications.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ObjectLockConfiguration": {
        "description": "Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see Locking Objects.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ObjectLockEnabled": {
        "description": "Indicates whether this bucket has an Object Lock configuration enabled. Enable ObjectLockEnabled when you apply ObjectLockConfiguration to a bucket.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "OwnershipControls": {
        "description": "Configuration that defines how Amazon S3 handles Object Ownership rules.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PublicAccessBlockConfiguration": {
        "description": "Configuration that defines how Amazon S3 handles public access.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ReplicationConfiguration": {
        "description": "Configuration for replicating objects in an S3 bucket. To enable replication, you must also enable versioning by using the VersioningConfiguration property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for this S3 bucket.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VersioningConfiguration": {
        "description": "Enables multiple versions of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WebsiteConfiguration": {
        "description": "Information used to configure the bucket as a static website. For more information, see Hosting Websites on Amazon S3.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-s3-bucket.html",
    "properties": [
      "AccelerateConfiguration",
      "AccessControl",
      "AnalyticsConfigurations",
      "BucketEncryption",
      "BucketName",
      "CorsConfiguration",
      "IntelligentTieringConfigurations",
      "InventoryConfigurations",
      "LifecycleConfiguration",
      "LoggingConfiguration",
      "MetricsConfigurations",
      "NotificationConfiguration",
      "ObjectLockConfiguration",
      "ObjectLockEnabled",
      "OwnershipControls",
      "PublicAccessBlockConfiguration",
      "ReplicationConfiguration",
      "Tags",
      "VersioningConfiguration",
      "WebsiteConfiguration"
    ]
  },
  "AWS::S3::BucketPolicy": {
    "full_properties": {
      "Bucket": {
        "description": "The name of the Amazon S3 bucket to which the policy applies.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyDocument": {
        "description": "A policy document containing permissions to add to the specified bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM. For more information, see the AWS::IAM::Policy PolicyDocument resource description in this guide and Access Policy Language Overview in the Amazon S3 User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-s3-policy.html",
    "properties": [
      "Bucket",
      "PolicyDocument"
    ]
  },
  "AWS::S3::MultiRegionAccessPoint": {
    "full_properties": {
      "Name": {
        "description": "The name of the Multi-Region Access Point.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PublicAccessBlockConfiguration": {
        "description": "The PublicAccessBlock configuration that you want to apply to this Multi-Region Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers an object public, see The Meaning of \"Public\" in the Amazon S3 User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Regions": {
        "description": "A collection of the Regions and buckets associated with the Multi-Region Access Point.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-s3-multiregionaccesspoint.html",
    "properties": [
      "Name",
      "PublicAccessBlockConfiguration",
      "Regions"
    ]
  },
  "AWS::S3::MultiRegionAccessPointPolicy": {
    "full_properties": {
      "MrapName": {
        "description": "The name of the Multi-Region Access Point.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Policy": {
        "description": "The access policy associated with the Multi-Region Access Point.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-s3-multiregionaccesspointpolicy.html",
    "properties": [
      "MrapName",
      "Policy"
    ]
  },
  "AWS::S3::StorageLens": {
    "full_properties": {
      "StorageLensConfiguration": {
        "description": "This resource contains the details Amazon S3 Storage Lens configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A set of tags (key–value pairs) to associate with the Storage Lens configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-s3-storagelens.html",
    "properties": [
      "StorageLensConfiguration",
      "Tags"
    ]
  },
  "AWS::S3ObjectLambda::AccessPoint": {
    "full_properties": {
      "Name": {
        "description": "The name of this access point.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ObjectLambdaConfiguration": {
        "description": "A configuration used when creating an Object Lambda Access Point.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-s3objectlambda-accesspoint.html",
    "properties": [
      "Name",
      "ObjectLambdaConfiguration"
    ]
  },
  "AWS::S3ObjectLambda::AccessPointPolicy": {
    "full_properties": {
      "ObjectLambdaAccessPoint": {
        "description": "An access point with an attached AWS Lambda function used to access transformed data from an Amazon S3 bucket.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyDocument": {
        "description": "Object Lambda Access Point resource policy document.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-s3objectlambda-accesspointpolicy.html",
    "properties": [
      "ObjectLambdaAccessPoint",
      "PolicyDocument"
    ]
  },
  "AWS::S3Outposts::AccessPoint": {
    "full_properties": {
      "Bucket": {
        "description": "The Amazon Resource Name (ARN) of the S3 on Outposts bucket that is associated with this access point.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of this access point.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Policy": {
        "description": "The access point policy associated with this access point.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcConfiguration": {
        "description": "The virtual private cloud (VPC) configuration for this access point, if one exists.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-s3outposts-accesspoint.html",
    "properties": [
      "Bucket",
      "Name",
      "Policy",
      "VpcConfiguration"
    ]
  },
  "AWS::S3Outposts::Bucket": {
    "full_properties": {
      "BucketName": {
        "description": "A name for the S3 on Outposts bucket. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow Amazon S3 bucket restrictions and limitations. For more information, see Bucket naming rules.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LifecycleConfiguration": {
        "description": "Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an existing lifecycle configuration. Outposts buckets only support lifecycle configurations that delete/expire objects after a certain period of time and abort incomplete multipart uploads.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OutpostId": {
        "description": "The ID of the Outpost of the specified bucket.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Sets the tags for an S3 on Outposts bucket. For more information, see Using Amazon S3 on Outposts.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-s3outposts-bucket.html",
    "properties": [
      "BucketName",
      "LifecycleConfiguration",
      "OutpostId",
      "Tags"
    ]
  },
  "AWS::S3Outposts::BucketPolicy": {
    "full_properties": {
      "Bucket": {
        "description": "The name of the Amazon S3 Outposts bucket to which the policy applies.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyDocument": {
        "description": "A policy document containing permissions to add to the specified bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation, you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM. For more information, see the AWS::IAM::Policy  PolicyDocument resource description in this guide and  Access Policy Language Overview.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-s3outposts-bucketpolicy.html",
    "properties": [
      "Bucket",
      "PolicyDocument"
    ]
  },
  "AWS::S3Outposts::Endpoint": {
    "full_properties": {
      "AccessType": {
        "description": "The container for the type of connectivity used to access the Amazon S3 on Outposts endpoint. To use the Amazon VPC, choose Private. To use the endpoint with an on-premises network, choose CustomerOwnedIp. If you choose CustomerOwnedIp, you must also provide the customer-owned IP address pool (CoIP pool).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CustomerOwnedIpv4Pool": {
        "description": "The ID of the customer-owned IPv4 address pool (CoIP pool) for the endpoint. IP addresses are allocated from this pool for the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutpostId": {
        "description": "The ID of the Outpost.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroupId": {
        "description": "The ID of the security group to use with the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-s3outposts-endpoint.html",
    "properties": [
      "AccessType",
      "CustomerOwnedIpv4Pool",
      "OutpostId",
      "SecurityGroupId",
      "SubnetId"
    ]
  },
  "AWS::SDB::Domain": {
    "full_properties": {
      "Description": {
        "description": "Information about the SimpleDB domain.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-simpledb.html",
    "properties": [
      "Description"
    ]
  },
  "AWS::SES::ConfigurationSet": {
    "full_properties": {
      "DeliveryOptions": {
        "description": "Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the configuration set. The name must meet the following requirements:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReputationOptions": {
        "description": "An object that represents the reputation settings for the configuration set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SendingOptions": {
        "description": "An object that defines whether or not Amazon SES can send email that you send using the configuration set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SuppressionOptions": {
        "description": "An object that contains information about the suppression list preferences for your account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TrackingOptions": {
        "description": "The name of the custom open and click tracking domain associated with the configuration set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ses-configurationset.html",
    "properties": [
      "DeliveryOptions",
      "Name",
      "ReputationOptions",
      "SendingOptions",
      "SuppressionOptions",
      "TrackingOptions"
    ]
  },
  "AWS::SES::ConfigurationSetEventDestination": {
    "full_properties": {
      "ConfigurationSetName": {
        "description": "The name of the configuration set that contains the event destination.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventDestination": {
        "description": "The event destination object.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ses-configurationseteventdestination.html",
    "properties": [
      "ConfigurationSetName",
      "EventDestination"
    ]
  },
  "AWS::SES::ContactList": {
    "full_properties": {
      "ContactListName": {
        "description": "The name of the contact list.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of what the contact list is about.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags associated with a contact list.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Topics": {
        "description": "An interest group, theme, or label within a list. A contact list can have multiple topics.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ses-contactlist.html",
    "properties": [
      "ContactListName",
      "Description",
      "Tags",
      "Topics"
    ]
  },
  "AWS::SES::DedicatedIpPool": {
    "full_properties": {
      "PoolName": {
        "description": "The name of the dedicated IP pool that the IP address is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScalingMode": {
        "description": "The type of scaling mode.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-dedicatedippool.html",
    "properties": [
      "PoolName",
      "ScalingMode"
    ]
  },
  "AWS::SES::EmailIdentity": {
    "full_properties": {
      "ConfigurationSetAttributes": {
        "description": "Used to associate a configuration set with an email identity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DkimAttributes": {
        "description": "An object that contains information about the DKIM attributes for the identity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DkimSigningAttributes": {
        "description": "If your request includes this object, Amazon SES configures the identity to use Bring Your Own DKIM (BYODKIM) for DKIM authentication purposes, or, configures the key length to be used for Easy DKIM.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EmailIdentity": {
        "description": "The email address or domain to verify.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FeedbackAttributes": {
        "description": "Used to enable or disable feedback forwarding for an identity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MailFromAttributes": {
        "description": "Used to enable or disable the custom Mail-From domain configuration for an email identity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ses-emailidentity.html",
    "properties": [
      "ConfigurationSetAttributes",
      "DkimAttributes",
      "DkimSigningAttributes",
      "EmailIdentity",
      "FeedbackAttributes",
      "MailFromAttributes"
    ]
  },
  "AWS::SES::ReceiptFilter": {
    "full_properties": {
      "Filter": {
        "description": "A data structure that describes the IP address filter to create, which consists of a name, an IP address range, and whether to allow or block mail from it.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-receiptfilter.html",
    "properties": [
      "Filter"
    ]
  },
  "AWS::SES::ReceiptRule": {
    "full_properties": {
      "After": {
        "description": "The name of an existing rule after which the new rule is placed. If this parameter is null, the new rule is inserted at the beginning of the rule list.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Rule": {
        "description": "A data structure that contains the specified rule's name, actions, recipients, domains, enabled status, scan status, and TLS policy.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuleSetName": {
        "description": "The name of the rule set where the receipt rule is added.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-receiptrule.html",
    "properties": [
      "After",
      "Rule",
      "RuleSetName"
    ]
  },
  "AWS::SES::ReceiptRuleSet": {
    "full_properties": {
      "RuleSetName": {
        "description": "The name of the receipt rule set to reorder.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-receiptruleset.html",
    "properties": [
      "RuleSetName"
    ]
  },
  "AWS::SES::Template": {
    "full_properties": {
      "Template": {
        "description": "The content of the email, composed of a subject line and either an HTML part or a text-only part.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ses-template.html",
    "properties": [
      "Template"
    ]
  },
  "AWS::SNS::Subscription": {
    "full_properties": {
      "DeliveryPolicy": {
        "description": "The delivery policy JSON assigned to the subscription. Enables the subscriber to define the message delivery retry strategy in the case of an HTTP/S endpoint subscribed to the topic. For more information, see GetSubscriptionAttributes in the Amazon SNS API Reference and Message delivery retries in the Amazon SNS Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Endpoint": {
        "description": "The subscription's endpoint. The endpoint value depends on the protocol that you specify. For more information, see the Endpoint parameter of the Subscribe action in the Amazon SNS API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FilterPolicy": {
        "description": "The filter policy JSON assigned to the subscription. Enables the subscriber to filter out unwanted messages. For more information, see GetSubscriptionAttributes in the Amazon SNS API Reference and Message filtering in the Amazon SNS Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The subscription's protocol. For more information, see the Protocol parameter of the Subscribe action in the Amazon SNS API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RawMessageDelivery": {
        "description": "When set to true, enables raw message delivery. Raw messages don't contain any JSON formatting and can be sent to Amazon SQS and HTTP/S endpoints. For more information, see GetSubscriptionAttributes in the Amazon SNS API Reference.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RedrivePolicy": {
        "description": "When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can't be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Region": {
        "description": "For cross-region subscriptions, the region in which the topic resides.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubscriptionRoleArn": {
        "description": "This property applies only to Amazon Kinesis Data Firehose delivery stream subscriptions. Specify the ARN of the IAM role that has the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TopicArn": {
        "description": "The ARN of the topic to subscribe to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sns-subscription.html",
    "properties": [
      "DeliveryPolicy",
      "Endpoint",
      "FilterPolicy",
      "Protocol",
      "RawMessageDelivery",
      "RedrivePolicy",
      "Region",
      "SubscriptionRoleArn",
      "TopicArn"
    ]
  },
  "AWS::SNS::Topic": {
    "full_properties": {
      "ContentBasedDeduplication": {
        "description": "Enables content-based deduplication for FIFO topics.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DataProtectionPolicy": {
        "description": "The body of the policy document you want to use for this topic.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The display name to use for an Amazon SNS topic with SMS subscriptions. The display name must be maximum 100 characters long, including hyphens (-), underscores (_), spaces, and tabs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FifoTopic": {
        "description": "Set to true to create a FIFO topic.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "KmsMasterKeyId": {
        "description": "The ID of an AWS managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key terms. For more examples, see KeyId in the AWS Key Management Service API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SignatureVersion": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Subscription": {
        "description": "The Amazon SNS subscriptions (endpoints) for this topic.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The list of tags to add to a new topic.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TopicName": {
        "description": "The name of the topic you want to create. Topic names must include only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO topic names must end with .fifo.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sns-topic.html",
    "properties": [
      "ContentBasedDeduplication",
      "DataProtectionPolicy",
      "DisplayName",
      "FifoTopic",
      "KmsMasterKeyId",
      "SignatureVersion",
      "Subscription",
      "Tags",
      "TopicName"
    ]
  },
  "AWS::SNS::TopicPolicy": {
    "full_properties": {
      "PolicyDocument": {
        "description": "A policy document that contains permissions to add to the specified SNS topics.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Topics": {
        "description": "The Amazon Resource Names (ARN) of the topics to which you want to add the policy. You can use the Ref function to specify an AWS::SNS::Topic resource.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-sns-policy.html",
    "properties": [
      "PolicyDocument",
      "Topics"
    ]
  },
  "AWS::SQS::Queue": {
    "full_properties": {
      "ContentBasedDeduplication": {
        "description": "For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication interval, Amazon SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message. For more information, see the ContentBasedDeduplication attribute for the CreateQueue action in the Amazon SQS API Reference.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DeduplicationScope": {
        "description": "For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DelaySeconds": {
        "description": "The time in seconds for which the delivery of all messages in the queue is delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "FifoQueue": {
        "description": "If set to true, creates a FIFO queue. If you don't specify this property, Amazon SQS creates a standard queue. For more information, see FIFO queues in the Amazon SQS Developer Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "FifoThroughputLimit": {
        "description": "For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue and perMessageGroupId.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsDataKeyReusePeriodSeconds": {
        "description": "The length of time in seconds for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "KmsMasterKeyId": {
        "description": "The ID of an AWS Key Management Service (KMS) for Amazon SQS, or a custom KMS. To use the AWS managed KMS for Amazon SQS, specify a (default) alias ARN, alias name (e.g. alias/aws/sqs), key ARN, or key ID. For more information, see the following:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaximumMessageSize": {
        "description": "The limit of how many bytes that a message can contain before Amazon SQS rejects it. You can specify an integer value from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). The default value is 262,144 (256 KiB).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MessageRetentionPeriod": {
        "description": "The number of seconds that Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1,209,600 seconds (14 days). The default value is 345,600 seconds (4 days).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "QueueName": {
        "description": "A name for the queue. To create a FIFO queue, the name of your FIFO queue must end with the .fifo suffix. For more information, see FIFO queues in the Amazon SQS Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReceiveMessageWaitTimeSeconds": {
        "description": "Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn't yet available. You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property. For more information, see Consuming messages using long polling in the Amazon SQS Developer Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "RedriveAllowPolicy": {
        "description": "The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object. The parameters are as follows:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RedrivePolicy": {
        "description": "The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object. The parameters are as follows:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SqsManagedSseEnabled": {
        "description": "Enables server-side queue encryption using SQS owned encryption keys. Only one server-side encryption option is supported per queue (for example, SSE-KMS or SSE-SQS).",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you attach to this queue. For more information, see Resource tag in the AWS CloudFormation User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VisibilityTimeout": {
        "description": "The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sqs-queue.html",
    "properties": [
      "ContentBasedDeduplication",
      "DeduplicationScope",
      "DelaySeconds",
      "FifoQueue",
      "FifoThroughputLimit",
      "KmsDataKeyReusePeriodSeconds",
      "KmsMasterKeyId",
      "MaximumMessageSize",
      "MessageRetentionPeriod",
      "QueueName",
      "ReceiveMessageWaitTimeSeconds",
      "RedriveAllowPolicy",
      "RedrivePolicy",
      "SqsManagedSseEnabled",
      "Tags",
      "VisibilityTimeout"
    ]
  },
  "AWS::SQS::QueuePolicy": {
    "full_properties": {
      "PolicyDocument": {
        "description": "A policy document that contains the permissions for the specified Amazon SQS queues. For more information about Amazon SQS policies, see Using custom policies with the Amazon SQS access policy language in the Amazon SQS Developer Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Queues": {
        "description": "The URLs of the queues to which you want to add the policy. You can use the Ref function to specify an AWS::SQS::Queue resource.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-sqs-policy.html",
    "properties": [
      "PolicyDocument",
      "Queues"
    ]
  },
  "AWS::SSM::Association": {
    "full_properties": {
      "ApplyOnlyAtCronInterval": {
        "description": "By default, when you create a new association, the system runs it immediately after it is created and then according to the schedule you specified. Specify this option if you don't want an association to run immediately after you create it. This parameter is not supported for rate expressions.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AssociationName": {
        "description": "Specify a descriptive name for the association.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutomationTargetParameterName": {
        "description": "Choose the parameter that will define how your automation will branch out. This target is required for associations that use an Automation runbook and target resources by using rate controls. Automation is a capability of AWS Systems Manager.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CalendarNames": {
        "description": "The names or Amazon Resource Names (ARNs) of the Change Calendar type documents your associations are gated under. The associations only run when that Change Calendar is open. For more information, see AWS Systems Manager Change Calendar.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ComplianceSeverity": {
        "description": "The severity level that is assigned to the association.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentVersion": {
        "description": "The version of the SSM document to associate with the target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of the instance that the SSM document is associated with. You must specify the InstanceId or Targets property.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxConcurrency": {
        "description": "The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxErrors": {
        "description": "The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 managed nodes and set MaxError to 10%, then the system stops sending the request when the sixth error is received.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the SSM document that contains the configuration information for the instance. You can specify Command or Automation documents. The documents can be AWS-predefined documents, documents you created, or a document that is shared with you from another account. For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OutputLocation": {
        "description": "An Amazon Simple Storage Service (Amazon S3) bucket where you want to store the output details of the request.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "The parameters for the runtime configuration of the document.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ScheduleExpression": {
        "description": "A cron expression that specifies a schedule when the association runs. The schedule runs in Coordinated Universal Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduleOffset": {
        "description": "Number of days to wait after the scheduled day to run an association.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SyncCompliance": {
        "description": "The mode for generating association compliance. You can specify AUTO or MANUAL. In AUTO mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is COMPLIANT. If the association execution doesn't run successfully, the association is NON-COMPLIANT.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "The targets for the association. You must specify the InstanceId or Targets property. You can target all instances in an AWS account by specifying the InstanceIds key with a value of *. To view a JSON and a YAML example that targets all instances, see \"Create an association for all managed instances in an AWS account\" on the Examples page.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WaitForSuccessTimeoutSeconds": {
        "description": "The number of seconds the service should wait for the association status to show \"Success\" before proceeding with the stack execution. If the association status doesn't show \"Success\" after the specified number of seconds, then stack creation fails.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssm-association.html",
    "properties": [
      "ApplyOnlyAtCronInterval",
      "AssociationName",
      "AutomationTargetParameterName",
      "CalendarNames",
      "ComplianceSeverity",
      "DocumentVersion",
      "InstanceId",
      "MaxConcurrency",
      "MaxErrors",
      "Name",
      "OutputLocation",
      "Parameters",
      "ScheduleExpression",
      "ScheduleOffset",
      "SyncCompliance",
      "Targets",
      "WaitForSuccessTimeoutSeconds"
    ]
  },
  "AWS::SSM::Document": {
    "full_properties": {
      "Attachments": {
        "description": "A list of key-value pairs that describe attachments to a version of a document.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Content": {
        "description": "The content for the new SSM document in JSON or YAML. For more information about the schemas for SSM document content, see SSM document schema features and examples in the AWS Systems Manager User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DocumentFormat": {
        "description": "Specify the document format for the request. JSON is the default format.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentType": {
        "description": "The type of document to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the SSM document.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Requires": {
        "description": "A list of SSM documents required by a document. This parameter is used exclusively by AWS AppConfig. When a user creates an AWS AppConfig configuration in an SSM document, the user must also specify a required document for validation purposes. In this case, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document for validation purposes. For more information, see What is AWS AppConfig? in the  AWS AppConfig User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "AWS CloudFormation resource tags to apply to the document. Use tags to help you identify and categorize resources.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetType": {
        "description": "Specify a target type to define the kinds of resources the document can run on. For example, to run a document on EC2 instances, specify the following value: /AWS::EC2::Instance. If you specify a value of '/' the document can run on all types of resources. If you don't specify a value, the document can't run on any resources. For a list of valid resource types, see AWS resource and property types reference in the AWS CloudFormation User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UpdateMethod": {
        "description": "If the document resource you specify in your template already exists, this parameter determines whether a new version of the existing document is created, or the existing document is replaced. Replace is the default method. If you specify NewVersion for the UpdateMethod parameter, and the Name of the document does not match an existing resource, a new document is created. When you specify NewVersion, the default version of the document is changed to the newly created version.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VersionName": {
        "description": "An optional field specifying the version of the artifact you are creating with the document. For example, Release12.1. This value is unique across all versions of a document, and can't be changed.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssm-document.html",
    "properties": [
      "Attachments",
      "Content",
      "DocumentFormat",
      "DocumentType",
      "Name",
      "Requires",
      "Tags",
      "TargetType",
      "UpdateMethod",
      "VersionName"
    ]
  },
  "AWS::SSM::MaintenanceWindow": {
    "full_properties": {
      "AllowUnassociatedTargets": {
        "description": "Enables a maintenance window task to run on managed instances, even if you have not registered those instances as targets. If enabled, then you must specify the unregistered instances (by instance ID) when you register a task with the maintenance window.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Cutoff": {
        "description": "The number of hours before the end of the maintenance window that AWS Systems Manager stops scheduling new tasks for execution.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the maintenance window.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Duration": {
        "description": "The duration of the maintenance window in hours.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "EndDate": {
        "description": "The date and time, in ISO-8601 Extended format, for when the maintenance window is scheduled to become inactive.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the maintenance window.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "The schedule of the maintenance window in the form of a cron or rate expression.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduleOffset": {
        "description": "The number of days to wait to run a maintenance window after the scheduled cron expression date and time.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ScheduleTimezone": {
        "description": "The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StartDate": {
        "description": "The date and time, in ISO-8601 Extended format, for when the maintenance window is scheduled to become active. StartDate allows you to delay activation of the Maintenance Window until the specified future date.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a maintenance window to identify the type of tasks it will run, the types of targets, and the environment it will run in.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssm-maintenancewindow.html",
    "properties": [
      "AllowUnassociatedTargets",
      "Cutoff",
      "Description",
      "Duration",
      "EndDate",
      "Name",
      "Schedule",
      "ScheduleOffset",
      "ScheduleTimezone",
      "StartDate",
      "Tags"
    ]
  },
  "AWS::SSM::MaintenanceWindowTarget": {
    "full_properties": {
      "Description": {
        "description": "A description for the target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for the maintenance window target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OwnerInformation": {
        "description": "A user-provided value that will be included in any Amazon CloudWatch Events events that are raised while running tasks for these targets in this maintenance window.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceType": {
        "description": "The type of target that is being registered with the maintenance window.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "The targets to register with the maintenance window. In other words, the instances to run commands on when the maintenance window runs.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "WindowId": {
        "description": "The ID of the maintenance window to register the target with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ssm-maintenancewindowtarget.html",
    "properties": [
      "Description",
      "Name",
      "OwnerInformation",
      "ResourceType",
      "Targets",
      "WindowId"
    ]
  },
  "AWS::SSM::MaintenanceWindowTask": {
    "full_properties": {
      "CutoffBehavior": {
        "description": "The specification for whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LoggingInfo": {
        "description": "Information about an Amazon S3 bucket to write Run Command task-level logs to.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaxConcurrency": {
        "description": "The maximum number of targets this task can be run for, in parallel.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxErrors": {
        "description": "The maximum number of errors allowed before this task stops being scheduled.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The task name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Priority": {
        "description": "The priority of the task in the maintenance window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "ServiceRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "The targets, either instances or window target IDs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TaskArn": {
        "description": "The resource that the task uses during execution.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TaskInvocationParameters": {
        "description": "The parameters to pass to the task when it runs. Populate only the fields that match the task type. All other fields should be empty.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TaskParameters": {
        "description": "The parameters to pass to the task when it runs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TaskType": {
        "description": "The type of task. Valid values: RUN_COMMAND, AUTOMATION, LAMBDA, STEP_FUNCTIONS.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WindowId": {
        "description": "The ID of the maintenance window where the task is registered.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ssm-maintenancewindowtask.html",
    "properties": [
      "CutoffBehavior",
      "Description",
      "LoggingInfo",
      "MaxConcurrency",
      "MaxErrors",
      "Name",
      "Priority",
      "ServiceRoleArn",
      "Targets",
      "TaskArn",
      "TaskInvocationParameters",
      "TaskParameters",
      "TaskType",
      "WindowId"
    ]
  },
  "AWS::SSM::Parameter": {
    "full_properties": {
      "AllowedPattern": {
        "description": "A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^\\d+$",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DataType": {
        "description": "The data type of the parameter, such as text or aws:ec2:image. The default is text.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "Information about the parameter.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the parameter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Policies": {
        "description": "Information about the policies assigned to a parameter.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a Systems Manager parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tier": {
        "description": "The parameter tier.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of parameter.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Value": {
        "description": "The parameter value.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssm-parameter.html",
    "properties": [
      "AllowedPattern",
      "DataType",
      "Description",
      "Name",
      "Policies",
      "Tags",
      "Tier",
      "Type",
      "Value"
    ]
  },
  "AWS::SSM::PatchBaseline": {
    "full_properties": {
      "ApprovalRules": {
        "description": "A set of rules used to include patches in the baseline.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ApprovedPatches": {
        "description": "A list of explicitly approved patches for the baseline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ApprovedPatchesComplianceLevel": {
        "description": "Defines the compliance level for approved patches. When an approved patch is reported as missing, this value describes the severity of the compliance violation. The default value is UNSPECIFIED.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ApprovedPatchesEnableNonSecurity": {
        "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the managed nodes. The default value is false. Applies to Linux managed nodes only.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the patch baseline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GlobalFilters": {
        "description": "A set of global filters used to include patches in the baseline.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the patch baseline.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OperatingSystem": {
        "description": "Defines the operating system the patch baseline applies to. The default value is WINDOWS.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PatchGroups": {
        "description": "The name of the patch group to be registered with the patch baseline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RejectedPatches": {
        "description": "A list of explicitly rejected patches for the baseline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RejectedPatchesAction": {
        "description": "The action for Patch Manager to take on patches included in the RejectedPackages list.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Sources": {
        "description": "Information about the patches to use to update the managed nodes, including target operating systems and source repositories. Applies to Linux managed nodes only.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a patch baseline to identify the severity level of patches it specifies and the operating system family it applies to.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssm-patchbaseline.html",
    "properties": [
      "ApprovalRules",
      "ApprovedPatches",
      "ApprovedPatchesComplianceLevel",
      "ApprovedPatchesEnableNonSecurity",
      "Description",
      "GlobalFilters",
      "Name",
      "OperatingSystem",
      "PatchGroups",
      "RejectedPatches",
      "RejectedPatchesAction",
      "Sources",
      "Tags"
    ]
  },
  "AWS::SSM::ResourceDataSync": {
    "full_properties": {
      "BucketName": {
        "description": "The name of the S3 bucket where the aggregated data is stored.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BucketPrefix": {
        "description": "An Amazon S3 prefix for the bucket.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BucketRegion": {
        "description": "The AWS Region with the S3 bucket targeted by the resource data sync.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KMSKeyArn": {
        "description": "The ARN of an encryption key for a destination in Amazon S3. You can use a KMS key to encrypt inventory data in Amazon S3. You must specify a key that exist in the same region as the destination Amazon S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "S3Destination": {
        "description": "Configuration information for the target S3 bucket.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SyncFormat": {
        "description": "A supported sync format. The following format is currently supported: JsonSerDe",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SyncName": {
        "description": "A name for the resource data sync.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SyncSource": {
        "description": "Information about the source where the data was synchronized.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SyncType": {
        "description": "The type of resource data sync. If SyncType is SyncToDestination, then the resource data sync synchronizes data to an S3 bucket. If the SyncType is SyncFromSource then the resource data sync synchronizes data from AWS Organizations or from multiple AWS Regions.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ssm-resourcedatasync.html",
    "properties": [
      "BucketName",
      "BucketPrefix",
      "BucketRegion",
      "KMSKeyArn",
      "S3Destination",
      "SyncFormat",
      "SyncName",
      "SyncSource",
      "SyncType"
    ]
  },
  "AWS::SSMContacts::Contact": {
    "full_properties": {
      "Alias": {
        "description": "The unique and identifiable alias of the contact or escalation plan.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DisplayName": {
        "description": "The full name of the contact or escalation plan.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Plan": {
        "description": "A list of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Type": {
        "description": "Refers to the type of contact. A single contact is type PERSONAL and an escalation plan is type ESCALATION.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ssmcontacts-contact.html",
    "properties": [
      "Alias",
      "DisplayName",
      "Plan",
      "Type"
    ]
  },
  "AWS::SSMContacts::ContactChannel": {
    "full_properties": {
      "ChannelAddress": {
        "description": "The details that Incident Manager uses when trying to engage the contact channel.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ChannelName": {
        "description": "The name of the contact channel.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ChannelType": {
        "description": "The type of the contact channel. Incident Manager supports three contact methods:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ContactId": {
        "description": "The Amazon Resource Name (ARN) of the contact you are adding the contact channel to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeferActivation": {
        "description": "If you want to activate the channel at a later time, you can choose to defer activation. Incident Manager can't engage your contact channel until it has been activated.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssmcontacts-contactchannel.html",
    "properties": [
      "ChannelAddress",
      "ChannelName",
      "ChannelType",
      "ContactId",
      "DeferActivation"
    ]
  },
  "AWS::SSMIncidents::ReplicationSet": {
    "full_properties": {
      "DeletionProtected": {
        "description": "Determines if the replication set deletion protection is enabled or not. If deletion protection is enabled, you can't delete the last Region in the replication set.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Regions": {
        "description": "Specifies the Regions of the replication set.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssmincidents-replicationset.html",
    "properties": [
      "DeletionProtected",
      "Regions"
    ]
  },
  "AWS::SSMIncidents::ResponsePlan": {
    "full_properties": {
      "Actions": {
        "description": "The actions that the response plan starts at the beginning of an incident.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ChatChannel": {
        "description": "The AWS Chatbot chat channel used for collaboration during an incident.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The human readable name of the response plan.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Engagements": {
        "description": "The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "IncidentTemplate": {
        "description": "Details used to create an incident when using this response plan.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the response plan.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssmincidents-responseplan.html",
    "properties": [
      "Actions",
      "ChatChannel",
      "DisplayName",
      "Engagements",
      "IncidentTemplate",
      "Name",
      "Tags"
    ]
  },
  "AWS::SSO::Assignment": {
    "full_properties": {
      "InstanceArn": {
        "description": "The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see Amazon Resource Names (ARNs) and AWS Service Namespaces in the AWS General Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PermissionSetArn": {
        "description": "The ARN of the permission set.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrincipalId": {
        "description": "An identifier for an object in IAM Identity Center, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in IAM Identity Center, see the IAM Identity Center Identity Store API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrincipalType": {
        "description": "The entity type for which the assignment will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetId": {
        "description": "TargetID is an AWS account identifier, typically a 10-12 digit string (For example, 123456789012).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetType": {
        "description": "The entity type for which the assignment will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sso-assignment.html",
    "properties": [
      "InstanceArn",
      "PermissionSetArn",
      "PrincipalId",
      "PrincipalType",
      "TargetId",
      "TargetType"
    ]
  },
  "AWS::SSO::InstanceAccessControlAttributeConfiguration": {
    "full_properties": {
      "AccessControlAttributes": {
        "description": "Lists the attributes that are configured for ABAC in the specified IAM Identity Center instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The ARN of the IAM Identity Center instance under which the operation will be executed.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sso-instanceaccesscontrolattributeconfiguration.html",
    "properties": [
      "AccessControlAttributes",
      "InstanceArn"
    ]
  },
  "AWS::SSO::PermissionSet": {
    "full_properties": {
      "CustomerManagedPolicyReferences": {
        "description": "Specifies the names and paths of the customer managed policies that you have attached to your permission set.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the AWS::SSO::PermissionSet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InlinePolicy": {
        "description": "The inline policy that is attached to the permission set.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceArn": {
        "description": "The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see Amazon Resource Names (ARNs) and AWS Service Namespaces in the AWS General Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ManagedPolicies": {
        "description": "A structure that stores the details of the AWS managed policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the permission set.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PermissionsBoundary": {
        "description": "Specifies the configuration of the AWS managed or customer managed policy that you want to set as a permissions boundary. Specify either CustomerManagedPolicyReference to use the name and path of a customer managed policy, or ManagedPolicyArn to use the ARN of an AWS managed policy. A permissions boundary represents the maximum permissions that any policy can grant your role. For more information, see Permissions boundaries for IAM entities in the AWS Identity and Access Management User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RelayStateType": {
        "description": "Used to redirect users within the application during the federation authentication process.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SessionDuration": {
        "description": "The length of time that the application user sessions are valid for in the ISO-8601 standard.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to attach to the new AWS::SSO::PermissionSet.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sso-permissionset.html",
    "properties": [
      "CustomerManagedPolicyReferences",
      "Description",
      "InlinePolicy",
      "InstanceArn",
      "ManagedPolicies",
      "Name",
      "PermissionsBoundary",
      "RelayStateType",
      "SessionDuration",
      "Tags"
    ]
  },
  "AWS::SageMaker::App": {
    "full_properties": {
      "AppName": {
        "description": "The name of the app.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AppType": {
        "description": "The type of app.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainId": {
        "description": "The domain ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceSpec": {
        "description": "Specifies the ARNs of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "UserProfileName": {
        "description": "The user profile name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-app.html",
    "properties": [
      "AppName",
      "AppType",
      "DomainId",
      "ResourceSpec",
      "Tags",
      "UserProfileName"
    ]
  },
  "AWS::SageMaker::AppImageConfig": {
    "full_properties": {
      "AppImageConfigName": {
        "description": "The name of the AppImageConfig. Must be unique to your account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KernelGatewayImageConfig": {
        "description": "The configuration for the file system and kernels in the SageMaker image.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-appimageconfig.html",
    "properties": [
      "AppImageConfigName",
      "KernelGatewayImageConfig",
      "Tags"
    ]
  },
  "AWS::SageMaker::CodeRepository": {
    "full_properties": {
      "CodeRepositoryName": {
        "description": "The name of the Git repository.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GitConfig": {
        "description": "Configuration details for the Git repository, including the URL where it is located and the ARN of the AWS Secrets Manager secret that contains the credentials used to access the repository.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "List of tags for Code Repository.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-coderepository.html",
    "properties": [
      "CodeRepositoryName",
      "GitConfig",
      "Tags"
    ]
  },
  "AWS::SageMaker::DataQualityJobDefinition": {
    "full_properties": {
      "DataQualityAppSpecification": {
        "description": "Specifies the container that runs the monitoring job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DataQualityBaselineConfig": {
        "description": "Configures the constraints and baselines for the monitoring job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DataQualityJobInput": {
        "description": "A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DataQualityJobOutputConfig": {
        "description": "The output configuration for monitoring jobs.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EndpointName": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "JobDefinitionName": {
        "description": "The name for the monitoring job definition.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobResources": {
        "description": "Identifies the resources to deploy for a monitoring job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "NetworkConfig": {
        "description": "Specifies networking configuration for the monitoring job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StoppingCondition": {
        "description": "A time limit for how long the monitoring job is allowed to run before stopping.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-dataqualityjobdefinition.html",
    "properties": [
      "DataQualityAppSpecification",
      "DataQualityBaselineConfig",
      "DataQualityJobInput",
      "DataQualityJobOutputConfig",
      "EndpointName",
      "JobDefinitionName",
      "JobResources",
      "NetworkConfig",
      "RoleArn",
      "StoppingCondition",
      "Tags"
    ]
  },
  "AWS::SageMaker::Device": {
    "full_properties": {
      "Device": {
        "description": "Edge device you want to create.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeviceFleetName": {
        "description": "The name of the fleet the device belongs to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs that contain metadata to help you categorize and organize your devices. Each tag consists of a key and a value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-device.html",
    "properties": [
      "Device",
      "DeviceFleetName",
      "Tags"
    ]
  },
  "AWS::SageMaker::DeviceFleet": {
    "full_properties": {
      "Description": {
        "description": "A description of the fleet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeviceFleetName": {
        "description": "Name of the device fleet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutputConfig": {
        "description": "The output configuration for storing sample data collected by the fleet.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs that contain metadata to help you categorize and organize your device fleets. Each tag consists of a key and a value, both of which you define.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-devicefleet.html",
    "properties": [
      "Description",
      "DeviceFleetName",
      "OutputConfig",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::SageMaker::Domain": {
    "full_properties": {
      "AppNetworkAccessType": {
        "description": "Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AppSecurityGroupManagement": {
        "description": "The entity that creates and manages the required security groups for inter-app communication in VpcOnly mode. Required when CreateDomain.AppNetworkAccessType is VpcOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn is provided.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "AuthMode": {
        "description": "The mode of authentication that members use to access the Domain.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultUserSettings": {
        "description": "The default user settings.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The domain name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainSettings": {
        "description": "A collection of settings that apply to the SageMaker Domain. These settings are specified through the CreateDomain API call.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "SageMaker uses AWS KMS to encrypt the EFS volume attached to the Domain with an AWS managed customer master key (CMK) by default. For more control, specify a customer managed CMK.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The VPC subnets that Studio uses for communication.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags to associated with the Domain. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the Search API.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the Amazon Virtual Private Cloud (Amazon VPC) that Studio uses for communication.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-domain.html",
    "properties": [
      "AppNetworkAccessType",
      "AppSecurityGroupManagement",
      "AuthMode",
      "DefaultUserSettings",
      "DomainName",
      "DomainSettings",
      "KmsKeyId",
      "SubnetIds",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::SageMaker::Endpoint": {
    "full_properties": {
      "DeploymentConfig": {
        "description": "The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EndpointConfigName": {
        "description": "The name of the AWS::SageMaker::EndpointConfig resource that specifies the configuration for the endpoint. For more information, see CreateEndpointConfig.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EndpointName": {
        "description": "The name of the endpoint.The name must be unique within an AWS Region in your AWS account. The name is case-insensitive in CreateEndpoint, but the case is preserved and must be matched in https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpoint.html.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExcludeRetainedVariantProperties": {
        "description": "When you are updating endpoint resources with RetainAllVariantProperties whose value is set to true, ExcludeRetainedVariantProperties specifies the list of type VariantProperty to override with the values provided by EndpointConfig. If you don't specify a value for ExcludeAllVariantProperties, no variant properties are overridden. Don't use this property when creating new endpoint resources or when RetainAllVariantProperties is set to false.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RetainAllVariantProperties": {
        "description": "When updating endpoint resources, enables or disables the retention of variant properties, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set RetainAllVariantProperties to true. To use the variant properties specified in a new EndpointConfig call when updating an endpoint, set RetainAllVariantProperties to false. Use this property only when updating endpoint resources, not when creating new endpoint resources.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RetainDeploymentConfig": {
        "description": "Specifies whether to reuse the last deployment configuration. The default value is false (the configuration is not reused).",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-endpoint.html",
    "properties": [
      "DeploymentConfig",
      "EndpointConfigName",
      "EndpointName",
      "ExcludeRetainedVariantProperties",
      "RetainAllVariantProperties",
      "RetainDeploymentConfig",
      "Tags"
    ]
  },
  "AWS::SageMaker::EndpointConfig": {
    "full_properties": {
      "AsyncInferenceConfig": {
        "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DataCaptureConfig": {
        "description": "Specifies how to capture endpoint data for model monitor. The data capture configuration applies to all production variants hosted at the endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EndpointConfigName": {
        "description": "The name of the endpoint configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExplainerConfig": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The Amazon Resource Name (ARN) of an AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductionVariants": {
        "description": "A list of ProductionVariant objects, one for each model that you want to host at this endpoint.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-endpointconfig.html",
    "properties": [
      "AsyncInferenceConfig",
      "DataCaptureConfig",
      "EndpointConfigName",
      "ExplainerConfig",
      "KmsKeyId",
      "ProductionVariants",
      "Tags"
    ]
  },
  "AWS::SageMaker::FeatureGroup": {
    "full_properties": {
      "Description": {
        "description": "A free form description of a FeatureGroup.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventTimeFeatureName": {
        "description": "The name of the feature that stores the EventTime of a Record in a FeatureGroup.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FeatureDefinitions": {
        "description": "A list of Features. Each Feature must include a FeatureName and a FeatureType.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "FeatureGroupName": {
        "description": "The name of the FeatureGroup.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OfflineStoreConfig": {
        "description": "The configuration of an OfflineStore.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "OnlineStoreConfig": {
        "description": "The configuration of an OnlineStore.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RecordIdentifierFeatureName": {
        "description": "The name of the Feature whose value uniquely identifies a Record defined in the FeatureGroup FeatureDefinitions.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM execution role used to create the feature group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Tags used to define a FeatureGroup.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-featuregroup.html",
    "properties": [
      "Description",
      "EventTimeFeatureName",
      "FeatureDefinitions",
      "FeatureGroupName",
      "OfflineStoreConfig",
      "OnlineStoreConfig",
      "RecordIdentifierFeatureName",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::SageMaker::Image": {
    "full_properties": {
      "ImageDescription": {
        "description": "The description of the image.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageDisplayName": {
        "description": "The display name of the image.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageName": {
        "description": "The name of the Image. Must be unique by region in your account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ImageRoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-image.html",
    "properties": [
      "ImageDescription",
      "ImageDisplayName",
      "ImageName",
      "ImageRoleArn",
      "Tags"
    ]
  },
  "AWS::SageMaker::ImageVersion": {
    "full_properties": {
      "BaseImage": {
        "description": "The container image that the SageMaker image version is based on.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ImageName": {
        "description": "The name of the parent image.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-imageversion.html",
    "properties": [
      "BaseImage",
      "ImageName"
    ]
  },
  "AWS::SageMaker::Model": {
    "full_properties": {
      "Containers": {
        "description": "Specifies the containers in the inference pipeline.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "EnableNetworkIsolation": {
        "description": "Isolates the model container. No inbound or outbound network calls can be made to or from the model container.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances or for batch transform jobs. Deploying on ML compute instances is part of model hosting. For more information, see SageMaker Roles.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InferenceExecutionConfig": {
        "description": "Specifies details of how containers in a multi-container endpoint are called.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelName": {
        "description": "The name of the new model.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrimaryContainer": {
        "description": "The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "A VpcConfig object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. VpcConfig is used in hosting services and in batch transform. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud and Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private Cloud.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-model.html",
    "properties": [
      "Containers",
      "EnableNetworkIsolation",
      "ExecutionRoleArn",
      "InferenceExecutionConfig",
      "ModelName",
      "PrimaryContainer",
      "Tags",
      "VpcConfig"
    ]
  },
  "AWS::SageMaker::ModelBiasJobDefinition": {
    "full_properties": {
      "EndpointName": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "JobDefinitionName": {
        "description": "The name of the bias job definition. The name must be unique within an AWS Region in the AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobResources": {
        "description": "Identifies the resources to deploy for a monitoring job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelBiasAppSpecification": {
        "description": "Configures the model bias job to run a specified Docker container image.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelBiasBaselineConfig": {
        "description": "The baseline configuration for a model bias job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelBiasJobInput": {
        "description": "Inputs for the model bias job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelBiasJobOutputConfig": {
        "description": "The output configuration for monitoring jobs.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "NetworkConfig": {
        "description": "Networking options for a model bias job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StoppingCondition": {
        "description": "A time limit for how long the monitoring job is allowed to run before stopping.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-modelbiasjobdefinition.html",
    "properties": [
      "EndpointName",
      "JobDefinitionName",
      "JobResources",
      "ModelBiasAppSpecification",
      "ModelBiasBaselineConfig",
      "ModelBiasJobInput",
      "ModelBiasJobOutputConfig",
      "NetworkConfig",
      "RoleArn",
      "StoppingCondition",
      "Tags"
    ]
  },
  "AWS::SageMaker::ModelExplainabilityJobDefinition": {
    "full_properties": {
      "EndpointName": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "JobDefinitionName": {
        "description": "The name of the model explainability job definition. The name must be unique within an AWS Region in the AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobResources": {
        "description": "Identifies the resources to deploy for a monitoring job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelExplainabilityAppSpecification": {
        "description": "Configures the model explainability job to run a specified Docker container image.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelExplainabilityBaselineConfig": {
        "description": "The baseline configuration for a model explainability job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelExplainabilityJobInput": {
        "description": "Inputs for the model explainability job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelExplainabilityJobOutputConfig": {
        "description": "The output configuration for monitoring jobs.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "NetworkConfig": {
        "description": "Networking options for a model explainability job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StoppingCondition": {
        "description": "A time limit for how long the monitoring job is allowed to run before stopping.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-modelexplainabilityjobdefinition.html",
    "properties": [
      "EndpointName",
      "JobDefinitionName",
      "JobResources",
      "ModelExplainabilityAppSpecification",
      "ModelExplainabilityBaselineConfig",
      "ModelExplainabilityJobInput",
      "ModelExplainabilityJobOutputConfig",
      "NetworkConfig",
      "RoleArn",
      "StoppingCondition",
      "Tags"
    ]
  },
  "AWS::SageMaker::ModelPackage": {
    "full_properties": {
      "AdditionalInferenceSpecificationDefinition": {
        "description": "A structure of additional Inference Specification. Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AdditionalInferenceSpecifications": {
        "description": "An array of additional Inference Specification objects.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AdditionalInferenceSpecificationsToAdd": {
        "description": "An array of additional Inference Specification objects to be added to the existing array. The total number of additional Inference Specification objects cannot exceed 15. Each additional Inference Specification object specifies artifacts based on this model package that can be used on inference endpoints. Generally used with SageMaker Neo to store the compiled artifacts.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ApprovalDescription": {
        "description": "A description provided when the model approval is set.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CertifyForMarketplace": {
        "description": "Whether the model package is to be certified to be listed on AWS Marketplace. For information about listing model packages on AWS Marketplace, see List Your Algorithm or Model Package on AWS Marketplace.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ClientToken": {
        "description": "A unique token that guarantees that the call to this API is idempotent.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CreatedBy": {
        "description": "Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomerMetadataProperties": {
        "description": "The metadata properties for the model package.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Domain": {
        "description": "The machine learning domain of your model package and its components. Common machine learning domains include computer vision and natural language processing.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DriftCheckBaselines": {
        "description": "Represents the drift check baselines that can be used when the model monitor is set using the model package.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Environment": {
        "description": "The environment variables to set in the Docker container. Each key and value in the Environment string to string map can have length of up to 1024. We support up to 16 entries in the map.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InferenceSpecification": {
        "description": "Defines how to perform inference generation after a training job is run.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LastModifiedBy": {
        "description": "Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LastModifiedTime": {
        "description": "The last time the model package was modified.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MetadataProperties": {
        "description": "Metadata properties of the tracking entity, trial, or trial component.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelApprovalStatus": {
        "description": "The approval status of the model. This can be one of the following values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ModelMetrics": {
        "description": "Metrics for the model.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelPackageDescription": {
        "description": "The description of the model package.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModelPackageGroupName": {
        "description": "The model group to which the model belongs.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModelPackageName": {
        "description": "The name of the model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ModelPackageStatusDetails": {
        "description": "Specifies the validation and image scan statuses of the model package.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ModelPackageStatusItem": {
        "description": "Represents the overall status of a model package.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ModelPackageVersion": {
        "description": "The version number of a versioned model.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SamplePayloadUrl": {
        "description": "The Amazon Simple Storage Service path where the sample payload are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceAlgorithmSpecification": {
        "description": "A list of algorithms that were used to create a model package.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tag": {
        "description": "A tag object that consists of a key and an optional value, used to manage metadata for SageMaker AWS resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of the tags associated with the model package. For more information, see Tagging AWS resources in the AWS General Reference Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Task": {
        "description": "The machine learning task your model package accomplishes. Common machine learning tasks include object detection and image classification.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidationSpecification": {
        "description": "Specifies batch transform jobs that SageMaker runs to validate your model package.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-modelpackage.html",
    "properties": [
      "AdditionalInferenceSpecificationDefinition",
      "AdditionalInferenceSpecifications",
      "AdditionalInferenceSpecificationsToAdd",
      "ApprovalDescription",
      "CertifyForMarketplace",
      "ClientToken",
      "CreatedBy",
      "CustomerMetadataProperties",
      "Domain",
      "DriftCheckBaselines",
      "Environment",
      "InferenceSpecification",
      "LastModifiedBy",
      "LastModifiedTime",
      "MetadataProperties",
      "ModelApprovalStatus",
      "ModelMetrics",
      "ModelPackageDescription",
      "ModelPackageGroupName",
      "ModelPackageName",
      "ModelPackageStatusDetails",
      "ModelPackageStatusItem",
      "ModelPackageVersion",
      "SamplePayloadUrl",
      "SourceAlgorithmSpecification",
      "Tag",
      "Tags",
      "Task",
      "ValidationSpecification"
    ]
  },
  "AWS::SageMaker::ModelPackageGroup": {
    "full_properties": {
      "ModelPackageGroupDescription": {
        "description": "The description for the model group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModelPackageGroupName": {
        "description": "The name of the model group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModelPackageGroupPolicy": {
        "description": "A resouce policy to control access to a model group. For information about resoure policies, see Identity-based policies and resource-based policies in the AWS Identity and Access Management User Guide..",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-modelpackagegroup.html",
    "properties": [
      "ModelPackageGroupDescription",
      "ModelPackageGroupName",
      "ModelPackageGroupPolicy",
      "Tags"
    ]
  },
  "AWS::SageMaker::ModelQualityJobDefinition": {
    "full_properties": {
      "EndpointName": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "JobDefinitionName": {
        "description": "The name of the monitoring job definition.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobResources": {
        "description": "Identifies the resources to deploy for a monitoring job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelQualityAppSpecification": {
        "description": "Container image configuration object for the monitoring job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelQualityBaselineConfig": {
        "description": "Specifies the constraints and baselines for the monitoring job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelQualityJobInput": {
        "description": "A list of the inputs that are monitored. Currently endpoints are supported.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ModelQualityJobOutputConfig": {
        "description": "The output configuration for monitoring jobs.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "NetworkConfig": {
        "description": "Specifies the network configuration for the monitoring job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StoppingCondition": {
        "description": "A time limit for how long the monitoring job is allowed to run before stopping.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-modelqualityjobdefinition.html",
    "properties": [
      "EndpointName",
      "JobDefinitionName",
      "JobResources",
      "ModelQualityAppSpecification",
      "ModelQualityBaselineConfig",
      "ModelQualityJobInput",
      "ModelQualityJobOutputConfig",
      "NetworkConfig",
      "RoleArn",
      "StoppingCondition",
      "Tags"
    ]
  },
  "AWS::SageMaker::MonitoringSchedule": {
    "full_properties": {
      "EndpointName": {
        "description": "The name of the endpoint using the monitoring schedule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FailureReason": {
        "description": "Contains the reason a monitoring job failed, if it failed.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LastMonitoringExecutionSummary": {
        "description": "Describes metadata on the last execution to run, if there was one.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MonitoringScheduleConfig": {
        "description": "The configuration object that specifies the monitoring schedule and defines the monitoring job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MonitoringScheduleName": {
        "description": "The name of the monitoring schedule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MonitoringScheduleStatus": {
        "description": "The status of the monitoring schedule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-monitoringschedule.html",
    "properties": [
      "EndpointName",
      "FailureReason",
      "LastMonitoringExecutionSummary",
      "MonitoringScheduleConfig",
      "MonitoringScheduleName",
      "MonitoringScheduleStatus",
      "Tags"
    ]
  },
  "AWS::SageMaker::NotebookInstance": {
    "full_properties": {
      "AcceleratorTypes": {
        "description": "A list of Amazon Elastic Inference (EI) instance types to associate with the notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see Using Elastic Inference in Amazon SageMaker.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AdditionalCodeRepositories": {
        "description": "An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in AWS CodeCommit or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see Associating Git Repositories with SageMaker Notebook Instances.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DefaultCodeRepository": {
        "description": "The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in AWS CodeCommit or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see Associating Git Repositories with SageMaker Notebook Instances.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DirectInternetAccess": {
        "description": "Sets whether SageMaker provides internet access to the notebook instance. If you set this to Disabled this notebook instance is able to access resources only in your VPC, and is not be able to connect to SageMaker training and endpoint services unless you configure a NAT Gateway in your VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceMetadataServiceConfiguration": {
        "description": "Information on the IMDS configuration of the notebook instance",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceType": {
        "description": "The type of ML compute instance to launch for the notebook instance.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The Amazon Resource Name (ARN) of a AWS Key Management Service key that SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see Enabling and Disabling Keys in the AWS Key Management Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LifecycleConfigName": {
        "description": "The name of a lifecycle configuration to associate with the notebook instance. For information about lifecycle configurations, see Customize a Notebook Instance in the Amazon SageMaker Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NotebookInstanceName": {
        "description": "The name of the new notebook instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PlatformIdentifier": {
        "description": "The platform identifier of the notebook instance runtime environment.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "When you send any requests to AWS resources from the notebook instance, SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so SageMaker can perform these tasks. The policy must allow the SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see SageMaker Roles.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RootAccess": {
        "description": "Whether root access is enabled or disabled for users of the notebook instance. The default value is Enabled.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VolumeSizeInGB": {
        "description": "The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-notebookinstance.html",
    "properties": [
      "AcceleratorTypes",
      "AdditionalCodeRepositories",
      "DefaultCodeRepository",
      "DirectInternetAccess",
      "InstanceMetadataServiceConfiguration",
      "InstanceType",
      "KmsKeyId",
      "LifecycleConfigName",
      "NotebookInstanceName",
      "PlatformIdentifier",
      "RoleArn",
      "RootAccess",
      "SecurityGroupIds",
      "SubnetId",
      "Tags",
      "VolumeSizeInGB"
    ]
  },
  "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
    "full_properties": {
      "NotebookInstanceLifecycleConfigName": {
        "description": "The name of the lifecycle configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OnCreate": {
        "description": "A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OnStart": {
        "description": "A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-notebookinstancelifecycleconfig.html",
    "properties": [
      "NotebookInstanceLifecycleConfigName",
      "OnCreate",
      "OnStart"
    ]
  },
  "AWS::SageMaker::Pipeline": {
    "full_properties": {
      "ParallelismConfiguration": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PipelineDefinition": {
        "description": "The definition of the pipeline. This can be either a JSON string or an Amazon S3 location.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PipelineDescription": {
        "description": "The description of the pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PipelineDisplayName": {
        "description": "The display name of the pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PipelineName": {
        "description": "The name of the pipeline.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role used to execute the pipeline.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags of the pipeline.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-pipeline.html",
    "properties": [
      "ParallelismConfiguration",
      "PipelineDefinition",
      "PipelineDescription",
      "PipelineDisplayName",
      "PipelineName",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::SageMaker::Project": {
    "full_properties": {
      "ProjectDescription": {
        "description": "The description of the project.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProjectName": {
        "description": "The name of the project.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceCatalogProvisioningDetails": {
        "description": "The product ID and provisioning artifact ID to provision a service catalog. For information, see What is AWS Service Catalog.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-project.html",
    "properties": [
      "ProjectDescription",
      "ProjectName",
      "ServiceCatalogProvisioningDetails",
      "Tags"
    ]
  },
  "AWS::SageMaker::UserProfile": {
    "full_properties": {
      "DomainId": {
        "description": "The domain ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SingleSignOnUserIdentifier": {
        "description": "A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is \"UserName\". If the Domain's AuthMode is IAM Identity Center, this field is required. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SingleSignOnUserValue": {
        "description": "The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is IAM Identity Center, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "UserProfileName": {
        "description": "The user profile name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserSettings": {
        "description": "A collection of settings that apply to users of Amazon SageMaker Studio.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-userprofile.html",
    "properties": [
      "DomainId",
      "SingleSignOnUserIdentifier",
      "SingleSignOnUserValue",
      "Tags",
      "UserProfileName",
      "UserSettings"
    ]
  },
  "AWS::SageMaker::Workteam": {
    "full_properties": {
      "Description": {
        "description": "A description of the work team.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MemberDefinitions": {
        "description": "A list of MemberDefinition objects that contains objects that identify the workers that make up the work team.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "NotificationConfiguration": {
        "description": "Configures SNS notifications of available or expiring work items for work teams.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WorkforceName": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "WorkteamName": {
        "description": "The name of the work team.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-workteam.html",
    "properties": [
      "Description",
      "MemberDefinitions",
      "NotificationConfiguration",
      "Tags",
      "WorkforceName",
      "WorkteamName"
    ]
  },
  "AWS::SecretsManager::ResourcePolicy": {
    "full_properties": {
      "BlockPublicPolicy": {
        "description": "Specifies whether to block resource-based policies that allow broad access to the secret. By default, Secrets Manager blocks policies that allow broad access, for example those that use a wildcard for the principal.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ResourcePolicy": {
        "description": "A JSON-formatted string for an AWS resource-based policy. For example policies, see Permissions policy examples.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SecretId": {
        "description": "The ARN or name of the secret to attach the resource-based policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-secretsmanager-resourcepolicy.html",
    "properties": [
      "BlockPublicPolicy",
      "ResourcePolicy",
      "SecretId"
    ]
  },
  "AWS::SecretsManager::RotationSchedule": {
    "full_properties": {
      "HostedRotationLambda": {
        "description": "Creates a new Lambda rotation function based on one of the Secrets Manager rotation function templates. To use a rotation function that already exists, specify RotationLambdaARN instead.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RotateImmediatelyOnUpdate": {
        "description": "Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window. The rotation schedule is defined in RotationRules.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RotationLambdaARN": {
        "description": "The ARN of an existing Lambda rotation function. To specify a rotation function that is also defined in this template, use the Ref function.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RotationRules": {
        "description": "A structure that defines the rotation configuration for this secret.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SecretId": {
        "description": "The ARN or name of the secret to rotate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-secretsmanager-rotationschedule.html",
    "properties": [
      "HostedRotationLambda",
      "RotateImmediatelyOnUpdate",
      "RotationLambdaARN",
      "RotationRules",
      "SecretId"
    ]
  },
  "AWS::SecretsManager::Secret": {
    "full_properties": {
      "Description": {
        "description": "The description of the secret.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GenerateSecretString": {
        "description": "A structure that specifies how to generate a password to encrypt and store in the secret.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ARN, key ID, or alias of the AWS KMS key that Secrets Manager uses to encrypt the secret value in the secret. An alias is always prefixed by alias/, for example alias/aws/secretsmanager. For more information, see About aliases.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the new secret.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReplicaRegions": {
        "description": "A custom type that specifies a Region and the KmsKeyId for a replica secret.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecretString": {
        "description": "The text to encrypt and store in the secret. We recommend you use a JSON structure of key/value pairs for your secret value.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string, for example:",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-secretsmanager-secret.html",
    "properties": [
      "Description",
      "GenerateSecretString",
      "KmsKeyId",
      "Name",
      "ReplicaRegions",
      "SecretString",
      "Tags"
    ]
  },
  "AWS::SecretsManager::SecretTargetAttachment": {
    "full_properties": {
      "SecretId": {
        "description": "The ARN or name of the secret. To reference a secret also created in this template, use the see Ref function with the secret's logical ID.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetId": {
        "description": "The ID of the database or cluster.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetType": {
        "description": "A string that defines the type of service or database associated with the secret. This value instructs Secrets Manager how to update the secret with the details of the service or database. This value must be one of the following:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-secretsmanager-secrettargetattachment.html",
    "properties": [
      "SecretId",
      "TargetId",
      "TargetType"
    ]
  },
  "AWS::SecurityHub::Hub": {
    "full_properties": {
      "Tags": {
        "description": "The tags to add to the hub resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-securityhub-hub.html",
    "properties": [
      "Tags"
    ]
  },
  "AWS::ServiceCatalog::AcceptedPortfolioShare": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-acceptedportfolioshare.html",
    "properties": [
      "AcceptLanguage",
      "PortfolioId"
    ]
  },
  "AWS::ServiceCatalog::CloudFormationProduct": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Distributor": {
        "description": "The distributor of the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the product.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Owner": {
        "description": "The owner of the product.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProvisioningArtifactParameters": {
        "description": "The configuration of the provisioning artifact (also known as a version).",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ReplaceProvisioningArtifacts": {
        "description": "This property is turned off by default. If turned off, you can update provisioning artifacts or product attributes (such as description, distributor, name, owner, and more) and the associated provisioning artifacts will retain the same unique identifier. Provisioning artifacts are matched within the CloudFormationProduct resource, and only those that have been updated will be changed. Provisioning artifacts are matched by a combinaton of provisioning artifact template URL and name.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SupportDescription": {
        "description": "The support information about the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SupportEmail": {
        "description": "The contact email for product support.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SupportUrl": {
        "description": "The contact URL for product support.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-cloudformationproduct.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "Distributor",
      "Name",
      "Owner",
      "ProvisioningArtifactParameters",
      "ReplaceProvisioningArtifacts",
      "SupportDescription",
      "SupportEmail",
      "SupportUrl",
      "Tags"
    ]
  },
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationArns": {
        "description": "Passed to AWS CloudFormation. The SNS topic ARNs to which to publish stack-related events.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PathId": {
        "description": "The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use ListLaunchPaths.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PathName": {
        "description": "The name of the path. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use ListLaunchPaths.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProductName": {
        "description": "A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProvisionedProductName": {
        "description": "A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisioningArtifactId": {
        "description": "The identifier of the provisioning artifact (also known as a version).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProvisioningArtifactName": {
        "description": "The name of the provisioning artifact (also known as a version) for the product. This name must be unique for the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProvisioningParameters": {
        "description": "Parameters specified by the administrator that are required for provisioning the product.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ProvisioningPreferences": {
        "description": "StackSet preferences that are required for provisioning the product or updating a provisioned product.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-cloudformationprovisionedproduct.html",
    "properties": [
      "AcceptLanguage",
      "NotificationArns",
      "PathId",
      "PathName",
      "ProductId",
      "ProductName",
      "ProvisionedProductName",
      "ProvisioningArtifactId",
      "ProvisioningArtifactName",
      "ProvisioningParameters",
      "ProvisioningPreferences",
      "Tags"
    ]
  },
  "AWS::ServiceCatalog::LaunchNotificationConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationArns": {
        "description": "The notification ARNs.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-launchnotificationconstraint.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "NotificationArns",
      "PortfolioId",
      "ProductId"
    ]
  },
  "AWS::ServiceCatalog::LaunchRoleConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LocalRoleName": {
        "description": "You are required to specify either the RoleArn or the LocalRoleName but can't use both.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the launch role.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-launchroleconstraint.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "LocalRoleName",
      "PortfolioId",
      "ProductId",
      "RoleArn"
    ]
  },
  "AWS::ServiceCatalog::LaunchTemplateConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "The constraint rules.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-launchtemplateconstraint.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "PortfolioId",
      "ProductId",
      "Rules"
    ]
  },
  "AWS::ServiceCatalog::Portfolio": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the portfolio.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The name to use for display purposes.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProviderName": {
        "description": "The name of the portfolio provider.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-portfolio.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "DisplayName",
      "ProviderName",
      "Tags"
    ]
  },
  "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrincipalARN": {
        "description": "The ARN of the principal (IAM user, role, or group).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrincipalType": {
        "description": "The principal type. The supported value is IAM.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-portfolioprincipalassociation.html",
    "properties": [
      "AcceptLanguage",
      "PortfolioId",
      "PrincipalARN",
      "PrincipalType"
    ]
  },
  "AWS::ServiceCatalog::PortfolioProductAssociation": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourcePortfolioId": {
        "description": "The identifier of the source portfolio.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-portfolioproductassociation.html",
    "properties": [
      "AcceptLanguage",
      "PortfolioId",
      "ProductId",
      "SourcePortfolioId"
    ]
  },
  "AWS::ServiceCatalog::PortfolioShare": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AccountId": {
        "description": "The AWS account ID. For example, 123456789012.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ShareTagOptions": {
        "description": "Indicates whether TagOptions sharing is enabled or disabled for the portfolio share.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-portfolioshare.html",
    "properties": [
      "AcceptLanguage",
      "AccountId",
      "PortfolioId",
      "ShareTagOptions"
    ]
  },
  "AWS::ServiceCatalog::ResourceUpdateConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TagUpdateOnProvisionedProduct": {
        "description": "If set to ALLOWED, lets users change tags in a CloudFormationProvisionedProduct resource.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-resourceupdateconstraint.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "PortfolioId",
      "ProductId",
      "TagUpdateOnProvisionedProduct"
    ]
  },
  "AWS::ServiceCatalog::ServiceAction": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Definition": {
        "description": "A map that defines the self-service action.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "DefinitionType": {
        "description": "The self-service action definition type. For example, SSM_AUTOMATION.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The self-service action description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The self-service action name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-serviceaction.html",
    "properties": [
      "AcceptLanguage",
      "Definition",
      "DefinitionType",
      "Description",
      "Name"
    ]
  },
  "AWS::ServiceCatalog::ServiceActionAssociation": {
    "full_properties": {
      "ProductId": {
        "description": "The product identifier. For example, prod-abcdzk7xy33qa.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisioningArtifactId": {
        "description": "The identifier of the provisioning artifact. For example, pa-4abcdjnxjj6ne.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceActionId": {
        "description": "The self-service action identifier. For example, act-fs7abcd89wxyz.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-serviceactionassociation.html",
    "properties": [
      "ProductId",
      "ProvisioningArtifactId",
      "ServiceActionId"
    ]
  },
  "AWS::ServiceCatalog::StackSetConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AccountList": {
        "description": "One or more AWS accounts that will have access to the provisioned product.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "AdminRole": {
        "description": "AdminRole ARN",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionRole": {
        "description": "ExecutionRole name",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RegionList": {
        "description": "One or more AWS Regions where the provisioned product will be available.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "StackInstanceControl": {
        "description": "Permission to create, update, and delete stack instances. Choose from ALLOWED and NOT_ALLOWED.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-stacksetconstraint.html",
    "properties": [
      "AcceptLanguage",
      "AccountList",
      "AdminRole",
      "Description",
      "ExecutionRole",
      "PortfolioId",
      "ProductId",
      "RegionList",
      "StackInstanceControl"
    ]
  },
  "AWS::ServiceCatalog::TagOption": {
    "full_properties": {
      "Active": {
        "description": "The TagOption active state.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Key": {
        "description": "The TagOption key.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Value": {
        "description": "The TagOption value.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-tagoption.html",
    "properties": [
      "Active",
      "Key",
      "Value"
    ]
  },
  "AWS::ServiceCatalog::TagOptionAssociation": {
    "full_properties": {
      "ResourceId": {
        "description": "The resource identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TagOptionId": {
        "description": "The TagOption identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-tagoptionassociation.html",
    "properties": [
      "ResourceId",
      "TagOptionId"
    ]
  },
  "AWS::ServiceCatalogAppRegistry::Application": {
    "full_properties": {
      "Description": {
        "description": "The description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the application. The name must be unique in the region in which you are creating the application.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Key-value pairs you can use to associate with the application.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalogappregistry-application.html",
    "properties": [
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::ServiceCatalogAppRegistry::AttributeGroup": {
    "full_properties": {
      "Attributes": {
        "description": "A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the attribute group that the user provides.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the attribute group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Key-value pairs you can use to associate with the attribute group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalogappregistry-attributegroup.html",
    "properties": [
      "Attributes",
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation": {
    "full_properties": {
      "Application": {
        "description": "The name or ID of the application.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AttributeGroup": {
        "description": "The name or ID of the attribute group that holds the attributes to describe the application.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalogappregistry-attributegroupassociation.html",
    "properties": [
      "Application",
      "AttributeGroup"
    ]
  },
  "AWS::ServiceCatalogAppRegistry::ResourceAssociation": {
    "full_properties": {
      "Application": {
        "description": "The name or ID of the application.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Resource": {
        "description": "The name or ID of the resource of which the application will be associated.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceType": {
        "description": "The type of resource of which the application will be associated. Possible values: CFN_STACK.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalogappregistry-resourceassociation.html",
    "properties": [
      "Application",
      "Resource",
      "ResourceType"
    ]
  },
  "AWS::ServiceDiscovery::HttpNamespace": {
    "full_properties": {
      "Description": {
        "description": "A description for the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name that you want to assign to this namespace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the namespace. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-resource-servicediscovery-httpnamespace.html",
    "properties": [
      "Description",
      "Name",
      "Tags"
    ]
  },
  "AWS::ServiceDiscovery::Instance": {
    "full_properties": {
      "InstanceAttributes": {
        "description": "A string map that contains the following information for the service that you specify in ServiceId:",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "An identifier that you want to associate with the instance. Note the following:",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ServiceId": {
        "description": "The ID of the service that you want to use for settings for the instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicediscovery-instance.html",
    "properties": [
      "InstanceAttributes",
      "InstanceId",
      "ServiceId"
    ]
  },
  "AWS::ServiceDiscovery::PrivateDnsNamespace": {
    "full_properties": {
      "Description": {
        "description": "A description for the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name that you want to assign to this namespace. When you create a private DNS namespace, AWS Cloud Map automatically creates an Amazon Route 53 private hosted zone that has the same name as the namespace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Properties": {
        "description": "Properties for the private DNS namespace.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the namespace. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      },
      "Vpc": {
        "description": "The ID of the Amazon VPC that you want to associate the namespace with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicediscovery-privatednsnamespace.html",
    "properties": [
      "Description",
      "Name",
      "Properties",
      "Tags",
      "Vpc"
    ]
  },
  "AWS::ServiceDiscovery::PublicDnsNamespace": {
    "full_properties": {
      "Description": {
        "description": "A description for the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name that you want to assign to this namespace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Properties": {
        "description": "Properties for the public DNS namespace.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags for the namespace. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-resource-servicediscovery-publicdnsnamespace.html",
    "properties": [
      "Description",
      "Name",
      "Properties",
      "Tags"
    ]
  },
  "AWS::ServiceDiscovery::Service": {
    "full_properties": {
      "Description": {
        "description": "The description of the service.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DnsConfig": {
        "description": "A complex type that contains information about the Route 53 DNS records that you want AWS Cloud Map to create when you register an instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckConfig": {
        "description": "Public DNS and HTTP namespaces only. A complex type that contains settings for an optional health check. If you specify settings for a health check, AWS Cloud Map associates the health check with the records that you specify in DnsConfig.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckCustomConfig": {
        "description": "A complex type that contains information about an optional custom health check.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NamespaceId": {
        "description": "The ID of the namespace that was used to create the service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags for the service. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      },
      "Type": {
        "description": "If present, specifies that the service instances are only discoverable using the DiscoverInstances API operation. No DNS records is registered for the service instances. The only valid value is HTTP.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicediscovery-service.html",
    "properties": [
      "Description",
      "DnsConfig",
      "HealthCheckConfig",
      "HealthCheckCustomConfig",
      "Name",
      "NamespaceId",
      "Tags",
      "Type"
    ]
  },
  "AWS::Signer::ProfilePermission": {
    "full_properties": {
      "Action": {
        "description": "The AWS Signer action permitted as part of cross-account permissions.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProfileName": {
        "description": "The human-readable name of the signing profile.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProfileVersion": {
        "description": "The version of the signing profile.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StatementId": {
        "description": "A unique identifier for the cross-account permission statement.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-signer-profilepermission.html",
    "properties": [
      "Action",
      "Principal",
      "ProfileName",
      "ProfileVersion",
      "StatementId"
    ]
  },
  "AWS::Signer::SigningProfile": {
    "full_properties": {
      "PlatformId": {
        "description": "The ID of a platform that is available for use by a signing profile.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SignatureValidityPeriod": {
        "description": "The validity period override for any signature generated using this signing profile. If unspecified, the default is 135 months.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags associated with the signing profile.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-signer-signingprofile.html",
    "properties": [
      "PlatformId",
      "SignatureValidityPeriod",
      "Tags"
    ]
  },
  "AWS::StepFunctions::Activity": {
    "full_properties": {
      "Name": {
        "description": "The name of the activity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The list of tags to add to a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-stepfunctions-activity.html",
    "properties": [
      "Name",
      "Tags"
    ]
  },
  "AWS::StepFunctions::StateMachine": {
    "full_properties": {
      "Definition": {
        "description": "The Amazon States Language definition of the state machine. The state machine definition must be in JSON or YAML, and the format of the object must match the format of your AWS Step Functions template file. See Amazon States Language.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefinitionS3Location": {
        "description": "The name of the S3 bucket where the state machine definition is stored. The state machine definition must be a JSON or YAML file.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefinitionString": {
        "description": "The Amazon States Language definition of the state machine. The state machine definition must be in JSON. See Amazon States Language.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefinitionSubstitutions": {
        "description": "A map (string to string) that specifies the mappings for placeholder variables in the state machine definition. This enables the customer to inject values obtained at runtime, for example from intrinsic functions, in the state machine definition. Variables can be template parameter names, resource logical IDs, resource attributes, or a variable in a key-value map.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoggingConfiguration": {
        "description": "Defines what execution history events are logged and where they are logged.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role to use for this state machine.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StateMachineName": {
        "description": "The name of the state machine.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StateMachineType": {
        "description": "Determines whether a STANDARD or EXPRESS state machine is created. The default is STANDARD. You cannot update the type of a state machine once it has been created. For more information on STANDARD and EXPRESS workflows, see Standard Versus Express Workflows in the AWS Step Functions Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The list of tags to add to a resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TracingConfiguration": {
        "description": "Selects whether or not the state machine's AWS X-Ray tracing is enabled.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-stepfunctions-statemachine.html",
    "properties": [
      "Definition",
      "DefinitionS3Location",
      "DefinitionString",
      "DefinitionSubstitutions",
      "LoggingConfiguration",
      "RoleArn",
      "StateMachineName",
      "StateMachineType",
      "Tags",
      "TracingConfiguration"
    ]
  },
  "AWS::SupportApp::AccountAlias": {
    "full_properties": {
      "AccountAlias": {
        "description": "An alias or short name for an AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-supportapp-accountalias.html",
    "properties": [
      "AccountAlias"
    ]
  },
  "AWS::SupportApp::SlackChannelConfiguration": {
    "full_properties": {
      "ChannelId": {
        "description": "The channel ID in Slack. This ID identifies a channel within a Slack workspace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ChannelName": {
        "description": "The channel name in Slack. This is the channel where you invite the AWS Support App.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ChannelRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role for this Slack channel configuration. The AWS Support App uses this role to perform AWS Support and Service Quotas actions on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NotifyOnAddCorrespondenceToCase": {
        "description": "Whether to get notified when a correspondence is added to your support cases.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NotifyOnCaseSeverity": {
        "description": "The case severity for your support cases that you want to receive notifications. You can specify none, all, or high.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NotifyOnCreateOrReopenCase": {
        "description": "Whether to get notified when your support cases are created or reopened",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NotifyOnResolveCase": {
        "description": "Whether to get notified when your support cases are resolved.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "TeamId": {
        "description": "The team ID in Slack. This ID uniquely identifies a Slack workspace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-supportapp-slackchannelconfiguration.html",
    "properties": [
      "ChannelId",
      "ChannelName",
      "ChannelRoleArn",
      "NotifyOnAddCorrespondenceToCase",
      "NotifyOnCaseSeverity",
      "NotifyOnCreateOrReopenCase",
      "NotifyOnResolveCase",
      "TeamId"
    ]
  },
  "AWS::SupportApp::SlackWorkspaceConfiguration": {
    "full_properties": {
      "TeamId": {
        "description": "The team ID in Slack. This ID uniquely identifies a Slack workspace, such as T012ABCDEFG.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VersionId": {
        "description": "An identifier used to update an existing Slack workspace configuration in AWS CloudFormation, such as 100.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-supportapp-slackworkspaceconfiguration.html",
    "properties": [
      "TeamId",
      "VersionId"
    ]
  },
  "AWS::Synthetics::Canary": {
    "full_properties": {
      "ArtifactConfig": {
        "description": "A structure that contains the configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ArtifactS3Location": {
        "description": "The location in Amazon S3 where Synthetics stores artifacts from the runs of this canary. Artifacts include the log file, screenshots, and HAR files. Specify the full location path, including s3:// at the beginning of the path.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Code": {
        "description": "Use this structure to input your script code for the canary. This structure contains the Lambda handler with the location where the canary should start running the script. If the script is stored in an S3 bucket, the bucket name, key, and version are also included. If the script is passed into the canary directly, the script code is contained in the value of Script.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeleteLambdaResourcesOnCanaryDeletion": {
        "description": "Specifies whether AWS CloudFormation is to also delete the Lambda functions and layers used by this canary, when the canary is deleted. The default is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ExecutionRoleArn": {
        "description": "The ARN of the IAM role to be used to run the canary. This role must already exist, and must include lambda.amazonaws.com as a principal in the trust policy. The role must also have the following permissions:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "FailureRetentionPeriod": {
        "description": "The number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name for this canary. Be sure to give it a descriptive name that distinguishes it from other canaries in your account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RunConfig": {
        "description": "A structure that contains input information for a canary run. If you omit this structure, the frequency of the canary is used as canary's timeout value, up to a maximum of 900 seconds.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuntimeVersion": {
        "description": "Specifies the runtime version to use for the canary. For more information about runtime versions, see Canary Runtime Versions.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "A structure that contains information about how often the canary is to run, and when these runs are to stop.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StartCanaryAfterCreation": {
        "description": "Specify TRUE to have the canary start making runs immediately after it is created.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SuccessRetentionPeriod": {
        "description": "The number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The list of key-value pairs that are associated with the canary.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VPCConfig": {
        "description": "If this canary is to test an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see Running a Canary in a VPC.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VisualReference": {
        "description": "If this canary performs visual monitoring by comparing screenshots, this structure contains the ID of the canary run to use as the baseline for screenshots, and the coordinates of any parts of the screen to ignore during the visual monitoring comparison.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-synthetics-canary.html",
    "properties": [
      "ArtifactConfig",
      "ArtifactS3Location",
      "Code",
      "DeleteLambdaResourcesOnCanaryDeletion",
      "ExecutionRoleArn",
      "FailureRetentionPeriod",
      "Name",
      "RunConfig",
      "RuntimeVersion",
      "Schedule",
      "StartCanaryAfterCreation",
      "SuccessRetentionPeriod",
      "Tags",
      "VisualReference",
      "VPCConfig"
    ]
  },
  "AWS::Synthetics::Group": {
    "full_properties": {
      "Name": {
        "description": "A name for the group. It can include any Unicode characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceArns": {
        "description": "The ARNs of the canaries that you want to associate with this group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The list of key-value pairs that are associated with the group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-synthetics-group.html",
    "properties": [
      "Name",
      "ResourceArns",
      "Tags"
    ]
  },
  "AWS::Timestream::Database": {
    "full_properties": {
      "DatabaseName": {
        "description": "The name of the Timestream database.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The identifier of the AWS KMS key used to encrypt the data stored in the database.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags to add to the database.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-timestream-database.html",
    "properties": [
      "DatabaseName",
      "KmsKeyId",
      "Tags"
    ]
  },
  "AWS::Timestream::ScheduledQuery": {
    "full_properties": {
      "ClientToken": {
        "description": "Using a ClientToken makes the call to CreateScheduledQuery idempotent, in other words, making the same request repeatedly will produce the same result. Making multiple identical CreateScheduledQuery requests has the same effect as making a single request.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ErrorReportConfiguration": {
        "description": "Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The Amazon KMS key used to encrypt the scheduled query resource, at-rest. If the Amazon KMS key is not specified, the scheduled query resource will be encrypted with a Timestream owned Amazon KMS key. To specify a KMS key, use the key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix the name with alias/",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NotificationConfiguration": {
        "description": "Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "QueryString": {
        "description": "The query string to run. Parameter names can be specified in the query string @ character followed by an identifier. The named Parameter @scheduled_runtime is reserved and can be used in the query to get the time at which the query is scheduled to run.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScheduleConfiguration": {
        "description": "Schedule configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ScheduledQueryExecutionRoleArn": {
        "description": "The ARN for the IAM role that Timestream will assume when running the scheduled query.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScheduledQueryName": {
        "description": "A name for the query. Scheduled query names must be unique within each Region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of key-value pairs to label the scheduled query.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetConfiguration": {
        "description": "Scheduled query target store configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-timestream-scheduledquery.html",
    "properties": [
      "ClientToken",
      "ErrorReportConfiguration",
      "KmsKeyId",
      "NotificationConfiguration",
      "QueryString",
      "ScheduleConfiguration",
      "ScheduledQueryExecutionRoleArn",
      "ScheduledQueryName",
      "Tags",
      "TargetConfiguration"
    ]
  },
  "AWS::Timestream::Table": {
    "full_properties": {
      "DatabaseName": {
        "description": "The name of the Timestream database that contains this table.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MagneticStoreWriteProperties": {
        "description": "Contains properties to set on the table when enabling magnetic store writes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RetentionProperties": {
        "description": "The retention duration for the memory store and magnetic store. This object has the following attributes:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TableName": {
        "description": "The name of the Timestream table.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to add to the table",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-timestream-table.html",
    "properties": [
      "DatabaseName",
      "MagneticStoreWriteProperties",
      "RetentionProperties",
      "TableName",
      "Tags"
    ]
  },
  "AWS::Transfer::Agreement": {
    "full_properties": {
      "AccessRole": {
        "description": "With AS2, you can send files by calling StartFileTransfer and specifying the file paths in the request parameter, SendFilePaths. We use the file’s parent directory (for example, for --send-file-paths /bucket/dir/file.txt, parent directory is /bucket/dir/) to temporarily store a processed AS2 message file, store the MDN when we receive them from the partner, and write a final JSON file containing relevant metadata of the transmission. So, the AccessRole needs to provide read and write access to the parent directory of the file location used in the StartFileTransfer request. Additionally, you need to provide read and write access to the parent directory of the files that you intend to send with StartFileTransfer.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "BaseDirectory": {
        "description": "The landing directory (folder) for files that are transferred by using the AS2 protocol.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The name or short description that's used to identify the agreement.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LocalProfileId": {
        "description": "A unique identifier for the AS2 local profile.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "PartnerProfileId": {
        "description": "A unique identifier for the partner profile used in the agreement.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerId": {
        "description": "A system-assigned unique identifier for a server instance. This identifier indicates the specific server that the agreement uses.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "The current status of the agreement, either ACTIVE or INACTIVE.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Key-value pairs that can be used to group and search for agreements.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-transfer-agreement.html",
    "properties": [
      "AccessRole",
      "BaseDirectory",
      "Description",
      "LocalProfileId",
      "PartnerProfileId",
      "ServerId",
      "Status",
      "Tags"
    ]
  },
  "AWS::Transfer::Certificate": {
    "full_properties": {
      "ActiveDate": {
        "description": "An optional date that specifies when the certificate becomes active.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Certificate": {
        "description": "The file name for the certificate.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateChain": {
        "description": "The list of certificates that make up the chain for the certificate.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The name or description that's used to identity the certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InactiveDate": {
        "description": "An optional date that specifies when the certificate becomes inactive.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PrivateKey": {
        "description": "The file that contains the private key for the certificate that's being imported.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key-value pairs that can be used to group and search for certificates.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Usage": {
        "description": "Specifies whether this certificate is used for signing or encryption.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-transfer-certificate.html",
    "properties": [
      "ActiveDate",
      "Certificate",
      "CertificateChain",
      "Description",
      "InactiveDate",
      "PrivateKey",
      "Tags",
      "Usage"
    ]
  },
  "AWS::Transfer::Connector": {
    "full_properties": {
      "AccessRole": {
        "description": "With AS2, you can send files by calling StartFileTransfer and specifying the file paths in the request parameter, SendFilePaths. We use the file’s parent directory (for example, for --send-file-paths /bucket/dir/file.txt, parent directory is /bucket/dir/) to temporarily store a processed AS2 message file, store the MDN when we receive them from the partner, and write a final JSON file containing relevant metadata of the transmission. So, the AccessRole needs to provide read and write access to the parent directory of the file location used in the StartFileTransfer request. Additionally, you need to provide read and write access to the parent directory of the files that you intend to send with StartFileTransfer.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "As2Config": {
        "description": "A structure that contains the parameters for a connector object.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoggingRole": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows a connector to turn on CloudWatch logging for Amazon S3 events. When set, you can view connector activity in your CloudWatch logs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Key-value pairs that can be used to group and search for connectors.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Url": {
        "description": "The URL of the partner's AS2 endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-transfer-connector.html",
    "properties": [
      "AccessRole",
      "As2Config",
      "LoggingRole",
      "Tags",
      "Url"
    ]
  },
  "AWS::Transfer::Profile": {
    "full_properties": {
      "As2Id": {
        "description": "The As2Id is the AS2-name, as defined in the RFC 4130. For inbound transfers, this is the AS2-From header for the AS2 messages sent from the partner. For outbound connectors, this is the AS2-To header for the AS2 messages sent to the partner using the StartFileTransfer API operation. This ID cannot include spaces.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "CertificateIds": {
        "description": "An array of identifiers for the imported certificates. You use this identifier for working with profiles and partner profiles.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ProfileType": {
        "description": "Indicates whether to list only LOCAL type profiles or only PARTNER type profiles. If not supplied in the request, the command lists all types of profiles.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key-value pairs that can be used to group and search for profiles.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-transfer-profile.html",
    "properties": [
      "As2Id",
      "CertificateIds",
      "ProfileType",
      "Tags"
    ]
  },
  "AWS::Transfer::Server": {
    "full_properties": {
      "Certificate": {
        "description": "The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. Required when Protocols is set to FTPS.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Domain": {
        "description": "Specifies the domain of the storage system that is used for file transfers.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EndpointDetails": {
        "description": "The virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make your endpoint accessible only to resources within your VPC, or you can attach Elastic IP addresses and make your endpoint accessible to clients over the internet. Your VPC's default security groups are automatically assigned to your endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EndpointType": {
        "description": "The type of endpoint that you want your server to use. You can choose to make your server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an endpoint that is hosted in a VPC, you can restrict access to your server and resources only within your VPC or choose to make it internet facing by attaching Elastic IP addresses directly to it.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IdentityProviderDetails": {
        "description": "Required when IdentityProviderType is set to AWS_DIRECTORY_SERVICE or API_GATEWAY. Accepts an array containing all of the information required to use a directory in AWS_DIRECTORY_SERVICE or invoke a customer-supplied authentication API, including the API Gateway URL. Not required when IdentityProviderType is set to SERVICE_MANAGED.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IdentityProviderType": {
        "description": "The mode of authentication for a server. The default value is SERVICE_MANAGED, which allows you to store and access user credentials within the AWS Transfer Family service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggingRole": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents. When set, you can view user activity in your CloudWatch logs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PostAuthenticationLoginBanner": {
        "description": "Specifies a string to display when users connect to a server. This string is displayed after the user authenticates.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreAuthenticationLoginBanner": {
        "description": "Specifies a string to display when users connect to a server. This string is displayed before the user authenticates. For example, the following banner displays details about using the system:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProtocolDetails": {
        "description": "The protocol settings that are configured for your server.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Protocols": {
        "description": "Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. The available protocols are:",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SecurityPolicyName": {
        "description": "Specifies the name of the security policy that is attached to the server.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Key-value pairs that can be used to group and search for servers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "WorkflowDetails": {
        "description": "Specifies the workflow ID for the workflow to assign and the execution role that's used for executing the workflow.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-transfer-server.html",
    "properties": [
      "Certificate",
      "Domain",
      "EndpointDetails",
      "EndpointType",
      "IdentityProviderDetails",
      "IdentityProviderType",
      "LoggingRole",
      "PostAuthenticationLoginBanner",
      "PreAuthenticationLoginBanner",
      "ProtocolDetails",
      "Protocols",
      "SecurityPolicyName",
      "Tags",
      "WorkflowDetails"
    ]
  },
  "AWS::Transfer::User": {
    "full_properties": {
      "HomeDirectory": {
        "description": "The landing directory (folder) for a user when they log in to the server using the client.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HomeDirectoryMappings": {
        "description": "Logical directory mappings that specify what Amazon S3 paths and keys should be visible to your user and how you want to make them visible. You will need to specify the \"Entry\" and \"Target\" pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 path. If you only specify a target, it will be displayed as is. You will need to also make sure that your IAM role provides access to paths in Target. The following is an example.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "HomeDirectoryType": {
        "description": "The type of landing directory (folder) that you want your users' home directory to be when they log in to the server. If you set it to PATH, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL, you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or Amazon EFS paths visible to your users.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policy": {
        "description": "A session policy for your user so you can use the same IAM role across multiple users. This policy restricts user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName}, ${Transfer:HomeDirectory}, and ${Transfer:HomeBucket}.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PosixProfile": {
        "description": "Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users' access to your Amazon Elastic File System (Amazon EFS) file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Role": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or Amazon EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerId": {
        "description": "A system-assigned unique identifier for a server instance. This is the specific server that you added your user to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SshPublicKeys": {
        "description": "Specifies the public key portion of the Secure Shell (SSH) keys stored for the described user.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserName": {
        "description": "A unique string that identifies a user and is associated with a ServerId. This user name must be a minimum of 3 and a maximum of 100 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user name can't start with a hyphen, period, or at sign.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-transfer-user.html",
    "properties": [
      "HomeDirectory",
      "HomeDirectoryMappings",
      "HomeDirectoryType",
      "Policy",
      "PosixProfile",
      "Role",
      "ServerId",
      "SshPublicKeys",
      "Tags",
      "UserName"
    ]
  },
  "AWS::Transfer::Workflow": {
    "full_properties": {
      "Description": {
        "description": "Specifies the text description for the workflow.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OnExceptionSteps": {
        "description": "Specifies the steps (actions) to take if errors are encountered during execution of the workflow.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Steps": {
        "description": "Specifies the details for the steps that are in the specified workflow.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key-value pairs that can be used to group and search for workflows. Tags are metadata attached to workflows for any purpose.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-transfer-workflow.html",
    "properties": [
      "Description",
      "OnExceptionSteps",
      "Steps",
      "Tags"
    ]
  },
  "AWS::VoiceID::Domain": {
    "full_properties": {
      "Description": {
        "description": "The client-provided description of the domain.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The client-provided name for the domain.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerSideEncryptionConfiguration": {
        "description": "The server-side encryption configuration containing the KMS key identifier you want Voice ID to use to encrypt your data.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-voiceid-domain.html",
    "properties": [
      "Description",
      "Name",
      "ServerSideEncryptionConfiguration",
      "Tags"
    ]
  },
  "AWS::WAF::ByteMatchSet": {
    "full_properties": {
      "ByteMatchTuples": {
        "description": "Specifies the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the ByteMatchSet. You can't change Name after you create a ByteMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-waf-bytematchset.html",
    "properties": [
      "ByteMatchTuples",
      "Name"
    ]
  },
  "AWS::WAF::IPSet": {
    "full_properties": {
      "IPSetDescriptors": {
        "description": "The IP address type (IPV4 or IPV6) and the IP address range (in CIDR notation) that web requests originate from. If the WebACL is associated with an Amazon CloudFront distribution and the viewer did not use an HTTP proxy or a load balancer to send the request, this is the value of the c-ip field in the CloudFront access logs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the IPSet. You can't change the name of an IPSet after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-waf-ipset.html",
    "properties": [
      "IPSetDescriptors",
      "Name"
    ]
  },
  "AWS::WAF::Rule": {
    "full_properties": {
      "MetricName": {
        "description": "The name of the metrics for this Rule. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including \"All\" and \"Default_Action.\" You can't change MetricName after you create the Rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The friendly name or description for the Rule. You can't change the name of a Rule after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Predicates": {
        "description": "The Predicates object contains one Predicate element for each ByteMatchSet, IPSet, or SqlInjectionMatchSet object that you want to include in a Rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-rule.html",
    "properties": [
      "MetricName",
      "Name",
      "Predicates"
    ]
  },
  "AWS::WAF::SizeConstraintSet": {
    "full_properties": {
      "Name": {
        "description": "The name, if any, of the SizeConstraintSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SizeConstraints": {
        "description": "The size constraint and the part of the web request to check.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-sizeconstraintset.html",
    "properties": [
      "Name",
      "SizeConstraints"
    ]
  },
  "AWS::WAF::SqlInjectionMatchSet": {
    "full_properties": {
      "Name": {
        "description": "The name, if any, of the SqlInjectionMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SqlInjectionMatchTuples": {
        "description": "Specifies the parts of web requests that you want to inspect for snippets of malicious SQL code.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-sqlinjectionmatchset.html",
    "properties": [
      "Name",
      "SqlInjectionMatchTuples"
    ]
  },
  "AWS::WAF::WebACL": {
    "full_properties": {
      "DefaultAction": {
        "description": "The action to perform if none of the Rules contained in the WebACL match. The action is specified by the WafAction object.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "The name of the metrics for this WebACL. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including \"All\" and \"Default_Action.\" You can't change MetricName after you create the WebACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name or description of the WebACL. You can't change the name of a WebACL after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "An array that contains the action for each Rule in a WebACL, the priority of the Rule, and the ID of the Rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-webacl.html",
    "properties": [
      "DefaultAction",
      "MetricName",
      "Name",
      "Rules"
    ]
  },
  "AWS::WAF::XssMatchSet": {
    "full_properties": {
      "Name": {
        "description": "The name, if any, of the XssMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "XssMatchTuples": {
        "description": "Specifies the parts of web requests that you want to inspect for cross-site scripting attacks.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-xssmatchset.html",
    "properties": [
      "Name",
      "XssMatchTuples"
    ]
  },
  "AWS::WAFRegional::ByteMatchSet": {
    "full_properties": {
      "ByteMatchTuples": {
        "description": "Specifies the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name or description of the ByteMatchSet. You can't change Name after you create a ByteMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafregional-bytematchset.html",
    "properties": [
      "ByteMatchTuples",
      "Name"
    ]
  },
  "AWS::WAFRegional::GeoMatchSet": {
    "full_properties": {
      "GeoMatchConstraints": {
        "description": "An array of GeoMatchConstraint objects, which contain the country that you want AWS WAF to search for.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name or description of the AWS::WAFRegional::GeoMatchSet. You can't change the name of an GeoMatchSet after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafregional-geomatchset.html",
    "properties": [
      "GeoMatchConstraints",
      "Name"
    ]
  },
  "AWS::WAFRegional::IPSet": {
    "full_properties": {
      "IPSetDescriptors": {
        "description": "The IP address type (IPV4 or IPV6) and the IP address range (in CIDR notation) that web requests originate from.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name or description of the IPSet. You can't change the name of an IPSet after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafregional-ipset.html",
    "properties": [
      "IPSetDescriptors",
      "Name"
    ]
  },
  "AWS::WAFRegional::RateBasedRule": {
    "full_properties": {
      "MatchPredicates": {
        "description": "The Predicates object contains one Predicate element for each ByteMatchSet, IPSet, or SqlInjectionMatchSet> object that you want to include in a RateBasedRule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "A name for the metrics for a RateBasedRule. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including \"All\" and \"Default_Action.\" You can't change the name of the metric after you create the RateBasedRule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name or description for a RateBasedRule. You can't change the name of a RateBasedRule after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RateKey": {
        "description": "The field that AWS WAF uses to determine if requests are likely arriving from single source and thus subject to rate monitoring. The only valid value for RateKey is IP. IP indicates that requests arriving from the same IP address are subject to the RateLimit that is specified in the RateBasedRule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RateLimit": {
        "description": "The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. If the number of requests exceeds the RateLimit and the other predicates specified in the rule are also met, AWS WAF triggers the action that is specified for this rule.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-ratebasedrule.html",
    "properties": [
      "MatchPredicates",
      "MetricName",
      "Name",
      "RateKey",
      "RateLimit"
    ]
  },
  "AWS::WAFRegional::RegexPatternSet": {
    "full_properties": {
      "Name": {
        "description": "A friendly name or description of the AWS::WAFRegional::RegexPatternSet. You can't change Name after you create a RegexPatternSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RegexPatternStrings": {
        "description": "Specifies the regular expression (regex) patterns that you want AWS WAF to search for, such as B[a@]dB[o0]t.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-regexpatternset.html",
    "properties": [
      "Name",
      "RegexPatternStrings"
    ]
  },
  "AWS::WAFRegional::Rule": {
    "full_properties": {
      "MetricName": {
        "description": "A name for the metrics for this Rule. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including \"All\" and \"Default_Action.\" You can't change MetricName after you create the Rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The friendly name or description for the Rule. You can't change the name of a Rule after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Predicates": {
        "description": "The Predicates object contains one Predicate element for each ByteMatchSet, IPSet, or SqlInjectionMatchSet object that you want to include in a Rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-rule.html",
    "properties": [
      "MetricName",
      "Name",
      "Predicates"
    ]
  },
  "AWS::WAFRegional::SizeConstraintSet": {
    "full_properties": {
      "Name": {
        "description": "The name, if any, of the SizeConstraintSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SizeConstraints": {
        "description": "The size constraint and the part of the web request to check.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-sizeconstraintset.html",
    "properties": [
      "Name",
      "SizeConstraints"
    ]
  },
  "AWS::WAFRegional::SqlInjectionMatchSet": {
    "full_properties": {
      "Name": {
        "description": "The name, if any, of the SqlInjectionMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SqlInjectionMatchTuples": {
        "description": "Specifies the parts of web requests that you want to inspect for snippets of malicious SQL code.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-sqlinjectionmatchset.html",
    "properties": [
      "Name",
      "SqlInjectionMatchTuples"
    ]
  },
  "AWS::WAFRegional::WebACL": {
    "full_properties": {
      "DefaultAction": {
        "description": "The action to perform if none of the Rules contained in the WebACL match. The action is specified by the WafAction object.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "A name for the metrics for this WebACL. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including \"All\" and \"Default_Action.\" You can't change MetricName after you create the WebACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name or description of the WebACL. You can't change the name of a WebACL after you create it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "An array that contains the action for each Rule in a WebACL, the priority of the Rule, and the ID of the Rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-webacl.html",
    "properties": [
      "DefaultAction",
      "MetricName",
      "Name",
      "Rules"
    ]
  },
  "AWS::WAFRegional::WebACLAssociation": {
    "full_properties": {
      "ResourceArn": {
        "description": "The Amazon Resource Name (ARN) of the resource to protect with the web ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WebACLId": {
        "description": "A unique identifier (ID) for the web ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafregional-webaclassociation.html",
    "properties": [
      "ResourceArn",
      "WebACLId"
    ]
  },
  "AWS::WAFRegional::XssMatchSet": {
    "full_properties": {
      "Name": {
        "description": "The name, if any, of the XssMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "XssMatchTuples": {
        "description": "Specifies the parts of web requests that you want to inspect for cross-site scripting attacks.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-xssmatchset.html",
    "properties": [
      "Name",
      "XssMatchTuples"
    ]
  },
  "AWS::WAFv2::IPSet": {
    "full_properties": {
      "Addresses": {
        "description": "Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. AWS WAF supports all IPv4 and IPv6 CIDR ranges except for /0.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the IP set that helps with identification.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IPAddressVersion": {
        "description": "The version of the IP addresses, either IPV4 or IPV6.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the IP set. You cannot change the name of an IPSet after you create it.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Scope": {
        "description": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, or an Amazon Cognito user pool. Valid Values are CLOUDFRONT and REGIONAL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key:value pairs associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafv2-ipset.html",
    "properties": [
      "Addresses",
      "Description",
      "IPAddressVersion",
      "Name",
      "Scope",
      "Tags"
    ]
  },
  "AWS::WAFv2::LoggingConfiguration": {
    "full_properties": {
      "LogDestinationConfigs": {
        "description": "The logging destination configuration that you want to associate with the web ACL.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "LoggingFilter": {
        "description": "Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RedactedFields": {
        "description": "The parts of the request that you want to keep out of the logs. For example, if you redact the SingleHeader field, the HEADER field in the logs will be xxx.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ResourceArn": {
        "description": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafv2-loggingconfiguration.html",
    "properties": [
      "LogDestinationConfigs",
      "LoggingFilter",
      "RedactedFields",
      "ResourceArn"
    ]
  },
  "AWS::WAFv2::RegexPatternSet": {
    "full_properties": {
      "Description": {
        "description": "A description of the set that helps with identification.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the set. You cannot change the name after you create the set.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RegularExpressionList": {
        "description": "The regular expression patterns in the set.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Scope": {
        "description": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, or an Amazon Cognito user pool. Valid Values are CLOUDFRONT and REGIONAL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key:value pairs associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafv2-regexpatternset.html",
    "properties": [
      "Description",
      "Name",
      "RegularExpressionList",
      "Scope",
      "Tags"
    ]
  },
  "AWS::WAFv2::RuleGroup": {
    "full_properties": {
      "Capacity": {
        "description": "The web ACL capacity units (WCUs) required for this rule group.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "CustomResponseBodies": {
        "description": "A map of custom response keys and content bodies. When you create a rule with a block action, you can send a custom response to the web request. You define these for the rule group, and then use them in the rules that you define in the rule group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the rule group that helps with identification.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the rule group. You cannot change the name of a rule group after you create it.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "The rule statements used to identify the web requests that you want to allow, block, or count. Each rule includes one top-level statement that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Scope": {
        "description": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, or an Amazon Cognito user pool. Valid Values are CLOUDFRONT and REGIONAL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key:value pairs associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VisibilityConfig": {
        "description": "Defines and enables Amazon CloudWatch metrics and web request sample collection.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafv2-rulegroup.html",
    "properties": [
      "Capacity",
      "CustomResponseBodies",
      "Description",
      "Name",
      "Rules",
      "Scope",
      "Tags",
      "VisibilityConfig"
    ]
  },
  "AWS::WAFv2::WebACL": {
    "full_properties": {
      "CaptchaConfig": {
        "description": "Specifies how AWS WAF should handle CAPTCHA evaluations for rules that don't have their own CaptchaConfig settings. If you don't specify this, AWS WAF uses its default settings for CaptchaConfig.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomResponseBodies": {
        "description": "A map of custom response keys and content bodies. When you create a rule with a block action, you can send a custom response to the web request. You define these for the web ACL, and then use them in the rules and default actions that you define in the web ACL.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefaultAction": {
        "description": "The action to perform if none of the Rules contained in the WebACL match.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the web ACL that helps with identification.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the web ACL. You cannot change the name of a web ACL after you create it.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "The rule statements used to identify the web requests that you want to allow, block, or count. Each rule includes one top-level statement that AWS WAF uses to identify matching web requests, and parameters that govern how AWS WAF handles them.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Scope": {
        "description": "Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, or an Amazon Cognito user pool. Valid Values are CLOUDFRONT and REGIONAL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Key:value pairs associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each AWS resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VisibilityConfig": {
        "description": "Defines and enables Amazon CloudWatch metrics and web request sample collection.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafv2-webacl.html",
    "properties": [
      "CaptchaConfig",
      "CustomResponseBodies",
      "DefaultAction",
      "Description",
      "Name",
      "Rules",
      "Scope",
      "Tags",
      "VisibilityConfig"
    ]
  },
  "AWS::WAFv2::WebACLAssociation": {
    "full_properties": {
      "ResourceArn": {
        "description": "The Amazon Resource Name (ARN) of the resource to associate with the web ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WebACLArn": {
        "description": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with the resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafv2-webaclassociation.html",
    "properties": [
      "ResourceArn",
      "WebACLArn"
    ]
  },
  "AWS::Wisdom::Assistant": {
    "full_properties": {
      "Description": {
        "description": "The description of the assistant.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the assistant.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServerSideEncryptionConfiguration": {
        "description": "The KMS key used for encryption.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of assistant.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wisdom-assistant.html",
    "properties": [
      "Description",
      "Name",
      "ServerSideEncryptionConfiguration",
      "Tags",
      "Type"
    ]
  },
  "AWS::Wisdom::AssistantAssociation": {
    "full_properties": {
      "AssistantId": {
        "description": "The identifier of the Wisdom assistant.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Association": {
        "description": "The identifier of the associated resource.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "AssociationType": {
        "description": "The type of association.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wisdom-assistantassociation.html",
    "properties": [
      "AssistantId",
      "Association",
      "AssociationType",
      "Tags"
    ]
  },
  "AWS::Wisdom::KnowledgeBase": {
    "full_properties": {
      "Description": {
        "description": "The description.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KnowledgeBaseType": {
        "description": "The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the knowledge base.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RenderingConfiguration": {
        "description": "Information about how to render the content.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServerSideEncryptionConfiguration": {
        "description": "The KMS key used for encryption.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SourceConfiguration": {
        "description": "The source of the knowledge base content. Only set this argument for EXTERNAL knowledge bases.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags used to organize, track, or control access for this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wisdom-knowledgebase.html",
    "properties": [
      "Description",
      "KnowledgeBaseType",
      "Name",
      "RenderingConfiguration",
      "ServerSideEncryptionConfiguration",
      "SourceConfiguration",
      "Tags"
    ]
  },
  "AWS::WorkSpaces::ConnectionAlias": {
    "full_properties": {
      "ConnectionString": {
        "description": "The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags to associate with the connection alias.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-workspaces-connectionalias.html",
    "properties": [
      "ConnectionString",
      "Tags"
    ]
  },
  "AWS::WorkSpaces::Workspace": {
    "full_properties": {
      "BundleId": {
        "description": "The identifier of the bundle for the WorkSpace.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "DirectoryId": {
        "description": "The identifier of the AWS Directory Service directory for the WorkSpace.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "RootVolumeEncryptionEnabled": {
        "description": "Indicates whether the data stored on the root volume is encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "Tags": {
        "description": "The tags for the WorkSpace.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserName": {
        "description": "The user name of the user for the WorkSpace. This user name must exist in the AWS Directory Service directory for the WorkSpace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserVolumeEncryptionEnabled": {
        "description": "Indicates whether the data stored on the user volume is encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "VolumeEncryptionKey": {
        "description": "The symmetric AWS KMS key used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric KMS keys.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "WorkspaceProperties": {
        "description": "The WorkSpace properties.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-workspaces-workspace.html",
    "properties": [
      "BundleId",
      "DirectoryId",
      "RootVolumeEncryptionEnabled",
      "Tags",
      "UserName",
      "UserVolumeEncryptionEnabled",
      "VolumeEncryptionKey",
      "WorkspaceProperties"
    ]
  },
  "AWS::XRay::Group": {
    "full_properties": {
      "FilterExpression": {
        "description": "The filter expression defining the parameters to include traces.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GroupName": {
        "description": "The unique case-sensitive name of the group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InsightsConfiguration": {
        "description": "The structure containing configurations related to insights.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-xray-group.html",
    "properties": [
      "FilterExpression",
      "GroupName",
      "InsightsConfiguration",
      "Tags"
    ]
  },
  "AWS::XRay::SamplingRule": {
    "full_properties": {
      "RuleName": {
        "description": "The name of the sampling rule. Specify a rule by either name or ARN, but not both. Used only when deleting a sampling rule. When creating or updating a sampling rule, use the RuleName or RuleARN properties within SamplingRule or SamplingRuleUpdate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SamplingRule": {
        "description": "The sampling rule to be created.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SamplingRuleRecord": {
        "description": "Not currently supported by AWS CloudFormation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SamplingRuleUpdate": {
        "description": "A document specifying changes to a sampling rule's configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An array of key-value pairs to apply to this resource.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-xray-samplingrule.html",
    "properties": [
      "RuleName",
      "SamplingRule",
      "SamplingRuleRecord",
      "SamplingRuleUpdate",
      "Tags"
    ]
  },
  "Alexa::ASK::Skill": {
    "full_properties": {
      "AuthenticationConfiguration": {
        "description": "Login with Amazon (LWA) configuration used to authenticate with the Alexa service. Only Login with Amazon clients created through the Amazon Developer Console are supported. The client ID, client secret, and refresh token are required.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SkillPackage": {
        "description": "Configuration for the skill package that contains the components of the Alexa skill. Skill packages are retrieved from an Amazon S3 bucket and key and used to create and update the skill. For more information about the skill package format, see the Skill Package API Reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VendorId": {
        "description": "The vendor ID associated with the Amazon developer account that will host the skill. Details for retrieving the vendor ID are in How to get your vendor ID. The provided LWA credentials must be linked to the developer account associated with this vendor ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ask-skill.html",
    "properties": [
      "AuthenticationConfiguration",
      "SkillPackage",
      "VendorId"
    ]
  }
}
