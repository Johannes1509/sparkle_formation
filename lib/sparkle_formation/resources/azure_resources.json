{
  "Dynatrace.Observability/monitors": {
    "api_version": "2021-09-01",
    "full_properties": {
      "appLocation": {
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datadogOrganizationProperties": {
        "description": "Datadog organization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynatraceEnvironmentProperties": {
        "description": "Properties of the Dynatrace environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticProperties": {
        "description": "Elastic Resource Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liftrResourceCategory": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logzOrganizationProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplaceSubscriptionStatus": {
        "description": "Marketplace subscription status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Flag specifying if the resource monitoring is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planData": {
        "description": "Billing plan information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingPreference": {
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userInfo": {
        "description": "User Information to be passed to partners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of elastic of the monitor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundancyPreference": {
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datadogOrganizationProperties",
      "liftrResourceCategory",
      "marketplaceSubscriptionStatus",
      "monitoringStatus",
      "provisioningState",
      "userInfo",
      "elasticProperties",
      "logzOrganizationProperties",
      "planData",
      "dynatraceEnvironmentProperties",
      "version",
      "appLocation",
      "logAnalyticsWorkspaceArmId",
      "managedResourceGroupConfiguration",
      "monitorSubnet",
      "routingPreference",
      "zoneRedundancyPreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Dynatrace.Observability/monitors/singleSignOnConfigurations": {
    "api_version": "2021-09-01",
    "full_properties": {
      "aadDomains": {
        "description": "array of Aad(azure active directory) domains",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enterpriseAppId": {
        "description": "Version of the Dynatrace agent installed on the VM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "singleSignOnState": {
        "description": "State of Single Sign On.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "singleSignOnUrl": {
        "description": "The login URL specific to this Dynatrace Environment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aadDomains",
      "enterpriseAppId",
      "singleSignOnState",
      "singleSignOnUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Dynatrace.Observability/monitors/tagRules": {
    "api_version": "2021-09-01",
    "full_properties": {
      "logRules": {
        "description": "Set of rules for sending logs for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metricRules": {
        "description": "Set of rules for sending metrics for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitoring tag rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "logRules",
      "metricRules",
      "provisioningState",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AAD/domainServices": {
    "api_version": "2021-03-01",
    "full_properties": {
      "domainConfigurationType": {
        "description": "Domain Configuration Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainName": {
        "description": "The name of the Azure domain that the user would like to deploy Domain Services to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainSecuritySettings": {
        "description": "Domain Security Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filteredSync": {
        "description": "Enabled or Disabled flag to turn on Group-based filtered sync.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ldapsSettings": {
        "description": "Secure LDAP Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Settings for notification",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicaSets": {
        "description": "List of ReplicaSets",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceForestSettings": {
        "description": "Settings for Resource Forest",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Sku Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "domainName",
      "domainSecuritySettings",
      "filteredSync",
      "ldapsSettings",
      "notificationSettings",
      "subnetId",
      "domainConfigurationType",
      "resourceForestSettings",
      "sku",
      "replicaSets"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds": {
    "api_version": "2022-05-01",
    "full_properties": {
      "availability": {
        "description": "The properties describing private cloud availability zone distribution",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "circuit": {
        "description": "An ExpressRoute Circuit",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cluster": {
        "description": "The properties of a default cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "The properties of customer managed encryption key",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identitySources": {
        "description": "vCenter Single Sign On Identity Sources",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internet": {
        "description": "Connectivity to internet is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementCluster": {
        "description": "The properties of a management cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkBlock": {
        "description": "The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nsxtPassword": {
        "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryCircuit": {
        "description": "An ExpressRoute Circuit",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vcenterPassword": {
        "description": "Optionally, set the vCenter admin password when the private cloud is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "circuit",
      "cluster",
      "identitySources",
      "internet",
      "networkBlock",
      "nsxtPassword",
      "vcenterPassword",
      "managementCluster",
      "availability",
      "encryption",
      "secondaryCircuit"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/addons": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addonType": {
        "description": "The type of private cloud addon.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseKey": {
        "description": "The SRM license",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addonType",
      "licenseKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/authorizations": {
    "api_version": "2022-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/cloudLinks": {
    "api_version": "2022-05-01",
    "full_properties": {
      "linkedCloud": {
        "description": "Identifier of the other private cloud participating in the link.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedCloud"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/clusters": {
    "api_version": "2022-05-01",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/clusters/datastores": {
    "api_version": "2022-05-01",
    "full_properties": {
      "contents": {
        "description": "Base definition for datastore contents configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskPoolVolume": {
        "description": "An iSCSI volume from Microsoft.StoragePool provider",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the datastore.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isDefault": {
        "description": "Whether this datastore is the default for the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkedInfo": {
        "description": "Information about a datastore origin, if linked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "netAppVolume": {
        "description": "An Azure NetApp Files volume from Microsoft.NetApp provider",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "diskPoolVolume",
      "netAppVolume",
      "contents",
      "description",
      "isDefault",
      "linkedInfo",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/clusters/placementPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "displayName": {
        "description": "Display name of the placement policy",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Whether the placement policy is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/globalReachConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "authorizationKey": {
        "description": "Authorization key from the peer express route used for the global reach connection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressRouteId": {
        "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the global reach connection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "peerExpressRouteCircuit": {
        "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach connection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationKey",
      "peerExpressRouteCircuit",
      "expressRouteId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/hcxEnterpriseSites": {
    "api_version": "2022-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/scriptExecutions": {
    "api_version": "2022-05-01",
    "full_properties": {
      "failureReason": {
        "description": "Error message if the script was able to run, but if the script itself had errors or powershell threw an exception",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hiddenParameters": {
        "description": "Parameters that will be hidden/not visible to ARM, such as passwords and credentials",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "namedOutputs": {
        "description": "User-defined dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "output": {
        "description": "Standard output stream from the powershell execution",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Parameters the script will accept",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retention": {
        "description": "Time to live for the resource. If not provided, will be available for 60 days",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptCmdletId": {
        "description": "A reference to the script cmdlet resource if user is running a AVS script",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeout": {
        "description": "Time limit for execution",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "failureReason",
      "hiddenParameters",
      "namedOutputs",
      "output",
      "parameters",
      "retention",
      "scriptCmdletId",
      "timeout"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/workloadNetworks/dhcpConfigurations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "displayName": {
        "description": "Display name of the DHCP entity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "NSX revision number.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "revision"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/workloadNetworks/dnsServices": {
    "api_version": "2022-05-01",
    "full_properties": {
      "defaultDnsZone": {
        "description": "Default DNS zone of the DNS Service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of the DNS Service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsServiceIp": {
        "description": "DNS service IP of the DNS Service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fqdnZones": {
        "description": "FQDN zones of the DNS Service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logLevel": {
        "description": "DNS Service log level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "revision": {
        "description": "NSX revision number.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultDnsZone",
      "displayName",
      "dnsServiceIp",
      "fqdnZones",
      "logLevel",
      "revision"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/workloadNetworks/dnsZones": {
    "api_version": "2022-05-01",
    "full_properties": {
      "displayName": {
        "description": "Display name of the DNS Zone.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsServerIps": {
        "description": "DNS Server IP array of the DNS Zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsServices": {
        "description": "Number of DNS Services using the DNS zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domain": {
        "description": "Domain names of the DNS Zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "revision": {
        "description": "NSX revision number.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceIp": {
        "description": "Source IP of the DNS Zone.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "dnsServerIps",
      "dnsServices",
      "domain",
      "revision",
      "sourceIp"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/workloadNetworks/portMirroringProfiles": {
    "api_version": "2022-05-01",
    "full_properties": {
      "destination": {
        "description": "Destination VM Group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "direction": {
        "description": "Direction of port mirroring profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of the port mirroring profile.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "NSX revision number.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source VM Group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "direction",
      "displayName",
      "revision",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/workloadNetworks/publicIPs": {
    "api_version": "2022-05-01",
    "full_properties": {
      "displayName": {
        "description": "Display name of the Public IP Block.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "numberOfPublicIPs": {
        "description": "Number of Public IPs requested.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "numberOfPublicIPs"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/workloadNetworks/segments": {
    "api_version": "2022-05-01",
    "full_properties": {
      "connectedGateway": {
        "description": "Gateway which to connect segment to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of the segment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "NSX revision number.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Subnet configuration for segment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectedGateway",
      "displayName",
      "revision",
      "subnet"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AVS/privateClouds/workloadNetworks/vmGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "displayName": {
        "description": "Display name of the VM group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "members": {
        "description": "Virtual machine members of this group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "revision": {
        "description": "NSX revision number.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "members",
      "revision"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Aad/domainServices/ouContainer": {
    "api_version": "2021-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Advisor/configurations": {
    "api_version": "2020-01-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "digests": {
        "description": "Advisor digest configuration. Valid only for subscriptions",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exclude": {
        "description": "Exclude the resource from Advisor evaluations. Valid values: False (default) or True.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lowCpuThreshold": {
        "description": "Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "low_cpu_threshold": {
        "description": "Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "exclude",
      "low_cpu_threshold",
      "digests",
      "lowCpuThreshold"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Advisor/suppressions": {
    "api_version": "2020-01-01",
    "full_properties": {
      "suppressionId": {
        "description": "The GUID of the suppression.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The duration for which the suppression is valid.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "suppressionId",
      "ttl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AgFoodPlatform/farmBeats": {
    "api_version": "2021-09-01-preview",
    "full_properties": {
      "publicNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sensorIntegration": {
        "description": "Sensor integration request model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicNetworkAccess",
      "sensorIntegration"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AgFoodPlatform/farmBeats/extensions": {
    "api_version": "2021-09-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.AgFoodPlatform/farmBeats/privateEndpointConnections": {
    "api_version": "2021-09-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AlertsManagement/actionRules": {
    "api_version": "2021-08-08",
    "full_properties": {
      "actions": {
        "description": "Actions to be applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "conditions": {
        "description": "Conditions in alert instance to be matched for a given alert processing rule. Default value is all. Multiple values could be provided with comma separation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of alert processing rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates if the given alert processing rule is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling configuration for a given alert processing rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "List of ARM IDs which will be the target of the given alert processing rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "conditions",
      "description",
      "enabled",
      "schedule",
      "scopes"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AnalysisServices/servers": {
    "api_version": "2017-08-01",
    "full_properties": {
      "asAdministrators": {
        "description": "An array of administrator user identities.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupBlobContainerUri": {
        "description": "The SAS container URI to the backup container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gatewayDetails": {
        "description": "The gateway details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipV4FirewallSettings": {
        "description": "An array of firewall rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedMode": {
        "description": "The managed mode of the server (0 = not managed, 1 = managed).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "querypoolConnectionMode": {
        "description": "How the read-write server's participation in the query pool is controlled.<br/>It can have the following values: <ul><li>readOnly - indicates that the read-write server is intended not to participate in query operations</li><li>all - indicates that the read-write server can participate in query operations</li></ul>Specifying readOnly when capacity is 1 results in error.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverMonitorMode": {
        "description": "The server monitor mode for AS server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Represents the SKU name and Azure pricing tier for Analysis Services resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "asAdministrators",
      "backupBlobContainerUri",
      "managedMode",
      "serverMonitorMode",
      "gatewayDetails",
      "ipV4FirewallSettings",
      "querypoolConnectionMode",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "additionalLocations": {
        "description": "Additional datacenter locations of the API Management service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addresserEmail": {
        "description": "Addresser email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiVersionConstraint": {
        "description": "Control Plane Apis version constraint for the API Management service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customProperties": {
        "description": "Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableGateway": {
        "description": "Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableClientCertificate": {
        "description": "Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostnameConfigurations": {
        "description": "Custom hostname configuration of the API Management service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natGatewayState": {
        "description": "Property can be used to enable NAT Gateway for this API Management service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSenderEmail": {
        "description": "Email address from which the notification will be sent.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of Private Endpoint Connections of this service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIpAddressId": {
        "description": "Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publisherEmail": {
        "description": "Publisher email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publisherName": {
        "description": "Publisher name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restore": {
        "description": "Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "Configuration of a virtual network to which API Management service is deployed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkType": {
        "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnType": {
        "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnconfiguration": {
        "description": "Configuration of a virtual network to which API Management service is deployed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalLocations",
      "addresserEmail",
      "customProperties",
      "hostnameConfigurations",
      "publisherEmail",
      "publisherName",
      "vpnconfiguration",
      "vpnType",
      "certificates",
      "notificationSenderEmail",
      "virtualNetworkConfiguration",
      "virtualNetworkType",
      "enableClientCertificate",
      "apiVersionConstraint",
      "disableGateway",
      "restore",
      "publicIpAddressId",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "natGatewayState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/api-version-sets": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "description": {
        "description": "Description of API Version Set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Name of API Version Set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionHeaderName": {
        "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionQueryName": {
        "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versioningScheme": {
        "description": "An value that determines where the API Version identifier will be located in a HTTP request.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "versionHeaderName",
      "versioningScheme",
      "versionQueryName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apiVersionSets": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Description of API Version Set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Name of API Version Set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionHeaderName": {
        "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionQueryName": {
        "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versioningScheme": {
        "description": "An value that determines where the API Version identifier will be located in a HTTP request.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "versionHeaderName",
      "versioningScheme",
      "versionQueryName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "apiRevision": {
        "description": "Describes the revision of the API. If no value is provided, default revision 1 is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiRevisionDescription": {
        "description": "Description of the API Revision.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiType": {
        "description": "Type of API to create. \n * `http` creates a REST API \n * `soap` creates a SOAP pass-through API  \n * `websocket` creates websocket API \n * `graphql` creates GraphQL API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiVersion": {
        "description": "Indicates the version identifier of the API if the API is versioned",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiVersionDescription": {
        "description": "Description of the API Version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiVersionSet": {
        "description": "An API Version Set contains the common configuration for a set of API Versions relating ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiVersionSetId": {
        "description": "A resource identifier for the related ApiVersionSet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authenticationSettings": {
        "description": "API Authentication Settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contact": {
        "description": "API contact information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentFormat": {
        "description": "Format of the Content in which the API is getting imported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentValue": {
        "description": "Content value when Importing an API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the API. May include HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "API name. Must be 1 to 300 characters long.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the Content in which the API is getting imported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isCurrent": {
        "description": "Indicates if API revision is current api revision.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "license": {
        "description": "API license information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "path": {
        "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protocols": {
        "description": "Describes on which protocols the operations in this API can be invoked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceUrl": {
        "description": "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceApiId": {
        "description": "API identifier of the source API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subscriptionKeyParameterNames": {
        "description": "Subscription key parameter names details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionRequired": {
        "description": "Specifies whether an API or Product subscription is required for accessing the API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "termsOfServiceUrl": {
        "description": " A URL to the Terms of Service for the API. MUST be in the format of a URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "translateRequiredQueryParameters": {
        "description": "Strategy of translating required query parameters to template ones. By default has value 'template'. Possible values: 'template', 'query'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Type of API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Content value when Importing an API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "wsdlSelector": {
        "description": "Criteria to limit import of WSDL to a subset of the document.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiRevision",
      "apiVersion",
      "apiVersionSet",
      "apiVersionSetId",
      "authenticationSettings",
      "contentFormat",
      "contentValue",
      "description",
      "displayName",
      "path",
      "protocols",
      "serviceUrl",
      "subscriptionKeyParameterNames",
      "type",
      "wsdlSelector",
      "apiRevisionDescription",
      "apiType",
      "apiVersionDescription",
      "subscriptionRequired",
      "format",
      "isCurrent",
      "sourceApiId",
      "value",
      "contact",
      "license",
      "termsOfServiceUrl",
      "translateRequiredQueryParameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/diagnostics": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "alwaysLog": {
        "description": "Specifies for what type of messages sampling settings should not apply.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableHttpCorrelationHeaders": {
        "description": "Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether a diagnostic should receive data or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpCorrelationProtocol": {
        "description": "Sets correlation protocol to use for Application Insights diagnostics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logClientIp": {
        "description": "Log the ClientIP. Default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loggerId": {
        "description": "Resource Id of a target logger.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metrics": {
        "description": "Emit custom metrics via emit-metric policy. Applicable only to Application Insights diagnostic settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operationNameFormat": {
        "description": "The format of the Operation Name for Application Insights telemetries. Default is Name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sampling": {
        "description": "Sampling settings for Diagnostic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "verbosity": {
        "description": "The verbosity level applied to traces emitted by trace policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "alwaysLog",
      "backend",
      "enableHttpCorrelationHeaders",
      "frontend",
      "loggerId",
      "sampling",
      "httpCorrelationProtocol",
      "verbosity",
      "logClientIp",
      "metrics",
      "operationNameFormat"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/diagnostics/loggers": {
    "api_version": "2018-01-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/issues": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "apiId": {
        "description": "A resource identifier for the API the issue was created for.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "Date and time when the issue was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Text describing the issue.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Status of the issue.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "The issue title.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userId": {
        "description": "A resource identifier for the user created the issue.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiId",
      "createdDate",
      "description",
      "state",
      "title",
      "userId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/issues/attachments": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "content": {
        "description": "An HTTP link or Base64-encoded binary data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentFormat": {
        "description": "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "title": {
        "description": "Filename by which the binary data will be saved.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "content",
      "contentFormat",
      "title"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/issues/comments": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "createdDate": {
        "description": "Date and time when the comment was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "text": {
        "description": "Comment text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userId": {
        "description": "A resource identifier for the user who left the comment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createdDate",
      "text",
      "userId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Description of the operation. May include HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Operation Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "method": {
        "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policies": {
        "description": "Operation Policies",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "request": {
        "description": "Operation request details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "responses": {
        "description": "Array of Operation responses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateParameters": {
        "description": "Collection of URL template parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "urlTemplate": {
        "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "method",
      "policies",
      "request",
      "responses",
      "templateParameters",
      "urlTemplate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations/policies": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations/policy": {
    "api_version": "2016-10-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations/tags": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/policies": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/policy": {
    "api_version": "2016-10-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/releases": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "apiId": {
        "description": "Identifier of the API the release belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Release Notes",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiId",
      "notes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/schemas": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "contentType": {
        "description": "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Free-form schema entity description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "document": {
        "description": "Api Schema Document Properties.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "schemaType": {
        "description": "Schema Type. Immutable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Json-encoded string for non json-based schema.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentType",
      "document",
      "description",
      "schemaType",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/tagDescriptions": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Description of the Tag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalDocsDescription": {
        "description": "Description of the external resources describing the tag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalDocsUrl": {
        "description": "Absolute URL of external resources describing the tag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "externalDocsDescription",
      "externalDocsUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/tags": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/authorizationProviders": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "displayName": {
        "description": "Authorization Provider name. Must be 1 to 300 characters long.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "identityProvider": {
        "description": "Identity provider name. Must be 1 to 300 characters long.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "oauth2": {
        "description": "OAuth2 settings details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "identityProvider",
      "oauth2"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/authorizationProviders/authorizations": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "authorizationType": {
        "description": "Authorization type options.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "error": {
        "description": "Authorization error details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "oauth2grantType": {
        "description": "OAuth2 grant type options.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Authorization parameters",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status of the Authorization",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationType",
      "error",
      "oauth2grantType",
      "parameters",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/authorizationProviders/authorizations/accessPolicies": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "objectId": {
        "description": "The Object Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The Tenant Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "objectId",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/authorizationServers": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "authorizationEndpoint": {
        "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizationMethods": {
        "description": "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bearerTokenSendingMethods": {
        "description": "Specifies the mechanism by which access token is passed to the API. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAuthenticationMethod": {
        "description": "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientId": {
        "description": "Client or app id registered with this authorization server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientRegistrationEndpoint": {
        "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultScope": {
        "description": "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the authorization server. Can contain HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "User-friendly authorization server name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "grantTypes": {
        "description": "Form of an authorization grant, which the client uses to request the access token.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceOwnerPassword": {
        "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceOwnerUsername": {
        "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportState": {
        "description": "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tokenBodyParameters": {
        "description": "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tokenEndpoint": {
        "description": "OAuth token endpoint. Contains absolute URI to entity being referenced.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useInApiDocumentation": {
        "description": "If true, the authorization server will be used in the API documentation in the developer portal. False by default if no value is provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useInTestConsole": {
        "description": "If true, the authorization server may be used in the developer portal test console. True by default if no value is provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationEndpoint",
      "authorizationMethods",
      "bearerTokenSendingMethods",
      "clientAuthenticationMethod",
      "clientId",
      "clientRegistrationEndpoint",
      "clientSecret",
      "defaultScope",
      "description",
      "displayName",
      "grantTypes",
      "resourceOwnerPassword",
      "resourceOwnerUsername",
      "supportState",
      "tokenBodyParameters",
      "tokenEndpoint",
      "useInApiDocumentation",
      "useInTestConsole"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/backends": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "credentials": {
        "description": "Details of the Credentials used to connect to Backend.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Backend Description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Properties specific to the Backend Type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Backend communication protocol.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proxy": {
        "description": "Details of the Backend WebProxy Server to use in the Request to Backend.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "Management Uri of the Resource in External System. This URL can be the Arm Resource Id of Logic Apps, Function Apps or API Apps.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "title": {
        "description": "Backend Title.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tls": {
        "description": "Properties controlling TLS Certificate Validation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "url": {
        "description": "Runtime Url of the Backend.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "description",
      "properties",
      "protocol",
      "proxy",
      "resourceId",
      "title",
      "tls",
      "url"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/caches": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "connectionString": {
        "description": "Runtime connection string to cache",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Cache description",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "Original uri of entity in external system cache points to",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useFromLocation": {
        "description": "Location identifier to use cache from (should be either 'default' or valid Azure region identifier)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionString",
      "description",
      "resourceId",
      "useFromLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/certificates": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "base64Value": {
        "description": "Gets or sets the base64 encoded value of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "data": {
        "description": "The maximum size is 10KB.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExportable": {
        "description": "Gets or sets the is exportable flag of the certificate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "Create keyVault contract details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "This must not be specified if the certificate format is Cer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "This must match the thumbprint from the name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprintAlgorithm": {
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "base64Value",
      "description",
      "isExportable",
      "thumbprint",
      "data",
      "password",
      "format",
      "thumbprintAlgorithm",
      "keyVault"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/contentTypes": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Content type description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "Content type identifier",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Content type name. Must be 1 to 250 characters long.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "schema": {
        "description": "Content type schema.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Content type version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "id",
      "name",
      "schema",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/contentTypes/contentItems": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/diagnostics": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "alwaysLog": {
        "description": "Specifies for what type of messages sampling settings should not apply.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableHttpCorrelationHeaders": {
        "description": "Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether a diagnostic should receive data or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpCorrelationProtocol": {
        "description": "Sets correlation protocol to use for Application Insights diagnostics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logClientIp": {
        "description": "Log the ClientIP. Default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loggerId": {
        "description": "Resource Id of a target logger.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metrics": {
        "description": "Emit custom metrics via emit-metric policy. Applicable only to Application Insights diagnostic settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operationNameFormat": {
        "description": "The format of the Operation Name for Application Insights telemetries. Default is Name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sampling": {
        "description": "Sampling settings for Diagnostic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "verbosity": {
        "description": "The verbosity level applied to traces emitted by trace policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "alwaysLog",
      "backend",
      "enableHttpCorrelationHeaders",
      "frontend",
      "loggerId",
      "sampling",
      "httpCorrelationProtocol",
      "verbosity",
      "logClientIp",
      "metrics",
      "operationNameFormat"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/diagnostics/loggers": {
    "api_version": "2018-01-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/gateways": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Gateway description",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "locationData": {
        "description": "Resource location data properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "locationData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/gateways/apis": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "provisioningState": {
        "description": "Provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/gateways/certificateAuthorities": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "isTrusted": {
        "description": "Determines whether certificate authority is trusted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isTrusted"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/gateways/hostnameConfigurations": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "certificateId": {
        "description": "Identifier of Certificate entity that will be used for TLS connection establishment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostname": {
        "description": "Hostname value. Supports valid domain name, partial or full wildcard",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "http2Enabled": {
        "description": "Specifies if HTTP/2.0 is supported",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "negotiateClientCertificate": {
        "description": "Determines whether gateway requests client certificate",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tls10Enabled": {
        "description": "Specifies if TLS 1.0 is supported",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tls11Enabled": {
        "description": "Specifies if TLS 1.1 is supported",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certificateId",
      "hostname",
      "negotiateClientCertificate",
      "http2Enabled",
      "tls10Enabled",
      "tls11Enabled"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/groups": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Group description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalId": {
        "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Group type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "externalId",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/groups/users": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/identityProviders": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "allowedTenants": {
        "description": "List of Allowed Tenants when configuring Azure Active Directory login.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authority": {
        "description": "OpenID Connect discovery endpoint hostname for AAD or AAD B2C.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientId": {
        "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientLibrary": {
        "description": "The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "passwordResetPolicyName": {
        "description": "Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "profileEditingPolicyName": {
        "description": "Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "signinPolicyName": {
        "description": "Signin Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "signinTenant": {
        "description": "The TenantId to use instead of Common when logging into Active Directory",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "signupPolicyName": {
        "description": "Signup Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Identity Provider Type identifier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedTenants",
      "authority",
      "clientId",
      "clientSecret",
      "passwordResetPolicyName",
      "profileEditingPolicyName",
      "signinPolicyName",
      "signinTenant",
      "signupPolicyName",
      "type",
      "clientLibrary"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/loggers": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "credentials": {
        "description": "The name and SendRule connection string of the event hub for azureEventHub logger.\nInstrumentation key for applicationInsights logger.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Logger description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isBuffered": {
        "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loggerType": {
        "description": "Logger type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampling": {
        "description": "Sampling settings contract.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "description",
      "isBuffered",
      "loggerType",
      "sampling",
      "resourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/namedValues": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "displayName": {
        "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "Create keyVault contract details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secret": {
        "description": "Determines whether the value is a secret and should be encrypted or not. Default value is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Optional tags that when provided can be used to filter the NamedValue list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "secret",
      "tags",
      "value",
      "keyVault"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/notifications": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/notifications/recipientEmails": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/notifications/recipientUsers": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/openidConnectProviders": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "clientId": {
        "description": "Client ID of developer console which is the client application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client Secret of developer console which is the client application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User-friendly description of OpenID Connect Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "User-friendly OpenID Connect Provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadataEndpoint": {
        "description": "Metadata endpoint URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useInApiDocumentation": {
        "description": "If true, the Open ID Connect provider will be used in the API documentation in the developer portal. False by default if no value is provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useInTestConsole": {
        "description": "If true, the Open ID Connect provider may be used in the developer portal test console. True by default if no value is provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientId",
      "clientSecret",
      "description",
      "displayName",
      "metadataEndpoint",
      "useInApiDocumentation",
      "useInTestConsole"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/policies": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/policyFragments": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Policy fragment description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policy fragment content.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the policy fragment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/portalRevisions": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Portal revision description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isCurrent": {
        "description": "Indicates if the portal's revision is public.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "isCurrent"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/portalconfigs": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "cors": {
        "description": "The developer portal Cross-Origin Resource Sharing (CORS) settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "csp": {
        "description": "The developer portal Content Security Policy (CSP) settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegation": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBasicAuth": {
        "description": "Enable or disable Basic authentication method.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "signin": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "signup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors",
      "csp",
      "delegation",
      "enableBasicAuth",
      "signin",
      "signup"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/portalsettings": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/privateEndpointConnections": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "approvalRequired": {
        "description": "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Product description. May include HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Product name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionRequired": {
        "description": "Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionsLimit": {
        "description": "Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "terms": {
        "description": "Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "approvalRequired",
      "description",
      "displayName",
      "state",
      "subscriptionRequired",
      "subscriptionsLimit",
      "terms"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/apis": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/groups": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/policies": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/policy": {
    "api_version": "2016-10-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/tags": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/properties": {
    "api_version": "2019-01-01",
    "full_properties": {
      "displayName": {
        "description": "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secret": {
        "description": "Determines whether the value is a secret and should be encrypted or not. Default value is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Optional tags that when provided can be used to filter the property list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "secret",
      "tags",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/schemas": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Free-form schema entity description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "document": {
        "description": "Global Schema Document Properties.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "schemaType": {
        "description": "Schema Type. Immutable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Json-encoded string for non json-based schema.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "document",
      "schemaType",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/subscriptions": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "allowTracing": {
        "description": "Determines whether tracing can be enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Subscription name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerId": {
        "description": "User (user id path) for whom subscription is being created in form /users/{userId}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryKey": {
        "description": "Primary subscription key. If not specified during request key will be generated automatically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "productId": {
        "description": "Product (product id path) for which subscription is being created in form /products/{productId}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "Scope like /products/{productId} or /apis or /apis/{apiId}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryKey": {
        "description": "Secondary subscription key. If not specified during request key will be generated automatically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userId": {
        "description": "User (user id path) for whom subscription is being created in form /users/{uid}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "primaryKey",
      "productId",
      "secondaryKey",
      "state",
      "userId",
      "allowTracing",
      "ownerId",
      "scope"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/tags": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "displayName": {
        "description": "Tag name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/templates": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "body": {
        "description": "Email Template Body. This should be a valid XDocument",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the Email Template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Email Template Parameter values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subject": {
        "description": "Subject of the Template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "title": {
        "description": "Title of the Template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "body",
      "description",
      "parameters",
      "subject",
      "title"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/tenant": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "enabled": {
        "description": "Determines whether direct access is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryKey": {
        "description": "Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalId": {
        "description": "Principal (User) Identifier.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryKey": {
        "description": "Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "primaryKey",
      "principalId",
      "secondaryKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/users": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "appType": {
        "description": "Determines the type of application which send the create user request. Default is legacy portal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "confirmation": {
        "description": "Determines the type of confirmation e-mail that will be sent to the newly created user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "email": {
        "description": "Email address. Must not be empty and must be unique within the service instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firstName": {
        "description": "First name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "identities": {
        "description": "Collection of user identities.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastName": {
        "description": "Last name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "note": {
        "description": "Optional note about a user set by the administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "User Password. If no value is provided, a default password is generated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "confirmation",
      "email",
      "firstName",
      "lastName",
      "note",
      "password",
      "state",
      "identities",
      "appType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/connectedEnvironments": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "customDomainConfiguration": {
        "description": "Configuration properties for apps environment custom domain",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daprAIConnectionString": {
        "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "staticIp": {
        "description": "Static IP of the connectedEnvironment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customDomainConfiguration",
      "daprAIConnectionString",
      "staticIp"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/connectedEnvironments/certificates": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "canonicalName": {
        "description": "CNAME of the certificate to be issued via free certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cerBlob": {
        "description": "Raw bytes of .cer file",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certVersion": {
        "description": "The certificate version of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The certificate content",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainValidationMethod": {
        "description": "Method of domain validation for free cert",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Certificate expiration date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNames": {
        "description": "Host names the certificate applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for a hostingEnvironment (App Service Environment) to use for this resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVerified": {
        "description": "Determines whether certificate has been verified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "issueDate": {
        "description": "Certificate issue Date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "issuer": {
        "description": "Certificate issuer",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultCertName": {
        "description": "The certificate name of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault Csm resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Certificate password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Pfx blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Public key hash",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "selfLink": {
        "description": "Self link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subjectName": {
        "description": "Subject name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "valid": {
        "description": "Is the certificate valid?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "PFX or PEM blob",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The vault uri of user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cerBlob",
      "expirationDate",
      "friendlyName",
      "hostingEnvironmentProfile",
      "hostNames",
      "issueDate",
      "issuer",
      "password",
      "pfxBlob",
      "publicKeyHash",
      "selfLink",
      "siteName",
      "subjectName",
      "thumbprint",
      "valid",
      "keyVaultId",
      "keyVaultSecretName",
      "serverFarmId",
      "canonicalName",
      "certificate",
      "certVersion",
      "keyVaultCertName",
      "vaultUri",
      "domainValidationMethod",
      "isVerified",
      "value"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/connectedEnvironments/daprComponents": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "componentType": {
        "description": "Component type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ignoreErrors": {
        "description": "Boolean describing if the component errors are ignores",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "initTimeout": {
        "description": "Initialization timeout",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "Component metadata",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "Names of container apps that can use this Dapr component",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secretStoreComponent": {
        "description": "Name of a Dapr component to retrieve component secrets from",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secrets": {
        "description": "Collection of secrets used by a Dapr component",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Component version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "componentType",
      "ignoreErrors",
      "initTimeout",
      "metadata",
      "scopes",
      "secrets",
      "version",
      "secretStoreComponent"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/connectedEnvironments/storages": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "azureFile": {
        "description": "Azure File Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureFile"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/containerApps": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "configuration": {
        "description": "Non versioned Container App configuration properties that define the mutable settings of a Container app",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentId": {
        "description": "Resource ID of environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeEnvironmentId": {
        "description": "Resource ID of the Container App's KubeEnvironment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedEnvironmentId": {
        "description": "Deprecated. Resource ID of the Container App's environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "template": {
        "description": "Container App versioned application definition.\nDefines the desired state of an immutable revision.\nAny changes to this section Will result in a new revision being created",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workloadProfileType": {
        "description": "Workload profile type for container apps to execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "kubeEnvironmentId",
      "template",
      "managedEnvironmentId",
      "environmentId",
      "workloadProfileType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/containerApps/authConfigs": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "globalValidation": {
        "description": "The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpSettings": {
        "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identityProviders": {
        "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platform": {
        "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "globalValidation",
      "httpSettings",
      "identityProviders",
      "login",
      "platform"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/containerApps/sourcecontrols": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "branch": {
        "description": "The branch which will trigger the auto deployment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentTypes": {
        "description": "Array of source control content types.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the source control",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of the source control",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationTime": {
        "description": "OAuth token expiration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "githubActionConfiguration": {
        "description": "Configuration properties that define the mutable settings of a Container App SourceControl",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "id": {
        "description": "The id (a Guid) of the source control",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastDeploymentInfo": {
        "description": "Information regarding a deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name or source control type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "refreshToken": {
        "description": "OAuth refresh token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "repoType": {
        "description": "The repository type of the source control.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "The repo url which will be integrated to ContainerApp.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "repository": {
        "description": "metadata of a repository.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repositoryResourceInfo": {
        "description": "Resources created in user's repository for the source-control.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "token": {
        "description": "OAuth access token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tokenSecret": {
        "description": "OAuth access token secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version number associated with the source control.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "expirationTime",
      "name",
      "refreshToken",
      "token",
      "tokenSecret",
      "contentTypes",
      "description",
      "displayName",
      "id",
      "repository",
      "repoType",
      "branch",
      "githubActionConfiguration",
      "repoUrl",
      "lastDeploymentInfo",
      "repositoryResourceInfo",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/managedEnvironments": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "appLogsConfiguration": {
        "description": "Configuration of application logs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDomainConfiguration": {
        "description": "Configuration properties for apps environment custom domain",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daprAIConnectionString": {
        "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "daprAIInstrumentationKey": {
        "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetConfiguration": {
        "description": "Configuration properties for apps environment to join a Virtual Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workloadProfiles": {
        "description": "Workload profiles configured for the Managed Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this Managed Environment is zone-redundant.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appLogsConfiguration",
      "daprAIInstrumentationKey",
      "vnetConfiguration",
      "daprAIConnectionString",
      "zoneRedundant",
      "customDomainConfiguration",
      "workloadProfiles"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/managedEnvironments/certificates": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "canonicalName": {
        "description": "CNAME of the certificate to be issued via free certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cerBlob": {
        "description": "Raw bytes of .cer file",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certVersion": {
        "description": "The certificate version of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The certificate content",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainValidationMethod": {
        "description": "Method of domain validation for free cert",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Certificate expiration date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNames": {
        "description": "Host names the certificate applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for a hostingEnvironment (App Service Environment) to use for this resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVerified": {
        "description": "Determines whether certificate has been verified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "issueDate": {
        "description": "Certificate issue Date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "issuer": {
        "description": "Certificate issuer",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultCertName": {
        "description": "The certificate name of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault Csm resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Certificate password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Pfx blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Public key hash",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "selfLink": {
        "description": "Self link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subjectName": {
        "description": "Subject name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "valid": {
        "description": "Is the certificate valid?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "PFX or PEM blob",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The vault uri of user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cerBlob",
      "expirationDate",
      "friendlyName",
      "hostingEnvironmentProfile",
      "hostNames",
      "issueDate",
      "issuer",
      "password",
      "pfxBlob",
      "publicKeyHash",
      "selfLink",
      "siteName",
      "subjectName",
      "thumbprint",
      "valid",
      "keyVaultId",
      "keyVaultSecretName",
      "serverFarmId",
      "canonicalName",
      "certificate",
      "certVersion",
      "keyVaultCertName",
      "vaultUri",
      "domainValidationMethod",
      "isVerified",
      "value"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/managedEnvironments/daprComponents": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "componentType": {
        "description": "Component type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ignoreErrors": {
        "description": "Boolean describing if the component errors are ignores",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "initTimeout": {
        "description": "Initialization timeout",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "Component metadata",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "Names of container apps that can use this Dapr component",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secretStoreComponent": {
        "description": "Name of a Dapr component to retrieve component secrets from",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secrets": {
        "description": "Collection of secrets used by a Dapr component",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Component version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "componentType",
      "ignoreErrors",
      "initTimeout",
      "metadata",
      "scopes",
      "secrets",
      "version",
      "secretStoreComponent"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.App/managedEnvironments/storages": {
    "api_version": "2022-06-01-preview",
    "full_properties": {
      "azureFile": {
        "description": "Azure File Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureFile"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppConfiguration/configurationStores": {
    "api_version": "2022-05-01",
    "full_properties": {
      "createMode": {
        "description": "Indicates whether the configuration store need to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "Disables all authentication methods other than AAD authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurgeProtection": {
        "description": "Property specifying whether protection against purge is enabled for this configuration store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "The encryption settings for a configuration store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteRetentionInDays": {
        "description": "The amount of time in days that the configuration store will be retained when it is soft deleted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryption",
      "publicNetworkAccess",
      "disableLocalAuth",
      "createMode",
      "enablePurgeProtection",
      "softDeleteRetentionInDays"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.AppConfiguration/configurationStores/keyValues": {
    "api_version": "2022-05-01",
    "full_properties": {
      "contentType": {
        "description": "The content type of the key-value's value.\r\nProviding a proper content-type can enable transformations of values when they are retrieved by applications.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tags": {
        "description": "A dictionary of tags that can help identify what a key-value may be applicable for.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "The value of the key-value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentType",
      "tags",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppConfiguration/configurationStores/privateEndpointConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppConfiguration/configurationStores/replicas": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "authenticationMethod": {
        "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cassandraAuditLoggingEnabled": {
        "description": "Whether Cassandra audit logging is enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cassandraVersion": {
        "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientCertificates": {
        "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterNameOverride": {
        "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deallocated": {
        "description": "Whether the cluster and associated data centers has been deallocated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegatedManagementSubnetId": {
        "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalGossipCertificates": {
        "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "externalSeedNodes": {
        "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hoursBetweenBackups": {
        "description": "Number of hours to wait between taking a backup of the cluster. To disable backups, set this property to 0.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "initialCassandraAdminPassword": {
        "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "marketplaceResource": {
        "description": "Purchasing 3rd Party product for one Azure Spring Apps instance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Service network profile payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "prometheusEndpoint": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repairEnabled": {
        "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restoreFromBackupId": {
        "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetAddons": {
        "description": "Additional Service settings in vnet injection instance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "networkProfile",
      "authenticationMethod",
      "cassandraVersion",
      "clientCertificates",
      "clusterNameOverride",
      "delegatedManagementSubnetId",
      "externalGossipCertificates",
      "externalSeedNodes",
      "hoursBetweenBackups",
      "initialCassandraAdminPassword",
      "prometheusEndpoint",
      "provisioningState",
      "repairEnabled",
      "restoreFromBackupId",
      "cassandraAuditLoggingEnabled",
      "deallocated",
      "zoneRedundant",
      "marketplaceResource",
      "vnetAddons"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apiPortals": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "gatewayIds": {
        "description": "The array of resource Ids of gateway to integrate with API portal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "Indicate if only https is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "public": {
        "description": "Indicates whether the API portal exposes endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceUrls": {
        "description": "Collection of OpenAPI source URL locations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ssoProperties": {
        "description": "Single sign-on related configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "gatewayIds",
      "httpsOnly",
      "public",
      "sourceUrls",
      "ssoProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apiPortals/domains": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "thumbprint": {
        "description": "The thumbprint of bound certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "thumbprint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "activeDeploymentName": {
        "description": "Name of the active deployment of the App",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "addonConfigs": {
        "description": "Collection of addons",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customPersistentDisks": {
        "description": "Collection of persistent disk resources list and a possible link for next page.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableEndToEndTLS": {
        "description": "Indicate if end to end TLS is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "Fully qualified dns Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "Indicate if only https is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingressSettings": {
        "description": "App ingress settings payload.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadedCertificates": {
        "description": "Collection of loaded certificate resources list and a possible link for next page.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistentDisk": {
        "description": "Persistent disk payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "public": {
        "description": "Indicates whether the App exposes public endpoint",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "temporaryDisk": {
        "description": "Temporary disk payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetAddons": {
        "description": "Additional App settings in vnet injection instance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activeDeploymentName",
      "fqdn",
      "httpsOnly",
      "persistentDisk",
      "public",
      "temporaryDisk",
      "enableEndToEndTLS",
      "customPersistentDisks",
      "loadedCertificates",
      "addonConfigs",
      "vnetAddons",
      "ingressSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps/bindings": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "bindingParameters": {
        "description": "Binding parameters of the Binding resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "key": {
        "description": "The key of the bound resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "The Azure resource id of the bound resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bindingParameters",
      "key",
      "resourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps/deployments": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "active": {
        "description": "Indicates whether the Deployment is active",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentSettings": {
        "description": "Deployment settings payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source information for a deployment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "deploymentSettings",
      "source",
      "active"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps/domains": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "certName": {
        "description": "The bound certificate name of domain.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customCertificate": {
        "description": "Reference to a resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainName": {
        "description": "The custom domain name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "The thumbprint of bound certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certName",
      "thumbprint",
      "customCertificate",
      "domainName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/buildServices/agentPools": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "poolSize": {
        "description": "Build service agent pool size properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "poolSize"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/buildServices/builders": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "buildpackGroups": {
        "description": "Builder buildpack groups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stack": {
        "description": "KPack ClusterStack properties payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "buildpackGroups",
      "stack"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/buildServices/builders/buildpackBindings": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "bindingType": {
        "description": "Buildpack Binding Type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "launchProperties": {
        "description": "Buildpack Binding Launch Properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bindingType",
      "launchProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/buildServices/builds": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "agentPool": {
        "description": "The resource id of agent pool",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "builder": {
        "description": "The resource id of builder to build the source code",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "env": {
        "description": "The environment variables for this build",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relativePath": {
        "description": "The relative path of source code",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceRequests": {
        "description": "Resource request payload of Build Resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "triggeredBuildResult": {
        "description": "The build result triggered by a build",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPool",
      "builder",
      "env",
      "relativePath",
      "triggeredBuildResult",
      "resourceRequests"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/certificates": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "canonicalName": {
        "description": "CNAME of the certificate to be issued via free certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cerBlob": {
        "description": "Raw bytes of .cer file",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certVersion": {
        "description": "The certificate version of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The certificate content",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainValidationMethod": {
        "description": "Method of domain validation for free cert",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Certificate expiration date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNames": {
        "description": "Host names the certificate applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for a hostingEnvironment (App Service Environment) to use for this resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVerified": {
        "description": "Determines whether certificate has been verified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "issueDate": {
        "description": "Certificate issue Date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "issuer": {
        "description": "Certificate issuer",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultCertName": {
        "description": "The certificate name of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault Csm resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Certificate password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Pfx blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Public key hash",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "selfLink": {
        "description": "Self link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subjectName": {
        "description": "Subject name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "valid": {
        "description": "Is the certificate valid?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "PFX or PEM blob",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The vault uri of user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cerBlob",
      "expirationDate",
      "friendlyName",
      "hostingEnvironmentProfile",
      "hostNames",
      "issueDate",
      "issuer",
      "password",
      "pfxBlob",
      "publicKeyHash",
      "selfLink",
      "siteName",
      "subjectName",
      "thumbprint",
      "valid",
      "keyVaultId",
      "keyVaultSecretName",
      "serverFarmId",
      "canonicalName",
      "certificate",
      "certVersion",
      "keyVaultCertName",
      "vaultUri",
      "domainValidationMethod",
      "isVerified",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/configServers": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "configServer": {
        "description": "The settings of config server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "error": {
        "description": "The error code compose of code and message.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configServer",
      "error"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/configurationServices": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "resourceRequests": {
        "description": "Resource request payload of Application Configuration Service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "settings": {
        "description": "The settings of Application Configuration Service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resourceRequests",
      "settings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/gateways": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "apiMetadataProperties": {
        "description": "API metadata property for Spring Cloud Gateway",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsProperties": {
        "description": "Cross-Origin Resource Sharing property",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "Indicate if only https is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "public": {
        "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceRequests": {
        "description": "Resource request payload of Spring Cloud Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ssoProperties": {
        "description": "Single sign-on related configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiMetadataProperties",
      "corsProperties",
      "httpsOnly",
      "public",
      "resourceRequests",
      "ssoProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/gateways/domains": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "thumbprint": {
        "description": "The thumbprint of bound certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "thumbprint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/gateways/routeConfigs": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "appResourceId": {
        "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "openApi": {
        "description": "OpenAPI properties of Spring Cloud Gateway route config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Protocol of routed Azure Spring Apps applications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routes": {
        "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appResourceId",
      "routes",
      "openApi",
      "protocol"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/monitoringSettings": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "appInsightsAgentVersions": {
        "description": "Application Insights agent versions properties payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "appInsightsInstrumentationKey": {
        "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "appInsightsSamplingRate": {
        "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "error": {
        "description": "The error code compose of code and message.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "traceEnabled": {
        "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appInsightsInstrumentationKey",
      "error",
      "traceEnabled",
      "appInsightsAgentVersions",
      "appInsightsSamplingRate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/serviceRegistries": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/storages": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Attestation/attestationProviders": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
      "attestationPolicy": {
        "description": "Name of attestation policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policySigningCertificates": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "attestationPolicy",
      "policySigningCertificates",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Attestation/attestationProviders/privateEndpointConnections": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Authorization/locks": {
    "api_version": "2020-05-01",
    "full_properties": {
      "level": {
        "description": "The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Notes about the lock. Maximum of 512 characters.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "owners": {
        "description": "The owners of the lock.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "level",
      "notes",
      "owners"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Authorization/resourceManagementPrivateLinks": {
    "api_version": "2020-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Authorization/roleAssignments": {
    "api_version": "2017-09-01",
    "full_properties": {
      "principalId": {
        "description": "Microsoft.Authorization/roleAssignments: principalId - specifies the principal Id.  This maps to the id inside the directory and can point to a user, service principal, or security group",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      },
      "roleDefinitionId": {
        "description": "Microsoft.Authorization/roleAssignments: roleDefinitionId - id of the role to be used in the role assignment",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "Microsoft.Authorization/roleAssignments: scope - specifies the scope at which this role assignment applies to",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "roleDefinitionId",
      "principalId",
      "scope"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Authorization/roleDefinitions": {
    "api_version": "2017-09-01",
    "full_properties": {
      "assignableScopes": {
        "description": "Role definition assignable scopes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The role definition description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "permissions": {
        "description": "Role definition permissions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "roleName": {
        "description": "The role name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "The role type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assignableScopes",
      "description",
      "permissions",
      "roleName",
      "type"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Automanage/accounts": {
    "api_version": "2020-06-30-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.Automanage/configurationProfilePreferences": {
    "api_version": "2020-06-30-preview",
    "full_properties": {
      "antiMalware": {
        "description": "Automanage configuration profile Antimalware preferences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmBackup": {
        "description": "Automanage configuration profile VM Backup preferences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "antiMalware",
      "vmBackup"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automanage/configurationProfiles": {
    "api_version": "2022-05-04",
    "full_properties": {
      "configuration": {
        "description": "The custom configuration for configuration profile. Name and value pairs that define the configuration details of the configuration profile.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "overrides": {
        "description": "The custom overrides for configuration profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "overrides"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automanage/configurationProfiles/versions": {
    "api_version": "2022-05-04",
    "full_properties": {
      "configuration": {
        "description": "The custom configuration for configuration profile. Name and value pairs that define the configuration details of the configuration profile.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "overrides": {
        "description": "The custom overrides for configuration profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "overrides"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts": {
    "api_version": "2022-08-08",
    "full_properties": {
      "disableLocalAuth": {
        "description": "Indicates whether requests using non-AAD authentication are blocked",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "The encryption settings for automation account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The account SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sku",
      "encryption",
      "publicNetworkAccess",
      "disableLocalAuth"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/certificates": {
    "api_version": "2022-08-08",
    "full_properties": {
      "base64Value": {
        "description": "Gets or sets the base64 encoded value of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "data": {
        "description": "The maximum size is 10KB.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExportable": {
        "description": "Gets or sets the is exportable flag of the certificate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "Create keyVault contract details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "This must not be specified if the certificate format is Cer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "This must match the thumbprint from the name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprintAlgorithm": {
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "base64Value",
      "description",
      "isExportable",
      "thumbprint",
      "data",
      "password",
      "format",
      "thumbprintAlgorithm",
      "keyVault"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/compilationjobs": {
    "api_version": "2020-01-13-preview",
    "full_properties": {
      "configuration": {
        "description": "The Dsc configuration property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incrementNodeConfigurationBuild": {
        "description": "If a new build version of NodeConfiguration is required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the parameters of the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "incrementNodeConfigurationBuild",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/configurations": {
    "api_version": "2022-08-08",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logProgress": {
        "description": "Gets or sets progress log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logVerbose": {
        "description": "Gets or sets verbose log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the configuration parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Definition of the content source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "logProgress",
      "logVerbose",
      "parameters",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/connectionTypes": {
    "api_version": "2022-08-08",
    "full_properties": {
      "fieldDefinitions": {
        "description": "Gets or sets the field definitions of the connection type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isGlobal": {
        "description": "Gets or sets a Boolean value to indicate if the connection type is global.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fieldDefinitions",
      "isGlobal"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/connections": {
    "api_version": "2022-08-08",
    "full_properties": {
      "connectionType": {
        "description": "The connection type property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fieldDefinitionValues": {
        "description": "Gets or sets the field definition properties of the connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionType",
      "description",
      "fieldDefinitionValues"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/credentials": {
    "api_version": "2022-08-08",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Gets or sets the password of the credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "Gets or sets the user name of the credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "password",
      "userName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups": {
    "api_version": "2022-08-08",
    "full_properties": {
      "credential": {
        "description": "Definition of RunAs credential to use for hybrid worker.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credential"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups/hybridRunbookWorkers": {
    "api_version": "2022-08-08",
    "full_properties": {
      "vmResourceId": {
        "description": "Azure Resource Manager Id for a virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/jobSchedules": {
    "api_version": "2022-08-08",
    "full_properties": {
      "parameters": {
        "description": "Gets or sets a list of job properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runOn": {
        "description": "Gets or sets the hybrid worker group that the scheduled job should run on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runbook": {
        "description": "The runbook property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "The schedule property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parameters",
      "runbook",
      "runOn",
      "schedule"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/jobs": {
    "api_version": "2022-08-08",
    "full_properties": {
      "parameters": {
        "description": "Gets or sets the parameters of the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runOn": {
        "description": "Gets or sets the runOn which specifies the group name where the job is to be executed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runbook": {
        "description": "The runbook property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parameters",
      "runbook",
      "runOn"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/modules": {
    "api_version": "2022-08-08",
    "full_properties": {
      "contentLink": {
        "description": "Definition of the content link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentLink"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/nodeConfigurations": {
    "api_version": "2022-08-08",
    "full_properties": {
      "configuration": {
        "description": "The Dsc configuration property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incrementNodeConfigurationBuild": {
        "description": "If a new build version of NodeConfiguration is required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Definition of the content source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "incrementNodeConfigurationBuild",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/privateEndpointConnections": {
    "api_version": "2020-01-13-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/python2Packages": {
    "api_version": "2022-08-08",
    "full_properties": {
      "contentLink": {
        "description": "Definition of the content link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentLink"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/python3Packages": {
    "api_version": "2022-08-08",
    "full_properties": {
      "contentLink": {
        "description": "Definition of the content link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentLink"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/runbooks": {
    "api_version": "2022-08-08",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the runbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "draft": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logActivityTrace": {
        "description": "Gets or sets the activity-level tracing options of the runbook.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logProgress": {
        "description": "Gets or sets progress log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logVerbose": {
        "description": "Gets or sets verbose log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publishContentLink": {
        "description": "Definition of the content link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runbookType": {
        "description": "Gets or sets the type of the runbook.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "draft",
      "logActivityTrace",
      "logProgress",
      "logVerbose",
      "publishContentLink",
      "runbookType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/runbooks/draft": {
    "api_version": "2022-08-08",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/schedules": {
    "api_version": "2022-08-08",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "Gets or sets the frequency of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "Gets or sets the time zone of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "advancedSchedule",
      "description",
      "expiryTime",
      "frequency",
      "interval",
      "startTime",
      "timeZone"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/softwareUpdateConfigurations": {
    "api_version": "2019-06-01",
    "full_properties": {
      "error": {
        "description": "Error response of an operation failure",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scheduleInfo": {
        "description": "Definition of schedule parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tasks": {
        "description": "Task properties of the software update configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "updateConfiguration": {
        "description": "Update specific properties of the software update configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "error",
      "scheduleInfo",
      "tasks",
      "updateConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/sourceControls": {
    "api_version": "2022-08-08",
    "full_properties": {
      "autoSync": {
        "description": "The auto async of the source control. Default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "branch": {
        "description": "The repo branch of the source control. Include branch as empty string for VsoTfvc.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The user description of the source control.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folderPath": {
        "description": "The folder path of the source control. Path must be relative.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishRunbook": {
        "description": "The auto publish of the source control. Default is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "The repo url of the source control.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityToken": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceType": {
        "description": "The source type. Must be one of VsoGit, VsoTfvc, GitHub, case sensitive.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoSync",
      "branch",
      "description",
      "folderPath",
      "publishRunbook",
      "repoUrl",
      "securityToken",
      "sourceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/sourceControls/sourceControlSyncJobs": {
    "api_version": "2022-08-08",
    "full_properties": {
      "commitId": {
        "description": "The commit id of the source control sync job. If not syncing to a commitId, enter an empty string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "commitId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/variables": {
    "api_version": "2022-08-08",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the variable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEncrypted": {
        "description": "Gets or sets the encrypted flag of the variable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Gets or sets the value of the variable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "isEncrypted",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/watchers": {
    "api_version": "2020-01-13-preview",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "executionFrequencyInSeconds": {
        "description": "Gets or sets the frequency at which the watcher is invoked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scriptName": {
        "description": "Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptParameters": {
        "description": "Gets or sets the parameters of the script.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scriptRunOn": {
        "description": "Gets or sets the name of the hybrid worker group the watcher will run on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "executionFrequencyInSeconds",
      "scriptName",
      "scriptParameters",
      "scriptRunOn"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/webhooks": {
    "api_version": "2015-10-31",
    "full_properties": {
      "expiryTime": {
        "description": "Gets or sets the expiry time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets the value of the enabled flag of webhook.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the parameters of the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runOn": {
        "description": "Gets or sets the name of the hybrid worker group the webhook job will run on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runbook": {
        "description": "The runbook property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "Gets or sets the uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "expiryTime",
      "isEnabled",
      "parameters",
      "runbook",
      "runOn",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AutonomousDevelopmentPlatform/accounts": {
    "api_version": "2021-11-01-preview",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": "The api properties for special APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudConnectors": {
        "description": "External Cloud Service connectors",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customSubDomainName": {
        "description": "Optional subdomain name used for token-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamicThrottlingEnabled": {
        "description": "The flag to enable dynamic throttling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Gets or sets the managed resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "migrationToken": {
        "description": "Resource migration token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restore": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Device Update Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userOwnedStorage": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "cloudConnectors",
      "managedResourceGroupName",
      "allowedFqdnList",
      "apiProperties",
      "customSubDomainName",
      "disableLocalAuth",
      "migrationToken",
      "networkAcls",
      "restore",
      "restrictOutboundNetworkAccess",
      "userOwnedStorage",
      "dynamicThrottlingEnabled",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AutonomousDevelopmentPlatform/accounts/dataPools": {
    "api_version": "2021-11-01-preview",
    "full_properties": {
      "locations": {
        "description": "Gets or sets the collection of locations where Data Pool resources should be created",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Resource tags",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "locations",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureActiveDirectory/b2cDirectories": {
    "api_version": "2021-04-01",
    "full_properties": {
      "createTenantProperties": {
        "description": "These properties are used to create the Azure AD B2C tenant. These properties are not part of the Azure resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createTenantProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.AzureActiveDirectory/guestUsages": {
    "api_version": "2021-04-01",
    "full_properties": {
      "tenantId": {
        "description": "An identifier for the tenant for which the resource is being created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureArcData/dataControllers": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "basicLoginInformation": {
        "description": "Username and password for basic login authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterId": {
        "description": "If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extensionId": {
        "description": "If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "infrastructure": {
        "description": "The infrastructure the data controller is running on.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "k8sRaw": {
        "description": "The raw kubernetes information",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "lastUploadedDate": {
        "description": "Last uploaded date from Kubernetes cluster. Defaults to current date time",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceConfig": {
        "description": "Log analytics workspace id and primary key",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logsDashboardCredential": {
        "description": "Username and password for basic login authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metricsDashboardCredential": {
        "description": "Username and password for basic login authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onPremiseProperty": {
        "description": "Properties from the Kubernetes data controller",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uploadServicePrincipal": {
        "description": "Service principal for uploading billing, metrics and logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uploadWatermark": {
        "description": "Properties on upload watermark.  Mostly timestamp for each upload data type",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "basicLoginInformation",
      "k8sRaw",
      "lastUploadedDate",
      "logAnalyticsWorkspaceConfig",
      "onPremiseProperty",
      "uploadServicePrincipal",
      "uploadWatermark",
      "infrastructure",
      "clusterId",
      "extensionId",
      "logsDashboardCredential",
      "metricsDashboardCredential"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureArcData/dataControllers/activeDirectoryConnectors": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "domainServiceAccountLoginInformation": {
        "description": "Username and password for basic login authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spec": {
        "description": "The specifications of the AD Kubernetes resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the Kubernetes custom resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "domainServiceAccountLoginInformation",
      "spec",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureArcData/postgresInstances": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "admin": {
        "description": "The instance admin",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "basicLoginInformation": {
        "description": "Username and password for basic login authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataControllerId": {
        "description": "The data controller id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "k8sRaw": {
        "description": "The raw kubernetes information",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "lastUploadedDate": {
        "description": "Last uploaded date from Kubernetes cluster. Defaults to current date time",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "admin",
      "basicLoginInformation",
      "dataControllerId",
      "k8sRaw",
      "lastUploadedDate"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureArcData/sqlManagedInstances": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "activeDirectoryInformation": {
        "description": "Active Directory information that related to the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "admin": {
        "description": "The instance admin user",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "basicLoginInformation": {
        "description": "Username and password for basic login authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterId": {
        "description": "If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataControllerId": {
        "description": "null",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "The instance end time",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extensionId": {
        "description": "If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "k8sRaw": {
        "description": "The raw kubernetes information.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "lastUploadedDate": {
        "description": "Last uploaded date from Kubernetes cluster. Defaults to current date time",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this managed instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The instance start time",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "admin",
      "basicLoginInformation",
      "dataControllerId",
      "endTime",
      "k8sRaw",
      "lastUploadedDate",
      "startTime",
      "licenseType",
      "clusterId",
      "extensionId",
      "activeDirectoryInformation"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureArcData/sqlServerInstances": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "azureDefenderStatus": {
        "description": "Status of Azure Defender.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureDefenderStatusLastUpdated": {
        "description": "Timestamp of last Azure Defender status update.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "collation": {
        "description": "SQL Server collation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "containerResourceId": {
        "description": "ARM Resource id of the container resource (Azure Arc for Servers).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "currentVersion": {
        "description": "SQL Server current version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "edition": {
        "description": "SQL Server edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostType": {
        "description": "Type of host for Azure Arc SQL Server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "instanceName": {
        "description": "SQL Server instance name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "SQL Server license type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "patchLevel": {
        "description": "SQL Server update level.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "productId": {
        "description": "SQL Server product ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The cloud connectivity status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tcpDynamicPorts": {
        "description": "Dynamic TCP ports used by SQL Server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tcpStaticPorts": {
        "description": "Static TCP ports used by SQL Server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCore": {
        "description": "The number of logical processors used by the SQL Server instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "SQL Server version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "containerResourceId",
      "currentVersion",
      "edition",
      "instanceName",
      "licenseType",
      "patchLevel",
      "productId",
      "status",
      "tcpDynamicPorts",
      "tcpStaticPorts",
      "vCore",
      "version",
      "azureDefenderStatus",
      "azureDefenderStatusLastUpdated",
      "hostType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureData/sqlServerRegistrations": {
    "api_version": "2019-07-24-preview",
    "full_properties": {
      "propertyBag": {
        "description": "Optional Properties as JSON string",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGroup": {
        "description": "Resource Group Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subscriptionId": {
        "description": "Subscription Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "propertyBag",
      "resourceGroup",
      "subscriptionId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureData/sqlServerRegistrations/sqlServers": {
    "api_version": "2019-07-24-preview",
    "full_properties": {
      "cores": {
        "description": "Cores of the Sql Server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "Sql Server Edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "propertyBag": {
        "description": "Sql Server Json Property Bag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationID": {
        "description": "ID for Parent Sql Server Registration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of the Sql Server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cores",
      "edition",
      "propertyBag",
      "registrationID",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStack/linkedSubscriptions": {
    "api_version": "2020-06-01-preview",
    "full_properties": {
      "linkedSubscriptionId": {
        "description": "The identifier associated with the device subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationResourceId": {
        "description": "The identifier associated with the device registration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedSubscriptionId",
      "registrationResourceId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStack/registrations": {
    "api_version": "2022-06-01",
    "full_properties": {
      "registrationToken": {
        "description": "The token identifying registered Azure Stack",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "registrationToken"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStack/registrations/customerSubscriptions": {
    "api_version": "2022-06-01",
    "full_properties": {
      "tenantId": {
        "description": "Tenant Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/clusters": {
    "api_version": "2022-10-01",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/clusters/arcSettings": {
    "api_version": "2022-10-01",
    "full_properties": {
      "arcApplicationClientId": {
        "description": "App id of arc AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "arcApplicationObjectId": {
        "description": "Object id of arc AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "arcApplicationTenantId": {
        "description": "Tenant id of arc AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "arcInstanceResourceGroup": {
        "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "arcServicePrincipalObjectId": {
        "description": "Object id of arc AAD service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityProperties": {
        "description": "contains connectivity related configuration for ARC resources",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "arcInstanceResourceGroup",
      "arcApplicationClientId",
      "arcApplicationObjectId",
      "arcApplicationTenantId",
      "arcServicePrincipalObjectId",
      "connectivityProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/clusters/arcSettings/extensions": {
    "api_version": "2022-10-01",
    "full_properties": {
      "aksAssignedIdentity": {
        "description": "Identity of the Extension resource in an AKS cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoUpgradeMinorVersion": {
        "description": "Flag to note if this extension participates in auto upgrade of minor version, or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "configurationProtectedSettings": {
        "description": "Configuration settings that are sensitive, as name-value pairs for configuring this extension.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "configurationSettings": {
        "description": "Configuration settings, as name-value pairs for configuring this extension.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "errorInfo": {
        "description": "The error detail.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extensionParameters": {
        "description": "Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extensionType": {
        "description": "Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "releaseTrain": {
        "description": "ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "Scope of the extension. It can be either Cluster or Namespace; but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "statuses": {
        "description": "Status from this extension.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be 'false'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "extensionParameters",
      "autoUpgradeMinorVersion",
      "configurationProtectedSettings",
      "configurationSettings",
      "extensionType",
      "releaseTrain",
      "scope",
      "statuses",
      "version",
      "aksAssignedIdentity",
      "errorInfo",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/galleryimages": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "containerName": {
        "description": "Container Name for storage container",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "imagePath": {
        "description": "location of the image the gallery image should be created from",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "operating system type that the gallery image uses. Expected to be linux or windows.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceName": {
        "description": "name of the object to be used in moc",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "GalleryImageStatus defines the observed state of MOCGalleryImage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "containerName",
      "imagePath",
      "osType",
      "resourceName",
      "status"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/networkinterfaces": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "dnsSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "IPConfigurations - A list of IPConfigurations of the network interface.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "macAddress": {
        "description": "MacAddress - The MAC address of the network interface.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceName": {
        "description": "name of the object to be used in moc",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "NetworkInterfaceStatus defines the observed state of NetworkInterface",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dnsSettings",
      "ipConfigurations",
      "macAddress",
      "resourceName",
      "status"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/virtualharddisks": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "blockSizeBytes": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeBytes": {
        "description": "diskSizeBytes - size of the disk in GB",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamic": {
        "description": "Boolean for enabling dynamic sizing on the virtual hard disk",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logicalSectorBytes": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "physicalSectorBytes": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceName": {
        "description": "name of the object to be used in moc",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "VirtualHardDiskStatus defines the observed state of VirtualHardDisk",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "blockSizeBytes",
      "diskSizeBytes",
      "dynamic",
      "logicalSectorBytes",
      "physicalSectorBytes",
      "resourceName",
      "status"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/virtualmachines": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "hardwareProfile": {
        "description": "HardwareProfile - Specifies the hardware settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "NetworkProfile - describes the network configuration the virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "OsProfile - describes the configuration of the operating system and sets login data",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceName": {
        "description": "name of the object to be used in moc",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "SecurityProfile - Specifies the security settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "VirtualMachineStatus defines the observed state of VirtualMachine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "StorageProfile - contains information about the disks and storage information for the virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hardwareProfile",
      "networkProfile",
      "osProfile",
      "resourceName",
      "securityProfile",
      "status",
      "storageProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStackHCI/virtualnetworks": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "networkType": {
        "description": "Type of the network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceName": {
        "description": "name of the object to be used in moc",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "VirtualNetworkStatus defines the observed state of VirtualNetwork",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnets": {
        "description": "Subnet - list of subnets under the virtual network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "networkType",
      "resourceName",
      "status",
      "subnets"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BareMetal/crayServers": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "ipAddress": {
        "description": "Ip Address.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnetResourceId": {
        "description": "Subnet resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipAddress",
      "subnetResourceId"
    ],
    "required": [
      "name",
      "type",
      "location",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Batch/batchAccounts": {
    "api_version": "2022-10-01",
    "full_properties": {
      "allowedAuthenticationModes": {
        "description": "List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoStorage": {
        "description": "The properties related to the auto-storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultReference": {
        "description": "Identifies the Azure key vault associated with a Batch account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Network profile for Batch account, which contains network rule settings for each endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "poolAllocationMode": {
        "description": "The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "If not specified, the default value is 'enabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoStorage",
      "keyVaultReference",
      "poolAllocationMode",
      "encryption",
      "publicNetworkAccess",
      "allowedAuthenticationModes",
      "networkProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/applications": {
    "api_version": "2022-10-01",
    "full_properties": {
      "allowUpdates": {
        "description": "A value indicating whether packages within the application may be overwritten using the same version string.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationDefinitionId": {
        "description": "The fully qualified path of managed application definition Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "applicationType": {
        "description": "Resource Type of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineArguments": {
        "description": "Command Line Arguments for Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineSetting": {
        "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultVersion": {
        "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "errors": {
        "description": "The list of errors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filePath": {
        "description": "Specifies a path for the executable file for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpsEndpoints": {
        "description": "The list of application HTTPS endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconIndex": {
        "description": "Index of the icon.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconPath": {
        "description": "Path to icon.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "installScriptActions": {
        "description": "The list of install script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jitAccessPolicy": {
        "description": "Managed application Jit access policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageApplicationId": {
        "description": "Specifies the package application Id for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageFamilyName": {
        "description": "Specifies the package family name for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "privateLinkConfigurations": {
        "description": "The private link configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publisherPackageId": {
        "description": "The publisher package Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "showInPortal": {
        "description": "Specifies whether to show the RemoteApp program in the RD Web Access server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshEndpoints": {
        "description": "The list of application SSH endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uninstallScriptActions": {
        "description": "The list of uninstall script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationType",
      "computeProfile",
      "errors",
      "httpsEndpoints",
      "installScriptActions",
      "sshEndpoints",
      "uninstallScriptActions",
      "applicationDefinitionId",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "publisherPackageId",
      "jitAccessPolicy",
      "allowUpdates",
      "defaultVersion",
      "displayName",
      "commandLineArguments",
      "commandLineSetting",
      "description",
      "filePath",
      "friendlyName",
      "iconIndex",
      "iconPath",
      "showInPortal",
      "msixPackageApplicationId",
      "msixPackageFamilyName",
      "privateLinkConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/applications/versions": {
    "api_version": "2022-10-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/certificates": {
    "api_version": "2022-10-01",
    "full_properties": {
      "base64Value": {
        "description": "Gets or sets the base64 encoded value of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "data": {
        "description": "The maximum size is 10KB.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExportable": {
        "description": "Gets or sets the is exportable flag of the certificate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "Create keyVault contract details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "This must not be specified if the certificate format is Cer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "This must match the thumbprint from the name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprintAlgorithm": {
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "base64Value",
      "description",
      "isExportable",
      "thumbprint",
      "data",
      "password",
      "format",
      "thumbprintAlgorithm",
      "keyVault"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/pools": {
    "api_version": "2022-10-01",
    "full_properties": {
      "applicationLicenses": {
        "description": "The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationPackages": {
        "description": "Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.\n\nWarning: This property is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "coolAccess": {
        "description": "If enabled (true) the pool can contain cool Access enabled volumes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "devBoxDefinitionName": {
        "description": "Name of a Dev Box definition in parent Project of this Pool",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionType": {
        "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interNodeCommunication": {
        "description": "This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localAdministrator": {
        "description": "Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxTasksPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountConfiguration": {
        "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConfiguration": {
        "description": "The network configuration for a pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConnectionName": {
        "description": "Name of a Network Connection in parent Project of this Pool",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "qosType": {
        "description": "The qos type of the pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTask": {
        "description": "In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetNodeCommunicationMode": {
        "description": "If omitted, the default value is Default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSchedulingPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSlotsPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccounts": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serviceLevel",
      "size",
      "applicationLicenses",
      "applicationPackages",
      "certificates",
      "deploymentConfiguration",
      "displayName",
      "interNodeCommunication",
      "maxTasksPerNode",
      "metadata",
      "networkConfiguration",
      "scaleSettings",
      "startTask",
      "taskSchedulingPolicy",
      "userAccounts",
      "vmSize",
      "mountConfiguration",
      "qosType",
      "taskSlotsPerNode",
      "coolAccess",
      "encryptionType",
      "devBoxDefinitionName",
      "licenseType",
      "localAdministrator",
      "networkConnectionName",
      "targetNodeCommunicationMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/clusters": {
    "api_version": "2018-03-01",
    "full_properties": {
      "nodeSetup": {
        "description": "Node setup settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccountSettings": {
        "description": "Settings for user account that gets created on each on the nodes of a cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineConfiguration": {
        "description": "VM configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmPriority": {
        "description": "VM priority. Allowed values are: dedicated (default) and lowpriority.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machines in the cluster. All nodes in a cluster have the same VM size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace see Sizes for Virtual Machines (Linux). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "nodeSetup",
      "scaleSettings",
      "subnet",
      "userAccountSettings",
      "virtualMachineConfiguration",
      "vmPriority",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/fileServers": {
    "api_version": "2018-03-01",
    "full_properties": {
      "dataDisks": {
        "description": "Data disks settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshConfiguration": {
        "description": "SSH configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machine for the File Server. For information about available VM sizes from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataDisks",
      "sshConfiguration",
      "subnet",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/jobs": {
    "api_version": "2018-03-01",
    "full_properties": {
      "caffe2Settings": {
        "description": "Caffe2 job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caffeSettings": {
        "description": "Caffe job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "chainerSettings": {
        "description": "Chainer job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cluster": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cntkSettings": {
        "description": "CNTK (aka Microsoft Cognitive Toolkit) job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "constraints": {
        "description": "Constraints associated with the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSettings": {
        "description": "Docker container settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customMpiSettings": {
        "description": "Custom MPI job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customToolkitSettings": {
        "description": "Custom tool kit job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "A list of user defined environment variables which will be setup for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "experimentName": {
        "description": "Describe the experiment information of the job",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "horovodSettings": {
        "description": "Specifies the settings for Horovod job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputDirectories": {
        "description": "A list of input directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobPreparation": {
        "description": "Job preparation settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountVolumes": {
        "description": "Details of volumes to mount on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeCount": {
        "description": "Number of compute nodes to run the job on. The job will be gang scheduled on that many compute nodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputDirectories": {
        "description": "A list of output directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pyTorchSettings": {
        "description": "pyTorch job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedulingPriority": {
        "description": "Scheduling priority associated with the job. Possible values: low, normal, high.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secrets": {
        "description": "A list of user defined environment variables with secret values which will be setup for the job. Server will never report values of these variables back.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stdOutErrPathPrefix": {
        "description": "The path where the Batch AI service will store stdout, stderror and execution log of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tensorFlowSettings": {
        "description": "TensorFlow job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "caffe2Settings",
      "caffeSettings",
      "chainerSettings",
      "cluster",
      "cntkSettings",
      "constraints",
      "containerSettings",
      "customToolkitSettings",
      "environmentVariables",
      "experimentName",
      "inputDirectories",
      "jobPreparation",
      "nodeCount",
      "outputDirectories",
      "priority",
      "stdOutErrPathPrefix",
      "tensorFlowSettings",
      "mountVolumes",
      "pyTorchSettings",
      "secrets",
      "customMpiSettings",
      "horovodSettings",
      "schedulingPriority"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces": {
    "api_version": "2018-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/clusters": {
    "api_version": "2018-05-01",
    "full_properties": {
      "nodeSetup": {
        "description": "Node setup settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccountSettings": {
        "description": "Settings for user account that gets created on each on the nodes of a cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineConfiguration": {
        "description": "VM configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmPriority": {
        "description": "VM priority. Allowed values are: dedicated (default) and lowpriority.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machines in the cluster. All nodes in a cluster have the same VM size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace see Sizes for Virtual Machines (Linux). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "nodeSetup",
      "scaleSettings",
      "subnet",
      "userAccountSettings",
      "virtualMachineConfiguration",
      "vmPriority",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/experiments": {
    "api_version": "2018-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/experiments/jobs": {
    "api_version": "2018-05-01",
    "full_properties": {
      "caffe2Settings": {
        "description": "Caffe2 job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caffeSettings": {
        "description": "Caffe job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "chainerSettings": {
        "description": "Chainer job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cluster": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cntkSettings": {
        "description": "CNTK (aka Microsoft Cognitive Toolkit) job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "constraints": {
        "description": "Constraints associated with the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSettings": {
        "description": "Docker container settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customMpiSettings": {
        "description": "Custom MPI job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customToolkitSettings": {
        "description": "Custom tool kit job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "A list of user defined environment variables which will be setup for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "experimentName": {
        "description": "Describe the experiment information of the job",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "horovodSettings": {
        "description": "Specifies the settings for Horovod job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputDirectories": {
        "description": "A list of input directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobPreparation": {
        "description": "Job preparation settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountVolumes": {
        "description": "Details of volumes to mount on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeCount": {
        "description": "Number of compute nodes to run the job on. The job will be gang scheduled on that many compute nodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputDirectories": {
        "description": "A list of output directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pyTorchSettings": {
        "description": "pyTorch job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedulingPriority": {
        "description": "Scheduling priority associated with the job. Possible values: low, normal, high.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secrets": {
        "description": "A list of user defined environment variables with secret values which will be setup for the job. Server will never report values of these variables back.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stdOutErrPathPrefix": {
        "description": "The path where the Batch AI service will store stdout, stderror and execution log of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tensorFlowSettings": {
        "description": "TensorFlow job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "caffe2Settings",
      "caffeSettings",
      "chainerSettings",
      "cluster",
      "cntkSettings",
      "constraints",
      "containerSettings",
      "customToolkitSettings",
      "environmentVariables",
      "experimentName",
      "inputDirectories",
      "jobPreparation",
      "nodeCount",
      "outputDirectories",
      "priority",
      "stdOutErrPathPrefix",
      "tensorFlowSettings",
      "mountVolumes",
      "pyTorchSettings",
      "secrets",
      "customMpiSettings",
      "horovodSettings",
      "schedulingPriority"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/fileServers": {
    "api_version": "2018-05-01",
    "full_properties": {
      "dataDisks": {
        "description": "Data disks settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshConfiguration": {
        "description": "SSH configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machine for the File Server. For information about available VM sizes from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataDisks",
      "sshConfiguration",
      "subnet",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Blockchain/blockchainMembers": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "consortium": {
        "description": "Gets or sets the consortium for the blockchain member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "consortiumManagementAccountPassword": {
        "description": "Sets the managed consortium management account password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "consortiumMemberDisplayName": {
        "description": "Gets the display name of the member in the consortium.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "consortiumRole": {
        "description": "Gets the role of the member in the consortium.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firewallRules": {
        "description": "Gets or sets firewall rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Sets the basic auth password of the blockchain member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Gets or sets the blockchain protocol.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validatorNodesSku": {
        "description": "Payload of the blockchain member nodes Sku for a blockchain member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "consortium",
      "consortiumManagementAccountPassword",
      "consortiumMemberDisplayName",
      "consortiumRole",
      "firewallRules",
      "password",
      "protocol",
      "validatorNodesSku"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Blockchain/blockchainMembers/transactionNodes": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "firewallRules": {
        "description": "Gets or sets the firewall rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Sets the transaction node dns endpoint basic auth password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "firewallRules",
      "password"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/botServices": {
    "api_version": "2022-06-15-preview",
    "full_properties": {
      "allSettings": {
        "description": "Contains resource all settings defined as key/value pairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "appPasswordHint": {
        "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cmekKeyVaultUrl": {
        "description": "The CMK Url",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "developerAppInsightKey": {
        "description": "The Application Insights key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "developerAppInsightsApiKey": {
        "description": "The Application Insights Api Key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "developerAppInsightsApplicationId": {
        "description": "The Application Insights App Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The Name of the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endpoint": {
        "description": "The bot's endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "iconUrl": {
        "description": "The Icon Url of the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isCmekEnabled": {
        "description": "Whether Cmek is enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStreamingSupported": {
        "description": "Whether the bot is streaming supported",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "luisAppIds": {
        "description": "Collection of LUIS App Ids",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "luisKey": {
        "description": "The LUIS Key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "manifestUrl": {
        "description": "The bot's manifest url",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msaAppId": {
        "description": "Microsoft App Id for the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msaAppMSIResourceId": {
        "description": "Microsoft App Managed Identity Resource Id for the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msaAppTenantId": {
        "description": "Microsoft App Tenant Id for the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msaAppType": {
        "description": "Microsoft App Type for the bot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "openWithHint": {
        "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Contains resource parameters defined as key/value pairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether the bot is in an isolated network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publishingCredentials": {
        "description": "Publishing credentials of the resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "schemaTransformationVersion": {
        "description": "The channel schema transformation version for the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageResourceId": {
        "description": "The storage resourceId for the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The Tenant Id for the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "developerAppInsightKey",
      "developerAppInsightsApiKey",
      "developerAppInsightsApplicationId",
      "displayName",
      "endpoint",
      "iconUrl",
      "luisAppIds",
      "luisKey",
      "msaAppId",
      "cmekKeyVaultUrl",
      "isCmekEnabled",
      "allSettings",
      "appPasswordHint",
      "disableLocalAuth",
      "isStreamingSupported",
      "manifestUrl",
      "msaAppMSIResourceId",
      "msaAppTenantId",
      "msaAppType",
      "openWithHint",
      "parameters",
      "publicNetworkAccess",
      "publishingCredentials",
      "schemaTransformationVersion",
      "storageResourceId",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/botServices/channels": {
    "api_version": "2022-06-15-preview",
    "full_properties": {
      "etag": {
        "description": "Entity Tag of the resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "Specifies the location of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "etag",
      "location"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/botServices/connections": {
    "api_version": "2022-06-15-preview",
    "full_properties": {
      "clientId": {
        "description": "Client Id associated with the Connection Setting.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client Secret associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "Id associated with the Connection Setting.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name associated with the Connection Setting.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Service Provider Parameters associated with the Connection Setting",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "Scopes associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderDisplayName": {
        "description": "Service Provider Display Name associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderId": {
        "description": "Service Provider Id associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientId",
      "clientSecret",
      "parameters",
      "scopes",
      "serviceProviderDisplayName",
      "serviceProviderId",
      "id",
      "name",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/botServices/privateEndpointConnections": {
    "api_version": "2022-06-15-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/enterpriseChannels": {
    "api_version": "2018-07-12",
    "full_properties": {
      "nodes": {
        "description": "The nodes associated with the Enterprise Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The current state of the Enterprise Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "nodes",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/redis": {
    "api_version": "2022-06-01",
    "full_properties": {
      "enableNonSslPort": {
        "description": "Microsoft.Cache/Redis enableNonSslPort. Enables less secure direct access to redis on port 6379 WITHOUT SSL tunneling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxMemoryPolicy": {
        "description": "Microsoft.Cache/Redis: maxMemoryPolicy. How Redis will select what to remove when maxmemory is reached. Default: VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "redisVersion": {
        "description": "Microsoft.Cache/Redis: version of Redis",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Microsoft.Cache/Redis: sku",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sku",
      "redisVersion",
      "maxMemoryPolicy",
      "enableNonSslPort"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/redis/firewallRules": {
    "api_version": "2022-06-01",
    "full_properties": {
      "endIP": {
        "description": "highest IP address included in the range",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIP": {
        "description": "lowest IP address included in the range",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIP",
      "startIP"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/redis/linkedServers": {
    "api_version": "2022-06-01",
    "full_properties": {
      "linkedRedisCacheId": {
        "description": "Fully qualified resourceId of the linked redis cache.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linkedRedisCacheLocation": {
        "description": "Location of the linked redis cache.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverRole": {
        "description": "Role of the linked server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedRedisCacheId",
      "linkedRedisCacheLocation",
      "serverRole"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/redis/patchSchedules": {
    "api_version": "2022-06-01",
    "full_properties": {
      "scheduleEntries": {
        "description": "List of patch schedules for a Redis cache.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "scheduleEntries"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/redis/privateEndpointConnections": {
    "api_version": "2022-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/redisEnterprise": {
    "api_version": "2022-01-01",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Cache/redisEnterprise/databases": {
    "api_version": "2022-01-01",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/redisEnterprise/privateEndpointConnections": {
    "api_version": "2022-01-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/cdnWebApplicationFirewallPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "customRules": {
        "description": "Defines contents of custom rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Key-Value pair representing additional properties for Web Application Firewall policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedRules": {
        "description": "Defines the list of managed rule sets for the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policySettings": {
        "description": "Defines contents of a web application firewall global configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rateLimitRules": {
        "description": "Defines contents of rate limit rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customRules",
      "managedRules",
      "policySettings",
      "rateLimitRules",
      "extendedProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "dnsConfig": {
        "description": "The DNS settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "The state of the Experiment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "The list of endpoints in the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Key-Value pair representing additional properties for profiles.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxReturn": {
        "description": "Maximum number of endpoints to be returned for MultiValue routing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorConfig": {
        "description": "The endpoint monitoring settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originResponseTimeoutSeconds": {
        "description": "Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "profileStatus": {
        "description": "The status of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRoutingMethod": {
        "description": "The traffic routing method of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficViewEnrollmentStatus": {
        "description": "Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profileStatus",
      "trafficRoutingMethod",
      "dnsConfig",
      "monitorConfig",
      "endpoints",
      "trafficViewEnrollmentStatus",
      "maxReturn",
      "enabledState",
      "resourceState",
      "originResponseTimeoutSeconds",
      "extendedProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/afdEndpoints": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "autoGeneratedDomainNameLabelScope": {
        "description": "Indicates the endpoint name reuse scope. The default value is TenantReuse.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originResponseTimeoutSeconds": {
        "description": "Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabledState",
      "originResponseTimeoutSeconds",
      "autoGeneratedDomainNameLabelScope"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/afdEndpoints/routes": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "cacheConfiguration": {
        "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "compressionSettings": {
        "description": "settings for compression.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condition": {
        "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customDomains": {
        "description": "Domains referenced by this endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointNames": {
        "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forwardingProtocol": {
        "description": "Protocol this rule will use when forwarding traffic to backends.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsRedirect": {
        "description": "Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Used to specify whether a route is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkToDefaultDomain": {
        "description": "whether this route will be linked to the default endpoint domain.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originGroup": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originPath": {
        "description": "A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "patternsToMatch": {
        "description": "The route patterns of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queryStringCachingBehavior": {
        "description": "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ruleSets": {
        "description": "rule sets referenced by this endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportedProtocols": {
        "description": "List of supported protocols for this route.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "condition",
      "endpointNames",
      "isEnabled",
      "name",
      "source",
      "compressionSettings",
      "customDomains",
      "enabledState",
      "forwardingProtocol",
      "httpsRedirect",
      "linkToDefaultDomain",
      "originGroup",
      "originPath",
      "patternsToMatch",
      "queryStringCachingBehavior",
      "ruleSets",
      "supportedProtocols",
      "cacheConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/customDomains": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "azureDnsZone": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Key-Value pair representing migration properties for domains.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostName": {
        "description": "The host name of the domain. Must be a domain name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "preValidatedCustomDomainResourceId": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tlsSettings": {
        "description": "The JSON object that contains the properties to secure a domain.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureDnsZone",
      "hostName",
      "tlsSettings",
      "preValidatedCustomDomainResourceId",
      "extendedProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "contentTypesToCompress": {
        "description": "List of content types on which compression applies. The value should be a valid MIME type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHeaders": {
        "description": "List of custom headers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultOriginGroup": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryPolicy": {
        "description": "A policy that specifies the delivery rules to be used for an endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointLocation": {
        "description": "Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endpointMonitorStatus": {
        "description": "The monitoring status of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointStatus": {
        "description": "The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoFilters": {
        "description": "List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoMapping": {
        "description": "The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isCompressionEnabled": {
        "description": "Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isHttpAllowed": {
        "description": "Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isHttpsAllowed": {
        "description": "Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minChildEndpoints": {
        "description": "The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "optimizationType": {
        "description": "Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originGroups": {
        "description": "The origin groups comprising of origins that are used for load balancing the traffic based on availability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originHostHeader": {
        "description": "The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "originPath": {
        "description": "A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "origins": {
        "description": "The source of the content being delivered via CDN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "Port used by the container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "probePath": {
        "description": "Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queryStringCachingBehavior": {
        "description": "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "The resource Id of the connectivity endpoint (optional).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnets": {
        "description": "The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "target": {
        "description": "The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "urlSigningKeys": {
        "description": "List of keys used to validate the signed URL hashes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webApplicationFirewallPolicyLink": {
        "description": "Defines the Web Application Firewall policy for the endpoint (if applicable)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weight": {
        "description": "The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentTypesToCompress",
      "geoFilters",
      "isCompressionEnabled",
      "isHttpAllowed",
      "isHttpsAllowed",
      "optimizationType",
      "originHostHeader",
      "originPath",
      "origins",
      "queryStringCachingBehavior",
      "probePath",
      "deliveryPolicy",
      "targetResourceId",
      "target",
      "endpointStatus",
      "weight",
      "priority",
      "endpointLocation",
      "endpointMonitorStatus",
      "minChildEndpoints",
      "geoMapping",
      "subnets",
      "customHeaders",
      "name",
      "port",
      "webApplicationFirewallPolicyLink",
      "defaultOriginGroup",
      "originGroups",
      "urlSigningKeys",
      "resourceId",
      "type"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints/customDomains": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "hostName": {
        "description": "The host name of the custom domain. Must be a domain name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints/originGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "healthProbeSettings": {
        "description": "The JSON object that contains the properties to send health probes to origin.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "origins": {
        "description": "The source of the content being delivered via CDN within given origin group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "responseBasedOriginErrorDetectionSettings": {
        "description": "The JSON object that contains the properties to determine origin health using real requests/responses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
        "description": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "healthProbeSettings",
      "origins",
      "responseBasedOriginErrorDetectionSettings",
      "trafficRestorationTimeToHealedOrNewEndpointsInMinutes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints/origins": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "enabled": {
        "description": "Origin is enabled for load balancing or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostName": {
        "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpPort": {
        "description": "The value of the HTTP port. Must be between 1 and 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsPort": {
        "description": "The value of the HTTPS port. Must be between 1 and 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originHostHeader": {
        "description": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkAlias": {
        "description": "The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkApprovalMessage": {
        "description": "A custom message to be included in the approval request to connect to the Private Link.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkLocation": {
        "description": "The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weight": {
        "description": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "hostName",
      "httpPort",
      "httpsPort",
      "originHostHeader",
      "priority",
      "weight",
      "privateLinkAlias",
      "privateLinkApprovalMessage",
      "privateLinkLocation",
      "privateLinkResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/originGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "healthProbeSettings": {
        "description": "The JSON object that contains the properties to send health probes to origin.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingSettings": {
        "description": "Round-Robin load balancing settings for a backend pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "responseBasedAfdOriginErrorDetectionSettings": {
        "description": "The JSON object that contains the properties to determine origin health using real requests/responses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sessionAffinityState": {
        "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
        "description": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "healthProbeSettings",
      "loadBalancingSettings",
      "responseBasedAfdOriginErrorDetectionSettings",
      "sessionAffinityState",
      "trafficRestorationTimeToHealedOrNewEndpointsInMinutes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/originGroups/origins": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "azureOrigin": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enforceCertificateNameCheck": {
        "description": "Whether to enable certificate name check at origin level",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostName": {
        "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpPort": {
        "description": "The value of the HTTP port. Must be between 1 and 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsPort": {
        "description": "The value of the HTTPS port. Must be between 1 and 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originHostHeader": {
        "description": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResource": {
        "description": "Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weight": {
        "description": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureOrigin",
      "enabledState",
      "hostName",
      "httpPort",
      "httpsPort",
      "originHostHeader",
      "priority",
      "sharedPrivateLinkResource",
      "weight",
      "enforceCertificateNameCheck"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/ruleSets": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/ruleSets/rules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "actions": {
        "description": "A list of actions that are executed when all the conditions of a rule are satisfied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "conditions": {
        "description": "A list of conditions that must be matched for the actions to be executed",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "matchProcessingBehavior": {
        "description": "If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "order": {
        "description": "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "conditions",
      "matchProcessingBehavior",
      "order"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/secrets": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "attributes": {
        "description": "The secret management attributes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The content type of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The json object containing secret parameters",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "uniqueIdentifier",
      "value",
      "attributes",
      "contentType",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/securityPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "parameters": {
        "description": "The json object containing security policy parameters",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CertificateRegistration/certificateOrders": {
    "api_version": "2022-03-01",
    "full_properties": {
      "autoRenew": {
        "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "State of the Key Vault secret.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "csr": {
        "description": "Last CSR that was created for this order.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "distinguishedName": {
        "description": "Certificate distinguished name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keySize": {
        "description": "Certificate key size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "productType": {
        "description": "Certificate product type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validityInYears": {
        "description": "Duration in years (must be 1).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoRenew",
      "certificates",
      "csr",
      "distinguishedName",
      "keySize",
      "productType",
      "validityInYears"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CertificateRegistration/certificateOrders/certificates": {
    "api_version": "2022-03-01",
    "full_properties": {
      "keyVaultId": {
        "description": "Key Vault resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyVaultId",
      "keyVaultSecretName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Chaos/experiments": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "description": {
        "description": "The description of the details or intents of the Experiment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "The state of the Experiment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointA": {
        "description": "Defines the endpoint properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointB": {
        "description": "Defines the endpoint properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "selectors": {
        "description": "List of selectors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startOnCreation": {
        "description": "A boolean value that indicates if experiment should be started on creation or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "steps": {
        "description": "List of steps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "enabledState",
      "endpointA",
      "endpointB",
      "resourceState",
      "selectors",
      "startOnCreation",
      "steps"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CognitiveServices/accounts": {
    "api_version": "2022-10-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CognitiveServices/accounts/commitmentPlans": {
    "api_version": "2022-10-01",
    "full_properties": {
      "autoRenew": {
        "description": "AutoRenew commitment plan.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "current": {
        "description": "Cognitive Services account commitment period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingModel": {
        "description": "Account hosting model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "next": {
        "description": "Cognitive Services account commitment period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planType": {
        "description": "Commitment plan type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoRenew",
      "current",
      "hostingModel",
      "next",
      "planType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CognitiveServices/accounts/deployments": {
    "api_version": "2022-10-01",
    "full_properties": {
      "active": {
        "description": "True if deployment is currently active, false if completed and null if not started.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Who authored the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorEmail": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "debugSetting": {
        "description": "The debug setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Who performed the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Details on deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressionEvaluationOptions": {
        "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "helmChartPath": {
        "description": "Helm chart directory path in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "helmValues": {
        "description": "Helm Values.yaml file location in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "Identifier for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeManifestLocations": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manifestType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "message": {
        "description": "Details about deployment status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "model": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onErrorDeployment": {
        "description": "Deployment on error behavior.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "overrides": {
        "description": "Manifest override values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "raiPolicyName": {
        "description": "The name of RAI policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Deployment status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Entity representing the reference to the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "active",
      "author",
      "author_email",
      "deployer",
      "details",
      "end_time",
      "id",
      "message",
      "start_time",
      "status",
      "mode",
      "parameters",
      "parametersLink",
      "template",
      "templateLink",
      "debugSetting",
      "authorEmail",
      "endTime",
      "startTime",
      "onErrorDeployment",
      "expressionEvaluationOptions",
      "model",
      "scaleSettings",
      "helmChartPath",
      "helmValues",
      "kubeManifestLocations",
      "manifestType",
      "overrides",
      "raiPolicyName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CognitiveServices/accounts/privateEndpointConnections": {
    "api_version": "2022-10-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Communication/communicationServices": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "dataLocation": {
        "description": "The location where the communication service stores its data at rest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linkedDomains": {
        "description": "List of email Domain resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataLocation",
      "linkedDomains"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Communication/emailServices": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "dataLocation": {
        "description": "The location where the email service stores its data at rest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataLocation"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Communication/emailServices/domains": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "authCode": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "autoCreateTopicWithFirstSubscription": {
        "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoDeleteTopicWithLastSubscription": {
        "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoRenew": {
        "description": "<code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consent": {
        "description": "Domain purchase consent object, representing acceptance of applicable legal agreements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactAdmin": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactBilling": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactRegistrant": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactTech": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataResidencyBoundary": {
        "description": "Data Residency Boundary of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsType": {
        "description": "Current DNS type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsZoneId": {
        "description": "Azure DNS Zone to use",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainManagement": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundIpRules": {
        "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchema": {
        "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchemaMapping": {
        "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacy": {
        "description": "<code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetDnsType": {
        "description": "Target DNS type (would be used for migration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userEngagementTracking": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validSenderUsernames": {
        "description": "Collection of valid sender usernames. This is a key-value pair where key=username and value=display name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authCode",
      "autoRenew",
      "consent",
      "contactAdmin",
      "contactBilling",
      "contactRegistrant",
      "contactTech",
      "dnsType",
      "dnsZoneId",
      "privacy",
      "targetDnsType",
      "inputSchema",
      "inputSchemaMapping",
      "inboundIpRules",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "autoCreateTopicWithFirstSubscription",
      "autoDeleteTopicWithLastSubscription",
      "disableLocalAuth",
      "domainManagement",
      "userEngagementTracking",
      "validSenderUsernames",
      "dataResidencyBoundary"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/availabilitySets": {
    "api_version": "2022-08-01",
    "full_properties": {
      "platformFaultDomainCount": {
        "description": "Microsoft.Compute/availabilitySets - Platform fault domain count",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformUpdateDomainCount": {
        "description": "Microsoft.Compute/availabilitySets - Platform update domain count",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "platformUpdateDomainCount",
      "platformFaultDomainCount"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/capacityReservationGroups": {
    "api_version": "2022-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/capacityReservationGroups/capacityReservations": {
    "api_version": "2022-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Compute/cloudServices": {
    "api_version": "2022-04-04",
    "full_properties": {
      "allowModelOverride": {
        "description": "(Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.\r\nThe default value is `false`.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "configuration": {
        "description": "Specifies the XML service configuration (.cscfg) for the cloud service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "configurationUrl": {
        "description": "Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.\r\nThis is a write-only property and is not returned in GET calls.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extensionProfile": {
        "description": "Describes a cloud service extension profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Network Profile for the cloud service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Describes the OS profile for the cloud service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "packageUrl": {
        "description": "Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.\r\nThis is a write-only property and is not returned in GET calls.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "roleProfile": {
        "description": "Describes the role profile for the cloud service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startCloudService": {
        "description": "(Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.\r\nIf false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "configurationUrl",
      "extensionProfile",
      "networkProfile",
      "osProfile",
      "packageUrl",
      "roleProfile",
      "startCloudService",
      "upgradeMode",
      "allowModelOverride"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/diskAccesses": {
    "api_version": "2022-07-02",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/diskAccesses/privateEndpointConnections": {
    "api_version": "2022-07-02",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/diskEncryptionSets": {
    "api_version": "2022-07-02",
    "full_properties": {
      "activeKey": {
        "description": "Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "Multi-tenant application client id to access key vault in a different tenant. Setting the value to 'None' will clear the property.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rotationToLatestKeyVersionEnabled": {
        "description": "Set this flag to true to enable auto-updating of this disk encryption set to the latest key version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activeKey",
      "encryptionType",
      "rotationToLatestKeyVersionEnabled",
      "federatedClientId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/disks": {
    "api_version": "2022-07-02",
    "full_properties": {
      "accountType": {
        "description": "the storage account type of the disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "burstingEnabled": {
        "description": "Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "completionPercent": {
        "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataAccessAuthMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskAccessId": {
        "description": "ARM id of the DiskAccess resource for using private endpoints on disks.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskBlobName": {
        "description": "When backed by a blob, the name of the VHD blob without extension.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskIOPSReadOnly": {
        "description": "The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskIOPSReadWrite": {
        "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskMBpsReadOnly": {
        "description": "The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskMBpsReadWrite": {
        "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGiB": {
        "description": "The size of the disk in Gibibytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskState": {
        "description": "The state of the disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskType": {
        "description": "The storage type for the disk (i.e. Standard, Premium).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskUri": {
        "description": "When backed by a blob, the URI of underlying blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption at rest settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostCaching": {
        "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "leasedByLabVmId": {
        "description": "The resource ID of the VM to which this disk is leased.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskId": {
        "description": "When backed by managed disk, this is the ID of the compute disk resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxShares": {
        "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAccessPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedForFrequentAttach": {
        "description": "Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": "Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Contains the security related information for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "When backed by a blob, the storage account where the blob is.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportedCapabilities": {
        "description": "List of supported capabilities persisted on the disk resource for VM use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsHibernation": {
        "description": "Indicates the OS on a disk supports hibernation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tier": {
        "description": "Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountType",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "osType",
      "diskBlobName",
      "diskSizeGiB",
      "diskType",
      "diskUri",
      "hostCaching",
      "leasedByLabVmId",
      "managedDiskId",
      "provisioningState",
      "uniqueIdentifier",
      "diskIOPSReadWrite",
      "diskMBpsReadWrite",
      "storageAccountId",
      "encryptionSettingsCollection",
      "hyperVGeneration",
      "encryption",
      "diskIOPSReadOnly",
      "diskMBpsReadOnly",
      "maxShares",
      "diskAccessId",
      "networkAccessPolicy",
      "diskState",
      "tier",
      "burstingEnabled",
      "purchasePlan",
      "securityProfile",
      "supportsHibernation",
      "completionPercent",
      "publicNetworkAccess",
      "supportedCapabilities",
      "dataAccessAuthMode",
      "optimizedForFrequentAttach"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/galleries": {
    "api_version": "2022-03-03",
    "full_properties": {
      "description": {
        "description": "The description of this Shared Image Gallery resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "galleryResourceId": {
        "description": "The resource ID of the backing Azure Compute Gallery.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "identifier": {
        "description": "Describes the gallery unique name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharingProfile": {
        "description": "Profile for gallery sharing to subscription or tenant",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePolicy": {
        "description": "Contains information about the soft deletion policy of the gallery.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "identifier",
      "sharingProfile",
      "softDeletePolicy",
      "galleryResourceId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/galleries/applications": {
    "api_version": "2022-03-03",
    "full_properties": {
      "customActions": {
        "description": "A list of custom actions that can be performed with all of the Gallery Application Versions within this Gallery Application.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this gallery Application Definition resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endOfLifeDate": {
        "description": "The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eula": {
        "description": "The Eula agreement for the gallery Application Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privacyStatementUri": {
        "description": "The privacy statement uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "releaseNoteUri": {
        "description": "The release note uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportedOSType": {
        "description": "This property allows you to specify the supported type of the OS that application is built for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "endOfLifeDate",
      "eula",
      "privacyStatementUri",
      "releaseNoteUri",
      "supportedOSType",
      "customActions"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/galleries/applications/versions": {
    "api_version": "2022-03-03",
    "full_properties": {
      "publishingProfile": {
        "description": "The publishing profile of a gallery image version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "safetyProfile": {
        "description": "The safety profile of the Gallery Application Version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publishingProfile",
      "safetyProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/galleries/images": {
    "api_version": "2022-03-03",
    "full_properties": {
      "architecture": {
        "description": "The architecture of the image. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this gallery image definition resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disallowed": {
        "description": "Describes the disallowed disk types.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endOfLifeDate": {
        "description": "The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eula": {
        "description": "The Eula agreement for the gallery image definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "features": {
        "description": "A list of gallery image features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identifier": {
        "description": "This is the gallery image definition identifier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Indicates whether this gallery image is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isOverride": {
        "description": "Indicates whether this gallery has been overridden for this lab account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isPlanAuthorized": {
        "description": "Indicates if the plan has been authorized for programmatic deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osState": {
        "description": "This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacyStatementUri": {
        "description": "The privacy statement uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": "Describes the gallery image definition purchase plan. This is used by marketplace images.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recommended": {
        "description": "The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "releaseNoteUri": {
        "description": "The release note uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "disallowed",
      "endOfLifeDate",
      "eula",
      "identifier",
      "osState",
      "osType",
      "privacyStatementUri",
      "purchasePlan",
      "recommended",
      "releaseNoteUri",
      "isEnabled",
      "isOverride",
      "isPlanAuthorized",
      "provisioningState",
      "uniqueIdentifier",
      "hyperVGeneration",
      "features",
      "architecture"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/galleries/images/versions": {
    "api_version": "2022-03-03",
    "full_properties": {
      "publishingProfile": {
        "description": "The publishing profile of a gallery image Version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "safetyProfile": {
        "description": "This is the safety profile of the Gallery Image Version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "This is the storage profile of a Gallery Image Version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publishingProfile",
      "storageProfile",
      "safetyProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/hostGroups": {
    "api_version": "2022-08-01",
    "full_properties": {
      "additionalCapabilities": {
        "description": "Enables or disables a capability on the dedicated host group.<br><br>Minimum api-version: 2022-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformFaultDomainCount": {
        "description": "Number of fault domains that the host group can span.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportAutomaticPlacement": {
        "description": "Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'false' when not provided. <br><br>Minimum api-version: 2020-06-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "platformFaultDomainCount",
      "supportAutomaticPlacement",
      "additionalCapabilities"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/hostGroups/hosts": {
    "api_version": "2022-08-01",
    "full_properties": {
      "autoReplaceOnFailure": {
        "description": "Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformFaultDomain": {
        "description": "Fault domain of the dedicated host within a dedicated host group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoReplaceOnFailure",
      "licenseType",
      "platformFaultDomain"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Compute/images": {
    "api_version": "2022-08-01",
    "full_properties": {
      "availableRegions": {
        "description": "The available regions of the image in the shared gallery.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Is the image enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceVirtualMachine": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Describes a storage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sourceVirtualMachine",
      "storageProfile",
      "hyperVGeneration",
      "availableRegions",
      "enabledState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/proximityPlacementGroups": {
    "api_version": "2022-08-01",
    "full_properties": {
      "colocationStatus": {
        "description": "Instance view status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "intent": {
        "description": "Specifies the user intent of the proximity placement group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proximityPlacementGroupType": {
        "description": "Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br> **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br> **Ultra** : For future use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "proximityPlacementGroupType",
      "colocationStatus",
      "intent"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/restorePointCollections": {
    "api_version": "2022-08-01",
    "full_properties": {
      "source": {
        "description": "The properties of the source resource that this restore point collection is created from.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/restorePointCollections/restorePoints": {
    "api_version": "2022-08-01",
    "full_properties": {
      "consistencyMode": {
        "description": "ConsistencyMode of the RestorePoint. Can be specified in the input while creating a restore point. For now, only CrashConsistent is accepted as a valid input. Please refer to https://aka.ms/RestorePoints for more details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "excludeDisks": {
        "description": "List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceRestorePoint": {
        "description": "The API entity reference.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeCreated": {
        "description": "Gets the creation time of the restore point.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "excludeDisks",
      "timeCreated",
      "sourceRestorePoint",
      "consistencyMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/snapshots": {
    "api_version": "2022-07-02",
    "full_properties": {
      "completionPercent": {
        "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "copyCompletionError": {
        "description": "Indicates the error details if the background copy of a resource created via the CopyStart operation fails.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a target resource from a source resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataAccessAuthMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskAccessId": {
        "description": "ARM id of the DiskAccess resource for using private endpoints on disks.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskState": {
        "description": "The state of the snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption at rest settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fileSystemId": {
        "description": "UUID v4 used to identify the FileSystem",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incremental": {
        "description": "Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAccessPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": "Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Contains the security related information for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportedCapabilities": {
        "description": "List of supported capabilities persisted on the disk resource for VM use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsHibernation": {
        "description": "Indicates the OS on a snapshot supports hibernation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fileSystemId",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "osType",
      "encryptionSettingsCollection",
      "hyperVGeneration",
      "incremental",
      "encryption",
      "diskAccessId",
      "networkAccessPolicy",
      "diskState",
      "purchasePlan",
      "supportsHibernation",
      "completionPercent",
      "publicNetworkAccess",
      "supportedCapabilities",
      "securityProfile",
      "snapshotType",
      "dataAccessAuthMode",
      "copyCompletionError"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/sshPublicKeys": {
    "api_version": "2022-08-01",
    "full_properties": {
      "publicKey": {
        "description": "SSH public key used to authenticate to a virtual machine through ssh. If this property is not initially provided when the resource is created, the publicKey property will be populated when generateKeyPair is called. If the public key is provided upon resource creation, the provided public key needs to be at least 2048-bit and in ssh-rsa format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicKey"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets": {
    "api_version": "2022-08-01",
    "full_properties": {
      "upgradePolicy": {
        "description": "Microsoft.Compute/virtualMachineScaleSets - Upgrade policy",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineProfile": {
        "description": "Microsoft.Compute/virtualMachineScaleSets - Virtual machine policy",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "upgradePolicy",
      "virtualMachineProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets/extensions": {
    "api_version": "2022-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets/virtualMachines": {
    "api_version": "2022-08-01",
    "full_properties": {
      "additionalCapabilities": {
        "description": "Enables or disables a capability on the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySet": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network interfaces or the networking configuration of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfileConfiguration": {
        "description": "Describes a virtual machine scale set VM network profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectionPolicy": {
        "description": "The protection policy of a virtual machine scale set VM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Specifies the Security profile settings for the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the virtual machine disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userData": {
        "description": "UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilitySet",
      "diagnosticsProfile",
      "hardwareProfile",
      "licenseType",
      "networkProfile",
      "osProfile",
      "storageProfile",
      "additionalCapabilities",
      "networkProfileConfiguration",
      "protectionPolicy",
      "securityProfile",
      "userData"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/extensions": {
    "api_version": "2022-08-01",
    "full_properties": {
      "autoUpgradeMinorVersion": {
        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticUpgrade": {
        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceUpdateTag": {
        "description": "How the extension handler should be forced to update even if the extension configuration has not changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "instanceView": {
        "description": "The instance view of a virtual machine extension.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedSettings": {
        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "protectedSettingsFromKeyVault": {
        "description": "Describes a reference to Key Vault Secret",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "publisher": {
        "description": "The name of the extension handler publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "settings": {
        "description": "Json formatted public settings for the extension.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "suppressFailures": {
        "description": "Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeHandlerVersion": {
        "description": "Specifies the version of the script handler.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoUpgradeMinorVersion",
      "forceUpdateTag",
      "instanceView",
      "protectedSettings",
      "publisher",
      "settings",
      "type",
      "typeHandlerVersion",
      "enableAutomaticUpgrade",
      "suppressFailures",
      "protectedSettingsFromKeyVault"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/runCommands": {
    "api_version": "2022-08-01",
    "full_properties": {
      "asyncExecution": {
        "description": "Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "errorBlobUri": {
        "description": "Specifies the Azure storage blob where script error stream will be uploaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputBlobUri": {
        "description": "Specifies the Azure storage blob where script output stream will be uploaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The parameters used by the script.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedParameters": {
        "description": "The parameters used by the script.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runAsPassword": {
        "description": "Specifies the user account password on the VM when executing the run command.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runAsUser": {
        "description": "Specifies the user account on the VM when executing the run command.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "source": {
        "description": "Describes the script sources for run command.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeoutInSeconds": {
        "description": "The timeout in seconds to execute the run command.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "asyncExecution",
      "errorBlobUri",
      "outputBlobUri",
      "parameters",
      "protectedParameters",
      "runAsPassword",
      "runAsUser",
      "source",
      "timeoutInSeconds"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/virtualMachines": {
    "api_version": "2022-08-01",
    "full_properties": {
      "availabilitySet": {
        "description": "Microsoft.Compute/virtualMachines - Availability set",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Microsoft.Compute/virtualMachines - Hardware profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Microsoft.Compute/virtualMachines - Network profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Mirosoft.Compute/virtualMachines - Operating system profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Microsoft.Compute/virtualMachines - Storage profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilitySet",
      "hardwareProfile",
      "storageProfile",
      "osProfile",
      "networkProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/virtualMachines/extensions": {
    "api_version": "2016-03-30",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "type",
      "properties",
      "apiVersion",
      "location"
    ]
  },
  "Microsoft.Compute/virtualMachines/runCommands": {
    "api_version": "2022-08-01",
    "full_properties": {
      "asyncExecution": {
        "description": "Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "errorBlobUri": {
        "description": "Specifies the Azure storage blob where script error stream will be uploaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputBlobUri": {
        "description": "Specifies the Azure storage blob where script output stream will be uploaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The parameters used by the script.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedParameters": {
        "description": "The parameters used by the script.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runAsPassword": {
        "description": "Specifies the user account password on the VM when executing the run command.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runAsUser": {
        "description": "Specifies the user account on the VM when executing the run command.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "source": {
        "description": "Describes the script sources for run command.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeoutInSeconds": {
        "description": "The timeout in seconds to execute the run command.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "asyncExecution",
      "errorBlobUri",
      "outputBlobUri",
      "parameters",
      "protectedParameters",
      "runAsPassword",
      "runAsUser",
      "source",
      "timeoutInSeconds"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConfidentialLedger/ledgers": {
    "api_version": "2022-09-08-preview",
    "full_properties": {
      "aadBasedSecurityPrincipals": {
        "description": "Array of all AAD based Security Principals.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certBasedSecurityPrincipals": {
        "description": "Array of all cert based Security Principals.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ledgerStorageAccount": {
        "description": "Name of the Blob Storage Account for saving ledger files",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ledgerType": {
        "description": "Type of Confidential Ledger.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aadBasedSecurityPrincipals",
      "certBasedSecurityPrincipals",
      "ledgerStorageAccount",
      "ledgerType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConfidentialLedger/managedCCFs": {
    "api_version": "2022-09-08-preview",
    "full_properties": {
      "deploymentType": {
        "description": "Object representing DeploymentType for Managed CCF.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "memberIdentityCertificates": {
        "description": "List of member identity certificates for  Managed CCF",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "deploymentType",
      "memberIdentityCertificates"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Confluent/organizations": {
    "api_version": "2021-12-01",
    "full_properties": {
      "offerDetail": {
        "description": "Confluent Offer detail",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userDetail": {
        "description": "Subscriber detail",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "offerDetail",
      "userDetail"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/clusters": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/datastores": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "contents": {
        "description": "Base definition for datastore contents configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskPoolVolume": {
        "description": "An iSCSI volume from Microsoft.StoragePool provider",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the datastore.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isDefault": {
        "description": "Whether this datastore is the default for the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkedInfo": {
        "description": "Information about a datastore origin, if linked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "netAppVolume": {
        "description": "An Azure NetApp Files volume from Microsoft.NetApp provider",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "diskPoolVolume",
      "netAppVolume",
      "contents",
      "description",
      "isDefault",
      "linkedInfo",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/hosts": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the host.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inventoryItemId",
      "moRefId",
      "vCenterId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/resourcePools": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the resource pool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inventoryItemId",
      "moRefId",
      "vCenterId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/vcenters": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "credentials": {
        "description": "Username / Password Credentials to connect to vcenter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "Gets or sets the port of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runAsAccountId": {
        "description": "Run as account ID of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fqdn",
      "port",
      "runAsAccountId",
      "credentials"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "managedResourceId": {
        "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moName": {
        "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "managedResourceId",
      "moName",
      "moRefId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual machine template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual machine template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "moRefId",
      "vCenterId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/virtualMachines": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "additionalCapabilities": {
        "description": "Enables or disables a capability on the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "address": {
        "description": "Public IP address of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorAccount": {
        "description": "Admin credentials for virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "amountOfRam": {
        "description": "The amount of memory",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationProfile": {
        "description": "Contains the list of gallery applications that should be made available to the VM/VMSS",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySet": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySets": {
        "description": "Availability Sets in vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingProfile": {
        "description": "Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservation": {
        "description": "The parameters of a capacity reservation Profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "checkpointType": {
        "description": "Type of checkpoint supported for the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "checkpoints": {
        "description": "Checkpoints in the vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudId": {
        "description": "ARM Id of the cloud resource to use for deploying the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customization": {
        "description": "Guest OS Customization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disks": {
        "description": "The list of Virtual Disks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exposeToGuestVM": {
        "description": "Expose Guest OS or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extensionsTimeBudget": {
        "description": "Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firmwareType": {
        "description": "Firmware type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "generation": {
        "description": "Gets or sets the generation for the vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "guestAgentProfile": {
        "description": "Defines the resource properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "host": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostGroup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isNotebookInstanceCompute": {
        "description": "Indicates whether this compute will be used for running notebooks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network interfaces or the networking configuration of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nics": {
        "description": "The list of Virtual NICs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberOfCores": {
        "description": "The number of CPU cores",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Password for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "placementProfile": {
        "description": "Defines the resource properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformFaultDomain": {
        "description": "Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateCloudId": {
        "description": "Private Cloud Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourcePool": {
        "description": "Resource pool model",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourcePoolId": {
        "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will\r\ndeploy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scheduledEventsProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Specifies the Security profile settings for the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbiosUuid": {
        "description": "Gets or sets the SMBIOS UUID of the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sshPort": {
        "description": "Port open for ssh connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the virtual machine disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateId": {
        "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userData": {
        "description": "UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "username": {
        "description": "Username for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vSphereNetworks": {
        "description": "The list of Virtual VSphere Networks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineScaleSet": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineSize": {
        "description": "Virtual Machine size",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmName": {
        "description": "VMName is the name of VM on the SCVMM server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilitySet",
      "diagnosticsProfile",
      "hardwareProfile",
      "licenseType",
      "networkProfile",
      "osProfile",
      "storageProfile",
      "address",
      "administratorAccount",
      "sshPort",
      "virtualMachineSize",
      "proximityPlacementGroup",
      "additionalCapabilities",
      "billingProfile",
      "evictionPolicy",
      "host",
      "priority",
      "virtualMachineScaleSet",
      "amountOfRam",
      "customization",
      "disks",
      "exposeToGuestVM",
      "nics",
      "numberOfCores",
      "password",
      "privateCloudId",
      "resourcePool",
      "templateId",
      "username",
      "vSphereNetworks",
      "extensionsTimeBudget",
      "hostGroup",
      "securityProfile",
      "availabilitySets",
      "checkpoints",
      "checkpointType",
      "cloudId",
      "generation",
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "vmName",
      "firmwareType",
      "guestAgentProfile",
      "moRefId",
      "placementProfile",
      "resourcePoolId",
      "smbiosUuid",
      "vCenterId",
      "platformFaultDomain",
      "isNotebookInstanceCompute",
      "scheduledEventsProfile",
      "userData",
      "capacityReservation",
      "applicationProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "autoUpgradeMinorVersion": {
        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticUpgrade": {
        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceUpdateTag": {
        "description": "How the extension handler should be forced to update even if the extension configuration has not changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "instanceView": {
        "description": "Describes the Machine Extension Instance View.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedSettings": {
        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "publisher": {
        "description": "The name of the extension handler publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "settings": {
        "description": "Json formatted public settings for the extension.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeHandlerVersion": {
        "description": "Specifies the version of the script handler.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoUpgradeMinorVersion",
      "forceUpdateTag",
      "instanceView",
      "protectedSettings",
      "publisher",
      "settings",
      "type",
      "typeHandlerVersion",
      "enableAutomaticUpgrade"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "credentials": {
        "description": "Username / Password Credentials to connect to guest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpProxyConfig": {
        "description": "HTTP Proxy configuration for the VM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningAction": {
        "description": "Gets or sets the guest agent provisioning action.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "httpProxyConfig",
      "provisioningAction"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "identity": {
        "description": "Identity for the Provisioned cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicKey": {
        "description": "Onboarding public key for provisioning the Managed identity for the HybridAKS cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceUid": {
        "description": "Unique id of the parent provisioned cluster resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmId": {
        "description": "Gets or sets the Vm Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicKey",
      "vmId",
      "identity",
      "resourceUid"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ConnectedVMwarevSphere/virtualNetworks": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "allowedSubnets": {
        "description": "The allowed subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalProviderResourceId": {
        "description": "The Microsoft.Network resource identifier of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalSubnets": {
        "description": "The external subnet properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "id": {
        "description": "Uri of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Properties of a subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetOverrides": {
        "description": "The subnet overrides of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedSubnets",
      "description",
      "externalProviderResourceId",
      "provisioningState",
      "subnetOverrides",
      "externalSubnets",
      "uniqueIdentifier",
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "moRefId",
      "vCenterId",
      "id",
      "subnet"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Consumption/budgets": {
    "api_version": "2018-10-01",
    "full_properties": {
      "amount": {
        "description": "The total amount of cost to track with the budget",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "category": {
        "description": "The category of the budget, whether the budget tracks cost or usage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filter": {
        "description": "May be used to filter budgets by resource group, resource, or meter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filters": {
        "description": "May be used to filter budgets by resource group, resource, or meter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeGrain": {
        "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain. BillingMonth, BillingQuarter, and BillingAnnual are only supported by WD customers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timePeriod": {
        "description": "The start and end date for a budget.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "amount",
      "category",
      "notifications",
      "timeGrain",
      "timePeriod",
      "filters",
      "filter"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerInstance/containerGroups": {
    "api_version": "2022-09-01",
    "full_properties": {
      "containers": {
        "description": "The containers within the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Container group diagnostic information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsConfig": {
        "description": "DNS configuration for the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionProperties": {
        "description": "The container group encryption properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extensions": {
        "description": "extensions used by virtual kubelet",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageRegistryCredentials": {
        "description": "The image registry credentials by which the container group is created from.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "initContainers": {
        "description": "The init containers for a container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipAddress": {
        "description": "IP address for the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The operating system type required by the containers in the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restartPolicy": {
        "description": "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU for a container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetIds": {
        "description": "The subnet resource IDs for a container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumes": {
        "description": "The list of volumes that can be mounted by containers in this container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "containers",
      "diagnostics",
      "dnsConfig",
      "encryptionProperties",
      "imageRegistryCredentials",
      "initContainers",
      "ipAddress",
      "osType",
      "restartPolicy",
      "sku",
      "subnetIds",
      "volumes",
      "extensions"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "adminUserEnabled": {
        "description": "The value that indicates whether the admin user is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "anonymousPullEnabled": {
        "description": "Enables registry-wide pull from unauthenticated clients.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataEndpointEnabled": {
        "description": "Enable a single data endpoint per region for serving data.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRuleBypassOptions": {
        "description": "Whether to allow trusted Azure services to access a network restricted registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRuleSet": {
        "description": "The network rule set for a container registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policies": {
        "description": "The policies for a container registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the container registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a container registry. Only applicable to Classic SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundancy": {
        "description": "Whether or not zone redundancy is enabled for this container registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminUserEnabled",
      "storageAccount",
      "networkRuleSet",
      "policies",
      "dataEndpointEnabled",
      "encryption",
      "networkRuleBypassOptions",
      "publicNetworkAccess",
      "anonymousPullEnabled",
      "zoneRedundancy"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/agentPools": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "availabilityZones": {
        "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudProviderProfile": {
        "description": "CloudProviderProfile - The underlying cloud infra provider properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "count": {
        "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxCount": {
        "description": "The maximum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxPods": {
        "description": "The maximum number of pods that can run on a node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minCount": {
        "description": "The minimum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "Mode - AgentPoolMode represents mode of an agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeImageVersion": {
        "description": "The version of node image",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeLabels": {
        "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeTaints": {
        "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "os": {
        "description": "The OS of agent machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "HybridAKSNodePoolStatus defines the observed state of HybridAKSNodePool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tier": {
        "description": "The Tier of agent machine",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetResourceId": {
        "description": "The Virtual Network Subnet Resource Id of the agent machine",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "VmSize - The size of the agent pool VMs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "count",
      "os",
      "tier",
      "virtualNetworkSubnetResourceId",
      "availabilityZones",
      "cloudProviderProfile",
      "maxCount",
      "maxPods",
      "minCount",
      "mode",
      "nodeImageVersion",
      "nodeLabels",
      "nodeTaints",
      "osType",
      "status",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/buildTasks": {
    "api_version": "2018-02-01-preview",
    "full_properties": {
      "alias": {
        "description": "The alternative updatable name for a build task.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "platform": {
        "description": "The platform properties against which the build has to happen.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceRepository": {
        "description": "The properties of the source code repository.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The current status of build task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeout": {
        "description": "Build timeout in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alias",
      "platform",
      "sourceRepository",
      "status",
      "timeout"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/buildTasks/steps": {
    "api_version": "2018-02-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/connectedRegistries": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "clientTokenIds": {
        "description": "The list of the ACR token resource IDs used to authenticate clients to the connected registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logging": {
        "description": "The logging properties of the connected registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loginServer": {
        "description": "The login server properties of the connected registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode of the connected registry resource that indicates the permissions of the registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationsList": {
        "description": "The list of notifications subscription information for the connected registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parent": {
        "description": "The properties of the connected registry parent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientTokenIds",
      "logging",
      "loginServer",
      "mode",
      "parent",
      "notificationsList"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/exportPipelines": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "options": {
        "description": "The list of all options configured for the pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "target": {
        "description": "The properties of the export pipeline target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "target"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/importPipelines": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "options": {
        "description": "The list of all options configured for the pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "The properties of the import pipeline source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trigger": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "source",
      "trigger"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/pipelineRuns": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "forceUpdateTag": {
        "description": "How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "request": {
        "description": "The request properties provided for a pipeline run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "forceUpdateTag",
      "request"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/privateEndpointConnections": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/replications": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "regionEndpointEnabled": {
        "description": "Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundancy": {
        "description": "Whether or not zone redundancy is enabled for this container registry replication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "regionEndpointEnabled",
      "zoneRedundancy"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/scopeMaps": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "actions": {
        "description": "The list of scoped permissions for registry artifacts.\r\nE.g. repositories/repository-name/content/read,\r\nrepositories/repository-name/metadata/write",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The user friendly description of the scope map.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/taskRuns": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "forceUpdateTag": {
        "description": "How the run should be forced to rerun even if the run request configuration has not changed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runRequest": {
        "description": "The request parameters for scheduling a run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "forceUpdateTag",
      "runRequest"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/tasks": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "agentConfiguration": {
        "description": "The properties that determine the run agent configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "agentPoolName": {
        "description": "The dedicated agent pool for the task.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "credentials": {
        "description": "The parameters that describes a set of credentials that will be used when a run is invoked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isSystemTask": {
        "description": "The value of this property indicates whether the task resource is system task or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logTemplate": {
        "description": "The template that describes the repository and tag information for run log artifact.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the parameters of the task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platform": {
        "description": "The platform properties against which the run has to happen.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Gets or sets the name of the runbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The current status of task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "step": {
        "description": "Base properties for any task step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskScope": {
        "description": "Global Task execute once when schedule trigger. Resource task execute for each VM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeout": {
        "description": "Run timeout in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trigger": {
        "description": "The properties of a trigger.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parameters",
      "source",
      "agentConfiguration",
      "credentials",
      "platform",
      "status",
      "step",
      "timeout",
      "trigger",
      "agentPoolName",
      "isSystemTask",
      "logTemplate",
      "taskScope"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/tokens": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "credentials": {
        "description": "The properties of the credentials that can be used for authenticating the token.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopeMapId": {
        "description": "The resource ID of the scope map to which the token will be associated with.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the token example enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "scopeMapId",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/webhooks": {
    "api_version": "2022-02-01-preview",
    "full_properties": {
      "actions": {
        "description": "The list of actions that trigger the webhook to post notifications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHeaders": {
        "description": "Custom headers that will be added to the webhook notifications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scope": {
        "description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceUri": {
        "description": "The service URI for the webhook to post notifications.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the webhook at the time the operation was called.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "customHeaders",
      "scope",
      "serviceUri",
      "status"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/containerServices": {
    "api_version": "2017-07-01",
    "full_properties": {
      "agentPoolProfiles": {
        "description": "Properties of the agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customProfile": {
        "description": "Properties to configure a custom container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Profile for diagnostics on the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linuxProfile": {
        "description": "Profile for Linux VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "masterProfile": {
        "description": "Profile for the container service master.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orchestratorProfile": {
        "description": "Profile for the container service orchestrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePrincipalProfile": {
        "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "windowsProfile": {
        "description": "Profile for Windows VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPoolProfiles",
      "diagnosticsProfile",
      "linuxProfile",
      "masterProfile",
      "orchestratorProfile",
      "windowsProfile",
      "customProfile",
      "servicePrincipalProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/fleets": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "hubProfile": {
        "description": "The FleetHubProfile configures the fleet hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hubProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/fleets/members": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "clusterResourceId": {
        "description": "The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clusterResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedClusters": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "aadProfile": {
        "description": "For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addonFeatures": {
        "description": "List of add-on features to enable on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addonProfiles": {
        "description": "The profile of managed cluster add-on.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "adminPassword": {
        "description": "VM admin user password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "adminUserName": {
        "description": "VM admin user name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "agentPoolProfiles": {
        "description": "The agent pool properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRdpAccess": {
        "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiServerAccessProfile": {
        "description": "Access profile for managed cluster API server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiServerAuthorizedIPRanges": {
        "description": "(PREVIEW) Authorized IP Ranges to kubernetes API server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": "The policy used to clean up unused versions. When the policy is not specified explicitly, the default unused application versions to keep will be 3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoScalerProfile": {
        "description": "Parameters to be applied to the cluster-autoscaler when enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoUpgradeProfile": {
        "description": "Auto upgrade profile for a managed cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "auxiliarySubnets": {
        "description": "Auxiliary subnets for the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureMonitorProfile": {
        "description": "Prometheus addon profile for the container service cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientConnectionPort": {
        "description": "The port used for client connections to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clients": {
        "description": "Client certificates that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterUpgradeCadence": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a target resource from a source resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAccounts": {
        "description": "If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskEncryptionSetID": {
        "description": "This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsName": {
        "description": "The cluster dns name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsPrefix": {
        "description": "This cannot be updated once the Managed Cluster has been created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableAutoOSUpgrade": {
        "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableIpv6": {
        "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNamespaceResources": {
        "description": "The default value is false. It can be enabled/disabled on creation and updation of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource) for more details on Namespace as a ARM Resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePodSecurityPolicy": {
        "description": "(DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRBAC": {
        "description": "Whether to enable Kubernetes Role-Based Access Control.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableServicePublicIP": {
        "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdnSubdomain": {
        "description": "This cannot be updated once the Managed Cluster has been created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "guardrailsProfile": {
        "description": "The Guardrails profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpGatewayConnectionPort": {
        "description": "The port used for HTTP connections to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpProxyConfig": {
        "description": "Cluster HTTP proxy configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identityProfile": {
        "description": "Identities associated with the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingressProfile": {
        "description": "Ingress profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipTags": {
        "description": "The list of IP tags associated with the default public IP address of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kubernetesVersion": {
        "description": "When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linuxProfile": {
        "description": "Profile for Linux VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingRules": {
        "description": "Load balancing rules that are applied to the public load balancer of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Profile of network configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityRules": {
        "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeResourceGroup": {
        "description": "The name of the resource group containing agent pool nodes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "oidcIssuerProfile": {
        "description": "The OIDC issuer profile of the Managed Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "podIdentityProfile": {
        "description": "See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkResources": {
        "description": "Private link resources associated with the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Allow or deny public network access for AKS.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Security profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceEndpoints": {
        "description": "Service endpoints for subnets in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePrincipalProfile": {
        "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "windowsProfile": {
        "description": "Profile for Windows VMs in the managed cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workloadAutoScalerProfile": {
        "description": "Workload Auto-scaler profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zonalResiliency": {
        "description": "Indicates if the cluster has zone resiliency.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPoolProfiles",
      "dnsPrefix",
      "kubernetesVersion",
      "linuxProfile",
      "servicePrincipalProfile",
      "aadProfile",
      "addonProfiles",
      "enableRBAC",
      "networkProfile",
      "apiServerAuthorizedIPRanges",
      "enablePodSecurityPolicy",
      "nodeResourceGroup",
      "windowsProfile",
      "apiServerAccessProfile",
      "identityProfile",
      "addonFeatures",
      "adminPassword",
      "adminUserName",
      "azureActiveDirectory",
      "clientConnectionPort",
      "clients",
      "clusterCodeVersion",
      "dnsName",
      "fabricSettings",
      "httpGatewayConnectionPort",
      "loadBalancingRules",
      "diskEncryptionSetID",
      "autoScalerProfile",
      "autoUpgradeProfile",
      "podIdentityProfile",
      "allowRdpAccess",
      "applicationTypeVersionsCleanupPolicy",
      "clusterUpgradeCadence",
      "enableAutoOSUpgrade",
      "networkSecurityRules",
      "fqdnSubdomain",
      "disableLocalAccounts",
      "httpProxyConfig",
      "privateLinkResources",
      "clusterUpgradeMode",
      "zonalResiliency",
      "enableIpv6",
      "ipTags",
      "subnetId",
      "securityProfile",
      "publicNetworkAccess",
      "enableNamespaceResources",
      "oidcIssuerProfile",
      "auxiliarySubnets",
      "enableServicePublicIP",
      "serviceEndpoints",
      "creationData",
      "ingressProfile",
      "storageProfile",
      "workloadAutoScalerProfile",
      "azureMonitorProfile",
      "guardrailsProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedClusters/agentPools": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "availabilityZones": {
        "description": "The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationGroupID": {
        "description": "Capacity Reservation Group ID for AgentPool to associate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "count": {
        "description": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a target resource from a source resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "currentOrchestratorVersion": {
        "description": "If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableAutoScaling": {
        "description": "Whether to enable auto-scaler",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableCustomCATrust": {
        "description": "When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node trust stores. Defaults to false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableEncryptionAtHost": {
        "description": "This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFIPS": {
        "description": "See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNodePublicIP": {
        "description": "Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableUltraSSD": {
        "description": "Whether to enable UltraSSD",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gpuInstanceProfile": {
        "description": "GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostGroupID": {
        "description": "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeletConfig": {
        "description": "See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kubeletDiskType": {
        "description": "KubeletDiskType determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. Currently allows one value, OS, resulting in Kubelet using the OS disk for data.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linuxOSConfig": {
        "description": "See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxCount": {
        "description": "The maximum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxPods": {
        "description": "The maximum number of pods that can run on a node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "messageOfTheDay": {
        "description": "A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCount": {
        "description": "The minimum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "AgentPoolMode represents mode of an agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Network settings of an agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeImageVersion": {
        "description": "Version of node image",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeLabels": {
        "description": "The node labels to be persisted across all nodes in agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodePublicIPPrefixID": {
        "description": "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTaints": {
        "description": "The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orchestratorVersion": {
        "description": "Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osDiskSizeGB": {
        "description": "OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osDiskType": {
        "description": "OS disk type to be used for machines in a given agent pool. Allowed values are 'Ephemeral' and 'Managed'. If unspecified, defaults to 'Ephemeral' when the VM supports ephemeral OS and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osSKU": {
        "description": "OsSKU to be used to specify os sku. Choose from Ubuntu(default) and CBLMariner for Linux OSType. Not applicable to Windows OSType.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "podSubnetID": {
        "description": "If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "powerState": {
        "description": "Describes the Power State of the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proximityPlacementGroupID": {
        "description": "The ID for Proximity Placement Group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scaleDownMode": {
        "description": "This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSetEvictionPolicy": {
        "description": "This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSetPriority": {
        "description": "The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spotMaxPrice": {
        "description": "Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "The tags to be persisted on the agent pool virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "AgentPoolType represents types of an agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeSettings": {
        "description": "Settings for upgrading an agentpool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetSubnetID": {
        "description": "If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "windowsProfile": {
        "description": "The Windows agent pool's specific profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workloadRuntime": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilityZones",
      "count",
      "enableAutoScaling",
      "maxCount",
      "maxPods",
      "minCount",
      "orchestratorVersion",
      "osDiskSizeGB",
      "osType",
      "type",
      "vmSize",
      "vnetSubnetID",
      "enableNodePublicIP",
      "nodeTaints",
      "scaleSetEvictionPolicy",
      "scaleSetPriority",
      "nodeLabels",
      "tags",
      "spotMaxPrice",
      "mode",
      "nodeImageVersion",
      "upgradeSettings",
      "proximityPlacementGroupID",
      "osDiskType",
      "kubeletConfig",
      "linuxOSConfig",
      "podSubnetID",
      "enableEncryptionAtHost",
      "kubeletDiskType",
      "nodePublicIPPrefixID",
      "enableFIPS",
      "gpuInstanceProfile",
      "osSKU",
      "enableUltraSSD",
      "scaleDownMode",
      "creationData",
      "workloadRuntime",
      "powerState",
      "capacityReservationGroupID",
      "messageOfTheDay",
      "hostGroupID",
      "currentOrchestratorVersion",
      "enableCustomCATrust",
      "windowsProfile",
      "networkProfile"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedClusters/maintenanceConfigurations": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "extensionProperties": {
        "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "installPatches": {
        "description": "Input configuration for a patch run",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maintenanceScope": {
        "description": "Gets or sets maintenanceScope of the configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maintenanceWindow": {
        "description": "Definition of a MaintenanceWindow",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "namespace": {
        "description": "Gets or sets namespace of the resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notAllowedTime": {
        "description": "Time slots on which upgrade is not allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeInWeek": {
        "description": "If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "visibility": {
        "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "extensionProperties",
      "maintenanceScope",
      "namespace",
      "maintenanceWindow",
      "visibility",
      "notAllowedTime",
      "timeInWeek",
      "installPatches"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedClusters/privateEndpointConnections": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedClusters/trustedAccessRoleBindings": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "roles": {
        "description": "A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The ARM resource ID of source resource that trusted access is configured for.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "roles",
      "sourceResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedclustersnapshots": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "creationData": {
        "description": "Data used when creating a target resource from a source resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedClusterPropertiesReadOnly": {
        "description": "managed cluster properties for snapshot, these properties are read only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationData",
      "managedClusterPropertiesReadOnly",
      "snapshotType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/openShiftManagedClusters": {
    "api_version": "2019-10-27-preview",
    "full_properties": {
      "agentPoolProfiles": {
        "description": "Configuration of OpenShift cluster VMs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authProfile": {
        "description": "Defines all possible authentication profiles for the OpenShift cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "User-specified FQDN for OpenShift API server loadbalancer internal hostname.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "masterPoolProfile": {
        "description": "OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorProfile": {
        "description": "Defines the configuration for Log Analytics integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Represents the OpenShift networking configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "openShiftVersion": {
        "description": "Version of OpenShift specified when creating the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicHostname": {
        "description": "Optional user-specified FQDN for OpenShift API server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "refreshCluster": {
        "description": "Allows node rotation",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routerProfiles": {
        "description": "Configuration for OpenShift router(s).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPoolProfiles",
      "authProfile",
      "fqdn",
      "masterPoolProfile",
      "networkProfile",
      "openShiftVersion",
      "publicHostname",
      "routerProfiles",
      "monitorProfile",
      "refreshCluster"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/snapshots": {
    "api_version": "2022-09-02-preview",
    "full_properties": {
      "completionPercent": {
        "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "copyCompletionError": {
        "description": "Indicates the error details if the background copy of a resource created via the CopyStart operation fails.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a target resource from a source resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataAccessAuthMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskAccessId": {
        "description": "ARM id of the DiskAccess resource for using private endpoints on disks.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskState": {
        "description": "The state of the snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption at rest settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fileSystemId": {
        "description": "UUID v4 used to identify the FileSystem",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incremental": {
        "description": "Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAccessPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": "Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Contains the security related information for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportedCapabilities": {
        "description": "List of supported capabilities persisted on the disk resource for VM use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsHibernation": {
        "description": "Indicates the OS on a snapshot supports hibernation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fileSystemId",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "osType",
      "encryptionSettingsCollection",
      "hyperVGeneration",
      "incremental",
      "encryption",
      "diskAccessId",
      "networkAccessPolicy",
      "diskState",
      "purchasePlan",
      "supportsHibernation",
      "completionPercent",
      "publicNetworkAccess",
      "supportedCapabilities",
      "securityProfile",
      "snapshotType",
      "dataAccessAuthMode",
      "copyCompletionError"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CostManagement/connectors": {
    "api_version": "2018-08-01-preview",
    "full_properties": {
      "billingModel": {
        "description": "Connector billing model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "credentialsKey": {
        "description": "Credentials authentication key (eg AWS ARN)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "credentialsSecret": {
        "description": "Credentials secret (eg AWS ExternalId)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultManagementGroupId": {
        "description": "Default ManagementGroupId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Connector DisplayName",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reportId": {
        "description": "Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Connector status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionId": {
        "description": "Billing SubscriptionId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentialsKey",
      "credentialsSecret",
      "displayName",
      "reportId",
      "status",
      "billingModel",
      "defaultManagementGroupId",
      "subscriptionId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CostManagement/reportconfigs": {
    "api_version": "2018-05-31",
    "full_properties": {
      "definition": {
        "description": "The definition of a report config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "The delivery information associated with a report config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the report being delivered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "The schedule associated with a report config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "definition",
      "deliveryInfo",
      "format",
      "schedule"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CostManagement/reports": {
    "api_version": "2018-08-01-preview",
    "full_properties": {
      "definition": {
        "description": "The definition of a report.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "The delivery information associated with a report.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the report being delivered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "offerGuid": {
        "description": "Report offer Guid.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resources": {
        "description": "List of resource data.",
        "required": false,
        "type": "array",
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "The schedule associated with a report.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\r\nAn example of valid timezone id is \"Pacific Standard Time\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "triggerTime": {
        "description": "Report collection trigger time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "definition",
      "deliveryInfo",
      "format",
      "schedule",
      "offerGuid",
      "resources",
      "timeZone",
      "triggerTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CustomProviders/resourceProviders": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "actions": {
        "description": "A list of actions that the custom resource provider implements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceTypes": {
        "description": "A list of resource types that the custom resource provider implements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validations": {
        "description": "A list of validations to run on the custom resource provider's requests.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "resourceTypes",
      "validations"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBForMySql/flexibleServers/keys": {
    "api_version": "2020-07-01-preview",
    "full_properties": {
      "creationDate": {
        "description": "The server key creation date.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The server key type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Thumbprint of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the server key. If the ServerKeyType is AzureKeyVault, then the URI is required. The AKV URI is required to be in this format: 'https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationDate",
      "serverKeyType",
      "thumbprint",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers": {
    "api_version": "2018-06-01",
    "full_properties": {
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Server version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "minimalTlsVersion",
      "sslEnforcement",
      "storageProfile",
      "version",
      "infrastructureEncryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/configurations": {
    "api_version": "2018-06-01",
    "full_properties": {
      "enforcePrivateMarkdownStorage": {
        "description": "When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "value",
      "enforcePrivateMarkdownStorage"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/databases": {
    "api_version": "2018-06-01",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/firewallRules": {
    "api_version": "2018-06-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/privateEndpointConnections": {
    "api_version": "2018-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/securityAlertPolicies": {
    "api_version": "2018-06-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/virtualNetworkRules": {
    "api_version": "2018-06-01",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/flexibleServers": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "administratorLogin": {
        "description": "Administrator username for the server. Once created it cannot be changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "The administrator login password (required for server creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administrators": {
        "description": "Properties of a active directory administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authConfig": {
        "description": "Authentication configuration properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilityZone": {
        "description": "availability zone information of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "backup": {
        "description": "Backup properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "The mode to create a new PostgreSQL server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataEncryption": {
        "description": "Data encryption properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegatedSubnetArguments": {
        "description": "Delegated subnet arguments of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of a server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "haEnabled": {
        "description": "Enable HA or not for a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailability": {
        "description": "High availability properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyId": {
        "description": "A CMK URI of the key to use for encryption.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logBackupStorageSku": {
        "description": "The log backup storage sku of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceWindow": {
        "description": "Maintenance window properties of a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Minimal TLS version. Allowed values: '1.0', '1.1', '1.2'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "network": {
        "description": "Network properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pointInTimeUTC": {
        "description": "Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentityId": {
        "description": "The resource id of a user assigned identity to be used by default.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateDnsZoneArguments": {
        "description": "Private DNS zone arguments of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicaCapacity": {
        "description": "Replicas allowed for a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicationRole": {
        "description": "Replication role of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceResourceGroupName": {
        "description": "The resource group name of source serve PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerId": {
        "description": "The source MySQL server id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerName": {
        "description": "The source PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerResourceId": {
        "description": "The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'Replica'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceSubscriptionId": {
        "description": "The subscription id of source serve PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "standbyCount": {
        "description": "The number of standbys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storage": {
        "description": "Storage properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Application-specific metadata in the form of key-value pairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorLogin",
      "administratorLoginPassword",
      "version",
      "minimalTlsVersion",
      "publicNetworkAccess",
      "availabilityZone",
      "createMode",
      "delegatedSubnetArguments",
      "displayName",
      "haEnabled",
      "logBackupStorageSku",
      "maintenanceWindow",
      "pointInTimeUTC",
      "privateDnsZoneArguments",
      "sourceResourceGroupName",
      "sourceServerName",
      "sourceSubscriptionId",
      "standbyCount",
      "storageProfile",
      "tags",
      "infrastructureEncryption",
      "replicationRole",
      "restorePointInTime",
      "sourceServerId",
      "sslEnforcement",
      "administrators",
      "keyId",
      "primaryUserAssignedIdentityId",
      "federatedClientId",
      "restrictOutboundNetworkAccess",
      "backup",
      "highAvailability",
      "network",
      "sourceServerResourceId",
      "storage",
      "dataEncryption",
      "authConfig",
      "replicaCapacity"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/flexibleServers/administrators": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "administratorType": {
        "description": "Type of the sever administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identityResourceId": {
        "description": "The resource id of the identity used for AAD Authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login name of the server administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "SID (object ID) of the server administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId",
      "identityResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/flexibleServers/backups": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/flexibleServers/databases": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/flexibleServers/firewallRules": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers": {
    "api_version": "2017-12-01",
    "full_properties": {
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Server version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "minimalTlsVersion",
      "sslEnforcement",
      "storageProfile",
      "version",
      "infrastructureEncryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/administrators": {
    "api_version": "2017-12-01",
    "full_properties": {
      "administratorType": {
        "description": "The type of administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "The server administrator login account name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "The server administrator Sid (Secure ID).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The server Active Directory Administrator tenant id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/configurations": {
    "api_version": "2017-12-01",
    "full_properties": {
      "enforcePrivateMarkdownStorage": {
        "description": "When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "value",
      "enforcePrivateMarkdownStorage"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/databases": {
    "api_version": "2017-12-01",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/firewallRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/keys": {
    "api_version": "2020-01-01",
    "full_properties": {
      "creationDate": {
        "description": "The server key creation date.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The server key type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Thumbprint of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the server key. If the ServerKeyType is AzureKeyVault, then the URI is required. The AKV URI is required to be in this format: 'https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationDate",
      "serverKeyType",
      "thumbprint",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/privateEndpointConnections": {
    "api_version": "2018-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/securityAlertPolicies": {
    "api_version": "2017-12-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/virtualNetworkRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/flexibleServers": {
    "api_version": "2022-03-08-preview",
    "full_properties": {
      "administratorLogin": {
        "description": "Administrator username for the server. Once created it cannot be changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "The administrator login password (required for server creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administrators": {
        "description": "Properties of a active directory administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authConfig": {
        "description": "Authentication configuration properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilityZone": {
        "description": "availability zone information of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "backup": {
        "description": "Backup properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "The mode to create a new PostgreSQL server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataEncryption": {
        "description": "Data encryption properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegatedSubnetArguments": {
        "description": "Delegated subnet arguments of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of a server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "haEnabled": {
        "description": "Enable HA or not for a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailability": {
        "description": "High availability properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyId": {
        "description": "A CMK URI of the key to use for encryption.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logBackupStorageSku": {
        "description": "The log backup storage sku of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceWindow": {
        "description": "Maintenance window properties of a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Minimal TLS version. Allowed values: '1.0', '1.1', '1.2'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "network": {
        "description": "Network properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pointInTimeUTC": {
        "description": "Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentityId": {
        "description": "The resource id of a user assigned identity to be used by default.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateDnsZoneArguments": {
        "description": "Private DNS zone arguments of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicaCapacity": {
        "description": "Replicas allowed for a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicationRole": {
        "description": "Replication role of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceResourceGroupName": {
        "description": "The resource group name of source serve PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerId": {
        "description": "The source MySQL server id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerName": {
        "description": "The source PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerResourceId": {
        "description": "The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'Replica'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceSubscriptionId": {
        "description": "The subscription id of source serve PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "standbyCount": {
        "description": "The number of standbys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storage": {
        "description": "Storage properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Application-specific metadata in the form of key-value pairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorLogin",
      "administratorLoginPassword",
      "version",
      "minimalTlsVersion",
      "publicNetworkAccess",
      "availabilityZone",
      "createMode",
      "delegatedSubnetArguments",
      "displayName",
      "haEnabled",
      "logBackupStorageSku",
      "maintenanceWindow",
      "pointInTimeUTC",
      "privateDnsZoneArguments",
      "sourceResourceGroupName",
      "sourceServerName",
      "sourceSubscriptionId",
      "standbyCount",
      "storageProfile",
      "tags",
      "infrastructureEncryption",
      "replicationRole",
      "restorePointInTime",
      "sourceServerId",
      "sslEnforcement",
      "administrators",
      "keyId",
      "primaryUserAssignedIdentityId",
      "federatedClientId",
      "restrictOutboundNetworkAccess",
      "backup",
      "highAvailability",
      "network",
      "sourceServerResourceId",
      "storage",
      "dataEncryption",
      "authConfig",
      "replicaCapacity"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/flexibleServers/administrators": {
    "api_version": "2022-03-08-preview",
    "full_properties": {
      "principalName": {
        "description": "Active Directory administrator principal name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalType": {
        "description": "The principal type used to represent the type of Active Directory Administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The tenantId of the Active Directory administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalName",
      "principalType",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/flexibleServers/configurations": {
    "api_version": "2022-03-08-preview",
    "full_properties": {
      "enforcePrivateMarkdownStorage": {
        "description": "When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "value",
      "enforcePrivateMarkdownStorage"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/flexibleServers/databases": {
    "api_version": "2022-03-08-preview",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules": {
    "api_version": "2022-03-08-preview",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers": {
    "api_version": "2017-12-01",
    "full_properties": {
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Server version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "minimalTlsVersion",
      "sslEnforcement",
      "storageProfile",
      "version",
      "infrastructureEncryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/administrators": {
    "api_version": "2017-12-01",
    "full_properties": {
      "administratorType": {
        "description": "The type of administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "The server administrator login account name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "The server administrator Sid (Secure ID).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The server Active Directory Administrator tenant id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/configurations": {
    "api_version": "2017-12-01",
    "full_properties": {
      "enforcePrivateMarkdownStorage": {
        "description": "When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "value",
      "enforcePrivateMarkdownStorage"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/databases": {
    "api_version": "2017-12-01",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/firewallRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/keys": {
    "api_version": "2020-01-01",
    "full_properties": {
      "creationDate": {
        "description": "The server key creation date.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The server key type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Thumbprint of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the server key. If the ServerKeyType is AzureKeyVault, then the URI is required. The AKV URI is required to be in this format: 'https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationDate",
      "serverKeyType",
      "thumbprint",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections": {
    "api_version": "2018-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/securityAlertPolicies": {
    "api_version": "2017-12-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Dashboard/grafana": {
    "api_version": "2022-08-01",
    "full_properties": {
      "apiKey": {
        "description": "The api key setting of the Grafana instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoGeneratedDomainNameLabelScope": {
        "description": "Scope for dns deterministic name hash calculation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deterministicOutboundIP": {
        "description": "Whether a Grafana instance uses deterministic outbound IPs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "grafanaIntegrations": {
        "description": "GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Indicate the state for enable or disable traffic over the public interface.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundancy": {
        "description": "The zone redundancy setting of the Grafana instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoGeneratedDomainNameLabelScope",
      "provisioningState",
      "zoneRedundancy",
      "apiKey",
      "deterministicOutboundIP",
      "publicNetworkAccess",
      "grafanaIntegrations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Dashboard/grafana/privateEndpointConnections": {
    "api_version": "2022-08-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBox/jobs": {
    "api_version": "2022-02-01",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided key, value pairs that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User-defined description of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "Base class for inputs to a Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transferType": {
        "description": "Type of the data transfer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType",
      "transferType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "dataBoxEdgeDeviceStatus": {
        "description": "The status of the Data Box Edge/Gateway device.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataResidency": {
        "description": "Wraps data-residency related information for edge-resource and this should be used with ARM layer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The Description of the Data Box Edge/Gateway device.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The Data Box Edge/Gateway device name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modelDescription": {
        "description": "The description of the Data Box Edge/Gateway device model.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataBoxEdgeDeviceStatus",
      "description",
      "friendlyName",
      "modelDescription",
      "dataResidency",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/bandwidthSchedules": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "days": {
        "description": "The days of the week when this schedule is applicable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rateInMbps": {
        "description": "The bandwidth rate in Mbps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "start": {
        "description": "The start time of the schedule in UTC.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "stop": {
        "description": "The stop time of the schedule in UTC.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "days",
      "rateInMbps",
      "start",
      "stop"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/diagnosticProactiveLogCollectionSettings": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "userConsent": {
        "description": "Proactive diagnostic collection consent flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "userConsent"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/diagnosticRemoteSupportSettings": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "remoteSupportSettingsList": {
        "description": "Remote support settings list according to the RemoteApplicationType",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "remoteSupportSettingsList"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/orders": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "contactInformation": {
        "description": "Contains all the contact details of the customer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "currentStatus": {
        "description": "Represents a single status change.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shipmentType": {
        "description": "ShipmentType of the order.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shippingAddress": {
        "description": "The shipping address of the customer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contactInformation",
      "currentStatus",
      "shippingAddress",
      "shipmentType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles/addons": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles/monitoringConfig": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "metricConfigurations": {
        "description": "The metrics configuration details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "metricConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/shares": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "accessProtocol": {
        "description": "Access protocol to be used by the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureContainerInfo": {
        "description": "Azure container mapping of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAccessRights": {
        "description": "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "Data policy of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for the share.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Current monitoring status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "refreshDetails": {
        "description": "Fields for tracking refresh job on the share or container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareKind": {
        "description": "Share kind.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "Current status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "terms": {
        "description": "Share terms.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessRights": {
        "description": "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "shareKind",
      "terms",
      "accessProtocol",
      "azureContainerInfo",
      "clientAccessRights",
      "dataPolicy",
      "monitoringStatus",
      "refreshDetails",
      "shareStatus",
      "userAccessRights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccountCredentials": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "accessKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountType": {
        "description": "Type of storage accessed on the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "alias": {
        "description": "Alias for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blobDomainName": {
        "description": "Blob end point for private clouds.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cloudType": {
        "description": "The cloud service provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "Connection string for the storage account. Use this string if username and account key are not specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableSSL": {
        "description": "SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endPoint": {
        "description": "The storage endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "The storage account's geo location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "The storage account login",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslStatus": {
        "description": "Signifies whether SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "Id of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "Username for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "cloudType",
      "enableSSL",
      "endPoint",
      "location",
      "login",
      "sslStatus",
      "accountKey",
      "accountType",
      "alias",
      "blobDomainName",
      "connectionString",
      "userName",
      "storageAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccounts": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "accessKey": {
        "description": "The access key to the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "Data policy of the storage Account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for the storage Account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "The resource ID of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountCredentialId": {
        "description": "Storage Account Credential Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "The fully qualified arm Id of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountStatus": {
        "description": "Current status of the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "suffix": {
        "description": "The optional suffix for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "suffix",
      "name",
      "storageAccountId",
      "id",
      "resourceId",
      "dataPolicy",
      "description",
      "storageAccountCredentialId",
      "storageAccountStatus"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccounts/containers": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "command": {
        "description": "The commands to execute within the container instance in exec form.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataFormat": {
        "description": "DataFormat for Container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultEncryptionScope": {
        "description": "Default the container to use specified encryption scope for all writes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "denyEncryptionScopeOverride": {
        "description": "Block override of encryption scope from the container default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNfsV3AllSquash": {
        "description": "Enable NFSv3 all squash on blob container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNfsV3RootSquash": {
        "description": "Enable NFSv3 root squash on blob container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "The environment variables to set in the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "image": {
        "description": "The name of the image used to create the container instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "immutableStorageWithVersioning": {
        "description": "Object level immutability properties of the container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "livenessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the container as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ports": {
        "description": "The exposed ports on the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicAccess": {
        "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readinessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resources": {
        "description": "The resource requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeMounts": {
        "description": "The volume mounts available to the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "command",
      "environmentVariables",
      "image",
      "ports",
      "resources",
      "volumeMounts",
      "metadata",
      "publicAccess",
      "livenessProbe",
      "readinessProbe",
      "defaultEncryptionScope",
      "denyEncryptionScopeOverride",
      "dataFormat",
      "immutableStorageWithVersioning",
      "enableNfsV3AllSquash",
      "enableNfsV3RootSquash"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/triggers": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/users": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "additionalUsageQuota": {
        "description": "The amount of usage quota time the user gets in addition to the lab usage quota.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "email": {
        "description": "An email address.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptedPassword": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Identity attributes of a lab user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Username",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPassword": {
        "description": "Password used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHash": {
        "description": "Password hash used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHashSalt": {
        "description": "Password hash salt used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUserName": {
        "description": "Username used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scmUri": {
        "description": "Url of SCM site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretStore": {
        "description": "Properties of a user's secret store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareAccessRights": {
        "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userType": {
        "description": "Type of the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "publishingPassword",
      "publishingUserName",
      "scmUri",
      "publishingPasswordHash",
      "publishingPasswordHashSalt",
      "identity",
      "provisioningState",
      "secretStore",
      "uniqueIdentifier",
      "encryptedPassword",
      "shareAccessRights",
      "userType",
      "additionalUsageQuota",
      "email"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataCatalog/catalogs": {
    "api_version": "2016-03-30",
    "full_properties": {
      "admins": {
        "description": "Azure data catalog admin list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticUnitAdjustment": {
        "description": "Automatic unit adjustment enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Azure data catalog SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "successfullyProvisioned": {
        "description": "Azure data catalog provision status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "units": {
        "description": "Azure data catalog units.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "users": {
        "description": "Azure data catalog user list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "admins",
      "enableAutomaticUnitAdjustment",
      "sku",
      "successfullyProvisioned",
      "units",
      "users"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories": {
    "api_version": "2018-06-01",
    "full_properties": {
      "encryption": {
        "description": "Definition of CMK for the factory.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "globalParameters": {
        "description": "Definition of all parameters for an entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the data factory.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoConfiguration": {
        "description": "Factory's git repo information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vstsConfiguration": {
        "description": "Factory's VSTS repo information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vstsConfiguration",
      "encryption",
      "globalParameters",
      "publicNetworkAccess",
      "purviewConfiguration",
      "repoConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/dataflows": {
    "api_version": "2018-06-01",
    "full_properties": {
      "annotations": {
        "description": "List of tags that can be used for describing the data flow.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the data flow.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinations": {
        "description": "List of destinations for this data flow.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "folder": {
        "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputStream": {
        "description": "The output stream of the transform. Only required if the transform changes data to a different stream.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "streams": {
        "description": "List of streams for this data flow.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transformKql": {
        "description": "The KQL query to transform stream data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "annotations",
      "description",
      "folder",
      "destinations",
      "streams",
      "outputStream",
      "transformKql"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/datasets": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the Dataset.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Dataset description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folder": {
        "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkedServiceName": {
        "description": "Linked service reference type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Definition of all parameters for an entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schema": {
        "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "structure": {
        "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "annotations",
      "description",
      "linkedServiceName",
      "parameters",
      "structure",
      "folder",
      "schema"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/globalParameters": {
    "api_version": "2018-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/integrationRuntimes": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Integration runtime description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/linkedservices": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the linked service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectVia": {
        "description": "Integration runtime reference type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Linked service description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Definition of all parameters for an entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "annotations",
      "connectVia",
      "description",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/managedVirtualNetworks": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionState": {
        "description": "The connection state of a managed private endpoint",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdns": {
        "description": "Fully qualified domain names",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groupId": {
        "description": "The groupId to which the managed private endpoint is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "The ARM resource ID of the resource to which the managed private endpoint is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "connectionState",
      "fqdns",
      "groupId",
      "privateLinkResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/pipelines": {
    "api_version": "2018-06-01",
    "full_properties": {
      "activities": {
        "description": "List of activities in pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "concurrency": {
        "description": "The max number of concurrent runs for the pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the pipeline.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folder": {
        "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Definition of all parameters for an entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policy": {
        "description": "Pipeline Policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runDimensions": {
        "description": "Dimensions emitted by Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "variables": {
        "description": "Definition of variable for a Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activities",
      "annotations",
      "concurrency",
      "description",
      "parameters",
      "folder",
      "policy",
      "runDimensions",
      "variables"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/privateEndpointConnections": {
    "api_version": "2018-06-01",
    "full_properties": {
      "privateEndpoint": {
        "description": "Private endpoint which a connection belongs to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "The state of a private link connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpoint",
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/triggers": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the trigger.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Trigger description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeAfterCreate": {
        "description": "The time duration after key creation to rotate the key. It only applies to rotate. It will be in ISO 8601 duration format. Eg: 'P90D', 'P1Y'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeBeforeExpiry": {
        "description": "The time duration before key expiring to rotate or notify. It will be in ISO 8601 duration format. Eg: 'P90D', 'P1Y'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "description",
      "annotations",
      "timeAfterCreate",
      "timeBeforeExpiry"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "computePolicies": {
        "description": "The list of compute policies associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataLakeStoreAccounts": {
        "description": "The list of Data Lake Store accounts associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataLakeStoreAccount": {
        "description": "The default Data Lake Store account associated with this account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firewallAllowAzureIps": {
        "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallRules": {
        "description": "The list of firewall rules associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallState": {
        "description": "The current state of the IP address firewall for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxDegreeOfParallelism": {
        "description": "The maximum supported degree of parallelism for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxDegreeOfParallelismPerJob": {
        "description": "The maximum supported degree of parallelism per job for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxJobCount": {
        "description": "The maximum supported jobs running under the account at the same time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minPriorityPerJob": {
        "description": "The minimum supported priority per job for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "newTier": {
        "description": "The commitment tier for the next month.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queryStoreRetention": {
        "description": "The number of days that job metadata is retained.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The list of Azure Blob Storage accounts associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "computePolicies",
      "dataLakeStoreAccounts",
      "defaultDataLakeStoreAccount",
      "firewallAllowAzureIps",
      "firewallRules",
      "firewallState",
      "maxDegreeOfParallelism",
      "maxDegreeOfParallelismPerJob",
      "maxJobCount",
      "minPriorityPerJob",
      "newTier",
      "queryStoreRetention",
      "storageAccounts"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/computePolicies": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "maxDegreeOfParallelismPerJob": {
        "description": "The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minPriorityPerJob": {
        "description": "The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "objectId": {
        "description": "The AAD object identifier for the entity to create a policy for.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "objectType": {
        "description": "The type of AAD object the object identifier refers to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maxDegreeOfParallelismPerJob",
      "minPriorityPerJob",
      "objectId",
      "objectType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "suffix": {
        "description": "The optional suffix for the Data Lake Store account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "suffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/firewallRules": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/storageAccounts": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "accessKey": {
        "description": "The access key associated with this Azure Storage account that will be used to connect to it.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suffix": {
        "description": "The optional suffix for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "suffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts": {
    "api_version": "2016-11-01",
    "full_properties": {
      "defaultGroup": {
        "description": "The default owner group for all new folders and files created in the Data Lake Store account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionConfig": {
        "description": "The encryption configuration for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionState": {
        "description": "The current state of encryption for this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallAllowAzureIps": {
        "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallRules": {
        "description": "The list of firewall rules associated with this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallState": {
        "description": "The current state of the IP address firewall for this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "newTier": {
        "description": "The commitment tier to use for next month.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedIdProviderState": {
        "description": "The current state of the trusted identity provider feature for this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedIdProviders": {
        "description": "The list of trusted identity providers associated with this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "The list of virtual network rules associated with this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultGroup",
      "encryptionConfig",
      "encryptionState",
      "firewallAllowAzureIps",
      "firewallRules",
      "firewallState",
      "newTier",
      "trustedIdProviders",
      "trustedIdProviderState",
      "virtualNetworkRules"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts/firewallRules": {
    "api_version": "2016-11-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts/trustedIdProviders": {
    "api_version": "2016-11-01",
    "full_properties": {
      "idProvider": {
        "description": "The URL of this trusted identity provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "idProvider"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts/virtualNetworkRules": {
    "api_version": "2016-11-01",
    "full_properties": {
      "subnetId": {
        "description": "The resource identifier for the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataMigration/services": {
    "api_version": "2022-03-30-preview",
    "full_properties": {
      "autoStopDelay": {
        "description": "The time delay before the service is auto-stopped when idle.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deleteResourcesOnStop": {
        "description": "Whether service resources should be deleted when stopped. (Turned on by default)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicKey": {
        "description": "The public key of the service, used to encrypt secrets sent to the service",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNicId": {
        "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualSubnetId": {
        "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicKey",
      "virtualSubnetId",
      "virtualNicId",
      "autoStopDelay",
      "deleteResourcesOnStop"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataMigration/services/projects": {
    "api_version": "2022-03-30-preview",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureAuthenticationInfo": {
        "description": "Azure Active Directory Application",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerStorageAccountArmId": {
        "description": "The ARM id of the storage account used for interactions when public access is disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "devCenterId": {
        "description": "Resource Id of an associated DevCenter",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "databasesInfo",
      "sourceConnectionInfo",
      "sourcePlatform",
      "targetConnectionInfo",
      "targetPlatform",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "customerStorageAccountArmId",
      "projectStatus",
      "publicNetworkAccess",
      "azureAuthenticationInfo",
      "devCenterId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataMigration/services/projects/files": {
    "api_version": "2022-03-30-preview",
    "full_properties": {
      "extension": {
        "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filePath": {
        "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mediaType": {
        "description": "File content type. This property can be modified to reflect the file content type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "extension",
      "filePath",
      "mediaType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataMigration/services/projects/tasks": {
    "api_version": "2022-03-30-preview",
    "full_properties": {
      "clientData": {
        "description": "Key value pairs of client data to attach meta data information to task",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "taskType",
      "clientData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataMigration/services/serviceTasks": {
    "api_version": "2022-03-30-preview",
    "full_properties": {
      "clientData": {
        "description": "Key value pairs of client data to attach meta data information to task",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "taskType",
      "clientData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataMigration/sqlMigrationServices": {
    "api_version": "2022-03-30-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataProtection/backupVaults": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "isVaultProtectedByResourceGuard": {
        "description": "Is vault protected by resource guard",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringSettings": {
        "description": "Monitoring Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securitySettings": {
        "description": "Class containing security settings of vault",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageSettings": {
        "description": "Storage Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageSettings",
      "monitoringSettings",
      "isVaultProtectedByResourceGuard",
      "securitySettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataProtection/backupVaults/backupInstances": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "dataSourceInfo": {
        "description": "Datasource to be backed up",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataSourceSetInfo": {
        "description": "DatasourceSet details of datasource to be backed up",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "datasourceAuthCredentials": {
        "description": "Base class for different types of authentication credentials.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Gets or sets the Backup Instance friendly name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "objectType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyInfo": {
        "description": "Policy Info in backupInstance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validationType": {
        "description": "Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataSourceInfo",
      "dataSourceSetInfo",
      "friendlyName",
      "objectType",
      "policyInfo",
      "datasourceAuthCredentials",
      "validationType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataProtection/backupVaults/backupPolicies": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "datasourceTypes": {
        "description": "Type of datasource for the backup management",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datasourceTypes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataProtection/backupVaults/backupResourceGuardProxies": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "description": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastUpdatedTime": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuardOperationDetails": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuardResourceId": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "lastUpdatedTime",
      "resourceGuardOperationDetails",
      "resourceGuardResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataProtection/resourceGuards": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "vaultCriticalOperationExclusionList": {
        "description": "List of critical operations which are not protected by this resourceGuard",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vaultCriticalOperationExclusionList"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts": {
    "api_version": "2021-08-01",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": "The api properties for special APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudConnectors": {
        "description": "External Cloud Service connectors",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customSubDomainName": {
        "description": "Optional subdomain name used for token-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamicThrottlingEnabled": {
        "description": "The flag to enable dynamic throttling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Gets or sets the managed resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "migrationToken": {
        "description": "Resource migration token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restore": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Device Update Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userOwnedStorage": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "cloudConnectors",
      "managedResourceGroupName",
      "allowedFqdnList",
      "apiProperties",
      "customSubDomainName",
      "disableLocalAuth",
      "migrationToken",
      "networkAcls",
      "restore",
      "restrictOutboundNetworkAccess",
      "userOwnedStorage",
      "dynamicThrottlingEnabled",
      "sku"
    ],
    "required": [
      "apiVersion",
      "identity",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shareSubscriptions": {
    "api_version": "2021-08-01",
    "full_properties": {
      "expirationDate": {
        "description": "The expiration date of the share subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "invitationId": {
        "description": "The invitation id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceShareLocation": {
        "description": "Source share location.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "invitationId",
      "sourceShareLocation",
      "expirationDate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shareSubscriptions/dataSetMappings": {
    "api_version": "2021-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shareSubscriptions/triggers": {
    "api_version": "2021-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares": {
    "api_version": "2021-08-01",
    "full_properties": {
      "accessProtocol": {
        "description": "Access protocol to be used by the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureContainerInfo": {
        "description": "Azure container mapping of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAccessRights": {
        "description": "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "Data policy of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for the share.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Current monitoring status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "refreshDetails": {
        "description": "Fields for tracking refresh job on the share or container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareKind": {
        "description": "Share kind.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "Current status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "terms": {
        "description": "Share terms.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessRights": {
        "description": "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "shareKind",
      "terms",
      "accessProtocol",
      "azureContainerInfo",
      "clientAccessRights",
      "dataPolicy",
      "monitoringStatus",
      "refreshDetails",
      "shareStatus",
      "userAccessRights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares/dataSets": {
    "api_version": "2021-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares/invitations": {
    "api_version": "2021-08-01",
    "full_properties": {
      "expirationDate": {
        "description": "The expiration date for the invitation and share subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetActiveDirectoryId": {
        "description": "The target Azure AD Id. Can't be combined with email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetEmail": {
        "description": "The email the invitation is directed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetObjectId": {
        "description": "The target user or application Id that invitation is being sent to.\r\nMust be specified along TargetActiveDirectoryId. This enables sending\r\ninvitations to specific users or applications in an AD tenant.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetActiveDirectoryId",
      "targetEmail",
      "targetObjectId",
      "expirationDate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares/synchronizationSettings": {
    "api_version": "2021-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Databricks/accessConnectors": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Databricks/workspaces": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Databricks/workspaces/privateEndpointConnections": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Databricks/workspaces/virtualNetworkPeerings": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "allowForwardedTraffic": {
        "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowGatewayTransit": {
        "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowVirtualNetworkAccess": {
        "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databricksAddressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databricksVirtualNetwork": {
        "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "doNotVerifyRemoteGateways": {
        "description": "If we need to verify the provisioning state of the remote gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringState": {
        "description": "The status of the virtual network peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringSyncLevel": {
        "description": "The peering sync status of the virtual network peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the virtual network peering resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "remoteAddressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteBgpCommunities": {
        "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVirtualNetwork": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVirtualNetworkAddressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useRemoteGateways": {
        "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowForwardedTraffic",
      "allowGatewayTransit",
      "allowVirtualNetworkAccess",
      "peeringState",
      "provisioningState",
      "remoteVirtualNetwork",
      "useRemoteGateways",
      "remoteAddressSpace",
      "databricksAddressSpace",
      "databricksVirtualNetwork",
      "remoteBgpCommunities",
      "doNotVerifyRemoteGateways",
      "peeringSyncLevel",
      "remoteVirtualNetworkAddressSpace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Datadog/monitors": {
    "api_version": "2022-06-01",
    "full_properties": {
      "appLocation": {
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datadogOrganizationProperties": {
        "description": "Datadog organization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynatraceEnvironmentProperties": {
        "description": "Properties of the Dynatrace environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticProperties": {
        "description": "Elastic Resource Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liftrResourceCategory": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logzOrganizationProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplaceSubscriptionStatus": {
        "description": "Marketplace subscription status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Flag specifying if the resource monitoring is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planData": {
        "description": "Billing plan information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingPreference": {
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userInfo": {
        "description": "User Information to be passed to partners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of elastic of the monitor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundancyPreference": {
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datadogOrganizationProperties",
      "liftrResourceCategory",
      "marketplaceSubscriptionStatus",
      "monitoringStatus",
      "provisioningState",
      "userInfo",
      "elasticProperties",
      "logzOrganizationProperties",
      "planData",
      "dynatraceEnvironmentProperties",
      "version",
      "appLocation",
      "logAnalyticsWorkspaceArmId",
      "managedResourceGroupConfiguration",
      "monitorSubnet",
      "routingPreference",
      "zoneRedundancyPreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Datadog/monitors/singleSignOnConfigurations": {
    "api_version": "2022-06-01",
    "full_properties": {
      "enterpriseAppId": {
        "description": "The Id of the Enterprise App used for Single sign-on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "singleSignOnState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enterpriseAppId",
      "provisioningState",
      "singleSignOnState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Datadog/monitors/tagRules": {
    "api_version": "2022-06-01",
    "full_properties": {
      "logRules": {
        "description": "Set of rules for sending logs for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metricRules": {
        "description": "Set of rules for sending metrics for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitoring tag rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "logRules",
      "metricRules",
      "provisioningState",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DelegatedNetwork/controller": {
    "api_version": "2021-03-15",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DelegatedNetwork/delegatedSubnets": {
    "api_version": "2021-03-15",
    "full_properties": {
      "controllerDetails": {
        "description": "controller details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetDetails": {
        "description": "Properties of orchestrator",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "controllerDetails",
      "subnetDetails"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DelegatedNetwork/orchestrators": {
    "api_version": "2021-03-15",
    "full_properties": {
      "apiServerEndpoint": {
        "description": "K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterRootCA": {
        "description": "RootCA certificate of kubernetes cluster base64 encoded",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "controllerDetails": {
        "description": "controller details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orchestratorAppId": {
        "description": "AAD ID used with apiserver",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "orchestratorTenantId": {
        "description": "TenantID of server App ID",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiServerEndpoint",
      "clusterRootCA",
      "controllerDetails",
      "orchestratorAppId",
      "orchestratorTenantId",
      "privateLinkResourceId"
    ],
    "required": [
      "apiVersion",
      "kind",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/artifactSources": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "armTemplateFolderPath": {
        "description": "The folder containing Azure Resource Manager templates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "artifactRoot": {
        "description": "The path from the location that the 'authentication' property [say, a SAS URI to the blob container] refers to, to the location of the artifacts. This can be used to differentiate different versions of the artifacts. Or, different types of artifacts like binaries or templates. The location referenced by the authentication property concatenated with this optional artifactRoot path forms the artifact source location where the artifacts are expected to be found.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authentication": {
        "description": "Defines the authentication method and properties to access the artifacts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "branchRef": {
        "description": "The artifact source's branch reference.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The artifact source's display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folderPath": {
        "description": "The folder containing artifacts.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityToken": {
        "description": "The security token to authenticate to the artifact source.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceType": {
        "description": "The type of artifact source used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The artifact source's URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branchRef",
      "displayName",
      "folderPath",
      "provisioningState",
      "securityToken",
      "sourceType",
      "status",
      "uri",
      "armTemplateFolderPath",
      "uniqueIdentifier",
      "artifactRoot",
      "authentication"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/rollouts": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "artifactSourceId": {
        "description": "The reference to the artifact source resource Id where the payload is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "buildVersion": {
        "description": "The version of the build being deployed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "stepGroups": {
        "description": "The list of step groups that define the orchestration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetServiceTopologyId": {
        "description": "The resource Id of the service topology from which service units are being referenced in step groups to be deployed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactSourceId",
      "buildVersion",
      "stepGroups",
      "targetServiceTopologyId"
    ],
    "required": [
      "apiVersion",
      "identity",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/serviceTopologies": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "artifactSourceId": {
        "description": "The resource Id of the artifact source that contains the artifacts that can be referenced in the service units.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactSourceId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/serviceTopologies/services": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "autoScalingPolicies": {
        "description": "Auto scaling policies",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "codePackages": {
        "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationScheme": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMoveCost": {
        "description": "Specifies the move cost for the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Reference to sinks in DiagnosticsDescription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthState": {
        "description": "The health state of a resource such as Application, Service, or Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRefs": {
        "description": "The names of the private networks that this service needs to be part of.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The operation system required by the code in service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionDescription": {
        "description": "Describes how the service is partitioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementConstraints": {
        "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replicaCount": {
        "description": "The number of replicas of the service to create. Defaults to 1 if not specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scalingPolicies": {
        "description": "Scaling policies for this service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceDnsName": {
        "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceLoadMetrics": {
        "description": "The service load metrics is given as an array of ServiceLoadMetric objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePackageActivationMode": {
        "description": "The activation Mode of the service package.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePlacementPolicies": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceTypeName": {
        "description": "The name of the service type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetLocation": {
        "description": "The Azure location to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetSubscriptionId": {
        "description": "The subscription to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "correlationScheme",
      "defaultMoveCost",
      "partitionDescription",
      "placementConstraints",
      "serviceLoadMetrics",
      "servicePlacementPolicies",
      "serviceTypeName",
      "codePackages",
      "description",
      "diagnostics",
      "healthState",
      "networkRefs",
      "osType",
      "replicaCount",
      "targetLocation",
      "targetSubscriptionId",
      "autoScalingPolicies",
      "servicePackageActivationMode",
      "serviceDnsName",
      "scalingPolicies"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/serviceTopologies/services/serviceUnits": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "artifacts": {
        "description": "Defines the artifacts of a service unit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentMode": {
        "description": "Describes the type of ARM deployment to be performed on the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceGroup": {
        "description": "The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifacts",
      "deploymentMode",
      "targetResourceGroup"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/steps": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/applicationGroups": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "applicationGroupType": {
        "description": "Resource Type of ApplicationGroup.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAppGroupIdentifier": {
        "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of ApplicationGroup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of ApplicationGroup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostPoolArmPath": {
        "description": "HostPool arm path of ApplicationGroup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "migrationRequest": {
        "description": "Properties for arm migration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policies": {
        "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationGroupType",
      "description",
      "friendlyName",
      "hostPoolArmPath",
      "migrationRequest",
      "clientAppGroupIdentifier",
      "isEnabled",
      "policies"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/applicationGroups/applications": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "allowUpdates": {
        "description": "A value indicating whether packages within the application may be overwritten using the same version string.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationDefinitionId": {
        "description": "The fully qualified path of managed application definition Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "applicationType": {
        "description": "Resource Type of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineArguments": {
        "description": "Command Line Arguments for Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineSetting": {
        "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultVersion": {
        "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "errors": {
        "description": "The list of errors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filePath": {
        "description": "Specifies a path for the executable file for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpsEndpoints": {
        "description": "The list of application HTTPS endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconIndex": {
        "description": "Index of the icon.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconPath": {
        "description": "Path to icon.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "installScriptActions": {
        "description": "The list of install script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jitAccessPolicy": {
        "description": "Managed application Jit access policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageApplicationId": {
        "description": "Specifies the package application Id for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageFamilyName": {
        "description": "Specifies the package family name for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "privateLinkConfigurations": {
        "description": "The private link configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publisherPackageId": {
        "description": "The publisher package Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "showInPortal": {
        "description": "Specifies whether to show the RemoteApp program in the RD Web Access server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshEndpoints": {
        "description": "The list of application SSH endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uninstallScriptActions": {
        "description": "The list of uninstall script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationType",
      "computeProfile",
      "errors",
      "httpsEndpoints",
      "installScriptActions",
      "sshEndpoints",
      "uninstallScriptActions",
      "applicationDefinitionId",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "publisherPackageId",
      "jitAccessPolicy",
      "allowUpdates",
      "defaultVersion",
      "displayName",
      "commandLineArguments",
      "commandLineSetting",
      "description",
      "filePath",
      "friendlyName",
      "iconIndex",
      "iconPath",
      "showInPortal",
      "msixPackageApplicationId",
      "msixPackageFamilyName",
      "privateLinkConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/hostPools": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "agentUpdate": {
        "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customRdpProperty": {
        "description": "Custom rdp property of HostPool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of HostPool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of HostPool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostPoolType": {
        "description": "HostPool type for desktop.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancerType": {
        "description": "The type of the load balancer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSessionLimit": {
        "description": "The max session limit of HostPool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "migrationRequest": {
        "description": "Properties for arm migration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "personalDesktopAssignmentType": {
        "description": "PersonalDesktopAssignment type for HostPool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredAppGroupType": {
        "description": "The type of preferred application group type, default to Desktop Application Group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registrationInfo": {
        "description": "Represents a RegistrationInfo definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ring": {
        "description": "The ring number of HostPool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ssoClientId": {
        "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ssoClientSecretKeyVaultPath": {
        "description": "Path to Azure KeyVault storing the secret used for communication to ADFS.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ssoContext": {
        "description": "Path to keyvault containing ssoContext secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ssoSecretType": {
        "description": "The type of single sign on Secret Type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ssoadfsAuthority": {
        "description": "URL to customer ADFS server for signing WVD SSO certificates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startVMOnConnect": {
        "description": "The flag to turn on/off StartVMOnConnect feature.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validationEnvironment": {
        "description": "Is validation environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmTemplate": {
        "description": "VM template for sessionhosts configuration within hostpool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customRdpProperty",
      "description",
      "friendlyName",
      "hostPoolType",
      "loadBalancerType",
      "maxSessionLimit",
      "personalDesktopAssignmentType",
      "preferredAppGroupType",
      "registrationInfo",
      "ring",
      "ssoContext",
      "validationEnvironment",
      "vmTemplate",
      "ssoadfsAuthority",
      "ssoClientId",
      "ssoClientSecretKeyVaultPath",
      "ssoSecretType",
      "startVMOnConnect",
      "migrationRequest",
      "publicNetworkAccess",
      "agentUpdate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/hostPools/msixPackages": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "displayName": {
        "description": "User friendly Name to be displayed in the portal. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "imagePath": {
        "description": "VHD/CIM image path on Network Share.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isActive": {
        "description": "Make this version of the package the active one across the hostpool. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRegularRegistration": {
        "description": "Specifies how to register Package in feed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastUpdated": {
        "description": "Date Package was last updated, found in the appxmanifest.xml. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageApplications": {
        "description": "List of package applications. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "packageDependencies": {
        "description": "List of package dependencies. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "packageFamilyName": {
        "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageName": {
        "description": "Package Name from appxmanifest.xml. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageRelativePath": {
        "description": "Relative Path to the package inside the image. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Package Version found in the appxmanifest.xml. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "imagePath",
      "isActive",
      "isRegularRegistration",
      "lastUpdated",
      "packageApplications",
      "packageDependencies",
      "packageFamilyName",
      "packageName",
      "packageRelativePath",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/hostPools/privateEndpointConnections": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/scalingPlans": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "Description of scaling plan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "exclusionTag": {
        "description": "Exclusion tag for scaling plan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "User friendly name of scaling plan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostPoolReferences": {
        "description": "List of ScalingHostPoolReference definitions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostPoolType": {
        "description": "HostPool type for desktop.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ring": {
        "description": "The ring number of scaling plan.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedules": {
        "description": "List of ScalingPlanPooledSchedule definitions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "Timezone of the scaling plan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "exclusionTag",
      "friendlyName",
      "hostPoolReferences",
      "hostPoolType",
      "schedules",
      "timeZone",
      "ring"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/scalingPlans/pooledSchedules": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "daysOfWeek": {
        "description": "Set of days of the week on which this schedule is active.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "offPeakLoadBalancingAlgorithm": {
        "description": "Load balancing algorithm for off-peak period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "offPeakStartTime": {
        "description": "The time for a scaling action to occur.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peakLoadBalancingAlgorithm": {
        "description": "Load balancing algorithm for peak period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peakStartTime": {
        "description": "The time for a scaling action to occur.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampDownCapacityThresholdPct": {
        "description": "Capacity threshold for ramp down period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampDownForceLogoffUsers": {
        "description": "Should users be logged off forcefully from hosts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampDownLoadBalancingAlgorithm": {
        "description": "Load balancing algorithm for ramp down period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampDownMinimumHostsPct": {
        "description": "Minimum host percentage for ramp down period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampDownNotificationMessage": {
        "description": "Notification message for users during ramp down period.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rampDownStartTime": {
        "description": "The time for a scaling action to occur.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampDownStopHostsWhen": {
        "description": "Specifies when to stop hosts during ramp down period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampDownWaitTimeMinutes": {
        "description": "Number of minutes to wait to stop hosts during ramp down period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampUpCapacityThresholdPct": {
        "description": "Capacity threshold for ramp up period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampUpLoadBalancingAlgorithm": {
        "description": "Load balancing algorithm for ramp up period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampUpMinimumHostsPct": {
        "description": "Minimum host percentage for ramp up period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rampUpStartTime": {
        "description": "The time for a scaling action to occur.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "daysOfWeek",
      "offPeakLoadBalancingAlgorithm",
      "offPeakStartTime",
      "peakLoadBalancingAlgorithm",
      "peakStartTime",
      "rampDownCapacityThresholdPct",
      "rampDownForceLogoffUsers",
      "rampDownLoadBalancingAlgorithm",
      "rampDownMinimumHostsPct",
      "rampDownNotificationMessage",
      "rampDownStartTime",
      "rampDownStopHostsWhen",
      "rampDownWaitTimeMinutes",
      "rampUpCapacityThresholdPct",
      "rampUpLoadBalancingAlgorithm",
      "rampUpMinimumHostsPct",
      "rampUpStartTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/workspaces": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DesktopVirtualization/workspaces/privateEndpointConnections": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/devcenters": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/devcenters/attachednetworks": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "networkConnectionId": {
        "description": "The resource ID of the NetworkConnection you want to attach.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "networkConnectionId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/devcenters/catalogs": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "adoGit": {
        "description": "Properties for a Git repository catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gitHub": {
        "description": "Properties for a Git repository catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adoGit",
      "gitHub"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/devcenters/devboxdefinitions": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "imageReference": {
        "description": "Image reference information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osStorageType": {
        "description": "The storage type used for the Operating System disk of Dev Boxes created using this definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The resource model definition representing SKU",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "imageReference",
      "osStorageType",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/devcenters/environmentTypes": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/devcenters/galleries": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "description": {
        "description": "The description of this Shared Image Gallery resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "galleryResourceId": {
        "description": "The resource ID of the backing Azure Compute Gallery.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "identifier": {
        "description": "Describes the gallery unique name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharingProfile": {
        "description": "Profile for gallery sharing to subscription or tenant",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePolicy": {
        "description": "Contains information about the soft deletion policy of the gallery.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "identifier",
      "sharingProfile",
      "softDeletePolicy",
      "galleryResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/networkConnections": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "domainJoinType": {
        "description": "AAD Join type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainName": {
        "description": "Active Directory domain name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainPassword": {
        "description": "The password for the account used to join domain",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainUsername": {
        "description": "The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkingResourceGroupName": {
        "description": "The name for resource group where NICs will be placed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "organizationUnit": {
        "description": "Active Directory domain Organization Unit (OU)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLink": {
        "description": "Indicates whether or not private link is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceProviderConnection": {
        "description": "The direction for the resource provider connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The subnet to attach Virtual Machines to",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateLink",
      "resourceProviderConnection",
      "domainJoinType",
      "domainName",
      "domainPassword",
      "domainUsername",
      "networkingResourceGroupName",
      "organizationUnit",
      "subnetId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/projects": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureAuthenticationInfo": {
        "description": "Azure Active Directory Application",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerStorageAccountArmId": {
        "description": "The ARM id of the storage account used for interactions when public access is disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "devCenterId": {
        "description": "Resource Id of an associated DevCenter",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "databasesInfo",
      "sourceConnectionInfo",
      "sourcePlatform",
      "targetConnectionInfo",
      "targetPlatform",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "customerStorageAccountArmId",
      "projectStatus",
      "publicNetworkAccess",
      "azureAuthenticationInfo",
      "devCenterId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/projects/environmentTypes": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "creatorRoleAssignment": {
        "description": "The role definition assigned to the environment creator on backing resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentTargetId": {
        "description": "Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Defines whether this Environment Type can be used in this Project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userRoleAssignments": {
        "description": "Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creatorRoleAssignment",
      "deploymentTargetId",
      "status",
      "userRoleAssignments"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/projects/pools": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "applicationLicenses": {
        "description": "The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationPackages": {
        "description": "Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.\n\nWarning: This property is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "coolAccess": {
        "description": "If enabled (true) the pool can contain cool Access enabled volumes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "devBoxDefinitionName": {
        "description": "Name of a Dev Box definition in parent Project of this Pool",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionType": {
        "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interNodeCommunication": {
        "description": "This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localAdministrator": {
        "description": "Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxTasksPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountConfiguration": {
        "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConfiguration": {
        "description": "The network configuration for a pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConnectionName": {
        "description": "Name of a Network Connection in parent Project of this Pool",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "qosType": {
        "description": "The qos type of the pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTask": {
        "description": "In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetNodeCommunicationMode": {
        "description": "If omitted, the default value is Default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSchedulingPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSlotsPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccounts": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serviceLevel",
      "size",
      "applicationLicenses",
      "applicationPackages",
      "certificates",
      "deploymentConfiguration",
      "displayName",
      "interNodeCommunication",
      "maxTasksPerNode",
      "metadata",
      "networkConfiguration",
      "scaleSettings",
      "startTask",
      "taskSchedulingPolicy",
      "userAccounts",
      "vmSize",
      "mountConfiguration",
      "qosType",
      "taskSlotsPerNode",
      "coolAccess",
      "encryptionType",
      "devBoxDefinitionName",
      "licenseType",
      "localAdministrator",
      "networkConnectionName",
      "targetNodeCommunicationMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevCenter/projects/pools/schedules": {
    "api_version": "2022-10-12-preview",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationTime": {
        "description": "Gets or sets the creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dayOfMonth": {
        "description": "UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daysOfWeek": {
        "description": "Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDate": {
        "description": "The end date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTimeOffsetMinutes": {
        "description": "Gets or sets the expiry time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The frequency of this scheduled task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourOfDay": {
        "description": "UTC time at which cost analysis data will be emailed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets a value indicating whether this schedule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Gets or sets the last modified time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRun": {
        "description": "Gets or sets the next run time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRunOffsetMinutes": {
        "description": "Gets or sets the next run time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Notes for this schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recurrencePattern": {
        "description": "Recurrence pattern of a lab schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startAt": {
        "description": "When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDate": {
        "description": "The start date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Indicates whether or not this scheduled task is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopAt": {
        "description": "When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "time": {
        "description": "The target time to trigger the action. The format is HH:MM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The IANA timezone id at which the schedule should execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The IANA timezone id for the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Supported type this scheduled task represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeksOfMonth": {
        "description": "Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier",
      "advancedSchedule",
      "creationTime",
      "description",
      "expiryTime",
      "expiryTimeOffsetMinutes",
      "frequency",
      "interval",
      "isEnabled",
      "lastModifiedTime",
      "nextRun",
      "nextRunOffsetMinutes",
      "startTime",
      "timeZone",
      "notes",
      "recurrencePattern",
      "startAt",
      "stopAt",
      "dayOfMonth",
      "daysOfWeek",
      "endDate",
      "hourOfDay",
      "startDate",
      "weeksOfMonth",
      "state",
      "time",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevHub/workflows": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "definition": {
        "description": "The definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "githubWorkflowProfile": {
        "description": "GitHub Workflow Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "integrationAccount": {
        "description": "The integration account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state",
      "sku",
      "definition",
      "parameters",
      "integrationAccount",
      "githubWorkflowProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevOps/pipelines": {
    "api_version": "2020-07-13-preview",
    "full_properties": {
      "bootstrapConfiguration": {
        "description": "Configuration used to bootstrap a Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "organization": {
        "description": "Reference to an Azure DevOps Organization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "project": {
        "description": "Reference to an Azure DevOps Project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bootstrapConfiguration",
      "organization",
      "project"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevSpaces/controllers": {
    "api_version": "2019-04-01",
    "full_properties": {
      "hostSuffix": {
        "description": "DNS suffix for public endpoints running in the Azure Dev Spaces Controller.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetContainerHostCredentialsBase64": {
        "description": "Credentials of the target container host (base64).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetContainerHostResourceId": {
        "description": "Resource ID of the target container host",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostSuffix",
      "targetContainerHostResourceId",
      "targetContainerHostCredentialsBase64"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs": {
    "api_version": "2018-09-15",
    "full_properties": {
      "announcement": {
        "description": "Properties of a lab's announcement banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifactsStorageAccount": {
        "description": "The artifact storage account of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "autoShutdownProfile": {
        "description": "Profile for how to handle shutting down virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "budgetPerStudent": {
        "description": "The amount.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionProfile": {
        "description": "Connection profile for how users connect to lab virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The creation date of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultStorageAccount": {
        "description": "The lab's default storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultVirtualNetworkId": {
        "description": "The default virtual network identifier of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Lab Display Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentPermission": {
        "description": "The access rights to be granted to the user when provisioning an environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Default expiration date for each student in this lab",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Extended properties of the lab used for experimental features",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labPlanId": {
        "description": "A URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labStorageType": {
        "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsLinux": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsWindows": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxUsersInLab": {
        "description": "Maximum number of users allowed in the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Profile for how to handle networking for Labs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "premiumDataDisks": {
        "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rosterProfile": {
        "description": "The lab user list management profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "The lab security profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The storage accounts of the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "support": {
        "description": "Properties of a lab's support banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "The title of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageQuota": {
        "description": "Maximum duration a user can use an environment for in the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessMode": {
        "description": "Lab user access mode (open to all vs. restricted to those listed on the lab).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultName": {
        "description": "The name of the key vault of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualMachineProfile": {
        "description": "The base virtual machine configuration for a lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactsStorageAccount",
      "createdDate",
      "defaultStorageAccount",
      "defaultVirtualNetworkId",
      "labStorageType",
      "provisioningState",
      "storageAccounts",
      "vaultName",
      "premiumDataDisks",
      "uniqueIdentifier",
      "announcement",
      "environmentPermission",
      "extendedProperties",
      "mandatoryArtifactsResourceIdsLinux",
      "mandatoryArtifactsResourceIdsWindows",
      "support",
      "maxUsersInLab",
      "usageQuota",
      "userAccessMode",
      "autoShutdownProfile",
      "connectionProfile",
      "description",
      "labPlanId",
      "networkProfile",
      "rosterProfile",
      "securityProfile",
      "title",
      "virtualMachineProfile",
      "budgetPerStudent",
      "displayName",
      "expirationDate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/artifactsources": {
    "api_version": "2018-09-15",
    "full_properties": {
      "armTemplateFolderPath": {
        "description": "The folder containing Azure Resource Manager templates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "artifactRoot": {
        "description": "The path from the location that the 'authentication' property [say, a SAS URI to the blob container] refers to, to the location of the artifacts. This can be used to differentiate different versions of the artifacts. Or, different types of artifacts like binaries or templates. The location referenced by the authentication property concatenated with this optional artifactRoot path forms the artifact source location where the artifacts are expected to be found.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authentication": {
        "description": "Defines the authentication method and properties to access the artifacts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "branchRef": {
        "description": "The artifact source's branch reference.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The artifact source's display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folderPath": {
        "description": "The folder containing artifacts.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityToken": {
        "description": "The security token to authenticate to the artifact source.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceType": {
        "description": "The type of artifact source used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The artifact source's URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branchRef",
      "displayName",
      "folderPath",
      "provisioningState",
      "securityToken",
      "sourceType",
      "status",
      "uri",
      "armTemplateFolderPath",
      "uniqueIdentifier",
      "artifactRoot",
      "authentication"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/costs": {
    "api_version": "2018-09-15",
    "full_properties": {
      "createdDate": {
        "description": "The creation date of the cost.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "currencyCode": {
        "description": "The currency code of the cost.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDateTime": {
        "description": "The end time of the cost data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDateTime": {
        "description": "The start time of the cost data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetCost": {
        "description": "Properties of a cost target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createdDate",
      "currencyCode",
      "endDateTime",
      "provisioningState",
      "startDateTime",
      "targetCost",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/customimages": {
    "api_version": "2018-09-15",
    "full_properties": {
      "author": {
        "description": "The author of the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "The creation date of the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customImagePlan": {
        "description": "Properties for plan on a custom image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataDiskStorageInfo": {
        "description": "Storage information about the data disks present in the custom image",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isPlanAuthorized": {
        "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedImageId": {
        "description": "The Managed Image Id backing the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedSnapshotId": {
        "description": "The Managed Snapshot Id backing the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the custom image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vhd": {
        "description": "Properties for creating a custom image from a VHD.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vm": {
        "description": "Properties for creating a custom image from a virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "author",
      "creationDate",
      "description",
      "osType",
      "provisioningState",
      "vhd",
      "vm",
      "managedImageId",
      "uniqueIdentifier",
      "customImagePlan",
      "dataDiskStorageInfo",
      "isPlanAuthorized",
      "managedSnapshotId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/formulas": {
    "api_version": "2018-09-15",
    "full_properties": {
      "author": {
        "description": "The author of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "The creation date of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "formulaContent": {
        "description": "Properties for creating a virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vm": {
        "description": "Information about a VM from which a formula is to be created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "author",
      "creationDate",
      "description",
      "formulaContent",
      "osType",
      "provisioningState",
      "vm",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/notificationchannels": {
    "api_version": "2018-09-15",
    "full_properties": {
      "description": {
        "description": "Description of notification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "emailRecipient": {
        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "events": {
        "description": "The list of event for which this notification is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationLocale": {
        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "webHookUrl": {
        "description": "The webhook URL to send notifications to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "events",
      "provisioningState",
      "uniqueIdentifier",
      "webHookUrl",
      "emailRecipient",
      "notificationLocale"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/policysets/policies": {
    "api_version": "2018-09-15",
    "full_properties": {
      "description": {
        "description": "The description of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evaluatorType": {
        "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "factData": {
        "description": "The fact data of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "factName": {
        "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplacePurchases": {
        "description": "The policy that controls whether Azure marketplace purchases are allowed for a billing profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplacePurchasesAllowed": {
        "description": "The marketplacePurchasesAllowed flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reservationPurchases": {
        "description": "The policy that controls whether Azure reservation purchases are allowed for a billing profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reservationPurchasesAllowed": {
        "description": "The reservationPurchasesAllowed flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionOwnerCanViewCharges": {
        "description": "The subscriptionOwnerCanViewCharges flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threshold": {
        "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "viewCharges": {
        "description": "The policy that controls whether users with Azure RBAC access to a subscription can view its charges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "evaluatorType",
      "factData",
      "factName",
      "provisioningState",
      "status",
      "threshold",
      "uniqueIdentifier",
      "marketplacePurchasesAllowed",
      "reservationPurchasesAllowed",
      "subscriptionOwnerCanViewCharges",
      "marketplacePurchases",
      "reservationPurchases",
      "viewCharges"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationTime": {
        "description": "Gets or sets the creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dayOfMonth": {
        "description": "UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daysOfWeek": {
        "description": "Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDate": {
        "description": "The end date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTimeOffsetMinutes": {
        "description": "Gets or sets the expiry time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The frequency of this scheduled task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourOfDay": {
        "description": "UTC time at which cost analysis data will be emailed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets a value indicating whether this schedule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Gets or sets the last modified time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRun": {
        "description": "Gets or sets the next run time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRunOffsetMinutes": {
        "description": "Gets or sets the next run time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Notes for this schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recurrencePattern": {
        "description": "Recurrence pattern of a lab schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startAt": {
        "description": "When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDate": {
        "description": "The start date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Indicates whether or not this scheduled task is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopAt": {
        "description": "When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "time": {
        "description": "The target time to trigger the action. The format is HH:MM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The IANA timezone id at which the schedule should execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The IANA timezone id for the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Supported type this scheduled task represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeksOfMonth": {
        "description": "Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier",
      "advancedSchedule",
      "creationTime",
      "description",
      "expiryTime",
      "expiryTimeOffsetMinutes",
      "frequency",
      "interval",
      "isEnabled",
      "lastModifiedTime",
      "nextRun",
      "nextRunOffsetMinutes",
      "startTime",
      "timeZone",
      "notes",
      "recurrencePattern",
      "startAt",
      "stopAt",
      "dayOfMonth",
      "daysOfWeek",
      "endDate",
      "hourOfDay",
      "startDate",
      "weeksOfMonth",
      "state",
      "time",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/servicerunners": {
    "api_version": "2018-09-15",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users": {
    "api_version": "2018-09-15",
    "full_properties": {
      "additionalUsageQuota": {
        "description": "The amount of usage quota time the user gets in addition to the lab usage quota.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "email": {
        "description": "An email address.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptedPassword": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Identity attributes of a lab user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Username",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPassword": {
        "description": "Password used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHash": {
        "description": "Password hash used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHashSalt": {
        "description": "Password hash salt used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUserName": {
        "description": "Username used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scmUri": {
        "description": "Url of SCM site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretStore": {
        "description": "Properties of a user's secret store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareAccessRights": {
        "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userType": {
        "description": "Type of the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "publishingPassword",
      "publishingUserName",
      "scmUri",
      "publishingPasswordHash",
      "publishingPasswordHashSalt",
      "identity",
      "provisioningState",
      "secretStore",
      "uniqueIdentifier",
      "encryptedPassword",
      "shareAccessRights",
      "userType",
      "additionalUsageQuota",
      "email"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/disks": {
    "api_version": "2018-09-15",
    "full_properties": {
      "accountType": {
        "description": "the storage account type of the disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "burstingEnabled": {
        "description": "Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "completionPercent": {
        "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataAccessAuthMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskAccessId": {
        "description": "ARM id of the DiskAccess resource for using private endpoints on disks.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskBlobName": {
        "description": "When backed by a blob, the name of the VHD blob without extension.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskIOPSReadOnly": {
        "description": "The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskIOPSReadWrite": {
        "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskMBpsReadOnly": {
        "description": "The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskMBpsReadWrite": {
        "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGiB": {
        "description": "The size of the disk in Gibibytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskState": {
        "description": "The state of the disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskType": {
        "description": "The storage type for the disk (i.e. Standard, Premium).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskUri": {
        "description": "When backed by a blob, the URI of underlying blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption at rest settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostCaching": {
        "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "leasedByLabVmId": {
        "description": "The resource ID of the VM to which this disk is leased.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskId": {
        "description": "When backed by managed disk, this is the ID of the compute disk resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxShares": {
        "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAccessPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedForFrequentAttach": {
        "description": "Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": "Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Contains the security related information for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "When backed by a blob, the storage account where the blob is.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportedCapabilities": {
        "description": "List of supported capabilities persisted on the disk resource for VM use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsHibernation": {
        "description": "Indicates the OS on a disk supports hibernation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tier": {
        "description": "Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountType",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "osType",
      "diskBlobName",
      "diskSizeGiB",
      "diskType",
      "diskUri",
      "hostCaching",
      "leasedByLabVmId",
      "managedDiskId",
      "provisioningState",
      "uniqueIdentifier",
      "diskIOPSReadWrite",
      "diskMBpsReadWrite",
      "storageAccountId",
      "encryptionSettingsCollection",
      "hyperVGeneration",
      "encryption",
      "diskIOPSReadOnly",
      "diskMBpsReadOnly",
      "maxShares",
      "diskAccessId",
      "networkAccessPolicy",
      "diskState",
      "tier",
      "burstingEnabled",
      "purchasePlan",
      "securityProfile",
      "supportsHibernation",
      "completionPercent",
      "publicNetworkAccess",
      "supportedCapabilities",
      "dataAccessAuthMode",
      "optimizedForFrequentAttach"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/environments": {
    "api_version": "2018-09-15",
    "full_properties": {
      "armTemplateDisplayName": {
        "description": "The display name of the Azure Resource Manager template that produced the environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentProperties": {
        "description": "Properties of an environment deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceSets": {
        "description": "Represents a VM and the setting Id it was created for.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "armTemplateDisplayName",
      "deploymentProperties",
      "provisioningState",
      "uniqueIdentifier",
      "resourceSets"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/secrets": {
    "api_version": "2018-09-15",
    "full_properties": {
      "attributes": {
        "description": "The secret management attributes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The content type of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The json object containing secret parameters",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "uniqueIdentifier",
      "value",
      "attributes",
      "contentType",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/servicefabrics": {
    "api_version": "2018-09-15",
    "full_properties": {
      "environmentId": {
        "description": "The resource id of the environment under which the service fabric resource is present",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalServiceFabricId": {
        "description": "The backing service fabric resource's id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "environmentId",
      "externalServiceFabricId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/servicefabrics/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationTime": {
        "description": "Gets or sets the creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dayOfMonth": {
        "description": "UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daysOfWeek": {
        "description": "Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDate": {
        "description": "The end date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTimeOffsetMinutes": {
        "description": "Gets or sets the expiry time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The frequency of this scheduled task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourOfDay": {
        "description": "UTC time at which cost analysis data will be emailed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets a value indicating whether this schedule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Gets or sets the last modified time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRun": {
        "description": "Gets or sets the next run time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRunOffsetMinutes": {
        "description": "Gets or sets the next run time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Notes for this schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recurrencePattern": {
        "description": "Recurrence pattern of a lab schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startAt": {
        "description": "When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDate": {
        "description": "The start date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Indicates whether or not this scheduled task is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopAt": {
        "description": "When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "time": {
        "description": "The target time to trigger the action. The format is HH:MM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The IANA timezone id at which the schedule should execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The IANA timezone id for the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Supported type this scheduled task represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeksOfMonth": {
        "description": "Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier",
      "advancedSchedule",
      "creationTime",
      "description",
      "expiryTime",
      "expiryTimeOffsetMinutes",
      "frequency",
      "interval",
      "isEnabled",
      "lastModifiedTime",
      "nextRun",
      "nextRunOffsetMinutes",
      "startTime",
      "timeZone",
      "notes",
      "recurrencePattern",
      "startAt",
      "stopAt",
      "dayOfMonth",
      "daysOfWeek",
      "endDate",
      "hourOfDay",
      "startDate",
      "weeksOfMonth",
      "state",
      "time",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/virtualmachines": {
    "api_version": "2018-09-15",
    "full_properties": {
      "allowClaim": {
        "description": "Indicates whether another user can take ownership of the virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicableSchedule": {
        "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifactDeploymentStatus": {
        "description": "Properties of an artifact deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifacts": {
        "description": "The artifacts to be installed on the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "computeId": {
        "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "computeVm": {
        "description": "Properties of a virtual machine returned by the Microsoft.Compute API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdByUser": {
        "description": "The email address of creator of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdByUserId": {
        "description": "The object identifier of the creator of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The creation date of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customImageId": {
        "description": "The custom image identifier of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataDiskParameters": {
        "description": "New or existing data disks to attach to the virtual machine after creation",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disallowPublicIpAddress": {
        "description": "Indicates whether the virtual machine is to be created without a public IP address.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentId": {
        "description": "The resource ID of the environment that contains this virtual machine, if any.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "The expiration date for VM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "The fully-qualified domain name of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "galleryImageReference": {
        "description": "The reference information for an Azure Marketplace image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAuthenticationWithSshKey": {
        "description": "Indicates whether this virtual machine uses an SSH key for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labSubnetName": {
        "description": "The lab subnet name of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labVirtualNetworkId": {
        "description": "The lab virtual network identifier of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkInterface": {
        "description": "Properties of a network interface.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "The notes of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerObjectId": {
        "description": "The object identifier of the owner of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerUserPrincipalName": {
        "description": "The user principal name of the virtual machine owner.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "The password of the virtual machine administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "planId": {
        "description": "The id of the plan associated with the virtual machine image",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scheduleParameters": {
        "description": "Virtual Machine schedules to be created",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "The size of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sshKey": {
        "description": "The SSH key of the virtual machine administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageType": {
        "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "The user name of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualMachineCreationSource": {
        "description": "Tells source of creation of lab virtual machine. Output property only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactDeploymentStatus",
      "artifacts",
      "computeId",
      "createdByUser",
      "createdByUserId",
      "customImageId",
      "disallowPublicIpAddress",
      "fqdn",
      "galleryImageReference",
      "isAuthenticationWithSshKey",
      "labSubnetName",
      "labVirtualNetworkId",
      "notes",
      "osType",
      "ownerObjectId",
      "password",
      "provisioningState",
      "size",
      "sshKey",
      "userName",
      "allowClaim",
      "applicableSchedule",
      "computeVm",
      "createdDate",
      "environmentId",
      "expirationDate",
      "networkInterface",
      "ownerUserPrincipalName",
      "storageType",
      "uniqueIdentifier",
      "virtualMachineCreationSource",
      "dataDiskParameters",
      "planId",
      "scheduleParameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/virtualmachines/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationTime": {
        "description": "Gets or sets the creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dayOfMonth": {
        "description": "UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daysOfWeek": {
        "description": "Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDate": {
        "description": "The end date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTimeOffsetMinutes": {
        "description": "Gets or sets the expiry time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The frequency of this scheduled task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourOfDay": {
        "description": "UTC time at which cost analysis data will be emailed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets a value indicating whether this schedule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Gets or sets the last modified time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRun": {
        "description": "Gets or sets the next run time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRunOffsetMinutes": {
        "description": "Gets or sets the next run time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Notes for this schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recurrencePattern": {
        "description": "Recurrence pattern of a lab schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startAt": {
        "description": "When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDate": {
        "description": "The start date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Indicates whether or not this scheduled task is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopAt": {
        "description": "When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "time": {
        "description": "The target time to trigger the action. The format is HH:MM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The IANA timezone id at which the schedule should execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The IANA timezone id for the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Supported type this scheduled task represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeksOfMonth": {
        "description": "Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier",
      "advancedSchedule",
      "creationTime",
      "description",
      "expiryTime",
      "expiryTimeOffsetMinutes",
      "frequency",
      "interval",
      "isEnabled",
      "lastModifiedTime",
      "nextRun",
      "nextRunOffsetMinutes",
      "startTime",
      "timeZone",
      "notes",
      "recurrencePattern",
      "startAt",
      "stopAt",
      "dayOfMonth",
      "daysOfWeek",
      "endDate",
      "hourOfDay",
      "startDate",
      "weeksOfMonth",
      "state",
      "time",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/virtualnetworks": {
    "api_version": "2018-09-15",
    "full_properties": {
      "allowedSubnets": {
        "description": "The allowed subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalProviderResourceId": {
        "description": "The Microsoft.Network resource identifier of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalSubnets": {
        "description": "The external subnet properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "id": {
        "description": "Uri of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Properties of a subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetOverrides": {
        "description": "The subnet overrides of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedSubnets",
      "description",
      "externalProviderResourceId",
      "provisioningState",
      "subnetOverrides",
      "externalSubnets",
      "uniqueIdentifier",
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "moRefId",
      "vCenterId",
      "id",
      "subnet"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationTime": {
        "description": "Gets or sets the creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dayOfMonth": {
        "description": "UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daysOfWeek": {
        "description": "Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDate": {
        "description": "The end date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTimeOffsetMinutes": {
        "description": "Gets or sets the expiry time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The frequency of this scheduled task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourOfDay": {
        "description": "UTC time at which cost analysis data will be emailed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets a value indicating whether this schedule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Gets or sets the last modified time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRun": {
        "description": "Gets or sets the next run time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRunOffsetMinutes": {
        "description": "Gets or sets the next run time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Notes for this schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recurrencePattern": {
        "description": "Recurrence pattern of a lab schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startAt": {
        "description": "When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDate": {
        "description": "The start date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Indicates whether or not this scheduled task is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopAt": {
        "description": "When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "time": {
        "description": "The target time to trigger the action. The format is HH:MM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The IANA timezone id at which the schedule should execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The IANA timezone id for the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Supported type this scheduled task represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeksOfMonth": {
        "description": "Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier",
      "advancedSchedule",
      "creationTime",
      "description",
      "expiryTime",
      "expiryTimeOffsetMinutes",
      "frequency",
      "interval",
      "isEnabled",
      "lastModifiedTime",
      "nextRun",
      "nextRunOffsetMinutes",
      "startTime",
      "timeZone",
      "notes",
      "recurrencePattern",
      "startAt",
      "stopAt",
      "dayOfMonth",
      "daysOfWeek",
      "endDate",
      "hourOfDay",
      "startDate",
      "weeksOfMonth",
      "state",
      "time",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeviceUpdate/accounts": {
    "api_version": "2022-10-01",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": "The api properties for special APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudConnectors": {
        "description": "External Cloud Service connectors",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customSubDomainName": {
        "description": "Optional subdomain name used for token-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamicThrottlingEnabled": {
        "description": "The flag to enable dynamic throttling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Gets or sets the managed resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "migrationToken": {
        "description": "Resource migration token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restore": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Device Update Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userOwnedStorage": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "cloudConnectors",
      "managedResourceGroupName",
      "allowedFqdnList",
      "apiProperties",
      "customSubDomainName",
      "disableLocalAuth",
      "migrationToken",
      "networkAcls",
      "restore",
      "restrictOutboundNetworkAccess",
      "userOwnedStorage",
      "dynamicThrottlingEnabled",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeviceUpdate/accounts/instances": {
    "api_version": "2022-10-01",
    "full_properties": {
      "diagnosticStorageProperties": {
        "description": "Customer-initiated diagnostic log collection storage properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiagnostics": {
        "description": "Enables or Disables the diagnostic logs collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iotHubs": {
        "description": "List of IoT Hubs associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "diagnosticStorageProperties",
      "enableDiagnostics",
      "iotHubs"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeviceUpdate/accounts/privateEndpointConnectionProxies": {
    "api_version": "2022-10-01",
    "full_properties": {
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection proxy resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeviceUpdate/accounts/privateEndpointConnections": {
    "api_version": "2022-10-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Devices/IotHubs": {
    "api_version": "2022-04-30-preview",
    "full_properties": {
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizationPolicies": {
        "description": "The shared access policies you can use to secure a connection to the IoT hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudToDevice": {
        "description": "The IoT hub cloud-to-device messaging properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "comments": {
        "description": "IoT hub comments.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deviceStreams": {
        "description": "The device streams properties of iothub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableDeviceSAS": {
        "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableModuleSAS": {
        "description": "If true, all module scoped SAS keys cannot be used for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDataResidency": {
        "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFileUploadNotifications": {
        "description": "If True, file upload notifications are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "The encryption properties for the IoT hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventHubEndpoints": {
        "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "The capabilities and features enabled for the IoT hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipFilterRules": {
        "description": "The IP filter rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "locations": {
        "description": "Primary and secondary location for iot hub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "messagingEndpoints": {
        "description": "The messaging endpoint properties for the file upload notification queue.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minTlsVersion": {
        "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkRuleSets": {
        "description": "Network Rule Set Properties of IotHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operationsMonitoringProperties": {
        "description": "The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections created on this IotHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rootCertificate": {
        "description": "This property store root certificate related information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routing": {
        "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoints": {
        "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationPolicies",
      "cloudToDevice",
      "comments",
      "enableFileUploadNotifications",
      "eventHubEndpoints",
      "features",
      "ipFilterRules",
      "messagingEndpoints",
      "operationsMonitoringProperties",
      "storageEndpoints",
      "routing",
      "deviceStreams",
      "locations",
      "minTlsVersion",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "networkRuleSets",
      "allowedFqdnList",
      "disableDeviceSAS",
      "disableLocalAuth",
      "disableModuleSAS",
      "restrictOutboundNetworkAccess",
      "enableDataResidency",
      "rootCertificate"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Devices/IotHubs/certificates": {
    "api_version": "2022-04-30-preview",
    "full_properties": {
      "canonicalName": {
        "description": "CNAME of the certificate to be issued via free certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cerBlob": {
        "description": "Raw bytes of .cer file",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certVersion": {
        "description": "The certificate version of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The certificate content",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainValidationMethod": {
        "description": "Method of domain validation for free cert",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Certificate expiration date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNames": {
        "description": "Host names the certificate applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for a hostingEnvironment (App Service Environment) to use for this resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVerified": {
        "description": "Determines whether certificate has been verified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "issueDate": {
        "description": "Certificate issue Date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "issuer": {
        "description": "Certificate issuer",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultCertName": {
        "description": "The certificate name of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault Csm resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Certificate password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Pfx blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Public key hash",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "selfLink": {
        "description": "Self link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subjectName": {
        "description": "Subject name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "valid": {
        "description": "Is the certificate valid?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "PFX or PEM blob",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The vault uri of user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cerBlob",
      "expirationDate",
      "friendlyName",
      "hostingEnvironmentProfile",
      "hostNames",
      "issueDate",
      "issuer",
      "password",
      "pfxBlob",
      "publicKeyHash",
      "selfLink",
      "siteName",
      "subjectName",
      "thumbprint",
      "valid",
      "keyVaultId",
      "keyVaultSecretName",
      "serverFarmId",
      "canonicalName",
      "certificate",
      "certVersion",
      "keyVaultCertName",
      "vaultUri",
      "domainValidationMethod",
      "isVerified",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups": {
    "api_version": "2022-04-30-preview",
    "full_properties": {
      "name": {
        "description": "EventHub consumer group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Devices/iotHubs/privateEndpointConnections": {
    "api_version": "2022-04-30-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Devices/provisioningServices": {
    "api_version": "2022-02-05",
    "full_properties": {
      "allocationPolicy": {
        "description": "Allocation policy to be used by this provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizationPolicies": {
        "description": "List of authorization keys for a provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDataResidency": {
        "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "The customer-managed encryption key (CMK) properties for the IoT DPS instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iotHubs": {
        "description": "List of IoT hubs associated with this provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipFilterRules": {
        "description": "The IP filter rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections created on this IotHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The ARM provisioning state of the provisioning service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Current state of the provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allocationPolicy",
      "authorizationPolicies",
      "iotHubs",
      "provisioningState",
      "state",
      "ipFilterRules",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "enableDataResidency"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Devices/provisioningServices/certificates": {
    "api_version": "2022-02-05",
    "full_properties": {
      "canonicalName": {
        "description": "CNAME of the certificate to be issued via free certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cerBlob": {
        "description": "Raw bytes of .cer file",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certVersion": {
        "description": "The certificate version of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The certificate content",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainValidationMethod": {
        "description": "Method of domain validation for free cert",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Certificate expiration date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNames": {
        "description": "Host names the certificate applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for a hostingEnvironment (App Service Environment) to use for this resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVerified": {
        "description": "Determines whether certificate has been verified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "issueDate": {
        "description": "Certificate issue Date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "issuer": {
        "description": "Certificate issuer",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultCertName": {
        "description": "The certificate name of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault Csm resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Certificate password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Pfx blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Public key hash",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "selfLink": {
        "description": "Self link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subjectName": {
        "description": "Subject name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "valid": {
        "description": "Is the certificate valid?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "PFX or PEM blob",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The vault uri of user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cerBlob",
      "expirationDate",
      "friendlyName",
      "hostingEnvironmentProfile",
      "hostNames",
      "issueDate",
      "issuer",
      "password",
      "pfxBlob",
      "publicKeyHash",
      "selfLink",
      "siteName",
      "subjectName",
      "thumbprint",
      "valid",
      "keyVaultId",
      "keyVaultSecretName",
      "serverFarmId",
      "canonicalName",
      "certificate",
      "certVersion",
      "keyVaultCertName",
      "vaultUri",
      "domainValidationMethod",
      "isVerified",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Devices/provisioningServices/privateEndpointConnections": {
    "api_version": "2022-02-05",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DigitalTwins/digitalTwinsInstances": {
    "api_version": "2022-05-31",
    "full_properties": {
      "privateEndpointConnections": {
        "description": "The private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access for the DigitalTwinsInstance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpointConnections",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DigitalTwins/digitalTwinsInstances/endpoints": {
    "api_version": "2022-05-31",
    "full_properties": {
      "authenticationType": {
        "description": "Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterSecret": {
        "description": "Dead letter storage secret for key-based authentication. Will be obfuscated during read.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deadLetterUri": {
        "description": "Dead letter storage URL for identity-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tags": {
        "description": "The resource tags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "tags",
      "deadLetterSecret",
      "authenticationType",
      "deadLetterUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections": {
    "api_version": "2022-05-31",
    "full_properties": {
      "api": {
        "description": "expanded parent object for expansion",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "changedTime": {
        "description": "Timestamp of last connection change.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdTime": {
        "description": "Timestamp of the connection creation",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customParameterValues": {
        "description": "Custom login setting values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "display name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firstExpirationTime": {
        "description": "Time in UTC when the first expiration of OAuth tokens",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "The list of group ids for the private endpoint connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keywords": {
        "description": "List of Keywords that tag the acl",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": null,
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "name": {
        "description": "connection name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nonSecretParameterValues": {
        "description": "Tokens/Claim",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameterValues": {
        "description": "Tokens/Claim",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The private endpoint property of a private endpoint connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "The connection state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "statuses": {
        "description": "Status of the connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "api",
      "changedTime",
      "createdTime",
      "customParameterValues",
      "displayName",
      "firstExpirationTime",
      "keywords",
      "metadata",
      "name",
      "nonSecretParameterValues",
      "parameterValues",
      "statuses",
      "tenantId",
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DigitalTwins/digitalTwinsInstances/timeSeriesDatabaseConnections": {
    "api_version": "2022-05-31",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/cassandraClusters": {
    "api_version": "2022-08-15",
    "full_properties": {
      "authenticationMethod": {
        "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cassandraAuditLoggingEnabled": {
        "description": "Whether Cassandra audit logging is enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cassandraVersion": {
        "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientCertificates": {
        "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterNameOverride": {
        "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deallocated": {
        "description": "Whether the cluster and associated data centers has been deallocated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegatedManagementSubnetId": {
        "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalGossipCertificates": {
        "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "externalSeedNodes": {
        "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hoursBetweenBackups": {
        "description": "Number of hours to wait between taking a backup of the cluster. To disable backups, set this property to 0.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "initialCassandraAdminPassword": {
        "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "marketplaceResource": {
        "description": "Purchasing 3rd Party product for one Azure Spring Apps instance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Service network profile payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "prometheusEndpoint": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repairEnabled": {
        "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restoreFromBackupId": {
        "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetAddons": {
        "description": "Additional Service settings in vnet injection instance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "networkProfile",
      "authenticationMethod",
      "cassandraVersion",
      "clientCertificates",
      "clusterNameOverride",
      "delegatedManagementSubnetId",
      "externalGossipCertificates",
      "externalSeedNodes",
      "hoursBetweenBackups",
      "initialCassandraAdminPassword",
      "prometheusEndpoint",
      "provisioningState",
      "repairEnabled",
      "restoreFromBackupId",
      "cassandraAuditLoggingEnabled",
      "deallocated",
      "zoneRedundant",
      "marketplaceResource",
      "vnetAddons"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/cassandraClusters/dataCenters": {
    "api_version": "2022-08-15",
    "full_properties": {
      "authenticationMethodLdapProperties": {
        "description": "Ldap authentication method properties. This feature is in preview.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilityZone": {
        "description": "If the azure data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupStorageCustomerKeyUri": {
        "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "base64EncodedCassandraYamlFragment": {
        "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataCenterLocation": {
        "description": "The region this data center should be created in.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "delegatedSubnetId": {
        "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskCapacity": {
        "description": "Number of disk used for data centers. Default value is 4.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSku": {
        "description": "Disk SKU used for data centers. Default value is P30.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskCustomerKeyUri": {
        "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeCount": {
        "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "base64EncodedCassandraYamlFragment",
      "dataCenterLocation",
      "delegatedSubnetId",
      "nodeCount",
      "provisioningState",
      "authenticationMethodLdapProperties",
      "availabilityZone",
      "backupStorageCustomerKeyUri",
      "diskCapacity",
      "diskSku",
      "managedDiskCustomerKeyUri",
      "sku"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts": {
    "api_version": "2022-08-15",
    "full_properties": {
      "analyticalStorageConfiguration": {
        "description": "Analytical storage specific properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupPolicy": {
        "description": "The object representing the policy for taking backups on an account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capabilities": {
        "description": "List of Cosmos DB capabilities for the account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacity": {
        "description": "The object that represents all properties related to capacity enforcement on an account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectorOffer": {
        "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consistencyPolicy": {
        "description": "The consistency policy for the Cosmos DB database account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cors": {
        "description": "The CORS policy for the Cosmos DB database account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Enum to indicate the mode of account creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databaseAccountOfferType": {
        "description": "The offer type for the database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultIdentity": {
        "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnosticLogSettings": {
        "description": "Indicates what diagnostic log settings are to be enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableKeyBasedMetadataWriteAccess": {
        "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAnalyticalStorage": {
        "description": "Flag to indicate whether to enable storage analytics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticFailover": {
        "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableCassandraConnector": {
        "description": "Enables the cassandra connector on the Cosmos DB C* account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFreeTier": {
        "description": "Flag to indicate whether Free Tier is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableMaterializedViews": {
        "description": "Flag to indicate whether to enable MaterializedViews on the Cosmos DB account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableMultipleWriteLocations": {
        "description": "Enables the account to write in multiple locations",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitionMerge": {
        "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRangeFilter": {
        "description": "Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipRules": {
        "description": "Array of IpAddressOrRange objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVirtualNetworkFilterEnabled": {
        "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultKeyUri": {
        "description": "The URI of the key vault",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keysMetadata": {
        "description": "The metadata related to each access key for the given Cosmos DB database account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "locations": {
        "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAclBypass": {
        "description": "Indicates what services are allowed to bypass firewall checks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAclBypassResourceIds": {
        "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restoreParameters": {
        "description": "Parameters to indicate the information about the restore.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "capabilities",
      "connectorOffer",
      "consistencyPolicy",
      "databaseAccountOfferType",
      "enableAutomaticFailover",
      "enableCassandraConnector",
      "enableMultipleWriteLocations",
      "ipRangeFilter",
      "isVirtualNetworkFilterEnabled",
      "locations",
      "virtualNetworkRules",
      "disableKeyBasedMetadataWriteAccess",
      "keyVaultKeyUri",
      "publicNetworkAccess",
      "apiProperties",
      "cors",
      "enableAnalyticalStorage",
      "enableFreeTier",
      "ipRules",
      "backupPolicy",
      "networkAclBypass",
      "networkAclBypassResourceIds",
      "defaultIdentity",
      "analyticalStorageConfiguration",
      "createMode",
      "disableLocalAuth",
      "restoreParameters",
      "diagnosticLogSettings",
      "capacity",
      "enableMaterializedViews",
      "keysMetadata",
      "enablePartitionMerge"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/collections": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB MongoDB collection resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/collections/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/containers": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL container resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/containers/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Gremlin graph resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra keyspace resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/tables": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/tables/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra keyspace resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views": {
    "api_version": "2022-08-15-preview",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra view resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings": {
    "api_version": "2022-08-15-preview",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs": {
    "api_version": "2022-08-15-preview",
    "full_properties": {
      "destination": {
        "description": "Base class for all DataTransfer source/sink",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Base class for all DataTransfer source/sink",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerCount": {
        "description": "Worker count",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "source",
      "workerCount"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/graphs": {
    "api_version": "2022-08-15-preview",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Graph resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Gremlin database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Gremlin graph resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB MongoDB database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB MongoDB collection resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions": {
    "api_version": "2022-08-15",
    "full_properties": {
      "databaseName": {
        "description": "The database name for which access is being granted for this Role Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privileges": {
        "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "roleName": {
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "roles": {
        "description": "The set of roles inherited by this Role Definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Indicates whether the Role Definition was built-in or user created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseName",
      "privileges",
      "roleName",
      "roles",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions": {
    "api_version": "2022-08-15",
    "full_properties": {
      "customData": {
        "description": "A custom definition for the USer Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseName": {
        "description": "The database name for which access is being granted for this User Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mechanisms": {
        "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "The password for User Definition. Response does not contain user password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "roles": {
        "description": "The set of roles inherited by the User Definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userName": {
        "description": "The user name for User Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customData",
      "databaseName",
      "mechanisms",
      "password",
      "roles",
      "userName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces": {
    "api_version": "2022-08-15",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections": {
    "api_version": "2022-08-15",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/services": {
    "api_version": "2022-08-15",
    "full_properties": {
      "instanceCount": {
        "description": "Instance count for the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "instanceSize": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "instanceCount",
      "instanceSize",
      "serviceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys": {
    "api_version": "2022-08-15-preview",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB client encryption key resource object.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL container resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL storedProcedure resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL trigger resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL userDefinedFunction resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments": {
    "api_version": "2022-08-15",
    "full_properties": {
      "principalId": {
        "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "roleDefinitionId": {
        "description": "The unique identifier for the associated Role Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "The data plane resource path for which access is being granted through this Role Assignment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalId",
      "roleDefinitionId",
      "scope"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions": {
    "api_version": "2022-08-15",
    "full_properties": {
      "assignableScopes": {
        "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "permissions": {
        "description": "The set of operations allowed through this Role Definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "roleName": {
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Indicates whether the Role Definition was built-in or user created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assignableScopes",
      "permissions",
      "roleName",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/tables": {
    "api_version": "2022-08-15",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings": {
    "api_version": "2022-08-15",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DomainRegistration/domains": {
    "api_version": "2022-03-01",
    "full_properties": {
      "authCode": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "autoCreateTopicWithFirstSubscription": {
        "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoDeleteTopicWithLastSubscription": {
        "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoRenew": {
        "description": "<code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consent": {
        "description": "Domain purchase consent object, representing acceptance of applicable legal agreements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactAdmin": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactBilling": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactRegistrant": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactTech": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataResidencyBoundary": {
        "description": "Data Residency Boundary of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsType": {
        "description": "Current DNS type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsZoneId": {
        "description": "Azure DNS Zone to use",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainManagement": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundIpRules": {
        "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchema": {
        "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchemaMapping": {
        "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacy": {
        "description": "<code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetDnsType": {
        "description": "Target DNS type (would be used for migration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userEngagementTracking": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validSenderUsernames": {
        "description": "Collection of valid sender usernames. This is a key-value pair where key=username and value=display name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authCode",
      "autoRenew",
      "consent",
      "contactAdmin",
      "contactBilling",
      "contactRegistrant",
      "contactTech",
      "dnsType",
      "dnsZoneId",
      "privacy",
      "targetDnsType",
      "inputSchema",
      "inputSchemaMapping",
      "inboundIpRules",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "autoCreateTopicWithFirstSubscription",
      "autoDeleteTopicWithLastSubscription",
      "disableLocalAuth",
      "domainManagement",
      "userEngagementTracking",
      "validSenderUsernames",
      "dataResidencyBoundary"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DomainRegistration/domains/domainOwnershipIdentifiers": {
    "api_version": "2022-03-01",
    "full_properties": {
      "ownershipId": {
        "description": "Ownership Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ownershipId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DomainRegistration/domains/transferOut": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Dynamics365FraudProtection/instances": {
    "api_version": "2021-02-01-preview",
    "full_properties": {
      "administration": {
        "description": "An array of administrator user identities",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administration"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Easm/workspaces": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Easm/workspaces/labels": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "color": {
        "description": "Label color.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Label display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "color",
      "displayName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EdgeOrder/addresses": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "contactDetails": {
        "description": "Contact Details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shippingAddress": {
        "description": "Shipping address where customer wishes to receive the device.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contactDetails",
      "shippingAddress"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EdgeOrder/orderItems": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "addressDetails": {
        "description": "Address details for an order item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orderId": {
        "description": "Id of the order to which order item belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "orderItemDetails": {
        "description": "Order item details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressDetails",
      "orderId",
      "orderItemDetails"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Elastic/monitors": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "appLocation": {
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datadogOrganizationProperties": {
        "description": "Datadog organization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynatraceEnvironmentProperties": {
        "description": "Properties of the Dynatrace environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticProperties": {
        "description": "Elastic Resource Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liftrResourceCategory": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logzOrganizationProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplaceSubscriptionStatus": {
        "description": "Marketplace subscription status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Flag specifying if the resource monitoring is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planData": {
        "description": "Billing plan information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingPreference": {
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userInfo": {
        "description": "User Information to be passed to partners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of elastic of the monitor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundancyPreference": {
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datadogOrganizationProperties",
      "liftrResourceCategory",
      "marketplaceSubscriptionStatus",
      "monitoringStatus",
      "provisioningState",
      "userInfo",
      "elasticProperties",
      "logzOrganizationProperties",
      "planData",
      "dynatraceEnvironmentProperties",
      "version",
      "appLocation",
      "logAnalyticsWorkspaceArmId",
      "managedResourceGroupConfiguration",
      "monitorSubnet",
      "routingPreference",
      "zoneRedundancyPreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Elastic/monitors/tagRules": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "logRules": {
        "description": "Set of rules for sending logs for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metricRules": {
        "description": "Set of rules for sending metrics for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitoring tag rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "logRules",
      "metricRules",
      "provisioningState",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ElasticSan/elasticSans": {
    "api_version": "2021-11-20-preview",
    "full_properties": {
      "availabilityZones": {
        "description": "Logical zone for Elastic San resource; example: [\"1\"].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "baseSizeTiB": {
        "description": "Base size of the Elastic San appliance in TiB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedCapacitySizeTiB": {
        "description": "Extended size of the Elastic San appliance in TiB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU name. Required for account creation; optional for update.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilityZones",
      "baseSizeTiB",
      "extendedCapacitySizeTiB",
      "sku"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ElasticSan/elasticSans/volumegroups": {
    "api_version": "2021-11-20-preview",
    "full_properties": {
      "encryption": {
        "description": "Type of encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groupMetaData": {
        "description": "Volume group properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolType": {
        "description": "Type of storage target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "State of the operation on the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumes": {
        "description": "List of volumes from group",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupMetaData",
      "volumes",
      "encryption",
      "networkAcls",
      "protocolType",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ElasticSan/elasticSans/volumegroups/volumes": {
    "api_version": "2021-11-20-preview",
    "full_properties": {
      "accessControlRecordIds": {
        "description": "The IDs of the access control records, associated with the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "avsDataStore": {
        "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupId": {
        "description": "UUID v4 or resource identifier used to identify the Backup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "capacityPoolResourceId": {
        "description": "Pool Resource Id used in case of creating a volume through volume group",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "coolAccess": {
        "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "coolnessPeriod": {
        "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data source used when creating the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationToken": {
        "description": "A unique file path for the volume. Used when creating mount targets",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataProtection": {
        "description": "DataProtection type volumes include an object containing details of the replication",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultGroupQuotaInKiBs": {
        "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultUserQuotaInKiBs": {
        "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deleteBaseSnapshot": {
        "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableSubvolumes": {
        "description": "Flag indicating whether subvolume operations are enabled on the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionKeySource": {
        "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "exportPolicy": {
        "description": "Set of export policy rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDefaultQuotaEnabled": {
        "description": "Specifies if default quota is enabled for the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRestoring": {
        "description": "Restoring",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kerberosEnabled": {
        "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultPrivateEndpointResourceId": {
        "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ldapEnabled": {
        "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status of the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountTargets": {
        "description": "List of mount targets",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkFeatures": {
        "description": "Basic network, or Standard features available to the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementRules": {
        "description": "Application specific placement rules for the particular volume",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolTypes": {
        "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": "Proximity placement group associated with the volume",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityStyle": {
        "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeGiB": {
        "description": "Volume size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeInBytes": {
        "description": "The size of the volume in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbAccessBasedEnumeration": {
        "description": "Enables access based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbContinuouslyAvailable": {
        "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbEncryption": {
        "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbNonBrowsable": {
        "description": "Enables non browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotDirectoryVisible": {
        "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotId": {
        "description": "UUID v4 or resource identifier used to identify the Snapshot.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageTarget": {
        "description": "Iscsi target information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "throughputMibps": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "unixPermissions": {
        "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageThreshold": {
        "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeSpecName": {
        "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "volumeStatus": {
        "description": "The volume status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeType": {
        "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControlRecordIds",
      "monitoringStatus",
      "sizeInBytes",
      "volumeStatus",
      "volumeType",
      "creationToken",
      "exportPolicy",
      "serviceLevel",
      "subnetId",
      "usageThreshold",
      "mountTargets",
      "protocolTypes",
      "snapshotId",
      "dataProtection",
      "isRestoring",
      "snapshotDirectoryVisible",
      "backupId",
      "kerberosEnabled",
      "securityStyle",
      "throughputMibps",
      "smbContinuouslyAvailable",
      "smbEncryption",
      "encryptionKeySource",
      "ldapEnabled",
      "networkFeatures",
      "coolAccess",
      "coolnessPeriod",
      "unixPermissions",
      "avsDataStore",
      "defaultGroupQuotaInKiBs",
      "defaultUserQuotaInKiBs",
      "isDefaultQuotaEnabled",
      "capacityPoolResourceId",
      "placementRules",
      "proximityPlacementGroup",
      "volumeSpecName",
      "enableSubvolumes",
      "creationData",
      "sizeGiB",
      "storageTarget",
      "keyVaultPrivateEndpointResourceId",
      "deleteBaseSnapshot",
      "smbAccessBasedEnumeration",
      "smbNonBrowsable"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EngagementFabric/Accounts": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "sku",
      "type"
    ]
  },
  "Microsoft.EngagementFabric/Accounts/Channels": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "channelFunctions": {
        "description": "The functions to be enabled for the channel",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "channelType": {
        "description": "The type of the event channel which represents the direction flow of events.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "credentials": {
        "description": "The channel credentials",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeIfNotActivatedUtc": {
        "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "messageForActivation": {
        "description": "Context or helpful message that can be used during the approval process by the subscriber.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerDestinationInfo": {
        "description": "Properties of the corresponding partner destination of a Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerTopicInfo": {
        "description": "Properties of the corresponding partner topic of a Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readinessState": {
        "description": "The readiness state of the corresponding partner topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "channelFunctions",
      "channelType",
      "credentials",
      "expirationTimeIfNotActivatedUtc",
      "messageForActivation",
      "partnerDestinationInfo",
      "partnerTopicInfo",
      "provisioningState",
      "readinessState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EnterpriseKnowledgeGraph/services": {
    "api_version": "2018-12-03",
    "full_properties": {
      "description": {
        "description": "The description of the EnterpriseKnowledgeGraph",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "Specifies the metadata  of the resource.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of EnterpriseKnowledgeGraph provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "metadata",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/domains": {
    "api_version": "2022-06-15",
    "full_properties": {
      "authCode": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "autoCreateTopicWithFirstSubscription": {
        "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoDeleteTopicWithLastSubscription": {
        "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoRenew": {
        "description": "<code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consent": {
        "description": "Domain purchase consent object, representing acceptance of applicable legal agreements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactAdmin": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactBilling": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactRegistrant": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactTech": {
        "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information is made publicly available through the Whois \ndirectories as per ICANN requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataResidencyBoundary": {
        "description": "Data Residency Boundary of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsType": {
        "description": "Current DNS type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsZoneId": {
        "description": "Azure DNS Zone to use",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainManagement": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundIpRules": {
        "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchema": {
        "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchemaMapping": {
        "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacy": {
        "description": "<code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetDnsType": {
        "description": "Target DNS type (would be used for migration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userEngagementTracking": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validSenderUsernames": {
        "description": "Collection of valid sender usernames. This is a key-value pair where key=username and value=display name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authCode",
      "autoRenew",
      "consent",
      "contactAdmin",
      "contactBilling",
      "contactRegistrant",
      "contactTech",
      "dnsType",
      "dnsZoneId",
      "privacy",
      "targetDnsType",
      "inputSchema",
      "inputSchemaMapping",
      "inboundIpRules",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "autoCreateTopicWithFirstSubscription",
      "autoDeleteTopicWithLastSubscription",
      "disableLocalAuth",
      "domainManagement",
      "userEngagementTracking",
      "validSenderUsernames",
      "dataResidencyBoundary"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/domains/eventSubscriptions": {
    "api_version": "2022-06-15",
    "full_properties": {
      "deadLetterDestination": {
        "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterWithResourceIdentity": {
        "description": "Information about the deadletter destination with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryWithResourceIdentity": {
        "description": "Information about the delivery for an event subscription with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Information about the destination for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventDeliverySchema": {
        "description": "The event delivery schema for the event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeUtc": {
        "description": "Expiration time of the event subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labels": {
        "description": "List of user defined labels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retryPolicy": {
        "description": "Information about the retry policy for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "labels",
      "deadLetterDestination",
      "eventDeliverySchema",
      "retryPolicy",
      "expirationTimeUtc",
      "deadLetterWithResourceIdentity",
      "deliveryWithResourceIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/domains/privateEndpointConnections": {
    "api_version": "2022-06-15",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/domains/topics": {
    "api_version": "2022-06-15",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.EventGrid/domains/topics/eventSubscriptions": {
    "api_version": "2022-06-15",
    "full_properties": {
      "deadLetterDestination": {
        "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterWithResourceIdentity": {
        "description": "Information about the deadletter destination with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryWithResourceIdentity": {
        "description": "Information about the delivery for an event subscription with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Information about the destination for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventDeliverySchema": {
        "description": "The event delivery schema for the event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeUtc": {
        "description": "Expiration time of the event subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labels": {
        "description": "List of user defined labels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retryPolicy": {
        "description": "Information about the retry policy for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "labels",
      "deadLetterDestination",
      "eventDeliverySchema",
      "retryPolicy",
      "expirationTimeUtc",
      "deadLetterWithResourceIdentity",
      "deliveryWithResourceIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerConfigurations": {
    "api_version": "2022-06-15",
    "full_properties": {
      "partnerAuthorization": {
        "description": "The partner authorization details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the partner configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partnerAuthorization",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerDestinations": {
    "api_version": "2021-10-15-preview",
    "full_properties": {
      "activationState": {
        "description": "Activation state of the partner destination.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointBaseUrl": {
        "description": "Endpoint Base URL of the partner destination",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endpointServiceContext": {
        "description": "Endpoint context associated with this partner destination.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationTimeIfNotActivatedUtc": {
        "description": "Expiration time of the partner destination. If this timer expires and the partner destination was never activated,\r\nthe partner destination and corresponding channel are deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "messageForActivation": {
        "description": "Context or helpful message that can be used during the approval process.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerRegistrationImmutableId": {
        "description": "The immutable Id of the corresponding partner registration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the partner destination.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activationState",
      "endpointBaseUrl",
      "endpointServiceContext",
      "expirationTimeIfNotActivatedUtc",
      "messageForActivation",
      "partnerRegistrationImmutableId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerNamespaces": {
    "api_version": "2022-06-15",
    "full_properties": {
      "disableLocalAuth": {
        "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundIpRules": {
        "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerRegistrationFullyQualifiedId": {
        "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerTopicRoutingMode": {
        "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partnerRegistrationFullyQualifiedId",
      "disableLocalAuth",
      "inboundIpRules",
      "publicNetworkAccess",
      "partnerTopicRoutingMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerNamespaces/channels": {
    "api_version": "2022-06-15",
    "full_properties": {
      "channelFunctions": {
        "description": "The functions to be enabled for the channel",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "channelType": {
        "description": "The type of the event channel which represents the direction flow of events.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "credentials": {
        "description": "The channel credentials",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeIfNotActivatedUtc": {
        "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "messageForActivation": {
        "description": "Context or helpful message that can be used during the approval process by the subscriber.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerDestinationInfo": {
        "description": "Properties of the corresponding partner destination of a Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerTopicInfo": {
        "description": "Properties of the corresponding partner topic of a Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readinessState": {
        "description": "The readiness state of the corresponding partner topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "channelFunctions",
      "channelType",
      "credentials",
      "expirationTimeIfNotActivatedUtc",
      "messageForActivation",
      "partnerDestinationInfo",
      "partnerTopicInfo",
      "provisioningState",
      "readinessState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerNamespaces/eventChannels": {
    "api_version": "2021-10-15-preview",
    "full_properties": {
      "destination": {
        "description": "Properties of the destination of an event channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeIfNotActivatedUtc": {
        "description": "Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe event channel and corresponding partner topic are deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerTopicFriendlyDescription": {
        "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "source": {
        "description": "Properties of the source of an event channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "expirationTimeIfNotActivatedUtc",
      "filter",
      "partnerTopicFriendlyDescription",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections": {
    "api_version": "2022-06-15",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerRegistrations": {
    "api_version": "2022-06-15",
    "full_properties": {
      "authorizedAzureSubscriptionIds": {
        "description": "List of Azure subscription Ids that are authorized to create a partner namespace\r\nassociated with this partner registration. This is an optional property. Creating\r\npartner namespaces is always permitted under the same Azure subscription as the one used\r\nfor creating the partner registration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customerServiceUri": {
        "description": "The extension of the customer service URI of the publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logoUri": {
        "description": "URI of the logo.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "longDescription": {
        "description": "Long description for the custom scenarios and integration to be displayed in the portal if needed.\r\nLength of this description should not exceed 2048 characters.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerCustomerServiceExtension": {
        "description": "The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerCustomerServiceNumber": {
        "description": "The customer service number of the publisher. The expected phone format should start with a '+' sign \r\nfollowed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its\r\nlength cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and\r\n+966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerName": {
        "description": "Official name of the partner name. For example: \"Contoso\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerRegistrationImmutableId": {
        "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerResourceTypeDescription": {
        "description": "Short description of the partner resource type. The length of this description should not exceed 256 characters.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerResourceTypeDisplayName": {
        "description": "Display name of the partner resource type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerResourceTypeName": {
        "description": "Name of the partner resource type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setupUri": {
        "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "visibilityState": {
        "description": "Visibility state of the partner registration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizedAzureSubscriptionIds",
      "customerServiceUri",
      "logoUri",
      "longDescription",
      "partnerCustomerServiceExtension",
      "partnerCustomerServiceNumber",
      "partnerName",
      "partnerResourceTypeDescription",
      "partnerResourceTypeDisplayName",
      "partnerResourceTypeName",
      "setupUri",
      "visibilityState",
      "partnerRegistrationImmutableId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerTopics": {
    "api_version": "2022-06-15",
    "full_properties": {
      "activationState": {
        "description": "Activation state of the partner topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventTypeInfo": {
        "description": "The event type information for Channels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeIfNotActivatedUtc": {
        "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "messageForActivation": {
        "description": "Context or helpful message that can be used during the approval process by the subscriber.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerRegistrationImmutableId": {
        "description": "The immutableId of the corresponding partner registration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerTopicFriendlyDescription": {
        "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source associated with this partner topic. This represents a unique partner resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activationState",
      "eventTypeInfo",
      "expirationTimeIfNotActivatedUtc",
      "messageForActivation",
      "partnerRegistrationImmutableId",
      "partnerTopicFriendlyDescription",
      "source"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerTopics/eventSubscriptions": {
    "api_version": "2022-06-15",
    "full_properties": {
      "deadLetterDestination": {
        "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterWithResourceIdentity": {
        "description": "Information about the deadletter destination with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryWithResourceIdentity": {
        "description": "Information about the delivery for an event subscription with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Information about the destination for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventDeliverySchema": {
        "description": "The event delivery schema for the event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeUtc": {
        "description": "Expiration time of the event subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labels": {
        "description": "List of user defined labels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retryPolicy": {
        "description": "Information about the retry policy for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "labels",
      "deadLetterDestination",
      "eventDeliverySchema",
      "retryPolicy",
      "expirationTimeUtc",
      "deadLetterWithResourceIdentity",
      "deliveryWithResourceIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/systemTopics": {
    "api_version": "2022-06-15",
    "full_properties": {
      "source": {
        "description": "Source for the system topic.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "topicType": {
        "description": "TopicType for the system topic.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "topicType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/systemTopics/eventSubscriptions": {
    "api_version": "2022-06-15",
    "full_properties": {
      "deadLetterDestination": {
        "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterWithResourceIdentity": {
        "description": "Information about the deadletter destination with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryWithResourceIdentity": {
        "description": "Information about the delivery for an event subscription with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Information about the destination for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventDeliverySchema": {
        "description": "The event delivery schema for the event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeUtc": {
        "description": "Expiration time of the event subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labels": {
        "description": "List of user defined labels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retryPolicy": {
        "description": "Information about the retry policy for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "labels",
      "deadLetterDestination",
      "eventDeliverySchema",
      "retryPolicy",
      "expirationTimeUtc",
      "deadLetterWithResourceIdentity",
      "deliveryWithResourceIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/topics": {
    "api_version": "2022-06-15",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataResidencyBoundary": {
        "description": "Data Residency Boundary of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableExpress": {
        "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitioning": {
        "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "entityAvailabilityStatus": {
        "description": "Entity availability status for the topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filteringMessagesBeforePublishing": {
        "description": "Whether messages should be filtered before publishing.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundIpRules": {
        "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchema": {
        "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchemaMapping": {
        "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAnonymousAccessible": {
        "description": "Value that indicates whether the message is accessible anonymously.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExpress": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeInMegabytes": {
        "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresDuplicateDetection": {
        "description": "Value indicating if this topic requires duplicate detection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportOrdering": {
        "description": "Value that indicates whether the topic supports ordering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "enableExpress",
      "enablePartitioning",
      "entityAvailabilityStatus",
      "filteringMessagesBeforePublishing",
      "isAnonymousAccessible",
      "isExpress",
      "maxSizeInMegabytes",
      "requiresDuplicateDetection",
      "status",
      "supportOrdering",
      "inputSchema",
      "inputSchemaMapping",
      "inboundIpRules",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "disableLocalAuth",
      "dataResidencyBoundary"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/topics/eventSubscriptions": {
    "api_version": "2022-06-15",
    "full_properties": {
      "deadLetterDestination": {
        "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterWithResourceIdentity": {
        "description": "Information about the deadletter destination with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryWithResourceIdentity": {
        "description": "Information about the delivery for an event subscription with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Information about the destination for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventDeliverySchema": {
        "description": "The event delivery schema for the event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeUtc": {
        "description": "Expiration time of the event subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labels": {
        "description": "List of user defined labels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retryPolicy": {
        "description": "Information about the retry policy for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "labels",
      "deadLetterDestination",
      "eventDeliverySchema",
      "retryPolicy",
      "expirationTimeUtc",
      "deadLetterWithResourceIdentity",
      "deliveryWithResourceIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/topics/privateEndpointConnections": {
    "api_version": "2022-06-15",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/clusters": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "alternateName": {
        "description": "Alternate name specified when alias and namespace names are same.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterArmId": {
        "description": "Cluster ARM ID of the Namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "This property disables SAS authentication for the Event Hubs namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAutoInflateEnabled": {
        "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kafkaEnabled": {
        "description": "Value that indicates whether Kafka is enabled for eventhub namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumThroughputUnits": {
        "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isAutoInflateEnabled",
      "kafkaEnabled",
      "maximumThroughputUnits",
      "clusterArmId",
      "encryption",
      "zoneRedundant",
      "privateEndpointConnections",
      "disableLocalAuth",
      "alternateName",
      "minimumTlsVersion",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/applicationGroups": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "applicationGroupType": {
        "description": "Resource Type of ApplicationGroup.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAppGroupIdentifier": {
        "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of ApplicationGroup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of ApplicationGroup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostPoolArmPath": {
        "description": "HostPool arm path of ApplicationGroup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "migrationRequest": {
        "description": "Properties for arm migration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policies": {
        "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationGroupType",
      "description",
      "friendlyName",
      "hostPoolArmPath",
      "migrationRequest",
      "clientAppGroupIdentifier",
      "isEnabled",
      "policies"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/authorizationRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/disasterRecoveryConfigs": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "alternateName": {
        "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerNamespace": {
        "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alternateName",
      "partnerNamespace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/eventhubs": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "captureDescription": {
        "description": "Properties to configure capture description for eventhub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "messageRetentionInDays": {
        "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionCount": {
        "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of the Event Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "captureDescription",
      "messageRetentionInDays",
      "partitionCount",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/eventhubs/authorizationRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/eventhubs/consumergroups": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "userMetadata": {
        "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "userMetadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/ipfilterrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "action": {
        "description": "The IP Filter Action.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filterName": {
        "description": "IP Filter name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipMask": {
        "description": "IP Mask",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "filterName",
      "ipMask"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/networkRuleSets": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "applyToBuiltInEventHubEndpoint": {
        "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultAction": {
        "description": "Default Action for Network Rule Set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRules": {
        "description": "List of IP Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceAccessEnabled": {
        "description": "Value that indicates whether Trusted Service Access is Enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List VirtualNetwork Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultAction",
      "ipRules",
      "virtualNetworkRules",
      "trustedServiceAccessEnabled",
      "applyToBuiltInEventHubEndpoint",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/privateEndpointConnections": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/schemagroups": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "groupProperties": {
        "description": "dictionary object for SchemaGroup group properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schemaCompatibility": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schemaType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupProperties",
      "schemaCompatibility",
      "schemaType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/virtualnetworkrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ExtendedLocation/customLocations": {
    "api_version": "2021-08-31-preview",
    "full_properties": {
      "authentication": {
        "description": "This is optional input that contains the authentication that should be used to generate the namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterExtensionIds": {
        "description": "Contains the reference to the add-on that contains charts to deploy CRDs and operators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name for the Custom Locations location.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostResourceId": {
        "description": "Connected Cluster or AKS Cluster. The Custom Locations RP will perform a checkAccess API for listAdminCredentials permissions.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostType": {
        "description": "Type of host the Custom Locations is referencing (Kubernetes, etc...).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "namespace": {
        "description": "Kubernetes namespace that will be created on the specified cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning State for the Custom Location.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authentication",
      "clusterExtensionIds",
      "displayName",
      "hostResourceId",
      "hostType",
      "namespace",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ExtendedLocation/customLocations/resourceSyncRules": {
    "api_version": "2021-08-31-preview",
    "full_properties": {
      "priority": {
        "description": "Priority represents a priority of the Resource Sync Rule",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "selector": {
        "description": "A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The second part, matchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. All of the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceGroup": {
        "description": "For an unmapped custom resource, its labels will be used to find matching resource sync rules. If this resource sync rule is one of the matching rules with highest priority, then the unmapped custom resource will be projected to the target resource group associated with this resource sync rule. The user creating this resource sync rule should have write permissions on the target resource group and this write permission will be validated when creating the resource sync rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "priority",
      "selector",
      "targetResourceGroup"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.FluidRelay/fluidRelayServers": {
    "api_version": "2022-06-01",
    "full_properties": {
      "encryption": {
        "description": "All encryption configuration for a resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provision states for FluidRelay RP.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storagesku": {
        "description": "Sku of the storage associated with the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "encryption",
      "storagesku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Genomics/accounts": {
    "api_version": "2017-08-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.HDInsight/clusters": {
    "api_version": "2021-06-01",
    "full_properties": {
      "clusterDefinition": {
        "description": "The cluster definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterVersion": {
        "description": "The version of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "computeIsolationProperties": {
        "description": "The compute isolation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskEncryptionProperties": {
        "description": "The disk encryption properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionInTransitProperties": {
        "description": "The encryption-in-transit properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kafkaRestProperties": {
        "description": "The kafka rest proxy configuration which contains AAD security group information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minSupportedTlsVersion": {
        "description": "The minimal supported tls version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProperties": {
        "description": "The network properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The type of operating system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConfigurations": {
        "description": "The private link configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "The security profile which contains Ssh public key for the HDInsight cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "The storage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tier": {
        "description": "The cluster tier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clusterDefinition",
      "clusterVersion",
      "computeIsolationProperties",
      "computeProfile",
      "diskEncryptionProperties",
      "encryptionInTransitProperties",
      "kafkaRestProperties",
      "minSupportedTlsVersion",
      "networkProperties",
      "osType",
      "securityProfile",
      "storageProfile",
      "tier",
      "privateLinkConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HDInsight/clusters/applications": {
    "api_version": "2021-06-01",
    "full_properties": {
      "allowUpdates": {
        "description": "A value indicating whether packages within the application may be overwritten using the same version string.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationDefinitionId": {
        "description": "The fully qualified path of managed application definition Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "applicationType": {
        "description": "Resource Type of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineArguments": {
        "description": "Command Line Arguments for Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineSetting": {
        "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultVersion": {
        "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "errors": {
        "description": "The list of errors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filePath": {
        "description": "Specifies a path for the executable file for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpsEndpoints": {
        "description": "The list of application HTTPS endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconIndex": {
        "description": "Index of the icon.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconPath": {
        "description": "Path to icon.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "installScriptActions": {
        "description": "The list of install script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jitAccessPolicy": {
        "description": "Managed application Jit access policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageApplicationId": {
        "description": "Specifies the package application Id for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageFamilyName": {
        "description": "Specifies the package family name for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "privateLinkConfigurations": {
        "description": "The private link configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publisherPackageId": {
        "description": "The publisher package Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "showInPortal": {
        "description": "Specifies whether to show the RemoteApp program in the RD Web Access server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshEndpoints": {
        "description": "The list of application SSH endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uninstallScriptActions": {
        "description": "The list of uninstall script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationType",
      "computeProfile",
      "errors",
      "httpsEndpoints",
      "installScriptActions",
      "sshEndpoints",
      "uninstallScriptActions",
      "applicationDefinitionId",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "publisherPackageId",
      "jitAccessPolicy",
      "allowUpdates",
      "defaultVersion",
      "displayName",
      "commandLineArguments",
      "commandLineSetting",
      "description",
      "filePath",
      "friendlyName",
      "iconIndex",
      "iconPath",
      "showInPortal",
      "msixPackageApplicationId",
      "msixPackageFamilyName",
      "privateLinkConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HDInsight/clusters/extensions": {
    "api_version": "2021-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.HDInsight/clusters/privateEndpointConnections": {
    "api_version": "2021-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HanaOnAzure/hanaInstances": {
    "api_version": "2017-11-03-preview",
    "full_properties": {
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the HANA instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network settings for the HANA instance disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the HANA instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerNodeId": {
        "description": "ARM ID of another HanaInstance that will share a network with this HanaInstance",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the HANA instance disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hardwareProfile",
      "networkProfile",
      "osProfile",
      "partnerNodeId",
      "storageProfile"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HanaOnAzure/sapMonitors": {
    "api_version": "2020-02-07-preview",
    "full_properties": {
      "enableCustomerAnalytics": {
        "description": "The value indicating whether to send analytics to Microsoft",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for monitoring",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceId": {
        "description": "The workspace ID of the log analytics workspace to be used for monitoring",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceSharedKey": {
        "description": "The shared key of the log analytics workspace that is used for monitoring",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enableCustomerAnalytics",
      "logAnalyticsWorkspaceArmId",
      "logAnalyticsWorkspaceId",
      "logAnalyticsWorkspaceSharedKey",
      "monitorSubnet"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HanaOnAzure/sapMonitors/providerInstances": {
    "api_version": "2020-02-07-preview",
    "full_properties": {
      "metadata": {
        "description": "A JSON string containing metadata of the provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "A JSON string containing the properties of the provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSettings": {
        "description": "Gets or sets the provider specific properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "metadata",
      "properties",
      "type",
      "providerSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HardwareSecurityModules/dedicatedHSMs": {
    "api_version": "2021-11-30",
    "full_properties": {
      "managementNetworkProfile": {
        "description": "The network profile definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "The network profile definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stampId": {
        "description": "This field will be used when RP does not support Availability zones.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "networkProfile",
      "stampId",
      "managementNetworkProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthBot/healthBots": {
    "api_version": "2022-08-08",
    "full_properties": {
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyVaultProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/services": {
    "api_version": "2022-06-01",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/services/privateEndpointConnections": {
    "api_version": "2022-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/workspaces": {
    "api_version": "2022-06-01",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/workspaces/dicomservices": {
    "api_version": "2022-06-01",
    "full_properties": {
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authenticationConfiguration",
      "provisioningState",
      "publicNetworkAccess",
      "corsConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/workspaces/fhirservices": {
    "api_version": "2022-06-01",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventState": {
        "description": "Fhir Service event support status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceVersionPolicyConfiguration": {
        "description": "The settings for history tracking for FHIR resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "acrConfiguration",
      "authenticationConfiguration",
      "corsConfiguration",
      "exportConfiguration",
      "provisioningState",
      "eventState",
      "publicNetworkAccess",
      "resourceVersionPolicyConfiguration",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/workspaces/iotconnectors": {
    "api_version": "2022-06-01",
    "full_properties": {
      "deviceMapping": {
        "description": "The mapping content.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingestionEndpointConfiguration": {
        "description": "Event Hub ingestion endpoint configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "deviceMapping",
      "ingestionEndpointConfiguration",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/workspaces/iotconnectors/fhirdestinations": {
    "api_version": "2022-06-01",
    "full_properties": {
      "fhirMapping": {
        "description": "The mapping content.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fhirServiceResourceId": {
        "description": "Fully qualified resource id of the FHIR service to connect to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceIdentityResolutionType": {
        "description": "Determines how resource identity is resolved on the destination.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fhirMapping",
      "fhirServiceResourceId",
      "provisioningState",
      "resourceIdentityResolutionType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/workspaces/privateEndpointConnections": {
    "api_version": "2022-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridCompute/machines": {
    "api_version": "2022-08-11-preview",
    "full_properties": {
      "agentConfiguration": {
        "description": "Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientPublicKey": {
        "description": "Public Key that the client provides to be used during initial resource onboarding",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cloudMetadata": {
        "description": "The metadata of the cloud environment (Azure/GCP/AWS/OCI...).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "detectedProperties": {
        "description": "Detected properties from the machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extensions": {
        "description": "Machine Extensions information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "locationData": {
        "description": "Metadata pertaining to the geographic location of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mssqlDiscovered": {
        "description": "Specifies whether any MS SQL instance is discovered on the machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osName": {
        "description": "The Operating System running on the hybrid machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the hybrid machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The type of Operating System (windows/linux).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osVersion": {
        "description": "The version of Operating System running on the hybrid machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parentClusterResourceId": {
        "description": "The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "physicalLocation": {
        "description": "Resource's Physical Location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkScopeResourceId": {
        "description": "The resource id of the private link scope this machine is assigned to, if any.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceStatuses": {
        "description": "Reports the state and behavior of dependent services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmId": {
        "description": "Specifies the hybrid machine unique ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientPublicKey",
      "osProfile",
      "physicalLocation",
      "extensions",
      "osName",
      "osVersion",
      "locationData",
      "privateLinkScopeResourceId",
      "vmId",
      "detectedProperties",
      "parentClusterResourceId",
      "mssqlDiscovered",
      "osType",
      "agentConfiguration",
      "cloudMetadata",
      "serviceStatuses"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridCompute/machines/extensions": {
    "api_version": "2022-08-11-preview",
    "full_properties": {
      "autoUpgradeMinorVersion": {
        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticUpgrade": {
        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceUpdateTag": {
        "description": "How the extension handler should be forced to update even if the extension configuration has not changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "instanceView": {
        "description": "Describes the Machine Extension Instance View.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedSettings": {
        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "publisher": {
        "description": "The name of the extension handler publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "settings": {
        "description": "Json formatted public settings for the extension.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeHandlerVersion": {
        "description": "Specifies the version of the script handler.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoUpgradeMinorVersion",
      "forceUpdateTag",
      "instanceView",
      "protectedSettings",
      "publisher",
      "settings",
      "type",
      "typeHandlerVersion",
      "enableAutomaticUpgrade"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridCompute/privateLinkScopes": {
    "api_version": "2022-08-11-preview",
    "full_properties": {
      "publicNetworkAccess": {
        "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridCompute/privateLinkScopes/privateEndpointConnections": {
    "api_version": "2022-08-11-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridCompute/privateLinkScopes/scopedResources": {
    "api_version": "2020-08-15-preview",
    "full_properties": {
      "linkedResourceId": {
        "description": "The resource id of the scoped Azure monitor resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridContainerService/provisionedClusters": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "aadProfile": {
        "description": "AAD Profile specifies attributes for Azure Active Directory integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addonProfiles": {
        "description": "AddonProfiles - Profile of managed cluster add-on.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "agentPoolProfiles": {
        "description": "The agent pools of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudProviderProfile": {
        "description": "CloudProviderProfile - The underlying cloud infra provider properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "controlPlane": {
        "description": "ControlPlaneProfile - The control plane properties for the provisioned cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRbac": {
        "description": "EnableRBAC - Whether to enable Kubernetes Role-Based Access Control.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Additional features specs like Arc Agent Onboarding.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpProxyConfig": {
        "description": "Configurations for provisioning the cluster with HTTP proxy servers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kubernetesVersion": {
        "description": "KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linuxProfile": {
        "description": "LinuxProfile - Profile for Linux VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "NetworkProfile - Profile of network configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeResourceGroup": {
        "description": "NodeResourceGroup - Name of the resource group containing agent pool nodes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "windowsProfile": {
        "description": "WindowsProfile - Profile for Windows VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aadProfile",
      "addonProfiles",
      "agentPoolProfiles",
      "cloudProviderProfile",
      "controlPlane",
      "enableRbac",
      "features",
      "httpProxyConfig",
      "kubernetesVersion",
      "linuxProfile",
      "networkProfile",
      "nodeResourceGroup",
      "windowsProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridContainerService/provisionedClusters/agentPools": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "availabilityZones": {
        "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudProviderProfile": {
        "description": "CloudProviderProfile - The underlying cloud infra provider properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "count": {
        "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxCount": {
        "description": "The maximum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxPods": {
        "description": "The maximum number of pods that can run on a node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minCount": {
        "description": "The minimum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "Mode - AgentPoolMode represents mode of an agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeImageVersion": {
        "description": "The version of node image",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeLabels": {
        "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeTaints": {
        "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "os": {
        "description": "The OS of agent machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "HybridAKSNodePoolStatus defines the observed state of HybridAKSNodePool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tier": {
        "description": "The Tier of agent machine",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetResourceId": {
        "description": "The Virtual Network Subnet Resource Id of the agent machine",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "VmSize - The size of the agent pool VMs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "count",
      "os",
      "tier",
      "virtualNetworkSubnetResourceId",
      "availabilityZones",
      "cloudProviderProfile",
      "maxCount",
      "maxPods",
      "minCount",
      "mode",
      "nodeImageVersion",
      "nodeLabels",
      "nodeTaints",
      "osType",
      "status",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "identity": {
        "description": "Identity for the Provisioned cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicKey": {
        "description": "Onboarding public key for provisioning the Managed identity for the HybridAKS cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceUid": {
        "description": "Unique id of the parent provisioned cluster resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmId": {
        "description": "Gets or sets the Vm Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicKey",
      "vmId",
      "identity",
      "resourceUid"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridContainerService/storageSpaces": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "hciStorageProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "HybridAKSStorageStatus defines the observed state of HybridAKSStorage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmwareStorageProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hciStorageProfile",
      "status",
      "vmwareStorageProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridContainerService/virtualNetworks": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "infraVnetProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vipPool": {
        "description": "Virtual IP Pool for Kubernetes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmipPool": {
        "description": "IP Pool for Virtual Machines",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "infraVnetProfile",
      "vipPool",
      "vmipPool"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridData/dataManagers": {
    "api_version": "2019-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.HybridData/dataManagers/dataServices/jobDefinitions": {
    "api_version": "2019-06-01",
    "full_properties": {
      "agentName": {
        "description": "Name of the Agent to assign for new Job Runs of this Job Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "copyMode": {
        "description": "Strategy to use for copy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customerSecrets": {
        "description": "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataServiceInput": {
        "description": "A generic json used differently by each data service type.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "dataSinkId": {
        "description": "Data Sink Id associated to the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataSourceId": {
        "description": "Data Source Id associated to the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description for the Job Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Last modified time of the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runLocation": {
        "description": "This is the preferred geo location for the job to run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedules": {
        "description": "Schedule for running the job definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceName": {
        "description": "The name of the source Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceSubpath": {
        "description": "The subpath to use when reading from the source Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "State of the job definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetName": {
        "description": "The name of the target Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetSubpath": {
        "description": "The subpath to use when writing to the target Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userConfirmation": {
        "description": "Enum to detect if user confirmation is required. If not passed will default to NotRequired.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customerSecrets",
      "dataServiceInput",
      "dataSinkId",
      "dataSourceId",
      "lastModifiedTime",
      "runLocation",
      "schedules",
      "state",
      "userConfirmation",
      "agentName",
      "copyMode",
      "description",
      "sourceName",
      "sourceSubpath",
      "targetName",
      "targetSubpath"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridData/dataManagers/dataStores": {
    "api_version": "2019-06-01",
    "full_properties": {
      "customerSecrets": {
        "description": "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataStoreTypeId": {
        "description": "The arm id of the data store type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "A generic json used differently by each data source type.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "repositoryId": {
        "description": "Arm Id for the manager resource to which the data source is associated. This is optional.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "State of the data source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customerSecrets",
      "dataStoreTypeId",
      "extendedProperties",
      "repositoryId",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridNetwork/devices": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridNetwork/networkFunctions": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "device": {
        "description": "Reference to another sub resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedApplicationParameters": {
        "description": "The parameters for the managed application.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "networkFunctionContainerConfigurations": {
        "description": "The network function container configurations from the user.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "networkFunctionUserConfigurations": {
        "description": "The network function configurations from the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "skuName": {
        "description": "The sku name for the network function. Once set, it cannot be updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vendorName": {
        "description": "The vendor name for the network function. Once set, it cannot be updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "device",
      "managedApplicationParameters",
      "networkFunctionUserConfigurations",
      "skuName",
      "vendorName",
      "networkFunctionContainerConfigurations"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ImportExport/jobs": {
    "api_version": "2021-01-01",
    "full_properties": {
      "backupDriveManifest": {
        "description": "Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cancelRequested": {
        "description": "Indicates whether a request has been submitted to cancel the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactDetails": {
        "description": "Contact Details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataExportDetails": {
        "description": "Details of the data to be exported from azure.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataImportDetails": {
        "description": "Details of the data to be imported into azure.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryPackage": {
        "description": "Contains information about the delivery package being shipped by the customer to the Microsoft data center.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationAccountDetails": {
        "description": "Destination account details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsPath": {
        "description": "The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "driveList": {
        "description": "List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionKey": {
        "description": "Specifies the encryption key properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expectedDataSizeInTeraBytes": {
        "description": "The expected size of the data, which needs to be transferred in this job, in terabytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "export": {
        "description": "A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incompleteBlobListUri": {
        "description": "A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "jobType": {
        "description": "The type of job",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyEncryptionKey": {
        "description": "Encryption key containing details about key to encrypt different keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logLevel": {
        "description": "Default value is Error. Indicates whether error logging or verbose logging will be enabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "percentComplete": {
        "description": "Overall percentage completed for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferences": {
        "description": "Preferences related to the order",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Specifies the provisioning state of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "returnAddress": {
        "description": "Specifies the return address information for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "returnPackage": {
        "description": "Contains information about the package being shipped by the customer to the Microsoft data center.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "returnShipping": {
        "description": "Specifies the return carrier and customer's account with the carrier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shippingAddress": {
        "description": "Shipping address where customer wishes to receive the device.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shippingInformation": {
        "description": "Contains information about the Microsoft datacenter to which the drives should be shipped.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Current state of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "The resource identifier of the storage account where data will be imported to or exported from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupDriveManifest",
      "cancelRequested",
      "deliveryPackage",
      "diagnosticsPath",
      "driveList",
      "encryptionKey",
      "export",
      "incompleteBlobListUri",
      "jobType",
      "logLevel",
      "percentComplete",
      "provisioningState",
      "returnAddress",
      "returnPackage",
      "returnShipping",
      "shippingInformation",
      "state",
      "storageAccountId",
      "contactDetails",
      "destinationAccountDetails",
      "expectedDataSizeInTeraBytes",
      "preferences",
      "shippingAddress",
      "dataExportDetails",
      "dataImportDetails",
      "keyEncryptionKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/actionGroups": {
    "api_version": "2022-06-01",
    "full_properties": {
      "actionGroupId": {
        "description": "The resource ID of the Action Group. This cannot be null or empty.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "armRoleReceivers": {
        "description": "The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles and only built-in roles are supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "automationRunbookReceivers": {
        "description": "The list of AutomationRunbook receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureAppPushReceivers": {
        "description": "The list of AzureAppPush receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureFunctionReceivers": {
        "description": "The list of azure function receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailReceivers": {
        "description": "The list of email receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventHubReceivers": {
        "description": "The list of event hub receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groupShortName": {
        "description": "The short name of the action group. This will be used in SMS messages.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "itsmReceivers": {
        "description": "The list of ITSM receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logicAppReceivers": {
        "description": "The list of logic app receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smsReceivers": {
        "description": "The list of SMS receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "voiceReceivers": {
        "description": "The list of voice receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webhookProperties": {
        "description": "the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webhookReceivers": {
        "description": "The list of webhook receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "automationRunbookReceivers",
      "azureAppPushReceivers",
      "emailReceivers",
      "enabled",
      "groupShortName",
      "itsmReceivers",
      "smsReceivers",
      "webhookReceivers",
      "azureFunctionReceivers",
      "logicAppReceivers",
      "voiceReceivers",
      "armRoleReceivers",
      "actionGroupId",
      "type",
      "webhookProperties",
      "eventHubReceivers"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/activityLogAlerts": {
    "api_version": "2020-10-01",
    "full_properties": {
      "actionGroups": {
        "description": "The Action Groups information, used by the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "actions": {
        "description": "A list of Activity Log Alert rule actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condition": {
        "description": "An Activity Log Alert rule condition that is met when all its member conditions are met.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The alert rule description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "detector": {
        "description": "The detector information. By default this is not populated, unless it's specified in expandDetector",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether this Activity Log Alert rule is enabled. If an Activity Log Alert rule is not enabled, then none of its actions will be activated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The alert rule frequency in ISO8601 format. The time granularity must be in minutes and minimum value is 1 minute, depending on the detector.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "The alert rule resources scope.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "A list of resource IDs that will be used as prefixes. The alert will only apply to Activity Log events with resource IDs that fall under one of these prefixes. This list must include at least one item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "severity": {
        "description": "The alert rule severity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The alert rule state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "throttling": {
        "description": "Optional throttling information for the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actionGroups",
      "description",
      "detector",
      "frequency",
      "scope",
      "severity",
      "state",
      "throttling",
      "actions",
      "condition",
      "enabled",
      "scopes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/alertrules": {
    "api_version": "2016-03-01",
    "full_properties": {
      "action": {
        "description": "The action that is performed when the alert rule becomes active, and when an alert condition is resolved.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "actions": {
        "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condition": {
        "description": "The condition that results in the alert rule being activated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "the description of the alert rule that will be included in the alert email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "the flag that indicates whether the alert rule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "the name of the alert rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "the provisioning state.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "actions",
      "condition",
      "description",
      "isEnabled",
      "name",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/autoscalesettings": {
    "api_version": "2022-10-01",
    "full_properties": {
      "enabled": {
        "description": "Microsoft.Insights/autoscalesettings: Specifies whether automatic scaling is enabled for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Microsoft.Insights/autoscalesettings: The name of the autoscale setting.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "profiles": {
        "description": "Microsoft.Insights/autoscalesettings: Contains a collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceUri": {
        "description": "Microsoft.Insights/autoscalesettings: The resource identifier of the resource that the autoscale setting should be added to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profiles",
      "enabled",
      "name",
      "targetResourceUri"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/components": {
    "api_version": "2020-02-02",
    "full_properties": {
      "applicationId": {
        "description": "Microsoft.Insights/components: applicationId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationId"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/components/Annotations": {
    "api_version": "2015-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Insights/components/ProactiveDetectionConfigs": {
    "api_version": "2018-05-01-preview",
    "full_properties": {
      "CustomEmails": {
        "description": "Custom email addresses for this rule notifications",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Enabled": {
        "description": "A flag that indicates whether this rule is enabled by the user",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "RuleDefinitions": {
        "description": "Static definitions of the ProactiveDetection configuration rule (same values for all components).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SendEmailsToSubscriptionOwners": {
        "description": "A flag that indicated whether notifications on this rule should be sent to subscription owners",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "CustomEmails",
      "Enabled",
      "RuleDefinitions",
      "SendEmailsToSubscriptionOwners"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/components/currentbillingfeatures": {
    "api_version": "2015-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Insights/components/exportconfiguration": {
    "api_version": "2015-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Insights/components/favorites": {
    "api_version": "2015-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Insights/dataCollectionEndpoints": {
    "api_version": "2021-09-01-preview",
    "full_properties": {
      "configurationAccess": {
        "description": "The endpoint used by clients to access their configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the data collection endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "immutableId": {
        "description": "The immutable ID of this data collection endpoint resource. This property is READ-ONLY.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logsIngestion": {
        "description": "The endpoint used by clients to ingest logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "Network access control rules for the endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configurationAccess",
      "description",
      "immutableId",
      "logsIngestion",
      "networkAcls"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/dataCollectionRules": {
    "api_version": "2021-09-01-preview",
    "full_properties": {
      "dataCollectionEndpointId": {
        "description": "The resource ID of the data collection endpoint that this rule can be used with.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataFlows": {
        "description": "The specification of data flows.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataSources": {
        "description": "The specification of data sources. \r\nThis property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the data collection rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinations": {
        "description": "The specification of destinations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "streamDeclarations": {
        "description": "Declaration of custom streams used in this rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataFlows",
      "dataSources",
      "description",
      "destinations",
      "dataCollectionEndpointId",
      "streamDeclarations"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/metricAlerts": {
    "api_version": "2018-03-01",
    "full_properties": {
      "actions": {
        "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoMitigate": {
        "description": "the flag that indicates whether the alert should be auto resolved or not. The default is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "criteria": {
        "description": "The rule criteria that defines the conditions of the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "the description of the metric alert that will be included in the alert email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "the flag that indicates whether the metric alert is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evaluationFrequency": {
        "description": "how often the metric alert is evaluated represented in ISO 8601 duration format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "the list of resource id's that this metric alert is scoped to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "severity": {
        "description": "Alert severity {0, 1, 2, 3, 4}",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceRegion": {
        "description": "the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceType": {
        "description": "the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "windowSize": {
        "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "autoMitigate",
      "criteria",
      "description",
      "enabled",
      "evaluationFrequency",
      "scopes",
      "severity",
      "targetResourceRegion",
      "targetResourceType",
      "windowSize"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/myWorkbooks": {
    "api_version": "2021-03-08",
    "full_properties": {
      "category": {
        "description": "Workbook category, as defined by the user at creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The user-defined name of the private workbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serializedData": {
        "description": "Configuration of this particular private workbook. Configuration data is a string containing valid JSON",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceId": {
        "description": "Optional resourceId for a source resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageUri": {
        "description": "BYOS Storage Account URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tags": {
        "description": "A list of 0 or more tags that are associated with this private workbook definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "This instance's version of the data model. This can change as new features are added that can be marked private workbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "category",
      "displayName",
      "serializedData",
      "sourceId",
      "tags",
      "version",
      "storageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/privateLinkScopes/privateEndpointConnections": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/privateLinkScopes/scopedResources": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "linkedResourceId": {
        "description": "The resource id of the scoped Azure monitor resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/scheduledQueryRules": {
    "api_version": "2022-06-15",
    "full_properties": {
      "actions": {
        "description": "Actions to invoke when the alert fires.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoMitigate": {
        "description": "The flag that indicates whether the alert should be automatically resolved or not. The default is true. Relevant only for rules of the kind LogAlert.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "checkWorkspaceAlertsStorageConfigured": {
        "description": "The flag which indicates whether this scheduled query rule should be stored in the customer's storage. The default is false. Relevant only for rules of the kind LogAlert.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "criteria": {
        "description": "The rule criteria that defines the conditions of the scheduled query rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the scheduled query rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of the alert rule",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "The flag which indicates whether this scheduled query rule is enabled. Value should be true or false",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evaluationFrequency": {
        "description": "How often the scheduled query rule is evaluated represented in ISO 8601 duration format. Relevant and required only for rules of the kind LogAlert.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "muteActionsDuration": {
        "description": "Mute actions for the chosen period of time (in ISO 8601 duration format) after the alert is fired. Relevant only for rules of the kind LogAlert.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "overrideQueryTimeRange": {
        "description": "If specified then overrides the query time range (default is WindowSize*NumberOfEvaluationPeriods). Relevant only for rules of the kind LogAlert.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "The list of resource id's that this scheduled query rule is scoped to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "severity": {
        "description": "Severity of the alert. Should be an integer between [0-4]. Value of 0 is severest. Relevant and required only for rules of the kind LogAlert.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "skipQueryValidation": {
        "description": "The flag which indicates whether the provided query should be validated or not. The default is false. Relevant only for rules of the kind LogAlert.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceTypes": {
        "description": "List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is Microsoft.Compute/virtualMachines, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria. Relevant only for rules of the kind LogAlert",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "windowSize": {
        "description": "The period of time (in ISO 8601 duration format) on which the Alert query will be executed (bin size). Relevant and required only for rules of the kind LogAlert.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "criteria",
      "description",
      "displayName",
      "enabled",
      "evaluationFrequency",
      "muteActionsDuration",
      "overrideQueryTimeRange",
      "scopes",
      "severity",
      "targetResourceTypes",
      "windowSize",
      "autoMitigate",
      "checkWorkspaceAlertsStorageConfigured",
      "skipQueryValidation"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/webtests": {
    "api_version": "2022-06-15",
    "full_properties": {
      "Configuration": {
        "description": "Microsoft.Insights/webtests: Configuration for the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Description": {
        "description": "Microsoft.Insights/webtests: description of the webtest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "Enabled": {
        "description": "Microsoft.Insights/webtests: Is the webtest enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Frequency": {
        "description": "Microsoft.Insights/webtests: Frequency of the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Locations": {
        "description": "Microsoft.Insights/webtests: Locations of the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Name": {
        "description": "Microsoft.Insights/webtests: name of the webtest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "SyntheticMonitorId": {
        "description": "Microsoft.Insights/webtests: Synthetic monitor id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "Timeout": {
        "description": "Microsoft.Insights/webtests: Timeout for the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Microsoft.Insights/webtests: provisioning state.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "Name",
      "Description",
      "Enabled",
      "Frequency",
      "Timeout",
      "Locations",
      "Configuration",
      "SyntheticMonitorId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/workbooks": {
    "api_version": "2022-04-01",
    "full_properties": {
      "category": {
        "description": "Workbook category, as defined by the user at creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the workbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The user-defined name (display name) of the workbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kind": {
        "description": "Enum indicating if this workbook definition is owned by a specific user or is shared between all users with access to the Application Insights component.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The user-defined name of the workbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "The unique revision id for this workbook definition",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serializedData": {
        "description": "Configuration of this particular workbook. Configuration data is a string containing valid JSON",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceId": {
        "description": "ResourceId for a source resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "Optional resourceId for a source resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageUri": {
        "description": "The resourceId to the storage account when bring your own storage is used",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Being deprecated, please use the other tags field",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userId": {
        "description": "Unique user id of the specific user that owns this workbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Workbook schema version format, like 'Notebook/1.0', which should match the workbook in serializedData",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workbookId": {
        "description": "Internally assigned unique id of the workbook definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "category",
      "kind",
      "name",
      "serializedData",
      "sourceResourceId",
      "tags",
      "userId",
      "version",
      "workbookId",
      "displayName",
      "sourceId",
      "storageUri",
      "description",
      "revision"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/workbooktemplates": {
    "api_version": "2020-11-20",
    "full_properties": {
      "author": {
        "description": "Information about the author of the workbook template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "galleries": {
        "description": "Workbook galleries supported by the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localized": {
        "description": "Key value pair of localized gallery. Each key is the locale code of languages supported by the Azure portal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority of the template. Determines which template to open when a workbook gallery is opened in viewer mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateData": {
        "description": "Valid JSON object containing workbook template payload.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "author",
      "galleries",
      "localized",
      "priority",
      "templateData"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.IoTCentral/iotApps": {
    "api_version": "2021-11-01-preview",
    "full_properties": {
      "displayName": {
        "description": "The display name of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkRuleSets": {
        "description": "Network Rule Set Properties of this IoT Central application.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the application.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from the public network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The current state of the application.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subdomain": {
        "description": "The subdomain of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "template": {
        "description": "The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "state",
      "subdomain",
      "template",
      "networkRuleSets",
      "provisioningState",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.IoTCentral/iotApps/privateEndpointConnections": {
    "api_version": "2021-11-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KeyVault/managedHSMs": {
    "api_version": "2022-07-01",
    "full_properties": {
      "createMode": {
        "description": "The create mode to indicate whether the resource is being created or is being recovered from a deleted resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurgeProtection": {
        "description": "Property specifying whether protection against purge is enabled for this managed HSM pool. Setting this property to true activates protection against purge for this managed HSM pool and its content - only the Managed HSM service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableSoftDelete": {
        "description": "Property to specify whether the 'soft delete' functionality is enabled for this managed HSM pool. If it's not set to any value(true or false) when creating new managed HSM pool, it will be set to true by default. Once set to true, it cannot be reverted to false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "initialAdminObjectIds": {
        "description": "Array of initial administrators object ids for this managed hsm pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility of a managed hsm pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteRetentionInDays": {
        "description": "softDelete data retention days. It accepts >=7 and <=90.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the managed HSM pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createMode",
      "enablePurgeProtection",
      "enableSoftDelete",
      "initialAdminObjectIds",
      "softDeleteRetentionInDays",
      "tenantId",
      "networkAcls",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KeyVault/managedHSMs/privateEndpointConnections": {
    "api_version": "2022-07-01",
    "full_properties": {
      "privateEndpoint": {
        "description": "Private endpoint object properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "An object that represents the approval state of the private link connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the private endpoint connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KeyVault/vaults": {
    "api_version": "2022-07-01",
    "full_properties": {
      "accessPolicies": {
        "description": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurgeProtection": {
        "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRbacAuthorization": {
        "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableSoftDelete": {
        "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledForDeployment": {
        "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledForDiskEncryption": {
        "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledForTemplateDeployment": {
        "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Customer Managed Key details of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringSettings": {
        "description": "Monitoring Settings of the vault",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "moveDetails": {
        "description": "The details of the latest move operation performed on the Azure Resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility of a vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "property to enable or disable resource provider inbound network traffic from public clients.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redundancySettings": {
        "description": "The redundancy Settings of a Vault",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securitySettings": {
        "description": "Security Settings of the vault",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "SKU details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteRetentionInDays": {
        "description": "softDelete data retention days. It accepts >=7 and <=90.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDetails": {
        "description": "Details for upgrading vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The URI of the vault for performing operations on keys and secrets.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "enabledForDeployment",
      "enabledForDiskEncryption",
      "enabledForTemplateDeployment",
      "enableSoftDelete",
      "sku",
      "tenantId",
      "vaultUri",
      "upgradeDetails",
      "createMode",
      "enablePurgeProtection",
      "networkAcls",
      "enableRbacAuthorization",
      "provisioningState",
      "softDeleteRetentionInDays",
      "encryption",
      "moveDetails",
      "publicNetworkAccess",
      "monitoringSettings",
      "redundancySettings",
      "securitySettings"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KeyVault/vaults/accessPolicies": {
    "api_version": "2022-07-01",
    "full_properties": {
      "accessPolicies": {
        "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KeyVault/vaults/keys": {
    "api_version": "2022-07-01",
    "full_properties": {
      "attributes": {
        "description": "The object attributes managed by the Azure Key Vault service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "curveName": {
        "description": "The elliptic curve name. For valid values, see JsonWebKeyCurveName.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isActiveCMK": {
        "description": "Used to activate the workspace after a customer managed key is provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyOps": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keySize": {
        "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultUrl": {
        "description": "The Key Vault Url of the workspace key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kty": {
        "description": "The type of the key. For valid values, see JsonWebKeyType.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The identifier of the key vault key used to encrypt data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "release_policy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rotationPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the identity which will be used to access key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isActiveCMK",
      "keyVaultUrl",
      "attributes",
      "curveName",
      "keyOps",
      "keySize",
      "kty",
      "name",
      "version",
      "rotationPolicy",
      "release_policy"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KeyVault/vaults/privateEndpointConnections": {
    "api_version": "2022-07-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KeyVault/vaults/secrets": {
    "api_version": "2022-07-01",
    "full_properties": {
      "value": {
        "description": "Secret value",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kubernetes/connectedClusters": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "aadProfile": {
        "description": "AAD profile of the connected cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "agentPublicKeyCertificate": {
        "description": "Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureHybridBenefit": {
        "description": "Indicates whether Azure Hybrid Benefit is opted in.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectivityStatus": {
        "description": "Represents the connectivity status of the connected cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "distribution": {
        "description": "The Kubernetes distribution running on this connected cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "distributionVersion": {
        "description": "The Kubernetes distribution version on this connected cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "infrastructure": {
        "description": "The infrastructure on which the Kubernetes cluster represented by this connected cluster is running on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkScopeResourceId": {
        "description": "The resource id of the private link scope this connected cluster is assigned to, if any.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkState": {
        "description": "Property which describes the state of private link on a connected cluster resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the connected cluster resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aadProfile",
      "agentPublicKeyCertificate",
      "connectivityStatus",
      "distribution",
      "infrastructure",
      "provisioningState",
      "privateLinkScopeResourceId",
      "privateLinkState",
      "azureHybridBenefit",
      "distributionVersion"
    ],
    "required": [
      "apiVersion",
      "identity",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KubernetesConfiguration/privateLinkScopes": {
    "api_version": "2022-04-02-preview",
    "full_properties": {
      "clusterResourceId": {
        "description": "Managed Cluster ARM ID for the private link scope  (Required)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clusterResourceId",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.KubernetesConfiguration/privateLinkScopes/privateEndpointConnections": {
    "api_version": "2022-04-02-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters": {
    "api_version": "2022-07-07",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "sku",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/attachedDatabaseConfigurations": {
    "api_version": "2022-07-07",
    "full_properties": {
      "clusterResourceId": {
        "description": "The resource id of the cluster where the databases you would like to attach reside.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseName": {
        "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseNameOverride": {
        "description": "Overrides the original database name. Relevant only when attaching to a specific database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseNamePrefix": {
        "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultPrincipalsModificationKind": {
        "description": "The default principals modification kind.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tableLevelSharingProperties": {
        "description": "Tables that will be included and excluded in the follower database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clusterResourceId",
      "databaseName",
      "defaultPrincipalsModificationKind",
      "tableLevelSharingProperties",
      "provisioningState",
      "databaseNameOverride",
      "databaseNamePrefix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/databases": {
    "api_version": "2022-07-07",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/databases/dataConnections": {
    "api_version": "2022-07-07",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/databases/eventhubconnections": {
    "api_version": "2018-09-07-preview",
    "full_properties": {
      "compression": {
        "description": "The event hub messages compression type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consumerGroup": {
        "description": "The event hub consumer group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataFormat": {
        "description": "The data format of the message. Optionally the data format can be added to each message.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databaseRouting": {
        "description": "Indication for database routing information from the data connection, by default only database routing information is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventHubResourceId": {
        "description": "The resource ID of the event hub to be used to create a data connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventSystemProperties": {
        "description": "System properties of the event hub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedIdentityResourceId": {
        "description": "The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mappingRuleName": {
        "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retrievalStartDate": {
        "description": "When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tableName": {
        "description": "The table where the data should be ingested. Optionally the table information can be added to each message.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "consumerGroup",
      "dataFormat",
      "eventHubResourceId",
      "mappingRuleName",
      "tableName",
      "eventSystemProperties",
      "compression",
      "managedIdentityResourceId",
      "provisioningState",
      "databaseRouting",
      "retrievalStartDate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/databases/principalAssignments": {
    "api_version": "2022-07-07",
    "full_properties": {
      "principalId": {
        "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalType": {
        "description": "Principal type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "role": {
        "description": "Database principal role.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The tenant id of the principal",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalId",
      "principalType",
      "role",
      "tenantId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/databases/scripts": {
    "api_version": "2022-07-07",
    "full_properties": {
      "continueOnErrors": {
        "description": "Flag that indicates whether to continue if one of the command fails.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceUpdateTag": {
        "description": "A unique string. If changed the script will be applied again.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptContent": {
        "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptUrl": {
        "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptUrlSasToken": {
        "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "continueOnErrors",
      "forceUpdateTag",
      "scriptUrl",
      "scriptUrlSasToken",
      "scriptContent"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/dataconnections": {
    "api_version": "2022-07-07",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/managedPrivateEndpoints": {
    "api_version": "2022-07-07",
    "full_properties": {
      "groupId": {
        "description": "The groupId in which the managed private endpoint is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceRegion": {
        "description": "The region of the resource to which the managed private endpoint is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestMessage": {
        "description": "The user request message.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupId",
      "privateLinkResourceId",
      "privateLinkResourceRegion",
      "requestMessage"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/principalAssignments": {
    "api_version": "2022-07-07",
    "full_properties": {
      "principalId": {
        "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalType": {
        "description": "Principal type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "role": {
        "description": "Cluster principal role.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The tenant id of the principal",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalId",
      "principalType",
      "role",
      "tenantId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Kusto/clusters/privateEndpointConnections": {
    "api_version": "2022-07-07",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labPlans": {
    "api_version": "2022-08-01",
    "full_properties": {
      "allowedRegions": {
        "description": "The allowed regions for the lab creator to use when creating labs using this lab plan.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultAutoShutdownProfile": {
        "description": "Profile for how to handle shutting down virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultConnectionProfile": {
        "description": "Connection profile for how users connect to lab virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultNetworkProfile": {
        "description": "Profile for how to handle networking for Lab Plans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkedLmsInstance": {
        "description": "A URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sharedGalleryId": {
        "description": "A URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportInfo": {
        "description": "Support contact information and instructions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedRegions",
      "defaultAutoShutdownProfile",
      "defaultConnectionProfile",
      "defaultNetworkProfile",
      "linkedLmsInstance",
      "sharedGalleryId",
      "supportInfo"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labPlans/images": {
    "api_version": "2022-08-01",
    "full_properties": {
      "availableRegions": {
        "description": "The available regions of the image in the shared gallery.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Is the image enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceVirtualMachine": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Describes a storage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sourceVirtualMachine",
      "storageProfile",
      "hyperVGeneration",
      "availableRegions",
      "enabledState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts": {
    "api_version": "2018-10-15",
    "full_properties": {
      "enabledRegionSelection": {
        "description": "Represents if region selection is enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabledRegionSelection",
      "provisioningState",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/galleryimages": {
    "api_version": "2018-10-15",
    "full_properties": {
      "architecture": {
        "description": "The architecture of the image. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this gallery image definition resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disallowed": {
        "description": "Describes the disallowed disk types.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endOfLifeDate": {
        "description": "The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eula": {
        "description": "The Eula agreement for the gallery image definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "features": {
        "description": "A list of gallery image features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identifier": {
        "description": "This is the gallery image definition identifier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Indicates whether this gallery image is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isOverride": {
        "description": "Indicates whether this gallery has been overridden for this lab account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isPlanAuthorized": {
        "description": "Indicates if the plan has been authorized for programmatic deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osState": {
        "description": "This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacyStatementUri": {
        "description": "The privacy statement uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": "Describes the gallery image definition purchase plan. This is used by marketplace images.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recommended": {
        "description": "The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "releaseNoteUri": {
        "description": "The release note uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "disallowed",
      "endOfLifeDate",
      "eula",
      "identifier",
      "osState",
      "osType",
      "privacyStatementUri",
      "purchasePlan",
      "recommended",
      "releaseNoteUri",
      "isEnabled",
      "isOverride",
      "isPlanAuthorized",
      "provisioningState",
      "uniqueIdentifier",
      "hyperVGeneration",
      "features",
      "architecture"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs": {
    "api_version": "2018-10-15",
    "full_properties": {
      "announcement": {
        "description": "Properties of a lab's announcement banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifactsStorageAccount": {
        "description": "The artifact storage account of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "autoShutdownProfile": {
        "description": "Profile for how to handle shutting down virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "budgetPerStudent": {
        "description": "The amount.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionProfile": {
        "description": "Connection profile for how users connect to lab virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The creation date of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultStorageAccount": {
        "description": "The lab's default storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultVirtualNetworkId": {
        "description": "The default virtual network identifier of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Lab Display Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentPermission": {
        "description": "The access rights to be granted to the user when provisioning an environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Default expiration date for each student in this lab",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Extended properties of the lab used for experimental features",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labPlanId": {
        "description": "A URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labStorageType": {
        "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsLinux": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsWindows": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxUsersInLab": {
        "description": "Maximum number of users allowed in the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Profile for how to handle networking for Labs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "premiumDataDisks": {
        "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rosterProfile": {
        "description": "The lab user list management profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "The lab security profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The storage accounts of the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "support": {
        "description": "Properties of a lab's support banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "The title of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageQuota": {
        "description": "Maximum duration a user can use an environment for in the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessMode": {
        "description": "Lab user access mode (open to all vs. restricted to those listed on the lab).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultName": {
        "description": "The name of the key vault of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualMachineProfile": {
        "description": "The base virtual machine configuration for a lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactsStorageAccount",
      "createdDate",
      "defaultStorageAccount",
      "defaultVirtualNetworkId",
      "labStorageType",
      "provisioningState",
      "storageAccounts",
      "vaultName",
      "premiumDataDisks",
      "uniqueIdentifier",
      "announcement",
      "environmentPermission",
      "extendedProperties",
      "mandatoryArtifactsResourceIdsLinux",
      "mandatoryArtifactsResourceIdsWindows",
      "support",
      "maxUsersInLab",
      "usageQuota",
      "userAccessMode",
      "autoShutdownProfile",
      "connectionProfile",
      "description",
      "labPlanId",
      "networkProfile",
      "rosterProfile",
      "securityProfile",
      "title",
      "virtualMachineProfile",
      "budgetPerStudent",
      "displayName",
      "expirationDate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs/environmentsettings": {
    "api_version": "2018-10-15",
    "full_properties": {
      "configurationState": {
        "description": "Describes the user's progress in configuring their environment setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Describes the environment and its resource settings",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceSettings": {
        "description": "Represents resource specific settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "Brief title describing the environment and its resource settings",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configurationState",
      "description",
      "provisioningState",
      "resourceSettings",
      "title",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs/environmentsettings/environments": {
    "api_version": "2018-10-15",
    "full_properties": {
      "armTemplateDisplayName": {
        "description": "The display name of the Azure Resource Manager template that produced the environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentProperties": {
        "description": "Properties of an environment deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceSets": {
        "description": "Represents a VM and the setting Id it was created for.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "armTemplateDisplayName",
      "deploymentProperties",
      "provisioningState",
      "uniqueIdentifier",
      "resourceSets"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs/users": {
    "api_version": "2018-10-15",
    "full_properties": {
      "additionalUsageQuota": {
        "description": "The amount of usage quota time the user gets in addition to the lab usage quota.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "email": {
        "description": "An email address.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptedPassword": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Identity attributes of a lab user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Username",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPassword": {
        "description": "Password used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHash": {
        "description": "Password hash used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHashSalt": {
        "description": "Password hash salt used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUserName": {
        "description": "Username used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scmUri": {
        "description": "Url of SCM site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretStore": {
        "description": "Properties of a user's secret store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareAccessRights": {
        "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userType": {
        "description": "Type of the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "publishingPassword",
      "publishingUserName",
      "scmUri",
      "publishingPasswordHash",
      "publishingPasswordHashSalt",
      "identity",
      "provisioningState",
      "secretStore",
      "uniqueIdentifier",
      "encryptedPassword",
      "shareAccessRights",
      "userType",
      "additionalUsageQuota",
      "email"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labs": {
    "api_version": "2022-08-01",
    "full_properties": {
      "announcement": {
        "description": "Properties of a lab's announcement banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifactsStorageAccount": {
        "description": "The artifact storage account of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "autoShutdownProfile": {
        "description": "Profile for how to handle shutting down virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "budgetPerStudent": {
        "description": "The amount.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionProfile": {
        "description": "Connection profile for how users connect to lab virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The creation date of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultStorageAccount": {
        "description": "The lab's default storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultVirtualNetworkId": {
        "description": "The default virtual network identifier of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Lab Display Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentPermission": {
        "description": "The access rights to be granted to the user when provisioning an environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Default expiration date for each student in this lab",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Extended properties of the lab used for experimental features",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labPlanId": {
        "description": "A URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labStorageType": {
        "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsLinux": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsWindows": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxUsersInLab": {
        "description": "Maximum number of users allowed in the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Profile for how to handle networking for Labs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "premiumDataDisks": {
        "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rosterProfile": {
        "description": "The lab user list management profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "The lab security profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The storage accounts of the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "support": {
        "description": "Properties of a lab's support banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "The title of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageQuota": {
        "description": "Maximum duration a user can use an environment for in the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessMode": {
        "description": "Lab user access mode (open to all vs. restricted to those listed on the lab).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultName": {
        "description": "The name of the key vault of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualMachineProfile": {
        "description": "The base virtual machine configuration for a lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactsStorageAccount",
      "createdDate",
      "defaultStorageAccount",
      "defaultVirtualNetworkId",
      "labStorageType",
      "provisioningState",
      "storageAccounts",
      "vaultName",
      "premiumDataDisks",
      "uniqueIdentifier",
      "announcement",
      "environmentPermission",
      "extendedProperties",
      "mandatoryArtifactsResourceIdsLinux",
      "mandatoryArtifactsResourceIdsWindows",
      "support",
      "maxUsersInLab",
      "usageQuota",
      "userAccessMode",
      "autoShutdownProfile",
      "connectionProfile",
      "description",
      "labPlanId",
      "networkProfile",
      "rosterProfile",
      "securityProfile",
      "title",
      "virtualMachineProfile",
      "budgetPerStudent",
      "displayName",
      "expirationDate"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labs/schedules": {
    "api_version": "2022-08-01",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationTime": {
        "description": "Gets or sets the creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dayOfMonth": {
        "description": "UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "daysOfWeek": {
        "description": "Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDate": {
        "description": "The end date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTimeOffsetMinutes": {
        "description": "Gets or sets the expiry time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The frequency of this scheduled task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourOfDay": {
        "description": "UTC time at which cost analysis data will be emailed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets a value indicating whether this schedule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Gets or sets the last modified time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRun": {
        "description": "Gets or sets the next run time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextRunOffsetMinutes": {
        "description": "Gets or sets the next run time's offset in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Notes for this schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recurrencePattern": {
        "description": "Recurrence pattern of a lab schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startAt": {
        "description": "When lab user virtual machines will be started. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDate": {
        "description": "The start date and time of the scheduled action (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Indicates whether or not this scheduled task is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopAt": {
        "description": "When lab user virtual machines will be stopped. Timestamp offsets will be ignored and timeZoneId is used instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "time": {
        "description": "The target time to trigger the action. The format is HH:MM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The IANA timezone id at which the schedule should execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The IANA timezone id for the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Supported type this scheduled task represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeksOfMonth": {
        "description": "Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier",
      "advancedSchedule",
      "creationTime",
      "description",
      "expiryTime",
      "expiryTimeOffsetMinutes",
      "frequency",
      "interval",
      "isEnabled",
      "lastModifiedTime",
      "nextRun",
      "nextRunOffsetMinutes",
      "startTime",
      "timeZone",
      "notes",
      "recurrencePattern",
      "startAt",
      "stopAt",
      "dayOfMonth",
      "daysOfWeek",
      "endDate",
      "hourOfDay",
      "startDate",
      "weeksOfMonth",
      "state",
      "time",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labs/users": {
    "api_version": "2022-08-01",
    "full_properties": {
      "additionalUsageQuota": {
        "description": "The amount of usage quota time the user gets in addition to the lab usage quota.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "email": {
        "description": "An email address.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptedPassword": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Identity attributes of a lab user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Username",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPassword": {
        "description": "Password used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHash": {
        "description": "Password hash used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHashSalt": {
        "description": "Password hash salt used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUserName": {
        "description": "Username used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scmUri": {
        "description": "Url of SCM site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretStore": {
        "description": "Properties of a user's secret store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareAccessRights": {
        "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userType": {
        "description": "Type of the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "publishingPassword",
      "publishingUserName",
      "scmUri",
      "publishingPasswordHash",
      "publishingPasswordHashSalt",
      "identity",
      "provisioningState",
      "secretStore",
      "uniqueIdentifier",
      "encryptedPassword",
      "shareAccessRights",
      "userType",
      "additionalUsageQuota",
      "email"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LoadTestService/loadTests": {
    "api_version": "2022-12-01",
    "full_properties": {
      "description": {
        "description": "Description of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Key and identity details for Customer Managed Key encryption of load test resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "encryption"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logic/integrationAccounts": {
    "api_version": "2016-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.Logic/integrationAccounts/agreements": {
    "api_version": "2016-06-01",
    "full_properties": {
      "agreementType": {
        "description": "The agreement type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "content": {
        "description": "The content.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "guestIdentity": {
        "description": "The guest identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "guestPartner": {
        "description": "The guest partner.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostIdentity": {
        "description": "The host identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostPartner": {
        "description": "The host partner.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostPartner",
      "guestPartner",
      "hostIdentity",
      "guestIdentity",
      "agreementType",
      "content",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/assemblies": {
    "api_version": "2016-06-01",
    "full_properties": {
      "assemblyName": {
        "description": "The map type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "assemblyVersion": {
        "description": "The map type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "content": {
        "description": "The content.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentLink": {
        "description": "The content link properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The contentType.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assemblyName",
      "assemblyVersion",
      "content",
      "contentLink",
      "contentType",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/batchConfigurations": {
    "api_version": "2016-06-01",
    "full_properties": {
      "batchGroupName": {
        "description": "The batch group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "releaseCriteria": {
        "description": "The batch release criteria.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "batchGroupName",
      "releaseCriteria",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/certificates": {
    "api_version": "2016-06-01",
    "full_properties": {
      "key": {
        "description": "The key properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicCertificate": {
        "description": "The public certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicCertificate",
      "key"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/maps": {
    "api_version": "2016-06-01",
    "full_properties": {
      "content": {
        "description": "The content.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentLink": {
        "description": "The content link properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The contentType.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mapType": {
        "description": "The map type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "mapType",
      "content",
      "contentLink",
      "contentType"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/partners": {
    "api_version": "2016-06-01",
    "full_properties": {
      "content": {
        "description": "The content.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerType": {
        "description": "The partner type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partnerType",
      "metadata",
      "content"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/schemas": {
    "api_version": "2016-06-01",
    "full_properties": {
      "content": {
        "description": "The content.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentLink": {
        "description": "The content link properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The contentType.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "documentName": {
        "description": "The document name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schemaType": {
        "description": "The schema type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetNamespace": {
        "description": "The target anmespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "schemaType",
      "targetNamespace",
      "documentName",
      "content",
      "contentLink",
      "contentType",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/workflows": {
    "api_version": "2017-07-01",
    "full_properties": {
      "definition": {
        "description": "The definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "githubWorkflowProfile": {
        "description": "GitHub Workflow Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "integrationAccount": {
        "description": "The integration account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state",
      "sku",
      "definition",
      "parameters",
      "integrationAccount",
      "githubWorkflowProfile"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logz/monitors": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "appLocation": {
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datadogOrganizationProperties": {
        "description": "Datadog organization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynatraceEnvironmentProperties": {
        "description": "Properties of the Dynatrace environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticProperties": {
        "description": "Elastic Resource Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liftrResourceCategory": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logzOrganizationProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplaceSubscriptionStatus": {
        "description": "Marketplace subscription status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Flag specifying if the resource monitoring is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planData": {
        "description": "Billing plan information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingPreference": {
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userInfo": {
        "description": "User Information to be passed to partners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of elastic of the monitor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundancyPreference": {
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datadogOrganizationProperties",
      "liftrResourceCategory",
      "marketplaceSubscriptionStatus",
      "monitoringStatus",
      "provisioningState",
      "userInfo",
      "elasticProperties",
      "logzOrganizationProperties",
      "planData",
      "dynatraceEnvironmentProperties",
      "version",
      "appLocation",
      "logAnalyticsWorkspaceArmId",
      "managedResourceGroupConfiguration",
      "monitorSubnet",
      "routingPreference",
      "zoneRedundancyPreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logz/monitors/accounts": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "appLocation": {
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datadogOrganizationProperties": {
        "description": "Datadog organization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynatraceEnvironmentProperties": {
        "description": "Properties of the Dynatrace environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticProperties": {
        "description": "Elastic Resource Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liftrResourceCategory": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logzOrganizationProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplaceSubscriptionStatus": {
        "description": "Marketplace subscription status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Flag specifying if the resource monitoring is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planData": {
        "description": "Billing plan information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingPreference": {
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userInfo": {
        "description": "User Information to be passed to partners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of elastic of the monitor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundancyPreference": {
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datadogOrganizationProperties",
      "liftrResourceCategory",
      "marketplaceSubscriptionStatus",
      "monitoringStatus",
      "provisioningState",
      "userInfo",
      "elasticProperties",
      "logzOrganizationProperties",
      "planData",
      "dynatraceEnvironmentProperties",
      "version",
      "appLocation",
      "logAnalyticsWorkspaceArmId",
      "managedResourceGroupConfiguration",
      "monitorSubnet",
      "routingPreference",
      "zoneRedundancyPreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logz/monitors/accounts/tagRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "logRules": {
        "description": "Set of rules for sending logs for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metricRules": {
        "description": "Set of rules for sending metrics for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitoring tag rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "logRules",
      "metricRules",
      "provisioningState",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logz/monitors/metricsSource": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "appLocation": {
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datadogOrganizationProperties": {
        "description": "Datadog organization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynatraceEnvironmentProperties": {
        "description": "Properties of the Dynatrace environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticProperties": {
        "description": "Elastic Resource Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liftrResourceCategory": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logzOrganizationProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplaceSubscriptionStatus": {
        "description": "Marketplace subscription status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Flag specifying if the resource monitoring is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planData": {
        "description": "Billing plan information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingPreference": {
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userInfo": {
        "description": "User Information to be passed to partners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of elastic of the monitor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundancyPreference": {
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datadogOrganizationProperties",
      "liftrResourceCategory",
      "marketplaceSubscriptionStatus",
      "monitoringStatus",
      "provisioningState",
      "userInfo",
      "elasticProperties",
      "logzOrganizationProperties",
      "planData",
      "dynatraceEnvironmentProperties",
      "version",
      "appLocation",
      "logAnalyticsWorkspaceArmId",
      "managedResourceGroupConfiguration",
      "monitorSubnet",
      "routingPreference",
      "zoneRedundancyPreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logz/monitors/metricsSource/tagRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "metricRules": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendMetrics": {
        "description": "Flag specifying if metrics from Azure resources should be sent for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "metricRules",
      "provisioningState",
      "sendMetrics",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logz/monitors/singleSignOnConfigurations": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "enterpriseAppId": {
        "description": "The Id of the Enterprise App used for Single sign-on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "singleSignOnState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "singleSignOnUrl": {
        "description": "The login URL specific to this Logz Organization.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enterpriseAppId",
      "provisioningState",
      "singleSignOnState",
      "singleSignOnUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logz/monitors/tagRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "logRules": {
        "description": "Set of rules for sending logs for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metricRules": {
        "description": "Set of rules for sending metrics for the Monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitoring tag rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "logRules",
      "metricRules",
      "provisioningState",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForEDMUpload": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForEDMUpload/privateEndpointConnections": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter/privateEndpointConnections": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365SecurityCenter": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365SecurityCenter/privateEndpointConnections": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForMIPPolicySync": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForMIPPolicySync/privateEndpointConnections": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI/privateEndpointConnections": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForSCCPowershell": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.M365SecurityAndCompliance/privateLinkServicesForSCCPowershell/privateEndpointConnections": {
    "api_version": "2021-03-25-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearning/commitmentPlans": {
    "api_version": "2016-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.MachineLearning/webServices": {
    "api_version": "2017-01-01",
    "full_properties": {
      "assets": {
        "description": "Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "commitmentPlan": {
        "description": "Information about the machine learning commitment plan associated with the web service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the web service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Diagnostics settings for an Azure ML web service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exampleRequest": {
        "description": "Sample input data for the service's input(s).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exposeSampleData": {
        "description": "When set to true, sample data is included in the web service's swagger definition. The default value is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keys": {
        "description": "Access keys for the web service calls.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "machineLearningWorkspace": {
        "description": "Information about the machine learning workspace containing the experiment that is source for the web service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "output": {
        "description": "The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "payloadsInBlobStorage": {
        "description": "When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "payloadsLocation": {
        "description": "Describes the access location for a blob.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readOnly": {
        "description": "When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "realtimeConfiguration": {
        "description": "Holds the available configuration options for an Azure ML web service endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "Access information for a storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "The title of the web service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assets",
      "commitmentPlan",
      "description",
      "diagnostics",
      "exampleRequest",
      "exposeSampleData",
      "input",
      "keys",
      "machineLearningWorkspace",
      "output",
      "parameters",
      "readOnly",
      "realtimeConfiguration",
      "storageAccount",
      "title",
      "payloadsInBlobStorage",
      "payloadsLocation"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearning/workspaces": {
    "api_version": "2019-10-01",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningCompute/operationalizationClusters": {
    "api_version": "2017-08-01-preview",
    "full_properties": {
      "appInsights": {
        "description": "Properties of App Insights.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterType": {
        "description": "The cluster type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "Properties of Azure Container Registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerService": {
        "description": "Information about the container service backing the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "globalServiceConfiguration": {
        "description": "Global configuration for services in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "Properties of Storage Account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appInsights",
      "clusterType",
      "containerRegistry",
      "containerService",
      "description",
      "globalServiceConfiguration",
      "storageAccount"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningExperimentation/accounts": {
    "api_version": "2017-05-01-preview",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": "The api properties for special APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudConnectors": {
        "description": "External Cloud Service connectors",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customSubDomainName": {
        "description": "Optional subdomain name used for token-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamicThrottlingEnabled": {
        "description": "The flag to enable dynamic throttling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Gets or sets the managed resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "migrationToken": {
        "description": "Resource migration token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restore": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Device Update Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userOwnedStorage": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "cloudConnectors",
      "managedResourceGroupName",
      "allowedFqdnList",
      "apiProperties",
      "customSubDomainName",
      "disableLocalAuth",
      "migrationToken",
      "networkAcls",
      "restore",
      "restrictOutboundNetworkAccess",
      "userOwnedStorage",
      "dynamicThrottlingEnabled",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningExperimentation/accounts/workspaces": {
    "api_version": "2017-05-01-preview",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningExperimentation/accounts/workspaces/projects": {
    "api_version": "2017-05-01-preview",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureAuthenticationInfo": {
        "description": "Azure Active Directory Application",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerStorageAccountArmId": {
        "description": "The ARM id of the storage account used for interactions when public access is disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "devCenterId": {
        "description": "Resource Id of an associated DevCenter",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "databasesInfo",
      "sourceConnectionInfo",
      "sourcePlatform",
      "targetConnectionInfo",
      "targetPlatform",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "customerStorageAccountArmId",
      "projectStatus",
      "publicNetworkAccess",
      "azureAuthenticationInfo",
      "devCenterId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "intellectualPropertyPublisher": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroup": {
        "description": "ARM ResourceId of a resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mlFlowRegistryUri": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkCount": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "regionDetails": {
        "description": "Details of each region the registry is in",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "discoveryUrl",
      "intellectualPropertyPublisher",
      "managedResourceGroup",
      "mlFlowRegistryUri",
      "privateLinkCount",
      "properties",
      "publicNetworkAccess",
      "regionDetails",
      "tags"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/codes": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/codes/versions": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "codeUri": {
        "description": "Uri where code is located",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datastoreId": {
        "description": "ARM resource ID of the datastore where the asset is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "path": {
        "description": "[Required] The path of the file/directory in the datastore.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datastoreId",
      "description",
      "isAnonymous",
      "path",
      "properties",
      "tags",
      "codeUri",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/components": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "isArchived",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/components/versions": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "componentSpec": {
        "description": "Defines Component definition details.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "componentSpec",
      "description",
      "isAnonymous",
      "isArchived",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/environments": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/environments/versions": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "autoRebuild": {
        "description": "Defines if image needs to be rebuilt based on base image changes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "build": {
        "description": "Configuration settings for Docker build context",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condaFile": {
        "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "image": {
        "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "inferenceConfig": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "build",
      "condaFile",
      "description",
      "image",
      "inferenceConfig",
      "isAnonymous",
      "isArchived",
      "osType",
      "properties",
      "tags",
      "autoRebuild"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/models": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/registries/models/versions": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "datastoreId": {
        "description": "ARM resource ID of the datastore where the asset is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "flavors": {
        "description": "Mapping of model flavors to their properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobName": {
        "description": "Name of the training job which produced this model",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modelType": {
        "description": "The storage format for this entity. Used for NCD.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modelUri": {
        "description": "The URI path to the model contents.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "path": {
        "description": "[Required] The path of the file/directory in the datastore.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datastoreId",
      "description",
      "flavors",
      "isAnonymous",
      "path",
      "properties",
      "tags",
      "isArchived",
      "jobName",
      "modelType",
      "modelUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces": {
    "api_version": "2022-10-01",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/batchEndpoints": {
    "api_version": "2022-10-01",
    "full_properties": {
      "authMode": {
        "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaults": {
        "description": "Batch endpoint default values",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the inference endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keys": {
        "description": "Keys for endpoint authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Property dictionary. Properties can be added, but not removed or altered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "traffic": {
        "description": "Traffic rules on how the traffic will be routed across deployments.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authMode",
      "description",
      "keys",
      "properties",
      "traffic",
      "defaults"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments": {
    "api_version": "2022-10-01",
    "full_properties": {
      "codeConfiguration": {
        "description": "Configuration for a scoring code asset.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "compute": {
        "description": "Compute target for batch inference operation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the endpoint deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentId": {
        "description": "ARM resource ID or AssetId of the environment specification for the endpoint deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "Environment variables configuration for the deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "errorThreshold": {
        "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue].\r\nFor FileDataset, this value is the count of file failures.\r\nFor TabularDataset, this value is the count of record failures.\r\nIf set to -1 (the lower bound), all failures during batch inference will be ignored.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loggingLevel": {
        "description": "Logging level for batch inference operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxConcurrencyPerInstance": {
        "description": "Indicates maximum number of parallelism per instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "miniBatchSize": {
        "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "model": {
        "description": "Base definition for asset references.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputAction": {
        "description": "Indicates how the output will be organized.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputConfiguration": {
        "description": "Batch inference output configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputFileName": {
        "description": "Customized output file name for append_row output action.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partitionKeys": {
        "description": "Partition keys list used for Named partitioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Property dictionary. Properties can be added, but not removed or altered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resources": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retrySettings": {
        "description": "Retry settings for a batch inference operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "codeConfiguration",
      "compute",
      "description",
      "environmentId",
      "environmentVariables",
      "errorThreshold",
      "loggingLevel",
      "miniBatchSize",
      "model",
      "outputConfiguration",
      "partitionKeys",
      "properties",
      "retrySettings",
      "maxConcurrencyPerInstance",
      "outputAction",
      "outputFileName",
      "resources"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/codes": {
    "api_version": "2022-10-01",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/codes/versions": {
    "api_version": "2022-10-01",
    "full_properties": {
      "codeUri": {
        "description": "Uri where code is located",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datastoreId": {
        "description": "ARM resource ID of the datastore where the asset is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "path": {
        "description": "[Required] The path of the file/directory in the datastore.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datastoreId",
      "description",
      "isAnonymous",
      "path",
      "properties",
      "tags",
      "codeUri",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/components": {
    "api_version": "2022-10-01",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "isArchived",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/components/versions": {
    "api_version": "2022-10-01",
    "full_properties": {
      "componentSpec": {
        "description": "Defines Component definition details.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "componentSpec",
      "description",
      "isAnonymous",
      "isArchived",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/computes": {
    "api_version": "2022-10-01",
    "full_properties": {
      "computeLocation": {
        "description": "Location for the underlying compute",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the Machine Learning compute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "ARM resource id of the underlying compute",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "computeLocation",
      "description",
      "resourceId",
      "disableLocalAuth"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/connections": {
    "api_version": "2022-10-01",
    "full_properties": {
      "category": {
        "description": "Category of the connection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "target": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value details of the workspace connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "valueFormat": {
        "description": "format for the workspace connection value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "category",
      "target",
      "value",
      "valueFormat"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/data": {
    "api_version": "2022-10-01",
    "full_properties": {
      "dataType": {
        "description": "[Required] Specifies the type of data.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "dataType",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/data/versions": {
    "api_version": "2022-10-01",
    "full_properties": {
      "dataUri": {
        "description": "[Required] Uri of the data. Usage/meaning depends on Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20221001.Assets.DataVersionBase.DataType",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataUri",
      "description",
      "isAnonymous",
      "isArchived",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/datasets": {
    "api_version": "2020-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "datasetType",
      "name",
      "parameters",
      "registration",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/datastores": {
    "api_version": "2022-10-01",
    "full_properties": {
      "credentials": {
        "description": "Base definition for datastore credentials.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "description",
      "properties",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/environments": {
    "api_version": "2022-10-01",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/environments/versions": {
    "api_version": "2022-10-01",
    "full_properties": {
      "autoRebuild": {
        "description": "Defines if image needs to be rebuilt based on base image changes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "build": {
        "description": "Configuration settings for Docker build context",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condaFile": {
        "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "image": {
        "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "inferenceConfig": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "build",
      "condaFile",
      "description",
      "image",
      "inferenceConfig",
      "isAnonymous",
      "isArchived",
      "osType",
      "properties",
      "tags",
      "autoRebuild"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/jobs": {
    "api_version": "2022-10-01",
    "full_properties": {
      "componentId": {
        "description": "ARM resource ID of the component resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "computeId": {
        "description": "ARM resource ID of the compute resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "experimentName": {
        "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Base definition for identity configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Base definition of a schedule",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "services": {
        "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "computeId",
      "displayName",
      "experimentName",
      "identity",
      "isArchived",
      "schedule",
      "services",
      "componentId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/labelingJobs": {
    "api_version": "2022-10-01-preview",
    "full_properties": {
      "dataConfiguration": {
        "description": "Labeling data configuration definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "datasetConfiguration": {
        "description": "Labeling dataset configuration definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "jobInstructions": {
        "description": "Instructions for labeling job",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobType": {
        "description": "[Required] Specifies the type of job. This field should always be set to \"Labeling\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelCategories": {
        "description": "Label categories of the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labelingJobMediaProperties": {
        "description": "Properties of a labeling job",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mlAssistConfiguration": {
        "description": "Labeling MLAssist configuration definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datasetConfiguration",
      "description",
      "jobInstructions",
      "jobType",
      "labelCategories",
      "labelingJobMediaProperties",
      "mlAssistConfiguration",
      "properties",
      "tags",
      "dataConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/linkedServices": {
    "api_version": "2020-09-01-preview",
    "full_properties": {
      "createdTime": {
        "description": "The creation time of the linked service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linkType": {
        "description": "Type of the link target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkedServiceResourceId": {
        "description": "ResourceId of the link target of the linked service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modifiedTime": {
        "description": "The last modified time of the linked service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createdTime",
      "linkedServiceResourceId",
      "linkType",
      "modifiedTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/linkedWorkspaces": {
    "api_version": "2020-05-15-preview",
    "full_properties": {
      "linkedWorkspaceResourceId": {
        "description": "ResourceId of the link target of the linked workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAssignedIdentityResourceId": {
        "description": "ResourceId of the user assigned identity for the linked workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedWorkspaceResourceId",
      "userAssignedIdentityResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/models": {
    "api_version": "2022-10-01",
    "full_properties": {
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "properties",
      "tags",
      "isArchived"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/models/versions": {
    "api_version": "2022-10-01",
    "full_properties": {
      "datastoreId": {
        "description": "ARM resource ID of the datastore where the asset is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "flavors": {
        "description": "Mapping of model flavors to their properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAnonymous": {
        "description": "If the name version are system generated (anonymous registration).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isArchived": {
        "description": "Is the asset archived?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobName": {
        "description": "Name of the training job which produced this model",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modelType": {
        "description": "The storage format for this entity. Used for NCD.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modelUri": {
        "description": "The URI path to the model contents.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "path": {
        "description": "[Required] The path of the file/directory in the datastore.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datastoreId",
      "description",
      "flavors",
      "isAnonymous",
      "path",
      "properties",
      "tags",
      "isArchived",
      "jobName",
      "modelType",
      "modelUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/onlineEndpoints": {
    "api_version": "2022-10-01",
    "full_properties": {
      "authMode": {
        "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "compute": {
        "description": "ARM resource ID of the compute if it exists.\r\noptional",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the inference endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keys": {
        "description": "Keys for endpoint authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mirrorTraffic": {
        "description": "Percentage of traffic to be mirrored to each deployment without using returned scoring. Traffic values need to sum to utmost 50.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Property dictionary. Properties can be added, but not removed or altered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Set to \"Enabled\" for endpoints that should allow public access when Private Link is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "target": {
        "description": "ARM resource ID of the compute if it exists.\r\noptional",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "traffic": {
        "description": "Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authMode",
      "description",
      "keys",
      "properties",
      "target",
      "traffic",
      "compute",
      "mirrorTraffic",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments": {
    "api_version": "2022-10-01",
    "full_properties": {
      "appInsightsEnabled": {
        "description": "If true, enables Application Insights logging.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "codeConfiguration": {
        "description": "Configuration for a scoring code asset.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the endpoint deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "egressPublicNetworkAccess": {
        "description": "If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentId": {
        "description": "ARM resource ID or AssetId of the environment specification for the endpoint deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "Environment variables configuration for the deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "instanceType": {
        "description": "Compute instance type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "livenessProbe": {
        "description": "Deployment container liveness/readiness probe configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "model": {
        "description": "The URI path to the model.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modelMountPath": {
        "description": "The path to mount the model in custom container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateNetworkConnection": {
        "description": "If true, enable private network connection.\r\nDEPRECATED for future API versions. Use EgressPublicNetworkAccess.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Property dictionary. Properties can be added, but not removed or altered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readinessProbe": {
        "description": "Deployment container liveness/readiness probe configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestSettings": {
        "description": "Online deployment scoring requests configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Online deployment scaling configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appInsightsEnabled",
      "codeConfiguration",
      "description",
      "environmentId",
      "environmentVariables",
      "livenessProbe",
      "model",
      "properties",
      "requestSettings",
      "scaleSettings",
      "egressPublicNetworkAccess",
      "instanceType",
      "modelMountPath",
      "privateNetworkConnection",
      "readinessProbe"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections": {
    "api_version": "2022-10-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/schedules": {
    "api_version": "2022-10-01",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dayOfWeek": {
        "description": "Day of the week to run assessment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The asset description text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "effectiveFrom": {
        "description": "Scheduling effective from time. Date-Time in ISO-8601 format without timezone suffix.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "effectiveUntil": {
        "description": "Scheduling effective until time. Date-Time in ISO-8601 format without timezone suffix.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enable": {
        "description": "Enable or disable assessment schedule on SQL virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequencyInMinutes": {
        "description": "frequency (in minutes) at which rule condition should be evaluated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Is the schedule enabled?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "location": {
        "description": "The location of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monthlyOccurrence": {
        "description": "Occurrence of the DayOfWeek day within a month to schedule assessment. Takes values: 1,2,3,4 and -1. Use -1 for last DayOfWeek day of the month",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyList": {
        "description": "A list of repetition intervals in ISO 8601 format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "The asset property dictionary.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrences": {
        "description": "List of recurrences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Time of the day in HH:mm format. Eg. 17:30",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tag dictionary. Tags can be added, removed, and updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeWindowInMinutes": {
        "description": "Time window for which data needs to be fetched for query (should be greater than or equal to frequencyInMinutes).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "Scheduling time zone.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trigger": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklyInterval": {
        "description": "Number of weeks to schedule between 2 assessment runs. Takes value from 1-6",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "location",
      "properties",
      "tags",
      "name",
      "policyList",
      "frequencyInMinutes",
      "timeWindowInMinutes",
      "effectiveFrom",
      "effectiveUntil",
      "recurrences",
      "timeZone",
      "dayOfWeek",
      "enable",
      "monthlyOccurrence",
      "startTime",
      "weeklyInterval",
      "action",
      "description",
      "displayName",
      "isEnabled",
      "trigger"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/services": {
    "api_version": "2021-04-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Maintenance/maintenanceConfigurations": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "extensionProperties": {
        "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "installPatches": {
        "description": "Input configuration for a patch run",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maintenanceScope": {
        "description": "Gets or sets maintenanceScope of the configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maintenanceWindow": {
        "description": "Definition of a MaintenanceWindow",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "namespace": {
        "description": "Gets or sets namespace of the resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notAllowedTime": {
        "description": "Time slots on which upgrade is not allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeInWeek": {
        "description": "If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "visibility": {
        "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "extensionProperties",
      "maintenanceScope",
      "namespace",
      "maintenanceWindow",
      "visibility",
      "notAllowedTime",
      "timeInWeek",
      "installPatches"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedIdentity/userAssignedIdentities": {
    "api_version": "2022-01-31-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials": {
    "api_version": "2022-01-31-preview",
    "full_properties": {
      "audiences": {
        "description": "The list of audiences that can appear in the issued token.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "issuer": {
        "description": "The URL of the issuer to be trusted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subject": {
        "description": "The identifier of the external identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "audiences",
      "issuer",
      "subject"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedNetwork/managedNetworks": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "scope": {
        "description": "Scope of a Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "scope"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedNetwork/managedNetworks/managedNetworkGroups": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "managementGroups": {
        "description": "The collection of management groups covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnets": {
        "description": "The collection of  subnets covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptions": {
        "description": "The collection of subscriptions covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworks": {
        "description": "The collection of virtual nets covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "managementGroups",
      "subnets",
      "subscriptions",
      "virtualNetworks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedNetwork/managedNetworks/managedNetworkPeeringPolicies": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "hub": {
        "description": "Generic pointer to a resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mesh": {
        "description": "Gets or sets the mesh group IDs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spokes": {
        "description": "Gets or sets the spokes group IDs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Gets or sets the connectivity type of a network structure policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hub",
      "mesh",
      "spokes",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedServices/registrationAssignments": {
    "api_version": "2019-06-01",
    "full_properties": {
      "registrationDefinitionId": {
        "description": "Fully qualified path of the registration definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "registrationDefinitionId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.ManagedServices/registrationDefinitions": {
    "api_version": "2019-06-01",
    "full_properties": {
      "authorizations": {
        "description": "Authorization tuple containing principal id of the user/security group or service principal and id of the build-in role.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the registration definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedByTenantId": {
        "description": "Id of the managedBy tenant.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationDefinitionName": {
        "description": "Name of the registration definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "authorizations",
      "registrationDefinitionName",
      "managedByTenantId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Maps/accounts": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "cors": {
        "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys authentication from any usage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkedResources": {
        "description": "The array of associated resources to the Map account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Map Account Managed Identity(s) permissions to those resource(s).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disableLocalAuth",
      "linkedResources",
      "cors"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Maps/accounts/creators": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "storageUnits": {
        "description": "The storage units to be allocated. Integer values from 1 to 100, inclusive.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageUnits"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Maps/accounts/privateAtlases": {
    "api_version": "2020-02-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/accountFilters": {
    "api_version": "2022-08-01",
    "full_properties": {
      "firstQuality": {
        "description": "Filter First Quality",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "presentationTimeRange": {
        "description": "The presentation time range, this is asset related and not recommended for Account Filter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tracks": {
        "description": "The tracks selection conditions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "firstQuality",
      "presentationTimeRange",
      "tracks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/assets": {
    "api_version": "2022-08-01",
    "full_properties": {
      "alternateId": {
        "description": "The alternate ID of the Asset.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "container": {
        "description": "The name of the asset blob container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The Asset description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountName": {
        "description": "The name of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alternateId",
      "container",
      "description",
      "storageAccountName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/assets/assetFilters": {
    "api_version": "2022-08-01",
    "full_properties": {
      "firstQuality": {
        "description": "Filter First Quality",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "presentationTimeRange": {
        "description": "The presentation time range, this is asset related and not recommended for Account Filter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tracks": {
        "description": "The tracks selection conditions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "firstQuality",
      "presentationTimeRange",
      "tracks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/assets/tracks": {
    "api_version": "2022-08-01",
    "full_properties": {
      "track": {
        "description": "Base type for concrete track types. A derived type must be used to represent the Track.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "track"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/contentKeyPolicies": {
    "api_version": "2022-08-01",
    "full_properties": {
      "description": {
        "description": "A description for the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "options": {
        "description": "The Key Policy options.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "options"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/mediaGraphs": {
    "api_version": "2020-02-01-preview",
    "full_properties": {
      "description": {
        "description": "Media Graph description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sinks": {
        "description": "Media Graph sinks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sources": {
        "description": "Media Graph sources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "sinks",
      "sources"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/streamingLocators": {
    "api_version": "2022-08-01",
    "full_properties": {
      "alternativeMediaId": {
        "description": "Alternative Media ID of this Streaming Locator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "assetName": {
        "description": "Asset Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentKeys": {
        "description": "The ContentKeys used by this Streaming Locator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultContentKeyPolicyName": {
        "description": "Name of the default ContentKeyPolicy used by this Streaming Locator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "The end time of the Streaming Locator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filters": {
        "description": "A list of asset or account filters which apply to this streaming locator",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The start time of the Streaming Locator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "streamingLocatorId": {
        "description": "The StreamingLocatorId of the Streaming Locator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "streamingPolicyName": {
        "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assetName",
      "contentKeys",
      "defaultContentKeyPolicyName",
      "endTime",
      "startTime",
      "streamingLocatorId",
      "streamingPolicyName",
      "alternativeMediaId",
      "filters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/streamingPolicies": {
    "api_version": "2022-08-01",
    "full_properties": {
      "commonEncryptionCbcs": {
        "description": "Class for CommonEncryptionCbcs encryption scheme",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "commonEncryptionCenc": {
        "description": "Class for envelope encryption scheme",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultContentKeyPolicyName": {
        "description": "Default ContentKey used by current Streaming Policy",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "envelopeEncryption": {
        "description": "Class for EnvelopeEncryption encryption scheme",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "noEncryption": {
        "description": "Class for NoEncryption scheme",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "commonEncryptionCbcs",
      "commonEncryptionCenc",
      "defaultContentKeyPolicyName",
      "envelopeEncryption",
      "noEncryption"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/transforms": {
    "api_version": "2021-11-01",
    "full_properties": {
      "description": {
        "description": "An optional verbose description of the Transform.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "An array of one or more TransformOutputs that the Transform should generate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "outputs"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices/transforms/jobs": {
    "api_version": "2021-11-01",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided key, value pairs that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User-defined description of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "Base class for inputs to a Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transferType": {
        "description": "Type of the data transfer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType",
      "transferType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaservices": {
    "api_version": "2021-11-01",
    "full_properties": {
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyDelivery": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for resources under the Media Services account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAuthentication": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccounts",
      "encryption",
      "storageAuthentication",
      "keyDelivery",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaservices/liveEvents": {
    "api_version": "2022-08-01",
    "full_properties": {
      "crossSiteAccessPolicies": {
        "description": "The client access policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description for the live event.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encoding": {
        "description": "Specifies the live event type and optional encoding settings for encoding live events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostnamePrefix": {
        "description": "When useStaticHostname is set to true, the hostnamePrefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "input": {
        "description": "The live event input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preview": {
        "description": "Live event preview settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "streamOptions": {
        "description": "The options to use for the LiveEvent. This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transcriptions": {
        "description": "Live transcription settings for the live event. See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useStaticHostname": {
        "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. This value can only be updated if the live event is in Standby state",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vanityUrl": {
        "description": "Specifies whether to use a vanity url with the Live Event.  This value is specified at creation time and cannot be updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "crossSiteAccessPolicies",
      "description",
      "encoding",
      "input",
      "preview",
      "streamOptions",
      "vanityUrl",
      "transcriptions",
      "hostnamePrefix",
      "useStaticHostname"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaservices/liveEvents/liveOutputs": {
    "api_version": "2022-08-01",
    "full_properties": {
      "archiveWindowLength": {
        "description": "ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "assetName": {
        "description": "The asset that the live output will write to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the live output.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hls": {
        "description": "HTTP Live Streaming (HLS) packing setting for the live output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manifestName": {
        "description": "The manifest file name. If not provided, the service will generate one automatically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputSnapTime": {
        "description": "The initial timestamp that the live output will start at, any content before this value will not be archived.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rewindWindowLength": {
        "description": "ISO 8601 time between 1 minute to the duration of archiveWindowLength to control seek-able window length during Live. The service won't use this property once LiveOutput stops. The archived VOD will have full content with original ArchiveWindowLength. For example, use PT1H30M to indicate 1 hour and 30 minutes of rewind window length. Service will use implicit default value 30m only if Live Event enables LL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "archiveWindowLength",
      "assetName",
      "description",
      "hls",
      "manifestName",
      "outputSnapTime",
      "rewindWindowLength"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaservices/privateEndpointConnections": {
    "api_version": "2021-11-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Media/mediaservices/streamingEndpoints": {
    "api_version": "2022-08-01",
    "full_properties": {
      "accessControl": {
        "description": "Streaming endpoint access control definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySetName": {
        "description": "This feature is deprecated, do not set a value for this property.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cdnEnabled": {
        "description": "The CDN enabled flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cdnProfile": {
        "description": "The CDN profile name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cdnProvider": {
        "description": "The CDN provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "crossSiteAccessPolicies": {
        "description": "The client access policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHostNames": {
        "description": "The custom host names of the streaming endpoint",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The streaming endpoint description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxCacheAge": {
        "description": "Max cache age",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleUnits": {
        "description": "The number of scale units. Use the Scale operation to adjust this value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControl",
      "availabilitySetName",
      "cdnEnabled",
      "cdnProfile",
      "cdnProvider",
      "crossSiteAccessPolicies",
      "customHostNames",
      "description",
      "maxCacheAge",
      "scaleUnits"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects": {
    "api_version": "2019-10-01",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureAuthenticationInfo": {
        "description": "Azure Active Directory Application",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerStorageAccountArmId": {
        "description": "The ARM id of the storage account used for interactions when public access is disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "devCenterId": {
        "description": "Resource Id of an associated DevCenter",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "databasesInfo",
      "sourceConnectionInfo",
      "sourcePlatform",
      "targetConnectionInfo",
      "targetPlatform",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "customerStorageAccountArmId",
      "projectStatus",
      "publicNetworkAccess",
      "azureAuthenticationInfo",
      "devCenterId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/groups": {
    "api_version": "2019-10-01",
    "full_properties": {
      "groupType": {
        "description": "The type of group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "machines": {
        "description": "List of machine names that are part of this group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "machines",
      "groupType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/groups/assessments": {
    "api_version": "2019-10-01",
    "full_properties": {
      "azureDiskType": {
        "description": "Storage type selected for this disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureHybridUseBenefit": {
        "description": "AHUB discount on windows virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureLocation": {
        "description": "Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureOfferCode": {
        "description": "Offer code according to which cost estimation is done.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azurePricingTier": {
        "description": "Pricing tier for Size evaluation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureStorageRedundancy": {
        "description": "Storage Redundancy type offered by Azure.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureVmFamilies": {
        "description": "List of azure VM families.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "currency": {
        "description": "Currency to report prices in.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discountPercentage": {
        "description": "Custom discount percentage to be applied on final costs. Can be in the range [0, 100].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "percentile": {
        "description": "Percentile of performance data used to recommend Azure size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reservedInstance": {
        "description": "Azure reserved instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scalingFactor": {
        "description": "Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizingCriterion": {
        "description": "Assessment sizing criterion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stage": {
        "description": "User configurable setting that describes the status of the assessment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeRange": {
        "description": "Time range of performance data used to recommend a size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmUptime": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureHybridUseBenefit",
      "azureLocation",
      "azureOfferCode",
      "azurePricingTier",
      "azureStorageRedundancy",
      "currency",
      "discountPercentage",
      "percentile",
      "scalingFactor",
      "sizingCriterion",
      "stage",
      "timeRange",
      "azureDiskType",
      "azureVmFamilies",
      "reservedInstance",
      "vmUptime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/hypervcollectors": {
    "api_version": "2019-10-01",
    "full_properties": {
      "agentProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySiteId": {
        "description": "The ARM id of the discovery service site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentProperties",
      "discoverySiteId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/importcollectors": {
    "api_version": "2019-10-01",
    "full_properties": {
      "discoverySiteId": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "discoverySiteId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/servercollectors": {
    "api_version": "2019-10-01",
    "full_properties": {
      "agentProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySiteId": {
        "description": "The ARM id of the discovery service site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentProperties",
      "discoverySiteId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/vmwarecollectors": {
    "api_version": "2019-10-01",
    "full_properties": {
      "agentProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySiteId": {
        "description": "The ARM id of the discovery service site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentProperties",
      "discoverySiteId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentprojects/privateEndpointConnections": {
    "api_version": "2019-10-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/migrateProjects": {
    "api_version": "2020-05-01",
    "full_properties": {
      "provisioningState": {
        "description": "Provisioning state of the migrate project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Gets or sets the state of public network access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registeredTools": {
        "description": "Gets or sets the list of tools registered with the migrate project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceEndpoint": {
        "description": "Service endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "utilityStorageAccountId": {
        "description": "Utility storage account id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "registeredTools",
      "publicNetworkAccess",
      "serviceEndpoint",
      "utilityStorageAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/migrateProjects/privateEndpointConnections": {
    "api_version": "2020-05-01",
    "full_properties": {
      "privateLinkServiceConnectionState": {
        "description": "Private endpoint connection state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/migrateProjects/solutions": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "cleanupState": {
        "description": "Gets or sets the cleanup state of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containedResources": {
        "description": "The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "details": {
        "description": "Class representing the details of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "goal": {
        "description": "Gets or sets the goal of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purpose": {
        "description": "Gets or sets the purpose of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "referencedResources": {
        "description": "The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Gets or sets the current status of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "summary": {
        "description": "The solution summary class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tool": {
        "description": "Gets or sets the tool being used in the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceResourceId": {
        "description": "The azure resourceId for the workspace where the solution will be deployed/enabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "workspaceResourceId",
      "containedResources",
      "referencedResources",
      "cleanupState",
      "details",
      "goal",
      "purpose",
      "status",
      "summary",
      "tool"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/moveCollections": {
    "api_version": "2021-08-01",
    "full_properties": {
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceRegion": {
        "description": "Gets or sets the source region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetRegion": {
        "description": "Gets or sets the target region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "sourceRegion",
      "targetRegion"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/moveCollections/moveResources": {
    "api_version": "2021-08-01",
    "full_properties": {
      "dependsOnOverrides": {
        "description": "Gets or sets the move resource dependencies overrides.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "existingTargetId": {
        "description": "Gets or sets the existing target ARM Id of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceSettings": {
        "description": "Gets or sets the resource settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceId": {
        "description": "Gets or sets the Source ARM Id of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dependsOnOverrides",
      "existingTargetId",
      "provisioningState",
      "resourceSettings",
      "sourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/projects": {
    "api_version": "2018-02-02",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureAuthenticationInfo": {
        "description": "Azure Active Directory Application",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerStorageAccountArmId": {
        "description": "The ARM id of the storage account used for interactions when public access is disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "devCenterId": {
        "description": "Resource Id of an associated DevCenter",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "databasesInfo",
      "sourceConnectionInfo",
      "sourcePlatform",
      "targetConnectionInfo",
      "targetPlatform",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "customerStorageAccountArmId",
      "projectStatus",
      "publicNetworkAccess",
      "azureAuthenticationInfo",
      "devCenterId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/projects/groups": {
    "api_version": "2018-02-02",
    "full_properties": {
      "groupType": {
        "description": "The type of group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "machines": {
        "description": "List of machine names that are part of this group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "machines",
      "groupType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/projects/groups/assessments": {
    "api_version": "2018-02-02",
    "full_properties": {
      "azureDiskType": {
        "description": "Storage type selected for this disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureHybridUseBenefit": {
        "description": "AHUB discount on windows virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureLocation": {
        "description": "Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureOfferCode": {
        "description": "Offer code according to which cost estimation is done.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azurePricingTier": {
        "description": "Pricing tier for Size evaluation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureStorageRedundancy": {
        "description": "Storage Redundancy type offered by Azure.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureVmFamilies": {
        "description": "List of azure VM families.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "currency": {
        "description": "Currency to report prices in.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discountPercentage": {
        "description": "Custom discount percentage to be applied on final costs. Can be in the range [0, 100].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "percentile": {
        "description": "Percentile of performance data used to recommend Azure size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reservedInstance": {
        "description": "Azure reserved instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scalingFactor": {
        "description": "Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizingCriterion": {
        "description": "Assessment sizing criterion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stage": {
        "description": "User configurable setting that describes the status of the assessment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeRange": {
        "description": "Time range of performance data used to recommend a size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmUptime": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureHybridUseBenefit",
      "azureLocation",
      "azureOfferCode",
      "azurePricingTier",
      "azureStorageRedundancy",
      "currency",
      "discountPercentage",
      "percentile",
      "scalingFactor",
      "sizingCriterion",
      "stage",
      "timeRange",
      "azureDiskType",
      "azureVmFamilies",
      "reservedInstance",
      "vmUptime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MixedReality/objectAnchorsAccounts": {
    "api_version": "2021-03-01-preview",
    "full_properties": {
      "storageAccountName": {
        "description": "The name of the storage account associated with this accountId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccountName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MixedReality/remoteRenderingAccounts": {
    "api_version": "2021-03-01-preview",
    "full_properties": {
      "storageAccountName": {
        "description": "The name of the storage account associated with this accountId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccountName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MixedReality/spatialAnchorsAccounts": {
    "api_version": "2021-03-01-preview",
    "full_properties": {
      "storageAccountName": {
        "description": "The name of the storage account associated with this accountId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccountName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/mobileNetworks": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "publicLandMobileNetworkIdentifier": {
        "description": "Public land mobile network (PLMN) ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicLandMobileNetworkIdentifier"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/mobileNetworks/dataNetworks": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "An optional description for this data network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/mobileNetworks/services": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "pccRules": {
        "description": "The set of data flow policy rules that make up this service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePrecedence": {
        "description": "A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceQosPolicy": {
        "description": "QoS policy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "pccRules",
      "provisioningState",
      "servicePrecedence",
      "serviceQosPolicy"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/mobileNetworks/simPolicies": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "defaultSlice": {
        "description": "Reference to a slice resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the SIM policy resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registrationTimer": {
        "description": "Interval for the UE periodic registration update procedure, in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rfspIndex": {
        "description": "RAT/Frequency Selection Priority Index",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sliceConfigurations": {
        "description": "The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ueAmbr": {
        "description": "Aggregate maximum bit rate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultSlice",
      "provisioningState",
      "registrationTimer",
      "rfspIndex",
      "sliceConfigurations",
      "ueAmbr"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/mobileNetworks/sites": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "networkFunctions": {
        "description": "An array of IDs of the network functions deployed on the site, maintained by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "networkFunctions"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/mobileNetworks/slices": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "description": {
        "description": "An optional description for this network slice.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "snssai": {
        "description": "Single-network slice selection assistance information (S-NSSAI).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "snssai"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/packetCoreControlPlanes": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "controlPlaneAccessInterface": {
        "description": "Interface properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "coreNetworkTechnology": {
        "description": "The core network technology generation (5G core or EPC / 4G core).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customLocation": {
        "description": "Reference to an Azure ARC custom location resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interopSettings": {
        "description": "Settings to allow interoperability with third party components e.g. RANs and UEs.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "localDiagnosticsAccess": {
        "description": "The kubernetes ingress configuration to control access to packet core diagnostics over local APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mobileNetwork": {
        "description": "Reference to a mobile network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platform": {
        "description": "The platform where the packet core is deployed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU defining the throughput and SIM allowances for this packet core control plane deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the packet core software that is deployed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "controlPlaneAccessInterface",
      "coreNetworkTechnology",
      "customLocation",
      "mobileNetwork",
      "version",
      "interopSettings",
      "localDiagnosticsAccess",
      "platform",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "userPlaneAccessInterface": {
        "description": "Interface properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "userPlaneAccessInterface"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes/attachedDataNetworks": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "dnsAddresses": {
        "description": "The DNS servers to signal to UEs to use for this attached data network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "naptConfiguration": {
        "description": "The network address and port translation settings to use for the attached data network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userEquipmentAddressPoolPrefix": {
        "description": "The user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs.\nThe packet core instance assigns an IP address to a UE when the UE sets up a PDU session.\n You must define at least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix. If you define both, they must be of the same size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userEquipmentStaticAddressPoolPrefix": {
        "description": "The user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs.\nThe packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource.\nAt least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined, they must be of the same size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userPlaneDataInterface": {
        "description": "Interface properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "naptConfiguration",
      "userEquipmentAddressPoolPrefix",
      "userEquipmentStaticAddressPoolPrefix",
      "userPlaneDataInterface",
      "dnsAddresses"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/simGroups": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "encryptionKey": {
        "description": "An Azure key vault key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mobileNetwork": {
        "description": "Reference to a mobile network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryptionKey",
      "mobileNetwork"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/simGroups/sims": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "authenticationKey": {
        "description": "The Ki value for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deviceType": {
        "description": "An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "integratedCircuitCardIdentifier": {
        "description": "The integrated circuit card ID (ICCID) for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internationalMobileSubscriberIdentity": {
        "description": "The international mobile subscriber identity (IMSI) for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mobileNetwork": {
        "description": "Reference to a Mobile Network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operatorKeyCode": {
        "description": "The Opc value for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "simPolicy": {
        "description": "Reference to a SIM policy resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "staticIpConfiguration": {
        "description": "A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authenticationKey",
      "deviceType",
      "integratedCircuitCardIdentifier",
      "internationalMobileSubscriberIdentity",
      "mobileNetwork",
      "operatorKeyCode",
      "simPolicy",
      "staticIpConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MobileNetwork/sims": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "authenticationKey": {
        "description": "The Ki value for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deviceType": {
        "description": "An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "integratedCircuitCardIdentifier": {
        "description": "The integrated circuit card ID (ICCID) for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internationalMobileSubscriberIdentity": {
        "description": "The international mobile subscriber identity (IMSI) for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mobileNetwork": {
        "description": "Reference to a Mobile Network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operatorKeyCode": {
        "description": "The Opc value for the SIM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "simPolicy": {
        "description": "Reference to a SIM policy resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "staticIpConfiguration": {
        "description": "A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authenticationKey",
      "deviceType",
      "integratedCircuitCardIdentifier",
      "internationalMobileSubscriberIdentity",
      "mobileNetwork",
      "operatorKeyCode",
      "simPolicy",
      "staticIpConfiguration"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Monitor/accounts": {
    "api_version": "2021-06-03-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts": {
    "api_version": "2022-05-01",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": "The api properties for special APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudConnectors": {
        "description": "External Cloud Service connectors",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customSubDomainName": {
        "description": "Optional subdomain name used for token-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamicThrottlingEnabled": {
        "description": "The flag to enable dynamic throttling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Gets or sets the managed resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "migrationToken": {
        "description": "Resource migration token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restore": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Device Update Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userOwnedStorage": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "cloudConnectors",
      "managedResourceGroupName",
      "allowedFqdnList",
      "apiProperties",
      "customSubDomainName",
      "disableLocalAuth",
      "migrationToken",
      "networkAcls",
      "restore",
      "restrictOutboundNetworkAccess",
      "userOwnedStorage",
      "dynamicThrottlingEnabled",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/backupPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "dailyBackupsToKeep": {
        "description": "Daily backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "The property to decide policy is enabled or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monthlyBackupsToKeep": {
        "description": "Monthly backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeBackups": {
        "description": "A list of volumes assigned to this policy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeIds": {
        "description": "The path IDs of the volumes which are part of the backup policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumesAssigned": {
        "description": "Volumes using current backup policy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklyBackupsToKeep": {
        "description": "Weekly backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "yearlyBackupsToKeep": {
        "description": "Yearly backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "volumeIds",
      "dailyBackupsToKeep",
      "enabled",
      "monthlyBackupsToKeep",
      "volumeBackups",
      "volumesAssigned",
      "weeklyBackupsToKeep",
      "yearlyBackupsToKeep"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools": {
    "api_version": "2022-05-01",
    "full_properties": {
      "applicationLicenses": {
        "description": "The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationPackages": {
        "description": "Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.\n\nWarning: This property is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "coolAccess": {
        "description": "If enabled (true) the pool can contain cool Access enabled volumes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "devBoxDefinitionName": {
        "description": "Name of a Dev Box definition in parent Project of this Pool",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionType": {
        "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interNodeCommunication": {
        "description": "This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localAdministrator": {
        "description": "Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxTasksPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountConfiguration": {
        "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConfiguration": {
        "description": "The network configuration for a pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConnectionName": {
        "description": "Name of a Network Connection in parent Project of this Pool",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "qosType": {
        "description": "The qos type of the pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTask": {
        "description": "In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetNodeCommunicationMode": {
        "description": "If omitted, the default value is Default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSchedulingPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSlotsPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccounts": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serviceLevel",
      "size",
      "applicationLicenses",
      "applicationPackages",
      "certificates",
      "deploymentConfiguration",
      "displayName",
      "interNodeCommunication",
      "maxTasksPerNode",
      "metadata",
      "networkConfiguration",
      "scaleSettings",
      "startTask",
      "taskSchedulingPolicy",
      "userAccounts",
      "vmSize",
      "mountConfiguration",
      "qosType",
      "taskSlotsPerNode",
      "coolAccess",
      "encryptionType",
      "devBoxDefinitionName",
      "licenseType",
      "localAdministrator",
      "networkConnectionName",
      "targetNodeCommunicationMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools/volumes": {
    "api_version": "2022-05-01",
    "full_properties": {
      "accessControlRecordIds": {
        "description": "The IDs of the access control records, associated with the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "avsDataStore": {
        "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupId": {
        "description": "UUID v4 or resource identifier used to identify the Backup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "capacityPoolResourceId": {
        "description": "Pool Resource Id used in case of creating a volume through volume group",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "coolAccess": {
        "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "coolnessPeriod": {
        "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data source used when creating the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationToken": {
        "description": "A unique file path for the volume. Used when creating mount targets",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataProtection": {
        "description": "DataProtection type volumes include an object containing details of the replication",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultGroupQuotaInKiBs": {
        "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultUserQuotaInKiBs": {
        "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deleteBaseSnapshot": {
        "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableSubvolumes": {
        "description": "Flag indicating whether subvolume operations are enabled on the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionKeySource": {
        "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "exportPolicy": {
        "description": "Set of export policy rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDefaultQuotaEnabled": {
        "description": "Specifies if default quota is enabled for the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRestoring": {
        "description": "Restoring",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kerberosEnabled": {
        "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultPrivateEndpointResourceId": {
        "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ldapEnabled": {
        "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status of the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountTargets": {
        "description": "List of mount targets",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkFeatures": {
        "description": "Basic network, or Standard features available to the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementRules": {
        "description": "Application specific placement rules for the particular volume",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolTypes": {
        "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": "Proximity placement group associated with the volume",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityStyle": {
        "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeGiB": {
        "description": "Volume size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeInBytes": {
        "description": "The size of the volume in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbAccessBasedEnumeration": {
        "description": "Enables access based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbContinuouslyAvailable": {
        "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbEncryption": {
        "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbNonBrowsable": {
        "description": "Enables non browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotDirectoryVisible": {
        "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotId": {
        "description": "UUID v4 or resource identifier used to identify the Snapshot.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageTarget": {
        "description": "Iscsi target information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "throughputMibps": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "unixPermissions": {
        "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageThreshold": {
        "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeSpecName": {
        "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "volumeStatus": {
        "description": "The volume status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeType": {
        "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControlRecordIds",
      "monitoringStatus",
      "sizeInBytes",
      "volumeStatus",
      "volumeType",
      "creationToken",
      "exportPolicy",
      "serviceLevel",
      "subnetId",
      "usageThreshold",
      "mountTargets",
      "protocolTypes",
      "snapshotId",
      "dataProtection",
      "isRestoring",
      "snapshotDirectoryVisible",
      "backupId",
      "kerberosEnabled",
      "securityStyle",
      "throughputMibps",
      "smbContinuouslyAvailable",
      "smbEncryption",
      "encryptionKeySource",
      "ldapEnabled",
      "networkFeatures",
      "coolAccess",
      "coolnessPeriod",
      "unixPermissions",
      "avsDataStore",
      "defaultGroupQuotaInKiBs",
      "defaultUserQuotaInKiBs",
      "isDefaultQuotaEnabled",
      "capacityPoolResourceId",
      "placementRules",
      "proximityPlacementGroup",
      "volumeSpecName",
      "enableSubvolumes",
      "creationData",
      "sizeGiB",
      "storageTarget",
      "keyVaultPrivateEndpointResourceId",
      "deleteBaseSnapshot",
      "smbAccessBasedEnumeration",
      "smbNonBrowsable"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/backups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "label": {
        "description": "Label for backup",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useExistingSnapshot": {
        "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "label",
      "useExistingSnapshot"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots": {
    "api_version": "2022-05-01",
    "full_properties": {
      "completionPercent": {
        "description": "Percentage complete for the background copy when a resource is created via the CopyStart operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "copyCompletionError": {
        "description": "Indicates the error details if the background copy of a resource created via the CopyStart operation fails.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a target resource from a source resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataAccessAuthMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskAccessId": {
        "description": "ARM id of the DiskAccess resource for using private endpoints on disks.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskState": {
        "description": "The state of the snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption at rest settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fileSystemId": {
        "description": "UUID v4 used to identify the FileSystem",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incremental": {
        "description": "Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAccessPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": "Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Contains the security related information for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportedCapabilities": {
        "description": "List of supported capabilities persisted on the disk resource for VM use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsHibernation": {
        "description": "Indicates the OS on a snapshot supports hibernation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fileSystemId",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "osType",
      "encryptionSettingsCollection",
      "hyperVGeneration",
      "incremental",
      "encryption",
      "diskAccessId",
      "networkAccessPolicy",
      "diskState",
      "purchasePlan",
      "supportsHibernation",
      "completionPercent",
      "publicNetworkAccess",
      "supportedCapabilities",
      "securityProfile",
      "snapshotType",
      "dataAccessAuthMode",
      "copyCompletionError"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/subvolumes": {
    "api_version": "2022-05-01",
    "full_properties": {
      "parentPath": {
        "description": "parent path to the subvolume",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "path": {
        "description": "Path to the subvolume",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "size": {
        "description": "Truncate subvolume to the provided size in bytes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parentPath",
      "path",
      "size"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/volumeQuotaRules": {
    "api_version": "2022-05-01",
    "full_properties": {
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "quotaSizeInKiBs": {
        "description": "Size of quota",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "quotaTarget": {
        "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "quotaType": {
        "description": "Type of quota.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "quotaSizeInKiBs",
      "quotaTarget",
      "quotaType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/snapshotPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "dailySchedule": {
        "description": "Daily Schedule properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "The property to decide policy is enabled or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlySchedule": {
        "description": "Hourly Schedule properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monthlySchedule": {
        "description": "Monthly Schedule properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklySchedule": {
        "description": "Weekly Schedule properties, make a snapshot every week at a specific day or days",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailySchedule",
      "enabled",
      "hourlySchedule",
      "monthlySchedule",
      "weeklySchedule"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/volumeGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "encryption": {
        "description": "Type of encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groupMetaData": {
        "description": "Volume group properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolType": {
        "description": "Type of storage target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "State of the operation on the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumes": {
        "description": "List of volumes from group",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupMetaData",
      "volumes",
      "encryption",
      "networkAcls",
      "protocolType",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "customRules": {
        "description": "The custom rules inside the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedRules": {
        "description": "Allow to exclude some variable satisfy the condition for the WAF check.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policySettings": {
        "description": "Defines contents of a web application firewall global configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customRules",
      "managedRules",
      "policySettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/ExpressRoutePorts": {
    "api_version": "2022-05-01",
    "full_properties": {
      "bandwidthInGbps": {
        "description": "Bandwidth of procured ports in Gbps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The billing type of the ExpressRoutePort resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encapsulation": {
        "description": "Encapsulation method on physical ports.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "links": {
        "description": "The set of physical links of the ExpressRoutePort resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringLocation": {
        "description": "The name of the peering location that the ExpressRoutePort is mapped to physically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the express route port resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bandwidthInGbps",
      "encapsulation",
      "links",
      "peeringLocation",
      "resourceGuid",
      "billingType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "customRules": {
        "description": "Defines contents of custom rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedRules": {
        "description": "Defines the list of managed rule sets for the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policySettings": {
        "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customRules",
      "managedRules",
      "policySettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/IpAllocations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "allocationTags": {
        "description": "IpAllocation tags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipamAllocationId": {
        "description": "The IPAM allocation ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefix": {
        "description": "The address prefix for the IpAllocation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefixLength": {
        "description": "The address prefix length for the IpAllocation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "prefixType": {
        "description": "The address prefix Type for the IpAllocation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type for the IpAllocation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allocationTags",
      "ipamAllocationId",
      "prefix",
      "prefixLength",
      "prefixType",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/NetworkExperimentProfiles": {
    "api_version": "2019-11-01",
    "full_properties": {
      "dnsConfig": {
        "description": "The DNS settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "The state of the Experiment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "The list of endpoints in the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Key-Value pair representing additional properties for profiles.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxReturn": {
        "description": "Maximum number of endpoints to be returned for MultiValue routing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorConfig": {
        "description": "The endpoint monitoring settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originResponseTimeoutSeconds": {
        "description": "Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "profileStatus": {
        "description": "The status of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRoutingMethod": {
        "description": "The traffic routing method of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficViewEnrollmentStatus": {
        "description": "Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profileStatus",
      "trafficRoutingMethod",
      "dnsConfig",
      "monitorConfig",
      "endpoints",
      "trafficViewEnrollmentStatus",
      "maxReturn",
      "enabledState",
      "resourceState",
      "originResponseTimeoutSeconds",
      "extendedProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/NetworkExperimentProfiles/Experiments": {
    "api_version": "2019-11-01",
    "full_properties": {
      "description": {
        "description": "The description of the details or intents of the Experiment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "The state of the Experiment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointA": {
        "description": "Defines the endpoint properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointB": {
        "description": "Defines the endpoint properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "selectors": {
        "description": "List of selectors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startOnCreation": {
        "description": "A boolean value that indicates if experiment should be started on creation or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "steps": {
        "description": "List of steps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "enabledState",
      "endpointA",
      "endpointB",
      "resourceState",
      "selectors",
      "startOnCreation",
      "steps"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/applicationGateways": {
    "api_version": "2022-05-01",
    "full_properties": {
      "authenticationCertificates": {
        "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoscaleConfiguration": {
        "description": "Application Gateway autoscale configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendAddressPools": {
        "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendHttpSettingsCollection": {
        "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendSettingsCollection": {
        "description": "Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customErrorConfigurations": {
        "description": "Custom error configurations of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFips": {
        "description": "Whether FIPS is enabled on the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableHttp2": {
        "description": "Whether HTTP2 is enabled on the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallPolicy": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceFirewallPolicyAssociation": {
        "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendIPConfigurations": {
        "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendPorts": {
        "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayIPConfigurations": {
        "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "globalConfiguration": {
        "description": "Application Gateway global configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpListeners": {
        "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "listeners": {
        "description": "Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadDistributionPolicies": {
        "description": "Load distribution policies of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConfigurations": {
        "description": "PrivateLink configurations on application gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "probes": {
        "description": "Probes of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the application gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redirectConfigurations": {
        "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestRoutingRules": {
        "description": "Request routing rules of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the application gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rewriteRuleSets": {
        "description": "Rewrite rules for the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingRules": {
        "description": "Routing rules of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "SKU of an application gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslCertificates": {
        "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslPolicy": {
        "description": "Application Gateway Ssl policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslProfiles": {
        "description": "SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedClientCertificates": {
        "description": "Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedRootCertificates": {
        "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "urlPathMaps": {
        "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webApplicationFirewallConfiguration": {
        "description": "Application gateway web application firewall configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendAddressPools",
      "backendHttpSettingsCollection",
      "frontendIPConfigurations",
      "frontendPorts",
      "gatewayIPConfigurations",
      "httpListeners",
      "provisioningState",
      "requestRoutingRules",
      "resourceGuid",
      "sku",
      "sslCertificates",
      "probes",
      "urlPathMaps",
      "authenticationCertificates",
      "sslPolicy",
      "webApplicationFirewallConfiguration",
      "redirectConfigurations",
      "enableHttp2",
      "autoscaleConfiguration",
      "enableFips",
      "customErrorConfigurations",
      "trustedRootCertificates",
      "rewriteRuleSets",
      "firewallPolicy",
      "forceFirewallPolicyAssociation",
      "privateLinkConfigurations",
      "sslProfiles",
      "trustedClientCertificates",
      "globalConfiguration",
      "loadDistributionPolicies",
      "backendSettingsCollection",
      "listeners",
      "routingRules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/applicationGateways/privateEndpointConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/applicationSecurityGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/azureFirewalls": {
    "api_version": "2022-05-01",
    "full_properties": {
      "additionalProperties": {
        "description": "The additional properties of azure firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationRuleCollections": {
        "description": "Collection of application rule collections used by Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallPolicy": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hubIPAddresses": {
        "description": "IP addresses associated with azure firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "IP configuration of the Azure Firewall resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementIpConfiguration": {
        "description": "IP configuration of an Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natRuleCollections": {
        "description": "Collection of NAT rule collections used by Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRuleCollections": {
        "description": "Collection of network rule collections used by Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the Azure firewall resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "SKU of an Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threatIntelMode": {
        "description": "The operation mode for Threat Intelligence.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationRuleCollections",
      "ipConfigurations",
      "networkRuleCollections",
      "provisioningState",
      "natRuleCollections",
      "threatIntelMode",
      "firewallPolicy",
      "virtualHub",
      "sku",
      "additionalProperties",
      "managementIpConfiguration",
      "hubIPAddresses"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/bastionHosts": {
    "api_version": "2022-05-01",
    "full_properties": {
      "disableCopyPaste": {
        "description": "Enable/Disable Copy/Paste feature of the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsName": {
        "description": "FQDN for the endpoint on which bastion host is accessible.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableFileCopy": {
        "description": "Enable/Disable File Copy feature of the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableIpConnect": {
        "description": "Enable/Disable IP Connect feature of the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableShareableLink": {
        "description": "Enable/Disable Shareable Link of the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableTunneling": {
        "description": "Enable/Disable Tunneling feature of the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "IP configuration of the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the bastion host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleUnits": {
        "description": "The scale units for the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dnsName",
      "ipConfigurations",
      "provisioningState",
      "disableCopyPaste",
      "enableFileCopy",
      "enableIpConnect",
      "enableShareableLink",
      "enableTunneling",
      "scaleUnits"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/connections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "authorizationKey": {
        "description": "The authorizationKey.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectionMode": {
        "description": "The connection mode for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionProtocol": {
        "description": "Connection protocol used for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionStatus": {
        "description": "Virtual network Gateway connection status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionType": {
        "description": "Gateway connection type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dpdTimeoutSeconds": {
        "description": "The dead peer detection timeout of this connection in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "egressBytesTransferred": {
        "description": "The Egress Bytes Transferred in this connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "egressNatRules": {
        "description": "List of egress NatRules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgp": {
        "description": "EnableBgp flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePrivateLinkFastPath": {
        "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteGatewayBypass": {
        "description": "Bypass ExpressRoute Gateway for data forwarding.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayCustomBgpIpAddresses": {
        "description": "GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingressBytesTransferred": {
        "description": "The Ingress Bytes Transferred in this connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingressNatRules": {
        "description": "List of ingress NatRules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipsecPolicies": {
        "description": "The IPSec Policies to be considered by this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localNetworkGateway2": {
        "description": "A common class for general resource information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peer": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the virtual network gateway connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "routingWeight": {
        "description": "The routing weight.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "The IPSec shared key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trafficSelectorPolicies": {
        "description": "The Traffic Selector Policies to be considered by this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useLocalAzureIpAddress": {
        "description": "Use private local Azure IP for the connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "usePolicyBasedTrafficSelectors": {
        "description": "Enable policy-based traffic selectors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkGateway1": {
        "description": "A common class for general resource information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkGateway2": {
        "description": "A common class for general resource information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionStatus",
      "connectionType",
      "egressBytesTransferred",
      "ingressBytesTransferred",
      "localNetworkGateway2",
      "peer",
      "provisioningState",
      "resourceGuid",
      "routingWeight",
      "sharedKey",
      "virtualNetworkGateway1",
      "virtualNetworkGateway2",
      "authorizationKey",
      "enableBgp",
      "ipsecPolicies",
      "usePolicyBasedTrafficSelectors",
      "expressRouteGatewayBypass",
      "connectionProtocol",
      "trafficSelectorPolicies",
      "useLocalAzureIpAddress",
      "dpdTimeoutSeconds",
      "connectionMode",
      "egressNatRules",
      "ingressNatRules",
      "gatewayCustomBgpIpAddresses",
      "enablePrivateLinkFastPath"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/connections/sharedkey": {
    "api_version": "2022-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type",
      "value"
    ]
  },
  "Microsoft.Network/customIpPrefixes": {
    "api_version": "2022-05-01",
    "full_properties": {
      "asn": {
        "description": "The ASN for CIDR advertising. Should be an integer as string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizationMessage": {
        "description": "Authorization message for WAN validation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cidr": {
        "description": "The prefix range in CIDR notation. Should include the start address and the prefix length.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commissionedState": {
        "description": "The commissioned state of the Custom IP Prefix.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customIpPrefixParent": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteAdvertise": {
        "description": "Whether to do express route advertise.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geo": {
        "description": "The Geo for CIDR advertising. Should be an Geo code.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "noInternetAdvertise": {
        "description": "Whether to Advertise the range to Internet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "prefixType": {
        "description": "Type of custom IP prefix. Should be Singular, Parent, or Child.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "signedMessage": {
        "description": "Signed message for WAN validation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cidr",
      "commissionedState",
      "authorizationMessage",
      "customIpPrefixParent",
      "signedMessage",
      "noInternetAdvertise",
      "asn",
      "expressRouteAdvertise",
      "geo",
      "prefixType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/ddosCustomPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "protocolCustomSettings": {
        "description": "The protocol-specific DDoS policy customization parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "protocolCustomSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/ddosProtectionPlans": {
    "api_version": "2022-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/dnsForwardingRulesets": {
    "api_version": "2022-07-01",
    "full_properties": {
      "dnsResolverOutboundEndpoints": {
        "description": "The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dnsResolverOutboundEndpoints"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/dnsForwardingRulesets/forwardingRules": {
    "api_version": "2022-07-01",
    "full_properties": {
      "domainName": {
        "description": "The domain name for the forwarding rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "forwardingRuleState": {
        "description": "The state of forwarding rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "Metadata attached to the forwarding rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetDnsServers": {
        "description": "DNS servers to forward the DNS query to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "domainName",
      "forwardingRuleState",
      "metadata",
      "targetDnsServers"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/dnsForwardingRulesets/virtualNetworkLinks": {
    "api_version": "2022-07-01",
    "full_properties": {
      "metadata": {
        "description": "Metadata attached to the virtual network link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registrationEnabled": {
        "description": "Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetwork": {
        "description": "Reference to another ARM resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualNetwork",
      "registrationEnabled",
      "metadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/dnsResolvers": {
    "api_version": "2022-07-01",
    "full_properties": {
      "virtualNetwork": {
        "description": "Reference to another ARM resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualNetwork"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/dnsResolvers/inboundEndpoints": {
    "api_version": "2022-07-01",
    "full_properties": {
      "ipConfigurations": {
        "description": "IP configurations for the inbound endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipConfigurations"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/dnsResolvers/outboundEndpoints": {
    "api_version": "2022-07-01",
    "full_properties": {
      "subnet": {
        "description": "Reference to another ARM resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnet"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/dnsZones": {
    "api_version": "2018-05-01",
    "full_properties": {
      "maxNumberOfRecordSets": {
        "description": "Gets or sets the maximum number of record sets that can be created in this zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberOfRecordSets": {
        "description": "Gets or sets the current number of record sets in this zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registrationVirtualNetworks": {
        "description": "A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resolutionVirtualNetworks": {
        "description": "A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneType": {
        "description": "The type of this DNS zone (Public or Private).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maxNumberOfRecordSets",
      "numberOfRecordSets",
      "zoneType",
      "registrationVirtualNetworks",
      "resolutionVirtualNetworks"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/A": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/AAAA": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/CAA": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/CNAME": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/MX": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/NS": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/PTR": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/SOA": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/SRV": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/TXT": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dscpConfigurations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "destinationIpRanges": {
        "description": "Destination IP ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationPortRanges": {
        "description": "Destination port ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "markings": {
        "description": "List of markings to be used in the configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "RNM supported protocol types.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "qosDefinitionCollection": {
        "description": "QoS object definitions",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceIpRanges": {
        "description": "Source IP ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePortRanges": {
        "description": "Sources port ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destinationIpRanges",
      "destinationPortRanges",
      "markings",
      "protocol",
      "sourceIpRanges",
      "sourcePortRanges",
      "qosDefinitionCollection"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteCircuits": {
    "api_version": "2022-05-01",
    "full_properties": {
      "allowClassicOperations": {
        "description": "Allow classic operations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowGlobalReach": {
        "description": "Flag to enable Global Reach on the circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizationKey": {
        "description": "The authorizationKey.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The list of authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bandwidthInGbps": {
        "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "circuitProvisioningState": {
        "description": "The CircuitProvisioningState state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressRoutePort": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayManagerEtag": {
        "description": "The GatewayManager Etag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "globalReachEnabled": {
        "description": "Flag denoting global reach status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerings": {
        "description": "The list of peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the express route circuit resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceKey": {
        "description": "The ServiceKey.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderNotes": {
        "description": "The ServiceProviderNotes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderProperties": {
        "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceProviderProvisioningState": {
        "description": "The ServiceProviderProvisioningState state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizations",
      "circuitProvisioningState",
      "peerings",
      "provisioningState",
      "serviceKey",
      "serviceProviderNotes",
      "serviceProviderProperties",
      "serviceProviderProvisioningState",
      "allowClassicOperations",
      "gatewayManagerEtag",
      "allowGlobalReach",
      "bandwidthInGbps",
      "expressRoutePort",
      "globalReachEnabled",
      "authorizationKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteCircuits/": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "allowClassicOperations": {
        "description": "Allow classic operations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowGlobalReach": {
        "description": "Flag to enable Global Reach on the circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizationKey": {
        "description": "The authorizationKey.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The list of authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bandwidthInGbps": {
        "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "circuitProvisioningState": {
        "description": "The CircuitProvisioningState state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressRoutePort": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayManagerEtag": {
        "description": "The GatewayManager Etag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "globalReachEnabled": {
        "description": "Flag denoting global reach status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerings": {
        "description": "The list of peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the express route circuit resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceKey": {
        "description": "The ServiceKey.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderNotes": {
        "description": "The ServiceProviderNotes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderProperties": {
        "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceProviderProvisioningState": {
        "description": "The ServiceProviderProvisioningState state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizations",
      "circuitProvisioningState",
      "peerings",
      "provisioningState",
      "serviceKey",
      "serviceProviderNotes",
      "serviceProviderProperties",
      "serviceProviderProvisioningState",
      "allowClassicOperations",
      "gatewayManagerEtag",
      "allowGlobalReach",
      "bandwidthInGbps",
      "expressRoutePort",
      "globalReachEnabled",
      "authorizationKey"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteCircuits/authorizations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "authorizationKey": {
        "description": "The authorization key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizationUseStatus": {
        "description": "The authorization use status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the authorization resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationKey",
      "authorizationUseStatus",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteCircuits/peerings": {
    "api_version": "2022-05-01",
    "full_properties": {
      "azureASN": {
        "description": "The Azure ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connections": {
        "description": "The list of circuit connections associated with Azure Private Peering for this circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteConnection": {
        "description": "The ID of the ExpressRouteConnection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayManagerEtag": {
        "description": "The GatewayManager Etag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipv6PeeringConfig": {
        "description": "Contains IPv6 peering config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedBy": {
        "description": "Who was the last to modify the peering.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "microsoftPeeringConfig": {
        "description": "Specifies the peering configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerASN": {
        "description": "The peer ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringType": {
        "description": "The peering type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryAzurePort": {
        "description": "The primary port.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryPeerAddressPrefix": {
        "description": "The primary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the express route circuit peering resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "routeFilter": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryAzurePort": {
        "description": "The secondary port.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryPeerAddressPrefix": {
        "description": "The secondary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "The shared key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "The peering state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stats": {
        "description": "Contains stats associated with the peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vlanId": {
        "description": "The VLAN ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureASN",
      "microsoftPeeringConfig",
      "peerASN",
      "peeringType",
      "primaryAzurePort",
      "primaryPeerAddressPrefix",
      "provisioningState",
      "secondaryAzurePort",
      "secondaryPeerAddressPrefix",
      "sharedKey",
      "state",
      "stats",
      "vlanId",
      "gatewayManagerEtag",
      "lastModifiedBy",
      "routeFilter",
      "ipv6PeeringConfig",
      "connections",
      "expressRouteConnection"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteCircuits/peerings/connections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addressPrefix": {
        "description": "/29 IP address space to carve out Customer addresses for tunnels.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizationKey": {
        "description": "The authorization key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "circuitConnectionStatus": {
        "description": "Express Route Circuit connection state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteCircuitPeering": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipv6CircuitConnectionConfig": {
        "description": "IPv6 Circuit Connection properties for global reach.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerExpressRouteCircuitPeering": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "authorizationKey",
      "expressRouteCircuitPeering",
      "peerExpressRouteCircuitPeering",
      "circuitConnectionStatus",
      "ipv6CircuitConnectionConfig"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteCrossConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "bandwidthInMbps": {
        "description": "The circuit bandwidth In Mbps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteCircuit": {
        "description": "Reference to an express route circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringLocation": {
        "description": "The peering location of the ExpressRoute circuit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "peerings": {
        "description": "The list of peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceProviderNotes": {
        "description": "Additional read only notes set by the connectivity provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderProvisioningState": {
        "description": "The provisioning state of the circuit in the connectivity provider system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bandwidthInMbps",
      "expressRouteCircuit",
      "peeringLocation",
      "peerings",
      "serviceProviderNotes",
      "serviceProviderProvisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteCrossConnections/peerings": {
    "api_version": "2022-05-01",
    "full_properties": {
      "gatewayManagerEtag": {
        "description": "The GatewayManager Etag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipv6PeeringConfig": {
        "description": "Contains IPv6 peering config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedBy": {
        "description": "Who was the last to modify the peering.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "microsoftPeeringConfig": {
        "description": "Specifies the peering configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerASN": {
        "description": "The peer ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringType": {
        "description": "The peering type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryPeerAddressPrefix": {
        "description": "The primary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryPeerAddressPrefix": {
        "description": "The secondary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "The shared key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "The peering state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vlanId": {
        "description": "The VLAN ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "gatewayManagerEtag",
      "ipv6PeeringConfig",
      "lastModifiedBy",
      "microsoftPeeringConfig",
      "peerASN",
      "peeringType",
      "primaryPeerAddressPrefix",
      "secondaryPeerAddressPrefix",
      "sharedKey",
      "state",
      "vlanId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteGateways": {
    "api_version": "2022-05-01",
    "full_properties": {
      "allowNonVirtualWanTraffic": {
        "description": "Configures this gateway to accept traffic from non Virtual WAN networks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoScaleConfiguration": {
        "description": "Configuration for auto scaling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteConnections": {
        "description": "List of ExpressRoute connections to the ExpressRoute gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the express route gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "Virtual Hub identifier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoScaleConfiguration",
      "virtualHub",
      "provisioningState",
      "expressRouteConnections",
      "allowNonVirtualWanTraffic"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRouteGateways/expressRouteConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "authorizationKey": {
        "description": "Authorization key to establish the connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableInternetSecurity": {
        "description": "Enable internet security.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePrivateLinkFastPath": {
        "description": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteCircuitPeering": {
        "description": "ExpressRoute circuit peering identifier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteGatewayBypass": {
        "description": "Enable FastPath to vWan Firewall hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the express route connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingConfiguration": {
        "description": "Routing Configuration indicating the associated and propagated route tables for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingWeight": {
        "description": "The routing weight associated to the connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationKey",
      "expressRouteCircuitPeering",
      "routingWeight",
      "provisioningState",
      "enableInternetSecurity",
      "routingConfiguration",
      "expressRouteGatewayBypass",
      "enablePrivateLinkFastPath"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/expressRoutePorts/authorizations": {
    "api_version": "2022-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/firewallPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "basePolicy": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsSettings": {
        "description": "DNS Proxy Settings in Firewall Policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "explicitProxy": {
        "description": "Explicit Proxy Settings in Firewall Policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "explicitProxySettings": {
        "description": "Explicit Proxy Settings in Firewall Policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "insights": {
        "description": "Firewall Policy Insights.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "intrusionDetection": {
        "description": "Configuration for intrusion detection mode and rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "intrusionSystemMode": {
        "description": "The operation mode for Intrusion system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the firewall policy resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "SKU of Firewall policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snat": {
        "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sql": {
        "description": "SQL Settings in Firewall Policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threatIntelMode": {
        "description": "The operation mode for Threat Intelligence.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threatIntelWhitelist": {
        "description": "ThreatIntel Whitelist for Firewall Policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transportSecurity": {
        "description": "Configuration needed to perform TLS termination & initiation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "basePolicy",
      "provisioningState",
      "threatIntelMode",
      "intrusionSystemMode",
      "threatIntelWhitelist",
      "transportSecurity",
      "dnsSettings",
      "intrusionDetection",
      "sku",
      "insights",
      "snat",
      "explicitProxySettings",
      "sql",
      "explicitProxy"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/firewallPolicies/ruleCollectionGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "priority": {
        "description": "Priority of the Firewall Policy Rule Collection Group resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ruleCollections": {
        "description": "Group of Firewall Policy rule collections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "priority",
      "ruleCollections"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/firewallPolicies/ruleGroups": {
    "api_version": "2020-04-01",
    "full_properties": {
      "priority": {
        "description": "Priority of the Firewall Policy Rule Group resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the firewall policy rule group resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rules": {
        "description": "Group of Firewall Policy rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "priority",
      "provisioningState",
      "rules"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/firewallPolicies/signatureOverrides": {
    "api_version": "2022-05-01",
    "full_properties": {
      "signatures": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "signatures"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/frontDoors": {
    "api_version": "2021-06-01",
    "full_properties": {
      "backendPools": {
        "description": "Backend pools available to routing rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendPoolsSettings": {
        "description": "Settings that apply to all backend pools.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "A friendly name for the frontDoor",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "frontendEndpoints": {
        "description": "Frontend endpoints available to routing rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthProbeSettings": {
        "description": "Health probe settings associated with this Front Door instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingSettings": {
        "description": "Load balancing settings associated with this Front Door instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status of the Front Door.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingRules": {
        "description": "Routing rules associated with this Front Door.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendPools",
      "enabledState",
      "friendlyName",
      "frontendEndpoints",
      "healthProbeSettings",
      "loadBalancingSettings",
      "resourceState",
      "routingRules",
      "backendPoolsSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/frontDoors/backendPools": {
    "api_version": "2018-08-01",
    "full_properties": {
      "backends": {
        "description": "The set of backends for this pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthProbeSettings": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingSettings": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backends",
      "healthProbeSettings",
      "loadBalancingSettings",
      "resourceState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/healthProbeSettings": {
    "api_version": "2018-08-01",
    "full_properties": {
      "enabledState": {
        "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthProbeMethod": {
        "description": "Configures which HTTP method to use to probe the backends defined under backendPools.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "intervalInSeconds": {
        "description": "The number of seconds between health probes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "path": {
        "description": "The path to use for the health probe. Default is /",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Protocol scheme to use for this probe.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "intervalInSeconds",
      "path",
      "protocol",
      "resourceState",
      "enabledState",
      "healthProbeMethod"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/loadBalancingSettings": {
    "api_version": "2018-08-01",
    "full_properties": {
      "additionalLatencyMilliseconds": {
        "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sampleSize": {
        "description": "The number of samples to consider for load balancing decisions",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "successfulSamplesRequired": {
        "description": "The number of samples within the sample period that must succeed",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalLatencyMilliseconds",
      "resourceState",
      "sampleSize",
      "successfulSamplesRequired"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/routingRules": {
    "api_version": "2018-08-01",
    "full_properties": {
      "acceptedProtocols": {
        "description": "Protocol schemes to match for this rule",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendPool": {
        "description": "A reference to the BackendPool which this rule routes to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cacheConfiguration": {
        "description": "The caching configuration associated with this rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customForwardingPath": {
        "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forwardingProtocol": {
        "description": "Protocol this rule will use when forwarding traffic to backends.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendEndpoints": {
        "description": "Frontend endpoints associated with this rule",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "patternsToMatch": {
        "description": "The route patterns of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeConfiguration": {
        "description": "Base class for all types of Route.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rulesEngine": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webApplicationFirewallPolicyLink": {
        "description": "Defines the Web Application Firewall policy for each routing rule (if applicable)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "acceptedProtocols",
      "backendPool",
      "cacheConfiguration",
      "customForwardingPath",
      "enabledState",
      "forwardingProtocol",
      "frontendEndpoints",
      "patternsToMatch",
      "resourceState",
      "routeConfiguration",
      "rulesEngine",
      "webApplicationFirewallPolicyLink"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/rulesEngines": {
    "api_version": "2021-06-01",
    "full_properties": {
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rules": {
        "description": "A list of rules that define a particular Rules Engine Configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resourceState",
      "rules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/interfaceEndpoints": {
    "api_version": "2019-02-01",
    "full_properties": {
      "endpointService": {
        "description": "A reference to the service being brought into the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "The ID of the subnet from which the private IP will be allocated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endpointService",
      "fqdn",
      "subnet"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/ipGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "ipAddresses": {
        "description": "IpAddresses/IpAddressPrefixes in the IpGroups resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipAddresses"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/loadBalancers": {
    "api_version": "2022-05-01",
    "full_properties": {
      "backendAddressPools": {
        "description": "Microsoft.Network/loadBalancers: Backend address pools",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendIPConfigurations": {
        "description": "Microsoft.Network/loadBalancers: Frontend IP configurations",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundNatPools": {
        "description": "Microsoft.Network/loadBalancers: Inbound NAT pools",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundNatRules": {
        "description": "Microsoft.Network/loadBalancers: Inbound NAT rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingRules": {
        "description": "Microsoft.Network/loadBalancers: Load balancing rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outboundNatRules": {
        "description": "Microsoft.Network/loadBalancers: Outbound NAT rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "probes": {
        "description": "Microsoft.Network/loadBalancers: Probes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "frontendIPConfigurations",
      "backendAddressPools",
      "loadBalancingRules",
      "probes",
      "inboundNatRules",
      "inboundNatPools",
      "outboundNatRules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/loadBalancers/backendAddressPools": {
    "api_version": "2022-05-01",
    "full_properties": {
      "backendIPConfigurations": {
        "description": "Gets collection of references to IPs defined in NICs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "drainPeriodInSeconds": {
        "description": "Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancerBackendAddresses": {
        "description": "An array of backend addresses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingRules": {
        "description": "Gets Load Balancing rules that use this Backend Address Pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "location": {
        "description": "The location of the backend address pool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outboundNatRule": {
        "description": "Gets outbound rules that use this Backend Address Pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the backend address pool resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tunnelInterfaces": {
        "description": "An array of gateway load balancer tunnel interfaces.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendIPConfigurations",
      "loadBalancingRules",
      "outboundNatRule",
      "provisioningState",
      "loadBalancerBackendAddresses",
      "location",
      "tunnelInterfaces",
      "drainPeriodInSeconds"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/loadBalancers/inboundNatRules": {
    "api_version": "2022-05-01",
    "full_properties": {
      "backendAddressPool": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendIPConfiguration": {
        "description": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendPort": {
        "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFloatingIP": {
        "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableTcpReset": {
        "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendIPConfiguration": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendPort": {
        "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendPortRangeEnd": {
        "description": "The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendPortRangeStart": {
        "description": "The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "idleTimeoutInMinutes": {
        "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "The reference to the transport protocol used by the load balancing rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the inbound NAT rule resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendIPConfiguration",
      "backendPort",
      "enableFloatingIP",
      "frontendIPConfiguration",
      "frontendPort",
      "idleTimeoutInMinutes",
      "protocol",
      "provisioningState",
      "enableTcpReset",
      "backendAddressPool",
      "frontendPortRangeEnd",
      "frontendPortRangeStart"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/localNetworkGateways": {
    "api_version": "2022-05-01",
    "full_properties": {
      "bgpSettings": {
        "description": "BGP settings details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "FQDN of local network gateway.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gatewayIpAddress": {
        "description": "IP address of local network gateway.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "localNetworkAddressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the local network gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "gatewayIpAddress",
      "localNetworkAddressSpace",
      "provisioningState",
      "resourceGuid",
      "bgpSettings",
      "fqdn"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/natGateways": {
    "api_version": "2022-05-01",
    "full_properties": {
      "idleTimeoutInMinutes": {
        "description": "The idle timeout of the nat gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the NAT gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicIpAddresses": {
        "description": "An array of public ip addresses associated with the nat gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIpPrefixes": {
        "description": "An array of public ip prefixes associated with the nat gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the NAT gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "idleTimeoutInMinutes",
      "provisioningState",
      "publicIpAddresses",
      "publicIpPrefixes",
      "resourceGuid"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkInterfaces": {
    "api_version": "2022-05-01",
    "full_properties": {
      "dnsSettings": {
        "description": "Microsoft.Network/networkInterfaces: DNS settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableIPForwarding": {
        "description": "Microsoft.Network/networkInterfaces: Enable IP forwarding",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "Microsoft.Network/networkInterfaces: IP configurations",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityGroup": {
        "description": "Microsoft.Network/networkInterfaces: Network security group",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enableIPForwarding",
      "networkSecurityGroup",
      "ipConfigurations",
      "dnsSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkInterfaces/tapConfigurations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "virtualNetworkTap": {
        "description": "Virtual Network Tap resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualNetworkTap"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers": {
    "api_version": "2022-05-01",
    "full_properties": {
      "description": {
        "description": "A description of the network manager.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "A friendly name for the network manager.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkManagerScopeAccesses": {
        "description": "Scope Access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkManagerScopes": {
        "description": "Scope of Network Manager.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "networkManagerScopeAccesses",
      "networkManagerScopes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/connectivityConfigurations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "appliesToGroups": {
        "description": "Groups for configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectivityTopology": {
        "description": "Connectivity topology type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deleteExistingPeering": {
        "description": "Flag if need to remove current existing peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the connectivity configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "A friendly name for the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hubs": {
        "description": "List of hubItems",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isGlobal": {
        "description": "Flag if global mesh is supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appliesToGroups",
      "connectivityTopology",
      "deleteExistingPeering",
      "description",
      "displayName",
      "hubs",
      "isGlobal"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/networkGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "conditionalMembership": {
        "description": "Network group conditional filter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the network group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "A friendly name for the network group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupMembers": {
        "description": "Group members of network group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "memberType": {
        "description": "Group member type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "conditionalMembership",
      "description",
      "displayName",
      "groupMembers",
      "memberType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/networkGroups/staticMembers": {
    "api_version": "2022-05-01",
    "full_properties": {
      "resourceId": {
        "description": "Resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/scopeConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "connectionState": {
        "description": "Connection State.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the scope connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "Resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionState",
      "description",
      "resourceId",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/securityAdminConfigurations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "applyOnNetworkIntentPolicyBasedServices": {
        "description": "Enum list of network intent policy based services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the security configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applyOnNetworkIntentPolicyBasedServices",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "appliesToGroups": {
        "description": "Groups for configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the admin rule collection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appliesToGroups",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules": {
    "api_version": "2022-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/securityUserConfigurations": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "deleteExistingNSGs": {
        "description": "Flag if need to delete existing network security groups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the security user configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "deleteExistingNSGs",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "appliesToGroups": {
        "description": "Groups for configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of the user rule collection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appliesToGroups",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections/rules": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Network/networkProfiles": {
    "api_version": "2022-05-01",
    "full_properties": {
      "containerNetworkInterfaceConfigurations": {
        "description": "List of chid container network interface configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerNetworkInterfaces": {
        "description": "List of child container network interfaces.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "containerNetworkInterfaceConfigurations",
      "containerNetworkInterfaces"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkSecurityGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "securityRules": {
        "description": "Microsoft.Network/networkSecurityGroups: Security rules",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "securityRules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkSecurityGroups/securityRules": {
    "api_version": "2022-05-01",
    "full_properties": {
      "access": {
        "description": "The network traffic is allowed or denied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description for this rule. Restricted to 140 chars.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationAddressPrefix": {
        "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationAddressPrefixes": {
        "description": "The destination address prefixes. CIDR or destination IP ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationApplicationSecurityGroups": {
        "description": "The application security group specified as destination.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationPortRange": {
        "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationPortRanges": {
        "description": "The destination port ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "direction": {
        "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Network protocol this rule applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the security rule resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceAddressPrefix": {
        "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceAddressPrefixes": {
        "description": "The CIDR or source IP ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceApplicationSecurityGroups": {
        "description": "The application security group specified as source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePortRange": {
        "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourcePortRanges": {
        "description": "The source port ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "access",
      "description",
      "destinationAddressPrefix",
      "destinationPortRange",
      "direction",
      "priority",
      "protocol",
      "provisioningState",
      "sourceAddressPrefix",
      "sourcePortRange",
      "destinationAddressPrefixes",
      "destinationPortRanges",
      "sourceAddressPrefixes",
      "sourcePortRanges",
      "destinationApplicationSecurityGroups",
      "sourceApplicationSecurityGroups"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkSecurityPerimeters": {
    "api_version": "2021-03-01-preview",
    "full_properties": {
      "description": {
        "description": "A description of the network security perimeter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "A friendly name for the network security perimeter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkSecurityPerimeters/links": {
    "api_version": "2021-02-01-preview",
    "full_properties": {
      "autoApprovedRemotePerimeterResourceId": {
        "description": "Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "localInboundProfiles": {
        "description": "Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. It's default value is ['*'].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteInboundProfiles": {
        "description": "Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode. It's default value is ['*'].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoApprovedRemotePerimeterResourceId",
      "description",
      "localInboundProfiles",
      "remoteInboundProfiles"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkSecurityPerimeters/profiles": {
    "api_version": "2021-02-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkSecurityPerimeters/profiles/accessRules": {
    "api_version": "2021-02-01-preview",
    "full_properties": {
      "addressPrefixes": {
        "description": "Inbound address prefixes (IPv4/IPv6)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "direction": {
        "description": "Direction that specifies whether the access rules is inbound/outbound.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fullyQualifiedDomainNames": {
        "description": "Outbound rules fully qualified domain name format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityPerimeters": {
        "description": "Inbound rule specified by the perimeter id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptions": {
        "description": "List of subscription ids",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefixes",
      "direction",
      "fullyQualifiedDomainNames",
      "networkSecurityPerimeters",
      "subscriptions"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkSecurityPerimeters/resourceAssociations": {
    "api_version": "2021-02-01-preview",
    "full_properties": {
      "accessMode": {
        "description": "Access mode on the association.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkResource": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "profile": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessMode",
      "privateLinkResource",
      "profile"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkVirtualAppliances": {
    "api_version": "2022-05-01",
    "full_properties": {
      "bootStrapConfigurationBlob": {
        "description": "BootStrapConfigurationBlob storage URLs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bootStrapConfigurationBlobs": {
        "description": "BootStrapConfigurationBlobs storage URLs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudInitConfiguration": {
        "description": "CloudInitConfiguration string in plain text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cloudInitConfigurationBlob": {
        "description": "CloudInitConfigurationBlob storage URLs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudInitConfigurationBlobs": {
        "description": "CloudInitConfigurationBlob storage URLs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nvaSku": {
        "description": "Network Virtual Appliance Sku Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshPublicKey": {
        "description": "Public key for SSH login.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualApplianceAsn": {
        "description": "VirtualAppliance ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bootStrapConfigurationBlob",
      "cloudInitConfigurationBlob",
      "virtualApplianceAsn",
      "virtualHub",
      "bootStrapConfigurationBlobs",
      "cloudInitConfiguration",
      "cloudInitConfigurationBlobs",
      "nvaSku",
      "sshPublicKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkVirtualAppliances/inboundSecurityRules": {
    "api_version": "2022-05-01",
    "full_properties": {
      "rules": {
        "description": "List of allowed rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkVirtualAppliances/virtualApplianceSites": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addressPrefix": {
        "description": "Address Prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "o365Policy": {
        "description": "Network Virtual Appliance Sku Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "o365Policy"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkWatchers": {
    "api_version": "2022-05-01",
    "full_properties": {
      "provisioningState": {
        "description": "The provisioning state of the network watcher resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runningOperationIds": {
        "description": "List of running operation IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "runningOperationIds"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkWatchers/connectionMonitors": {
    "api_version": "2022-05-01",
    "full_properties": {
      "autoStart": {
        "description": "Determines if the connection monitor will start automatically once created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Describes the destination of connection monitor.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "List of connection monitor endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringIntervalInSeconds": {
        "description": "Monitoring interval in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Optional notes to be associated with the connection monitor.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "List of connection monitor outputs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Describes the source of connection monitor.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "testConfigurations": {
        "description": "List of connection monitor test configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "testGroups": {
        "description": "List of connection monitor test groups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoStart",
      "destination",
      "monitoringIntervalInSeconds",
      "source",
      "endpoints",
      "notes",
      "outputs",
      "testConfigurations",
      "testGroups"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkWatchers/flowLogs": {
    "api_version": "2022-05-01",
    "full_properties": {
      "enabled": {
        "description": "Flag to enable/disable flow logging.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "flowAnalyticsConfiguration": {
        "description": "Parameters that define the configuration of traffic analytics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Parameters that define the flow log format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionPolicy": {
        "description": "Parameters that define the retention policy for flow log.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageId": {
        "description": "ID of the storage account which is used to store the flow log.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "ID of network security group to which flow log will be applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "flowAnalyticsConfiguration",
      "format",
      "retentionPolicy",
      "storageId",
      "targetResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/networkWatchers/packetCaptures": {
    "api_version": "2022-05-01",
    "full_properties": {
      "bytesToCapturePerPacket": {
        "description": "Number of bytes captured per packet, the remaining bytes are truncated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filters": {
        "description": "A list of packet capture filters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scope": {
        "description": "A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageLocation": {
        "description": "The storage location for a packet capture session.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "target": {
        "description": "The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetType": {
        "description": "Target type of the resource provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeLimitInSeconds": {
        "description": "Maximum duration of the capture session in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "totalBytesPerSession": {
        "description": "Maximum size of the capture output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bytesToCapturePerPacket",
      "filters",
      "storageLocation",
      "target",
      "timeLimitInSeconds",
      "totalBytesPerSession",
      "scope",
      "targetType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/p2svpnGateways": {
    "api_version": "2022-05-01",
    "full_properties": {
      "customDnsServers": {
        "description": "List of all customer specified DNS servers IP addresses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customRoutes": {
        "description": "The reference of the address space resource which represents the custom routes specified by the customer for P2SVpnGateway and P2S VpnClient.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRoutingPreferenceInternet": {
        "description": "Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SConnectionConfigurations": {
        "description": "List of all p2s connection configurations of the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfiguration": {
        "description": "The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2sConnectionConfigurations": {
        "description": "List of all p2s connection configurations of the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the P2S VPN gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientAddressPool": {
        "description": "The reference of the address space resource which represents Address space for P2S VpnClient.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGatewayScaleUnit": {
        "description": "The scale unit for this p2s vpn gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfiguration": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "p2SVpnServerConfiguration",
      "provisioningState",
      "virtualHub",
      "vpnClientAddressPool",
      "vpnGatewayScaleUnit",
      "customRoutes",
      "p2SConnectionConfigurations",
      "vpnServerConfiguration",
      "p2sConnectionConfigurations",
      "customDnsServers",
      "isRoutingPreferenceInternet"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/privateDnsZones": {
    "api_version": "2018-09-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/A": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/AAAA": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/CNAME": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/MX": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/PTR": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/SOA": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/SRV": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/TXT": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/virtualNetworkLinks": {
    "api_version": "2018-09-01",
    "full_properties": {
      "metadata": {
        "description": "Metadata attached to the virtual network link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registrationEnabled": {
        "description": "Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetwork": {
        "description": "Reference to another ARM resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualNetwork",
      "registrationEnabled",
      "metadata"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateEndpoints": {
    "api_version": "2022-05-01",
    "full_properties": {
      "applicationSecurityGroups": {
        "description": "Application security groups in which the private endpoint IP configuration is included.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDnsConfigs": {
        "description": "An array of custom dns configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customNetworkInterfaceName": {
        "description": "The custom name of the network interface attached to the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manualPrivateLinkServiceConnections": {
        "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnections": {
        "description": "A grouping of information about the connection to the remote resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource id of private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Subnet in a virtual network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "manualPrivateLinkServiceConnections",
      "privateLinkServiceConnections",
      "subnet",
      "provisioningState",
      "customDnsConfigs",
      "resourceGuid",
      "applicationSecurityGroups",
      "customNetworkInterfaceName",
      "ipConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/privateEndpoints/privateDnsZoneGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "privateDnsZoneConfigs": {
        "description": "A collection of private dns zone configurations of the private dns zone group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateDnsZoneConfigs"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/privateLinkServices": {
    "api_version": "2022-05-01",
    "full_properties": {
      "autoApproval": {
        "description": "The auto-approval list of the private link service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableProxyProtocol": {
        "description": "Whether the private link service is enabled for proxy protocol or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdns": {
        "description": "The list of Fqdn.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "An array of private link service IP configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancerFrontendIpConfigurations": {
        "description": "An array of references to the load balancer IP configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "An array of list about connections to the private endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource id of private link service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "visibility": {
        "description": "The visibility list of the private link service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoApproval",
      "fqdns",
      "ipConfigurations",
      "loadBalancerFrontendIpConfigurations",
      "privateEndpointConnections",
      "visibility",
      "provisioningState",
      "enableProxyProtocol",
      "resourceGuid"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/privateLinkServices/privateEndpointConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/publicIPAddresses": {
    "api_version": "2022-05-01",
    "full_properties": {
      "dnsSettings": {
        "description": "Microsoft.Network/publicIPAddresses: DNS settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "idleTimeoutInMinutes": {
        "description": "Microsoft.Network/publicIPAddresses: Idle timeout in minutes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPAllocationMethod": {
        "description": "Microsoft.Network/publicIPAddresses: Public IP allocation method",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicIPAllocationMethod",
      "idleTimeoutInMinutes",
      "dnsSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/publicIPAddresses/": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "dnsSettings": {
        "description": "Gets or sets FQDN of the DNS record associated with the public IP address",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "idleTimeoutInMinutes": {
        "description": "Gets or sets the idle timeout of the public IP address",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipAddress": {
        "description": "Gets the assigned public IP address",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipConfiguration": {
        "description": "Gets a reference to the network interface IP configurations using this public IP address",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicIPAllocationMethod": {
        "description": "Gets or sets PublicIP allocation method (Static/Dynamic).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "Gets or sets resource guid property of the PublicIP resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dnsSettings",
      "idleTimeoutInMinutes",
      "ipAddress",
      "ipConfiguration",
      "provisioningState",
      "publicIPAllocationMethod",
      "resourceGuid"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/publicIPPrefixes": {
    "api_version": "2022-05-01",
    "full_properties": {
      "customIPPrefix": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipPrefix": {
        "description": "The allocated Prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipTags": {
        "description": "The list of tags associated with the public IP prefix.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natGateway": {
        "description": "Nat Gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "prefixLength": {
        "description": "The Length of the Public IP Prefix.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the public IP prefix resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicIPAddressVersion": {
        "description": "The public IP address version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPAddresses": {
        "description": "The list of all referenced PublicIPAddresses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the public IP prefix resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipPrefix",
      "ipTags",
      "prefixLength",
      "provisioningState",
      "publicIPAddresses",
      "publicIPAddressVersion",
      "resourceGuid",
      "customIPPrefix",
      "natGateway"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/routeFilters": {
    "api_version": "2022-05-01",
    "full_properties": {
      "ipv6Peerings": {
        "description": "A collection of references to express route circuit ipv6 peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerings": {
        "description": "A collection of references to express route circuit peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rules": {
        "description": "Collection of RouteFilterRules contained within a route filter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rules",
      "peerings",
      "ipv6Peerings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/routeFilters/routeFilterRules": {
    "api_version": "2022-05-01",
    "full_properties": {
      "access": {
        "description": "The access type of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "communities": {
        "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeFilterRuleType": {
        "description": "The rule type of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "access",
      "communities",
      "routeFilterRuleType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/routeTables": {
    "api_version": "2022-05-01",
    "full_properties": {
      "routes": {
        "description": "Microsoft.Network/routeTables: Routes",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "routes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/routeTables/routes": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addressPrefix": {
        "description": "The destination CIDR to which the route applies.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hasBgpOverride": {
        "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nextHopIpAddress": {
        "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextHopType": {
        "description": "The type of Azure hop the packet should be sent to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the route resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "nextHopIpAddress",
      "nextHopType",
      "provisioningState",
      "hasBgpOverride"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/securityPartnerProviders": {
    "api_version": "2022-05-01",
    "full_properties": {
      "securityProviderName": {
        "description": "The security provider name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "securityProviderName",
      "virtualHub"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/serviceEndpointPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "contextualServiceEndpointPolicies": {
        "description": "A collection of contextual service endpoint policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the service endpoint policy resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceAlias": {
        "description": "The alias indicating if the policy belongs to a service",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceEndpointPolicyDefinitions": {
        "description": "A collection of service endpoint policy definitions of the service endpoint policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "resourceGuid",
      "serviceEndpointPolicyDefinitions",
      "contextualServiceEndpointPolicies",
      "serviceAlias"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions": {
    "api_version": "2022-05-01",
    "full_properties": {
      "description": {
        "description": "A description for this rule. Restricted to 140 chars.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "service": {
        "description": "Service endpoint name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceResources": {
        "description": "A list of service resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "provisioningState",
      "service",
      "serviceResources"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/trafficManagerProfiles": {
    "api_version": "2018-04-01",
    "full_properties": {
      "dnsConfig": {
        "description": "DNS configuration settings for the profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "The endpoints over which this profile will route traffic",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorConfig": {
        "description": "Microsoft.Network/trafficManagerProfiles Configuration for monitoring (probing) of endpoints in this profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "profileStatus": {
        "description": "The status of the profile (Enabled/Disabled)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRoutingMethod": {
        "description": "The traffic routing method (Performance/Priority/Weighted/Geographic)",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profileStatus",
      "trafficRoutingMethod",
      "dnsConfig",
      "monitorConfig",
      "endpoints"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/virtualHubs": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addressPrefix": {
        "description": "Address-prefix for this VirtualHub.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "allowBranchToBranchTraffic": {
        "description": "Flag to control transit for VirtualRouter hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureFirewall": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableVirtualRouterRoutePropogation": {
        "description": "Flag to control route propogation for VirtualRouter hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteGateway": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hubRoutingPreference": {
        "description": "The hubRoutingPreference of this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hubVirtualNetworkConnections": {
        "description": "list of all vnet connections with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnGateway": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredRoutingGateway": {
        "description": "The preferred gateway to route on-prem traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the virtual hub resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeTable": {
        "description": "VirtualHub route table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingState": {
        "description": "The routing state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityPartnerProvider": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProviderName": {
        "description": "The Security Provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The sku of this VirtualHub.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualHubRouteTableV2s": {
        "description": "List of all virtual hub route table v2s associated with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkConnections": {
        "description": "List of all vnet connections with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualRouterAsn": {
        "description": "VirtualRouter ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualRouterAutoScaleConfiguration": {
        "description": "The VirtualHub Router autoscale configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualRouterIps": {
        "description": "VirtualRouter IPs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualWan": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGateway": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "hubVirtualNetworkConnections",
      "provisioningState",
      "virtualWan",
      "expressRouteGateway",
      "p2SVpnGateway",
      "routeTable",
      "virtualNetworkConnections",
      "vpnGateway",
      "azureFirewall",
      "securityProviderName",
      "sku",
      "virtualHubRouteTableV2s",
      "securityPartnerProvider",
      "routingState",
      "virtualRouterAsn",
      "virtualRouterIps",
      "enableVirtualRouterRoutePropogation",
      "allowBranchToBranchTraffic",
      "preferredRoutingGateway",
      "hubRoutingPreference",
      "virtualRouterAutoScaleConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualHubs/bgpConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "hubVirtualNetworkConnection": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerAsn": {
        "description": "Peer ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerIp": {
        "description": "Peer IP.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peerAsn",
      "peerIp",
      "hubVirtualNetworkConnection"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualHubs/hubRouteTables": {
    "api_version": "2022-05-01",
    "full_properties": {
      "labels": {
        "description": "List of labels associated with this route table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routes": {
        "description": "List of all routes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "labels",
      "routes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "allowHubToRemoteVnetTransit": {
        "description": "Deprecated: VirtualHub to RemoteVnet transit to enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRemoteVnetToUseHubVnetGateways": {
        "description": "Deprecated: Allow RemoteVnet to use Virtual Hub's gateways.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableInternetSecurity": {
        "description": "Enable internet security.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the hub virtual network connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVirtualNetwork": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingConfiguration": {
        "description": "Routing Configuration indicating the associated and propagated route tables for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowHubToRemoteVnetTransit",
      "allowRemoteVnetToUseHubVnetGateways",
      "provisioningState",
      "remoteVirtualNetwork",
      "enableInternetSecurity",
      "routingConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualHubs/ipConfigurations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "privateIPAddress": {
        "description": "The private IP address of the IP configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateIPAllocationMethod": {
        "description": "The private IP address allocation method.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPAddress": {
        "description": "Public IP address resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Subnet in a virtual network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateIPAddress",
      "privateIPAllocationMethod",
      "publicIPAddress",
      "subnet"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualHubs/routeMaps": {
    "api_version": "2022-05-01",
    "full_properties": {
      "associatedInboundConnections": {
        "description": "List of connections which have this RoutMap associated for inbound traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedOutboundConnections": {
        "description": "List of connections which have this RoutMap associated for outbound traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rules": {
        "description": "List of RouteMap rules to be applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "associatedInboundConnections",
      "associatedOutboundConnections",
      "rules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualHubs/routeTables": {
    "api_version": "2022-05-01",
    "full_properties": {
      "attachedConnections": {
        "description": "List of all connections attached to this route table v2.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routes": {
        "description": "List of all routes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "attachedConnections",
      "routes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualHubs/routingIntent": {
    "api_version": "2022-05-01",
    "full_properties": {
      "routingPolicies": {
        "description": "List of routing policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "routingPolicies"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualNetworkGateways": {
    "api_version": "2022-05-01",
    "full_properties": {
      "activeActive": {
        "description": "ActiveActive flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRemoteVnetTraffic": {
        "description": "Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowVirtualWanTraffic": {
        "description": "Configures this gateway to accept traffic from remote Virtual WAN networks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bgpSettings": {
        "description": "BGP settings details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customRoutes": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableIPSecReplayProtection": {
        "description": "disableIPSecReplayProtection flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgp": {
        "description": "Whether BGP is enabled for this virtual network gateway or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgpRouteTranslationForNat": {
        "description": "EnableBgpRouteTranslationForNat flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDnsForwarding": {
        "description": "Whether dns forwarding is enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePrivateIpAddress": {
        "description": "Whether private IP needs to be enabled on this gateway for connections or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedLocation": {
        "description": "The extended location of type local virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayDefaultSite": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayType": {
        "description": "The type of this virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "IP configurations for virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natRules": {
        "description": "NatRules for virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusSecret": {
        "description": "The radius secret property of the VirtualNetworkGateway resource for vpn client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServer": {
        "description": "The radius server address property of the VirtualNetworkGateway resource for vpn client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the virtual network gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "VirtualNetworkGatewaySku details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vNetExtendedLocationResourceId": {
        "description": "Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkExtendedLocation": {
        "description": "The extended location of type local virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkExtendedLocationResourceId": {
        "description": "MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkGatewayPolicyGroups": {
        "description": "The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientConfiguration": {
        "description": "VpnClientConfiguration for P2S client.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGatewayGeneration": {
        "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnType": {
        "description": "The type of this virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enableBgp",
      "gatewayDefaultSite",
      "gatewayType",
      "ipConfigurations",
      "provisioningState",
      "resourceGuid",
      "vpnType",
      "bgpSettings",
      "sku",
      "vpnClientConfiguration",
      "activeActive",
      "radiusServer",
      "radiusSecret",
      "customRoutes",
      "vpnGatewayGeneration",
      "enableDnsForwarding",
      "enablePrivateIpAddress",
      "vNetExtendedLocationResourceId",
      "virtualNetworkExtendedLocationResourceId",
      "extendedLocation",
      "virtualNetworkExtendedLocation",
      "enableBgpRouteTranslationForNat",
      "natRules",
      "disableIPSecReplayProtection",
      "allowRemoteVnetTraffic",
      "allowVirtualWanTraffic",
      "virtualNetworkGatewayPolicyGroups"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualNetworkGateways/natRules": {
    "api_version": "2022-05-01",
    "full_properties": {
      "externalMappings": {
        "description": "The private IP address external mapping for NAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internalMappings": {
        "description": "The private IP address internal mapping for NAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurationId": {
        "description": "The IP Configuration ID this NAT rule applies to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The Source NAT direction of a VPN NAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of NAT rule for VPN NAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "externalMappings",
      "internalMappings",
      "ipConfigurationId",
      "mode",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualNetworkTaps": {
    "api_version": "2022-05-01",
    "full_properties": {
      "destinationLoadBalancerFrontEndIPConfiguration": {
        "description": "Frontend IP address of the load balancer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationNetworkInterfaceIPConfiguration": {
        "description": "IPConfiguration in a network interface.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationPort": {
        "description": "The VXLAN destination port that will receive the tapped traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destinationLoadBalancerFrontEndIPConfiguration",
      "destinationNetworkInterfaceIPConfiguration",
      "destinationPort"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualNetworks": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addressSpace": {
        "description": "Microsoft.Network/virtualNetworks: Address space",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "dhcpOptions": {
        "description": "Microsoft.Network/virtualNetworks: DHCP options",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnets": {
        "description": "Microsoft.Network/virtualNetworks: Subnets",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkPeerings": {
        "description": "Microsoft.Network/virtualNetworks: Virtual Network Peerings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressSpace",
      "dhcpOptions",
      "subnets",
      "virtualNetworkPeerings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualNetworks/subnets": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addressPrefix": {
        "description": "The address prefix for the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "addressPrefixes": {
        "description": "List of address prefixes for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGatewayIpConfigurations": {
        "description": "Application gateway IP configurations of virtual network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegations": {
        "description": "An array of references to the delegations on the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipAllocations": {
        "description": "Array of IpAllocation which reference this subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "Gets array of references to the network interface IP configurations using subnet",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natGateway": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityGroup": {
        "description": "NetworkSecurityGroup resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateAccessServices": {
        "description": "An array of private access services values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointNetworkPolicies": {
        "description": "Enable or Disable apply network policies on private end point in the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkServiceNetworkPolicies": {
        "description": "Enable or Disable apply network policies on private link service in the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the subnet resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceNavigationLinks": {
        "description": "An array of references to the external resources using subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeTable": {
        "description": "Route table resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceAssociationLinks": {
        "description": "An array of references to services injecting into this subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceEndpointPolicies": {
        "description": "An array of service endpoint policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceEndpoints": {
        "description": "An array of service endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "ipConfigurations",
      "networkSecurityGroup",
      "provisioningState",
      "routeTable",
      "resourceNavigationLinks",
      "serviceEndpoints",
      "privateAccessServices",
      "serviceEndpointPolicies",
      "addressPrefixes",
      "delegations",
      "serviceAssociationLinks",
      "natGateway",
      "privateEndpointNetworkPolicies",
      "privateLinkServiceNetworkPolicies",
      "ipAllocations",
      "applicationGatewayIpConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualNetworks/virtualNetworkPeerings": {
    "api_version": "2022-05-01",
    "full_properties": {
      "allowForwardedTraffic": {
        "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowGatewayTransit": {
        "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowVirtualNetworkAccess": {
        "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databricksAddressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databricksVirtualNetwork": {
        "description": " The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "doNotVerifyRemoteGateways": {
        "description": "If we need to verify the provisioning state of the remote gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringState": {
        "description": "The status of the virtual network peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringSyncLevel": {
        "description": "The peering sync status of the virtual network peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the virtual network peering resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "remoteAddressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteBgpCommunities": {
        "description": "Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVirtualNetwork": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVirtualNetworkAddressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useRemoteGateways": {
        "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowForwardedTraffic",
      "allowGatewayTransit",
      "allowVirtualNetworkAccess",
      "peeringState",
      "provisioningState",
      "remoteVirtualNetwork",
      "useRemoteGateways",
      "remoteAddressSpace",
      "databricksAddressSpace",
      "databricksVirtualNetwork",
      "remoteBgpCommunities",
      "doNotVerifyRemoteGateways",
      "peeringSyncLevel",
      "remoteVirtualNetworkAddressSpace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualRouters": {
    "api_version": "2022-05-01",
    "full_properties": {
      "hostedGateway": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostedSubnet": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualRouterAsn": {
        "description": "VirtualRouter ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualRouterIps": {
        "description": "VirtualRouter IPs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostedGateway",
      "hostedSubnet",
      "virtualRouterAsn",
      "virtualRouterIps"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualRouters/peerings": {
    "api_version": "2022-05-01",
    "full_properties": {
      "peerAsn": {
        "description": "Peer ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerIp": {
        "description": "Peer IP.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peerAsn",
      "peerIp"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualWans": {
    "api_version": "2022-05-01",
    "full_properties": {
      "allowBranchToBranchTraffic": {
        "description": "True if branch to branch traffic is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowVnetToVnetTraffic": {
        "description": "True if Vnet to Vnet traffic is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableVpnEncryption": {
        "description": "Vpn encryption to be disabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "office365LocalBreakoutCategory": {
        "description": "The office local breakout category.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigurations": {
        "description": "List of all P2SVpnServerConfigurations associated with the virtual wan.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the virtual WAN resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProviderName": {
        "description": "The Security Provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of the VirtualWAN.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disableVpnEncryption",
      "provisioningState",
      "allowBranchToBranchTraffic",
      "allowVnetToVnetTraffic",
      "office365LocalBreakoutCategory",
      "p2SVpnServerConfigurations",
      "securityProviderName",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/virtualWans/p2sVpnServerConfigurations": {
    "api_version": "2019-07-01",
    "full_properties": {
      "etag": {
        "description": "A unique read-only string that changes whenever the resource is updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigRadiusClientRootCertificates": {
        "description": "Radius client root certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigRadiusServerRootCertificates": {
        "description": "Radius Server root certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigVpnClientRevokedCertificates": {
        "description": "VPN client revoked certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigVpnClientRootCertificates": {
        "description": "VPN client root certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "radiusServerAddress": {
        "description": "The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServerSecret": {
        "description": "The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnClientIpsecPolicies": {
        "description": "VpnClientIpsecPolicies for P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnProtocols": {
        "description": "VPN protocols for the P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "etag",
      "name",
      "p2SVpnServerConfigRadiusClientRootCertificates",
      "p2SVpnServerConfigRadiusServerRootCertificates",
      "p2SVpnServerConfigVpnClientRevokedCertificates",
      "p2SVpnServerConfigVpnClientRootCertificates",
      "radiusServerAddress",
      "radiusServerSecret",
      "vpnClientIpsecPolicies",
      "vpnProtocols"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/vpnGateways": {
    "api_version": "2022-05-01",
    "full_properties": {
      "bgpSettings": {
        "description": "BGP settings details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connections": {
        "description": "List of all vpn connections to the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgpRouteTranslationForNat": {
        "description": "Enable BGP routes translation for NAT on this VpnGateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRoutingPreferenceInternet": {
        "description": "Enable Routing Preference property for the Public IP Interface of the VpnGateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natRules": {
        "description": "List of all the nat Rules associated with the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policies": {
        "description": "The policies applied to this vpn gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the VPN gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGatewayScaleUnit": {
        "description": "The scale unit for this vpn gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bgpSettings",
      "connections",
      "policies",
      "provisioningState",
      "virtualHub",
      "vpnGatewayScaleUnit",
      "isRoutingPreferenceInternet",
      "natRules",
      "enableBgpRouteTranslationForNat"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/vpnGateways/natRules": {
    "api_version": "2022-05-01",
    "full_properties": {
      "externalMappings": {
        "description": "The private IP address external mapping for NAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internalMappings": {
        "description": "The private IP address internal mapping for NAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurationId": {
        "description": "The IP Configuration ID this NAT rule applies to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The Source NAT direction of a VPN NAT.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of NAT rule for VPN NAT.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "externalMappings",
      "internalMappings",
      "ipConfigurationId",
      "mode",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/vpnGateways/vpnConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "connectionBandwidth": {
        "description": "Expected bandwidth in MBPS.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionStatus": {
        "description": "The connection status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dpdTimeoutSeconds": {
        "description": "DPD timeout in seconds for vpn connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgp": {
        "description": "EnableBgp flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableInternetSecurity": {
        "description": "Enable internet security.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRateLimiting": {
        "description": "EnableBgp flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipsecPolicies": {
        "description": "The IPSec Policies to be considered by this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the VPN connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVpnSite": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingConfiguration": {
        "description": "Routing Configuration indicating the associated and propagated route tables for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingWeight": {
        "description": "Routing weight for vpn connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "SharedKey for the vpn connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trafficSelectorPolicies": {
        "description": "The Traffic Selector Policies to be considered by this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useLocalAzureIpAddress": {
        "description": "Use local azure ip to initiate connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "usePolicyBasedTrafficSelectors": {
        "description": "Enable policy-based traffic selectors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnConnectionProtocolType": {
        "description": "Connection protocol used for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnLinkConnections": {
        "description": "List of all vpn site link connections to the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionStatus",
      "enableBgp",
      "ipsecPolicies",
      "provisioningState",
      "remoteVpnSite",
      "routingWeight",
      "sharedKey",
      "connectionBandwidth",
      "enableInternetSecurity",
      "enableRateLimiting",
      "vpnConnectionProtocolType",
      "useLocalAzureIpAddress",
      "usePolicyBasedTrafficSelectors",
      "vpnLinkConnections",
      "dpdTimeoutSeconds",
      "routingConfiguration",
      "trafficSelectorPolicies"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/vpnServerConfigurations": {
    "api_version": "2022-05-01",
    "full_properties": {
      "aadAuthenticationParameters": {
        "description": "AAD Vpn authentication type related parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "configurationPolicyGroups": {
        "description": "List of all VpnServerConfigurationPolicyGroups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "etag": {
        "description": "A unique read-only string that changes whenever the resource is updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the VpnServerConfiguration that is unique within a resource group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusClientRootCertificates": {
        "description": "Radius client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "radiusServerAddress": {
        "description": "The radius server address property of the VpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServerRootCertificates": {
        "description": "Radius Server root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "radiusServerSecret": {
        "description": "The radius secret property of the VpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServers": {
        "description": "Multiple Radius Server configuration for VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnAuthenticationTypes": {
        "description": "VPN authentication types for the VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientIpsecPolicies": {
        "description": "VpnClientIpsecPolicies for VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientRevokedCertificates": {
        "description": "VPN client revoked certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientRootCertificates": {
        "description": "VPN client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnProtocols": {
        "description": "VPN protocols for the VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigRadiusClientRootCertificates": {
        "description": "Radius client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigRadiusServerRootCertificates": {
        "description": "Radius Server root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigVpnClientRevokedCertificates": {
        "description": "VPN client revoked certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigVpnClientRootCertificates": {
        "description": "VPN client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aadAuthenticationParameters",
      "etag",
      "name",
      "radiusClientRootCertificates",
      "radiusServerAddress",
      "radiusServerRootCertificates",
      "radiusServerSecret",
      "vpnAuthenticationTypes",
      "vpnClientIpsecPolicies",
      "vpnClientRevokedCertificates",
      "vpnClientRootCertificates",
      "vpnProtocols",
      "vpnServerConfigVpnClientRootCertificates",
      "vpnServerConfigVpnClientRevokedCertificates",
      "vpnServerConfigRadiusServerRootCertificates",
      "vpnServerConfigRadiusClientRootCertificates",
      "radiusServers",
      "configurationPolicyGroups"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/vpnServerConfigurations/configurationPolicyGroups": {
    "api_version": "2022-05-01",
    "full_properties": {
      "isDefault": {
        "description": "Shows if this is a Default VpnServerConfigurationPolicyGroup or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyMembers": {
        "description": "Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority for VpnServerConfigurationPolicyGroup.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isDefault",
      "policyMembers",
      "priority"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/vpnSites": {
    "api_version": "2022-05-01",
    "full_properties": {
      "addressSpace": {
        "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bgpProperties": {
        "description": "BGP settings details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deviceProperties": {
        "description": "List of properties of the device.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipAddress": {
        "description": "The ip-address for the vpn-site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isSecuritySite": {
        "description": "IsSecuritySite flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "o365Policy": {
        "description": "The Office365 breakout policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the VPN site resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteKey": {
        "description": "The key for vpn-site that can be used for connections.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualWAN": {
        "description": "The VirtualWAN to which the vpnSite belongs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualWan": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnSiteLinks": {
        "description": "List of all vpn site links.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressSpace",
      "bgpProperties",
      "deviceProperties",
      "ipAddress",
      "provisioningState",
      "siteKey",
      "virtualWAN",
      "isSecuritySite",
      "virtualWan",
      "vpnSiteLinks",
      "o365Policy"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetworkFunction/azureTrafficCollectors": {
    "api_version": "2022-11-01",
    "full_properties": {
      "collectorPolicies": {
        "description": "Collector Policies for Azure Traffic Collector.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "Resource reference properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collectorPolicies",
      "virtualHub"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetworkFunction/azureTrafficCollectors/collectorPolicies": {
    "api_version": "2022-11-01",
    "full_properties": {
      "emissionPolicies": {
        "description": "Emission policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingestionPolicy": {
        "description": "Ingestion Policy properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "emissionPolicies",
      "ingestionPolicy"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NotificationHubs/namespaces": {
    "api_version": "2017-04-01",
    "full_properties": {
      "createACSNamespace": {
        "description": "Indicates whether to create an ACS namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdAt": {
        "description": "The time the namespace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "critical": {
        "description": "Whether or not the namespace is set as Critical.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataCenter": {
        "description": "Data center for the namespace",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Whether or not the namespace is currently enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "namespaceType": {
        "description": "The namespace type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the Namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "region": {
        "description": "Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scaleUnit": {
        "description": "ScaleUnit where the namespace gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusEndpoint": {
        "description": "Endpoint you can use to perform NotificationHub operations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subscriptionId": {
        "description": "The Id of the Azure subscription associated with the namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedAt": {
        "description": "The time the namespace was updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createdAt",
      "enabled",
      "provisioningState",
      "serviceBusEndpoint",
      "status",
      "updatedAt",
      "critical",
      "name",
      "namespaceType",
      "region",
      "scaleUnit",
      "subscriptionId",
      "createACSNamespace",
      "dataCenter"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NotificationHubs/namespaces/AuthorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "claimType": {
        "description": "The type of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "claimValue": {
        "description": "The value of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdTime": {
        "description": "The time at which the authorization rule was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyName": {
        "description": "The name of the key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modifiedTime": {
        "description": "The most recent time the rule was updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryKey": {
        "description": "The primary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "The revision number for the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryKey": {
        "description": "The secondary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights",
      "claimType",
      "claimValue",
      "createdTime",
      "keyName",
      "modifiedTime",
      "primaryKey",
      "revision",
      "secondaryKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NotificationHubs/namespaces/notificationHubs": {
    "api_version": "2017-04-01",
    "full_properties": {
      "admCredential": {
        "description": "Description of a NotificationHub AdmCredential.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apnsCredential": {
        "description": "Description of a NotificationHub ApnsCredential.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizationRules": {
        "description": "The AuthorizationRules of the created NotificationHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "baiduCredential": {
        "description": "Description of a NotificationHub BaiduCredential.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gcmCredential": {
        "description": "Description of a NotificationHub GcmCredential.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mpnsCredential": {
        "description": "Description of a NotificationHub MpnsCredential.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The NotificationHub name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationTtl": {
        "description": "The RegistrationTtl of the created NotificationHub",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "wnsCredential": {
        "description": "Description of a NotificationHub WnsCredential.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "admCredential",
      "apnsCredential",
      "authorizationRules",
      "baiduCredential",
      "gcmCredential",
      "mpnsCredential",
      "name",
      "registrationTtl",
      "wnsCredential"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NotificationHubs/namespaces/notificationHubs/AuthorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "claimType": {
        "description": "The type of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "claimValue": {
        "description": "The value of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdTime": {
        "description": "The time at which the authorization rule was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyName": {
        "description": "The name of the key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modifiedTime": {
        "description": "The most recent time the rule was updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryKey": {
        "description": "The primary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "The revision number for the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryKey": {
        "description": "The secondary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights",
      "claimType",
      "claimValue",
      "createdTime",
      "keyName",
      "modifiedTime",
      "primaryKey",
      "revision",
      "secondaryKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OffAzure/HyperVSites": {
    "api_version": "2020-07-07",
    "full_properties": {
      "agentDetails": {
        "description": "Class for site agent properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applianceName": {
        "description": "Appliance Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientAffinityEnabled": {
        "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertEnabled": {
        "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertExclusionPaths": {
        "description": "client certificate authentication comma-separated exclusion paths",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientCertMode": {
        "description": "This composes with ClientCertEnabled setting.\n- ClientCertEnabled: false means ClientCert is ignored.\n- ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.\n- ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloningInfo": {
        "description": "Information needed for cloning operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSize": {
        "description": "Size of the function container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDomainVerificationId": {
        "description": "Unique identifier that verifies the custom domains assigned to the app. Customer will add this id to a txt record for verification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyMemoryTimeQuota": {
        "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySolutionId": {
        "description": "ARM ID of migration hub solution for SDS.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of the IoT site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewaySiteName": {
        "description": "Name of gateway app associated with web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "geoDistributions": {
        "description": "GeoDistributions for this site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNameSslStates": {
        "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNamesDisabled": {
        "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for an App Service Environment to use for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperV": {
        "description": "Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isXenon": {
        "description": "Obsolete: Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultReferenceIdentity": {
        "description": "Identity to use for Key Vault Reference authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxNumberOfWorkers": {
        "description": "Maximum number of workers\r\n            This only applies to function container",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "microService": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redundancyMode": {
        "description": "Site redundancy mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reserved": {
        "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmSiteAlsoStopped": {
        "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "servicePrincipalIdentityDetails": {
        "description": "Class for site properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteConfig": {
        "description": "Configuration of an App Service app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotInfo": {
        "description": "Details about app recovery operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountRequired": {
        "description": "Checks if Customer provided storage account is required",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tags of the IoT site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "Azure Resource Manager ID of the Virtual network and subnet to be joined by Regional VNET Integration.\nThis must be of the form /subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetContentShareEnabled": {
        "description": "To enable accessing content over virtual network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetImagePullEnabled": {
        "description": "To enable pulling image over Virtual Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetRouteAllEnabled": {
        "description": "Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientAffinityEnabled",
      "clientCertEnabled",
      "cloningInfo",
      "containerSize",
      "enabled",
      "gatewaySiteName",
      "hostingEnvironmentProfile",
      "hostNamesDisabled",
      "hostNameSslStates",
      "maxNumberOfWorkers",
      "microService",
      "name",
      "scmSiteAlsoStopped",
      "serverFarmId",
      "siteConfig",
      "dailyMemoryTimeQuota",
      "httpsOnly",
      "reserved",
      "snapshotInfo",
      "clientCertExclusionPaths",
      "geoDistributions",
      "hyperV",
      "isXenon",
      "redundancyMode",
      "agentDetails",
      "applianceName",
      "discoverySolutionId",
      "servicePrincipalIdentityDetails",
      "clientCertMode",
      "customDomainVerificationId",
      "storageAccountRequired",
      "keyVaultReferenceIdentity",
      "virtualNetworkSubnetId",
      "displayName",
      "tags",
      "publicNetworkAccess",
      "vnetContentShareEnabled",
      "vnetImagePullEnabled",
      "vnetRouteAllEnabled"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OffAzure/HyperVSites/clusters": {
    "api_version": "2020-07-07",
    "full_properties": {
      "fqdn": {
        "description": "FQDN/IPAddress of the Hyper-V cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostFqdnList": {
        "description": "List of hosts (FQDN) currently being tracked by the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runAsAccountId": {
        "description": "Run as account ID of the Hyper-V cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fqdn",
      "hostFqdnList",
      "runAsAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OffAzure/HyperVSites/hosts": {
    "api_version": "2020-07-07",
    "full_properties": {
      "fqdn": {
        "description": "FQDN/IPAddress of the Hyper-V host.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runAsAccountId": {
        "description": "Run as account ID of the Hyper-V host.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fqdn",
      "runAsAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OffAzure/MasterSites": {
    "api_version": "2020-07-07",
    "full_properties": {
      "allowMultipleSites": {
        "description": "Value indicating whether multiple sites per site type are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customerStorageAccountArmId": {
        "description": "Gets or sets a value for customer storage account ARM id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Gets or sets the state of public network access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sites": {
        "description": "List of sites that are a part of Master Site.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowMultipleSites",
      "customerStorageAccountArmId",
      "publicNetworkAccess",
      "sites"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OffAzure/VMwareSites": {
    "api_version": "2020-07-07",
    "full_properties": {
      "agentDetails": {
        "description": "Class for site agent properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applianceName": {
        "description": "Appliance Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientAffinityEnabled": {
        "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertEnabled": {
        "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertExclusionPaths": {
        "description": "client certificate authentication comma-separated exclusion paths",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientCertMode": {
        "description": "This composes with ClientCertEnabled setting.\n- ClientCertEnabled: false means ClientCert is ignored.\n- ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.\n- ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloningInfo": {
        "description": "Information needed for cloning operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSize": {
        "description": "Size of the function container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDomainVerificationId": {
        "description": "Unique identifier that verifies the custom domains assigned to the app. Customer will add this id to a txt record for verification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyMemoryTimeQuota": {
        "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySolutionId": {
        "description": "ARM ID of migration hub solution for SDS.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of the IoT site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewaySiteName": {
        "description": "Name of gateway app associated with web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "geoDistributions": {
        "description": "GeoDistributions for this site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNameSslStates": {
        "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNamesDisabled": {
        "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for an App Service Environment to use for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperV": {
        "description": "Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isXenon": {
        "description": "Obsolete: Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultReferenceIdentity": {
        "description": "Identity to use for Key Vault Reference authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxNumberOfWorkers": {
        "description": "Maximum number of workers\r\n            This only applies to function container",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "microService": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redundancyMode": {
        "description": "Site redundancy mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reserved": {
        "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmSiteAlsoStopped": {
        "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "servicePrincipalIdentityDetails": {
        "description": "Class for site properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteConfig": {
        "description": "Configuration of an App Service app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotInfo": {
        "description": "Details about app recovery operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountRequired": {
        "description": "Checks if Customer provided storage account is required",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tags of the IoT site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "Azure Resource Manager ID of the Virtual network and subnet to be joined by Regional VNET Integration.\nThis must be of the form /subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetContentShareEnabled": {
        "description": "To enable accessing content over virtual network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetImagePullEnabled": {
        "description": "To enable pulling image over Virtual Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetRouteAllEnabled": {
        "description": "Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientAffinityEnabled",
      "clientCertEnabled",
      "cloningInfo",
      "containerSize",
      "enabled",
      "gatewaySiteName",
      "hostingEnvironmentProfile",
      "hostNamesDisabled",
      "hostNameSslStates",
      "maxNumberOfWorkers",
      "microService",
      "name",
      "scmSiteAlsoStopped",
      "serverFarmId",
      "siteConfig",
      "dailyMemoryTimeQuota",
      "httpsOnly",
      "reserved",
      "snapshotInfo",
      "clientCertExclusionPaths",
      "geoDistributions",
      "hyperV",
      "isXenon",
      "redundancyMode",
      "agentDetails",
      "applianceName",
      "discoverySolutionId",
      "servicePrincipalIdentityDetails",
      "clientCertMode",
      "customDomainVerificationId",
      "storageAccountRequired",
      "keyVaultReferenceIdentity",
      "virtualNetworkSubnetId",
      "displayName",
      "tags",
      "publicNetworkAccess",
      "vnetContentShareEnabled",
      "vnetImagePullEnabled",
      "vnetRouteAllEnabled"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OffAzure/VMwareSites/vCenters": {
    "api_version": "2020-07-07",
    "full_properties": {
      "credentials": {
        "description": "Username / Password Credentials to connect to vcenter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "Gets or sets the port of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runAsAccountId": {
        "description": "Run as account ID of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fqdn",
      "port",
      "runAsAccountId",
      "credentials"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OffAzure/masterSites/privateEndpointConnections": {
    "api_version": "2020-07-07",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.OpenEnergyPlatform/energyServices": {
    "api_version": "2022-04-04-preview",
    "full_properties": {
      "authAppId": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPartitionNames": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authAppId",
      "dataPartitionNames"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/clusters": {
    "api_version": "2021-06-01",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/queryPacks": {
    "api_version": "2019-09-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/queryPacks/queries": {
    "api_version": "2019-09-01",
    "full_properties": {
      "body": {
        "description": "Body of the query.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the query.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Unique display name for your query within the Query Pack.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Additional properties that can be set for the query.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "related": {
        "description": "The related metadata items for the function.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tags associated with the query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "body",
      "description",
      "displayName",
      "properties",
      "related",
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/dataExports": {
    "api_version": "2020-08-01",
    "full_properties": {
      "createdDate": {
        "description": "The latest data export rule modification time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataExportId": {
        "description": "The data export rule ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Destination properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enable": {
        "description": "Active when enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedDate": {
        "description": "Date and time when the export was last modified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tableNames": {
        "description": "An array of tables to export, for example: [“Heartbeat, SecurityEvent”].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createdDate",
      "dataExportId",
      "destination",
      "enable",
      "lastModifiedDate",
      "tableNames"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/dataSources": {
    "api_version": "2020-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "kind",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/linkedServices": {
    "api_version": "2020-08-01",
    "full_properties": {
      "provisioningState": {
        "description": "The provisioning state of the linked service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require read access",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "writeAccessResourceId": {
        "description": "The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require write access",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resourceId",
      "writeAccessResourceId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts": {
    "api_version": "2020-08-01",
    "full_properties": {
      "linkedStorageAccount": {
        "description": "Linked storage account resource ID",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIds": {
        "description": "Linked storage accounts resources ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccountIds",
      "linkedStorageAccount"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/savedSearches": {
    "api_version": "2020-08-01",
    "full_properties": {
      "category": {
        "description": "The category of the saved search. This helps the user to find a saved search faster. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Saved search display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "functionAlias": {
        "description": "The function alias if query serves as a function.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "functionParameters": {
        "description": "The optional function parameters if query serves as a function. Value should be in the following format: 'param-name1:type1 = default_value1, param-name2:type2 = default_value2'. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "query": {
        "description": "The query expression for the saved search.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tags": {
        "description": "The tags attached to the saved search.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version number of the query language. The current version is 2 and is the default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "category",
      "displayName",
      "query",
      "tags",
      "version",
      "functionAlias",
      "functionParameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/storageInsightConfigs": {
    "api_version": "2020-08-01",
    "full_properties": {
      "containers": {
        "description": "The names of the blob containers that the workspace should read",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "Describes a storage account connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tables": {
        "description": "The names of the Azure tables that the workspace should read",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "containers",
      "storageAccount",
      "tables"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/tables": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "plan": {
        "description": "Instruct the system how to handle and charge the logs ingested to this table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restoredLogs": {
        "description": "Restore parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resultStatistics": {
        "description": "Search job execution statistics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schema": {
        "description": "Table's schema.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "searchResults": {
        "description": "Parameters of the search job that initiated this table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "signedIdentifiers": {
        "description": "List of stored access policies specified on the table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "totalRetentionInDays": {
        "description": "The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "signedIdentifiers",
      "plan",
      "restoredLogs",
      "resultStatistics",
      "retentionInDays",
      "schema",
      "searchResults",
      "totalRetentionInDays"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationsManagement/ManagementConfigurations": {
    "api_version": "2015-11-01-preview",
    "full_properties": {
      "applicationId": {
        "description": "The applicationId of the appliance for this Management.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Parameters to run the ARM template",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parentResourceType": {
        "description": "The type of the parent resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "template": {
        "description": "The Json object containing the ARM template to deploy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationId",
      "parentResourceType",
      "parameters",
      "template"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.OperationsManagement/solutions": {
    "api_version": "2015-11-01-preview",
    "full_properties": {
      "cleanupState": {
        "description": "Gets or sets the cleanup state of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containedResources": {
        "description": "The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "details": {
        "description": "Class representing the details of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "goal": {
        "description": "Gets or sets the goal of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purpose": {
        "description": "Gets or sets the purpose of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "referencedResources": {
        "description": "The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Gets or sets the current status of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "summary": {
        "description": "The solution summary class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tool": {
        "description": "Gets or sets the tool being used in the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceResourceId": {
        "description": "The azure resourceId for the workspace where the solution will be deployed/enabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "workspaceResourceId",
      "containedResources",
      "referencedResources",
      "cleanupState",
      "details",
      "goal",
      "purpose",
      "status",
      "summary",
      "tool"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Orbital/contactProfiles": {
    "api_version": "2022-03-01",
    "full_properties": {
      "autoTrackingConfiguration": {
        "description": "Auto-tracking configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventHubUri": {
        "description": "ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "links": {
        "description": "Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumElevationDegrees": {
        "description": "Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumViableContactDuration": {
        "description": "Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkConfiguration": {
        "description": "Network configuration of customer virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The current state of the resource's creation, deletion, or modification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoTrackingConfiguration",
      "eventHubUri",
      "links",
      "minimumElevationDegrees",
      "minimumViableContactDuration",
      "networkConfiguration",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Orbital/spacecrafts": {
    "api_version": "2022-03-01",
    "full_properties": {
      "links": {
        "description": "Immutable list of Spacecraft links.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "noradId": {
        "description": "NORAD ID of the spacecraft.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The current state of the resource's creation, deletion, or modification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "titleLine": {
        "description": "Title line of the two-line element set (TLE).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tleLine1": {
        "description": "Line 1 of the two-line element set (TLE).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tleLine2": {
        "description": "Line 1 of the two-line element set (TLE).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "links",
      "noradId",
      "titleLine",
      "tleLine1",
      "tleLine2",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Orbital/spacecrafts/contacts": {
    "api_version": "2022-03-01",
    "full_properties": {
      "contactProfile": {
        "description": "The reference to the contact profile resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groundStationName": {
        "description": "Azure Ground Station name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The current state of the resource's creation, deletion, or modification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reservationEndTime": {
        "description": "Reservation end time of a contact (ISO 8601 UTC standard).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reservationStartTime": {
        "description": "Reservation start time of a contact (ISO 8601 UTC standard).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contactProfile",
      "groundStationName",
      "reservationEndTime",
      "reservationStartTime",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peeringServices": {
    "api_version": "2022-10-01",
    "full_properties": {
      "logAnalyticsWorkspaceProperties": {
        "description": "The properties that define a Log Analytics Workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringServiceLocation": {
        "description": "The location (state/province) of the customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "peeringServiceProvider": {
        "description": "The name of the service provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerBackupPeeringLocation": {
        "description": "The backup peering (Microsoft/service provider) location to be used for customer traffic.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerPrimaryPeeringLocation": {
        "description": "The primary peering (Microsoft/service provider) location to be used for customer traffic.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peeringServiceLocation",
      "peeringServiceProvider",
      "providerBackupPeeringLocation",
      "providerPrimaryPeeringLocation",
      "logAnalyticsWorkspaceProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peeringServices/connectionMonitorTests": {
    "api_version": "2022-10-01",
    "full_properties": {
      "destination": {
        "description": "The Connection Monitor test destination",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationPort": {
        "description": "The Connection Monitor test destination port",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceAgent": {
        "description": "The Connection Monitor test source agent",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "testFrequencyInSec": {
        "description": "The Connection Monitor test frequency in seconds",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "destinationPort",
      "sourceAgent",
      "testFrequencyInSec"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peeringServices/prefixes": {
    "api_version": "2022-10-01",
    "full_properties": {
      "learnedType": {
        "description": "The prefix learned type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringServicePrefixKey": {
        "description": "The peering service prefix key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefix": {
        "description": "The prefix from which your traffic originates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefixValidationState": {
        "description": "The prefix validation state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "learnedType",
      "prefix",
      "prefixValidationState",
      "peeringServicePrefixKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peerings": {
    "api_version": "2022-10-01",
    "full_properties": {
      "direct": {
        "description": "The properties that define a direct peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exchange": {
        "description": "The properties that define an exchange peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringLocation": {
        "description": "The location of the peering.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "direct",
      "exchange",
      "peeringLocation"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Peering/peerings/registeredAsns": {
    "api_version": "2022-10-01",
    "full_properties": {
      "asn": {
        "description": "The customer's ASN from which traffic originates.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "asn"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peerings/registeredPrefixes": {
    "api_version": "2022-10-01",
    "full_properties": {
      "prefix": {
        "description": "The customer's prefix from which traffic originates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "prefix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PlayFab/playerAccountPools": {
    "api_version": "2022-05-05-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PlayFab/titles": {
    "api_version": "2022-05-05-preview",
    "full_properties": {
      "playerAccountPoolId": {
        "description": "Azure resource Id of the PlayerAccountPool resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "settings": {
        "description": "Title Settings model",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "playerAccountPoolId",
      "settings"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PlayFab/titles/segments": {
    "api_version": "2022-05-05-preview",
    "full_properties": {
      "query": {
        "description": "Details about Segment Query",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "query"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PlayFab/titles/titledatakeyvalues": {
    "api_version": "2022-03-02-preview",
    "full_properties": {
      "value": {
        "description": "Value of TitleDataKeyValue.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PlayFab/titles/titledatasets": {
    "api_version": "2022-05-05-preview",
    "full_properties": {
      "keyValuePairs": {
        "description": "List of KeyValuePairs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyValuePairs"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PlayFab/titles/titleinternaldatakeyvalues": {
    "api_version": "2022-03-02-preview",
    "full_properties": {
      "value": {
        "description": "Value of TitleInternalDataKeyValue.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PlayFab/titles/titleinternaldatasets": {
    "api_version": "2022-05-05-preview",
    "full_properties": {
      "keyValuePairs": {
        "description": "List of KeyValuePairs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyValuePairs"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PolicyInsights/attestations": {
    "api_version": "2022-09-01",
    "full_properties": {
      "assessmentDate": {
        "description": "The time the evidence was assessed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "comments": {
        "description": "Comments describing why this attestation was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "complianceState": {
        "description": "The compliance state that should be set on the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evidence": {
        "description": "The evidence supporting the compliance state set in this attestation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expiresOn": {
        "description": "The time the compliance state should expire.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "Additional metadata for this attestation",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "owner": {
        "description": "The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyAssignmentId": {
        "description": "The resource ID of the policy assignment that the attestation is setting the state for.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyDefinitionReferenceId": {
        "description": "The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "comments",
      "complianceState",
      "evidence",
      "expiresOn",
      "owner",
      "policyAssignmentId",
      "policyDefinitionReferenceId",
      "assessmentDate",
      "metadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PolicyInsights/remediations": {
    "api_version": "2021-10-01",
    "full_properties": {
      "deploymentStatus": {
        "description": "The deployment status summary for all deployments created by the remediation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "failureThreshold": {
        "description": "The remediation failure threshold settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filters": {
        "description": "The filters that will be applied to determine which resources to remediate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parallelDeployments": {
        "description": "Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyAssignmentId": {
        "description": "The resource ID of the policy assignment that should be remediated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyDefinitionReferenceId": {
        "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceCount": {
        "description": "Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceDiscoveryMode": {
        "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "deploymentStatus",
      "filters",
      "policyAssignmentId",
      "policyDefinitionReferenceId",
      "resourceDiscoveryMode",
      "failureThreshold",
      "parallelDeployments",
      "resourceCount"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Portal/dashboards": {
    "api_version": "2020-09-01-preview",
    "full_properties": {
      "lenses": {
        "description": "The dashboard lenses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The dashboard metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "lenses",
      "metadata"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PowerBI/privateLinkServicesForPowerBI": {
    "api_version": "2020-06-01",
    "full_properties": {
      "privateEndpointConnections": {
        "description": "Specifies the private endpoint connections of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Specifies the tenant id of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpointConnections",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PowerBI/privateLinkServicesForPowerBI/privateEndpointConnections": {
    "api_version": "2020-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PowerBI/workspaceCollections": {
    "api_version": "2016-01-29",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.PowerBIDedicated/autoScaleVCores": {
    "api_version": "2021-01-01",
    "full_properties": {
      "capacityLimit": {
        "description": "The maximum capacity of an auto scale v-core resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityObjectId": {
        "description": "The object ID of the capacity resource associated with the auto scale v-core resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "capacityLimit",
      "capacityObjectId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.PowerBIDedicated/capacities": {
    "api_version": "2021-01-01",
    "full_properties": {
      "administration": {
        "description": "An array of administrator user identities",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "Specifies the generation of the Power BI Embedded capacity. If no value is specified, the default value 'Gen2' is used. [Learn More](https://docs.microsoft.com/power-bi/developer/embedded/power-bi-embedded-generation-2).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administration",
      "mode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.PowerPlatform/accounts": {
    "api_version": "2020-10-30-preview",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": "The api properties for special APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudConnectors": {
        "description": "External Cloud Service connectors",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customSubDomainName": {
        "description": "Optional subdomain name used for token-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamicThrottlingEnabled": {
        "description": "The flag to enable dynamic throttling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Gets or sets the managed resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "migrationToken": {
        "description": "Resource migration token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restore": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Device Update Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userOwnedStorage": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "cloudConnectors",
      "managedResourceGroupName",
      "allowedFqdnList",
      "apiProperties",
      "customSubDomainName",
      "disableLocalAuth",
      "migrationToken",
      "networkAcls",
      "restore",
      "restrictOutboundNetworkAccess",
      "userOwnedStorage",
      "dynamicThrottlingEnabled",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PowerPlatform/enterprisePolicies": {
    "api_version": "2020-10-30-preview",
    "full_properties": {
      "encryption": {
        "description": "The encryption settings for a configuration store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lockbox": {
        "description": "Settings concerning lockbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkInjection": {
        "description": "Settings concerning network injection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryption",
      "lockbox",
      "networkInjection"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PowerPlatform/enterprisePolicies/privateEndpointConnections": {
    "api_version": "2020-10-30-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Purview/accounts": {
    "api_version": "2021-07-01",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiProperties": {
        "description": "The api properties for special APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudConnectors": {
        "description": "External Cloud Service connectors",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customSubDomainName": {
        "description": "Optional subdomain name used for token-based authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynamicThrottlingEnabled": {
        "description": "The flag to enable dynamic throttling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Gets or sets the managed resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "migrationToken": {
        "description": "Resource migration token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections associated with the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restore": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Device Update Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userOwnedStorage": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "encryption",
      "cloudConnectors",
      "managedResourceGroupName",
      "allowedFqdnList",
      "apiProperties",
      "customSubDomainName",
      "disableLocalAuth",
      "migrationToken",
      "networkAcls",
      "restore",
      "restrictOutboundNetworkAccess",
      "userOwnedStorage",
      "dynamicThrottlingEnabled",
      "sku"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Purview/accounts/privateEndpointConnections": {
    "api_version": "2021-07-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Quantum/workspaces": {
    "api_version": "2022-01-10-preview",
    "full_properties": {
      "providers": {
        "description": "List of Providers selected for this Workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM Resource Id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "providers",
      "storageAccount"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecommendationsService/accounts": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "configuration": {
        "description": "Account configuration. This can only be set at RecommendationsService Account creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cors": {
        "description": "The list of CORS details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointAuthentications": {
        "description": "The list of service endpoints authentication details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportsConnectionString": {
        "description": "Connection string to write Accounts reports to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "cors",
      "endpointAuthentications",
      "reportsConnectionString"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecommendationsService/accounts/modeling": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "features": {
        "description": "Modeling features controls the set of supported scenarios\\models being computed. This can only be set at Modeling creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "Modeling frequency controls the modeling compute frequency.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputData": {
        "description": "The configuration to raw CDM data to be used as Modeling resource input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "Modeling size controls the maximum supported input data size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "features",
      "frequency",
      "inputData",
      "size"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecommendationsService/accounts/serviceEndpoints": {
    "api_version": "2022-03-01-preview",
    "full_properties": {
      "preAllocatedCapacity": {
        "description": "ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "preAllocatedCapacity"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults": {
    "api_version": "2022-09-30-preview",
    "full_properties": {
      "accessPolicies": {
        "description": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurgeProtection": {
        "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRbacAuthorization": {
        "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableSoftDelete": {
        "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledForDeployment": {
        "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledForDiskEncryption": {
        "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledForTemplateDeployment": {
        "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Customer Managed Key details of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringSettings": {
        "description": "Monitoring Settings of the vault",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "moveDetails": {
        "description": "The details of the latest move operation performed on the Azure Resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkAcls": {
        "description": "A set of rules governing the network accessibility of a vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "property to enable or disable resource provider inbound network traffic from public clients.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redundancySettings": {
        "description": "The redundancy Settings of a Vault",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securitySettings": {
        "description": "Security Settings of the vault",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "SKU details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteRetentionInDays": {
        "description": "softDelete data retention days. It accepts >=7 and <=90.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDetails": {
        "description": "Details for upgrading vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The URI of the vault for performing operations on keys and secrets.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "enabledForDeployment",
      "enabledForDiskEncryption",
      "enabledForTemplateDeployment",
      "enableSoftDelete",
      "sku",
      "tenantId",
      "vaultUri",
      "upgradeDetails",
      "createMode",
      "enablePurgeProtection",
      "networkAcls",
      "enableRbacAuthorization",
      "provisioningState",
      "softDeleteRetentionInDays",
      "encryption",
      "moveDetails",
      "publicNetworkAccess",
      "monitoringSettings",
      "redundancySettings",
      "securitySettings"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupEncryptionConfigs": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "encryptionAtRestType": {
        "description": "Encryption At Rest Type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureEncryptionState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyUri": {
        "description": "Key Vault Key URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastUpdateStatus": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionId": {
        "description": "Key Vault Subscription Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryptionAtRestType",
      "infrastructureEncryptionState",
      "keyUri",
      "lastUpdateStatus",
      "subscriptionId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupFabrics/backupProtectionIntent": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "backupManagementType": {
        "description": "Type of backup management for the backed up item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "itemId": {
        "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyId": {
        "description": "ID of the backup policy with which this item is backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectionIntentItemType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectionState": {
        "description": "Backup state of this backup item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "ARM ID of the resource to be backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupManagementType",
      "itemId",
      "policyId",
      "protectionState",
      "sourceResourceId",
      "protectionIntentItemType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "backupManagementType": {
        "description": "Type of backup management for the container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "healthStatus": {
        "description": "Status of health of the container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectableObjectType": {
        "description": "Type of the protectable object associated with this container",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationStatus": {
        "description": "Status of registration of the container with the Recovery Services Vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupManagementType",
      "friendlyName",
      "healthStatus",
      "registrationStatus",
      "containerType",
      "protectableObjectType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "backupManagementType": {
        "description": "Type of backup management for the backed up item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupSetName": {
        "description": "Name of the backup set the backup item belongs to",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "containerName": {
        "description": "Unique name of container",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deferredDeleteTimeInUTC": {
        "description": "Time for deferred deletion in UTC",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deferredDeleteTimeRemaining": {
        "description": "Time remaining before the DS marked for deferred delete is permanently deleted",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isArchiveEnabled": {
        "description": "Flag to identify whether datasource is protected in archive",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDeferredDeleteScheduleUpcoming": {
        "description": "Flag to identify whether the deferred deleted DS is to be purged soon",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRehydrate": {
        "description": "Flag to identify that deferred deleted DS is to be moved into Pause state",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isScheduledForDeferredDelete": {
        "description": "Flag to identify whether the DS is scheduled for deferred delete",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastRecoveryPoint": {
        "description": "Timestamp when the last (latest) backup copy was created for this backup item.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyId": {
        "description": "ID of the backup policy with which this item is backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyName": {
        "description": "Name of the policy used for protection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectedItemType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuardOperationRequests": {
        "description": "ResourceGuardOperationRequests on which LAC check will be performed",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteRetentionPeriod": {
        "description": "Soft delete retention period in days",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "ARM ID of the resource to be backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workloadType": {
        "description": "Type of workload this item represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupManagementType",
      "lastRecoveryPoint",
      "policyId",
      "sourceResourceId",
      "workloadType",
      "containerName",
      "backupSetName",
      "createMode",
      "protectedItemType",
      "deferredDeleteTimeInUTC",
      "deferredDeleteTimeRemaining",
      "isDeferredDeleteScheduleUpcoming",
      "isRehydrate",
      "isScheduledForDeferredDelete",
      "resourceGuardOperationRequests",
      "isArchiveEnabled",
      "policyName",
      "softDeleteRetentionPeriod"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupPolicies": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "backupManagementType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectedItemsCount": {
        "description": "Number of items associated with this policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuardOperationRequests": {
        "description": "ResourceGuard Operation Requests",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "protectedItemsCount",
      "backupManagementType",
      "resourceGuardOperationRequests"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupResourceGuardProxies": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "description": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastUpdatedTime": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuardOperationDetails": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuardResourceId": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "lastUpdatedTime",
      "resourceGuardOperationDetails",
      "resourceGuardResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupconfig": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "enhancedSecurityState": {
        "description": "Enabled or Disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isSoftDeleteFeatureStateEditable": {
        "description": "Is soft delete feature state editable",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuardOperationRequests": {
        "description": "ResourceGuard Operation Requests",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteFeatureState": {
        "description": "Soft Delete feature state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageModelType": {
        "description": "Storage type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageType": {
        "description": "Storage type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageTypeState": {
        "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enhancedSecurityState",
      "softDeleteFeatureState",
      "storageModelType",
      "storageType",
      "storageTypeState",
      "resourceGuardOperationRequests",
      "isSoftDeleteFeatureStateEditable"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupstorageconfig": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "crossRegionRestoreFlag": {
        "description": "Opt in details of Cross Region Restore feature.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dedupState": {
        "description": "Vault Dedup state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageModelType": {
        "description": "Storage type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageType": {
        "description": "Storage type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageTypeState": {
        "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "xcoolState": {
        "description": "Vault x-cool state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageModelType",
      "storageType",
      "storageTypeState",
      "crossRegionRestoreFlag",
      "dedupState",
      "xcoolState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/certificates": {
    "api_version": "2022-09-30-preview",
    "full_properties": {
      "authType": {
        "description": "Specifies the authentication type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The base64 encoded certificate raw data string",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authType",
      "certificate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/extendedInformation": {
    "api_version": "2022-09-30-preview",
    "full_properties": {
      "algorithm": {
        "description": "Algorithm for Vault ExtendedInfo",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKey": {
        "description": "Encryption key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKeyThumbprint": {
        "description": "Encryption key thumbprint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "integrityKey": {
        "description": "Integrity key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "algorithm",
      "encryptionKey",
      "encryptionKeyThumbprint",
      "integrityKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/privateEndpointConnections": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "id": {
        "description": "Resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "The location of the private endpoint connection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint network resource that is linked to the Private Endpoint connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "Private Link Service Connection State",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Properties of the PrivateEndpointConnectProperties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets or sets provisioning state of the private endpoint connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "location",
      "properties",
      "id",
      "name",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "systemData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationAlertSettings": {
    "api_version": "2022-09-10",
    "full_properties": {
      "customEmailAddresses": {
        "description": "The custom email address for sending emails.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "locale": {
        "description": "The locale for the email notification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendToOwners": {
        "description": "A value indicating whether to send email to subscription administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customEmailAddresses",
      "locale",
      "sendToOwners"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics": {
    "api_version": "2022-09-10",
    "full_properties": {
      "customDetails": {
        "description": "Fabric provider specific settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customDetails"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings": {
    "api_version": "2022-09-10",
    "full_properties": {
      "fabricSpecificDetails": {
        "description": "Input details specific to fabrics during Network Mapping.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoveryFabricName": {
        "description": "Recovery fabric Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryNetworkId": {
        "description": "Recovery network Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fabricSpecificDetails",
      "recoveryFabricName",
      "recoveryNetworkId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers": {
    "api_version": "2022-09-10",
    "full_properties": {
      "providerSpecificInput": {
        "description": "Provider specific inputs for container creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "providerSpecificInput"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems": {
    "api_version": "2022-09-10",
    "full_properties": {
      "policyId": {
        "description": "The policy Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSpecificDetails": {
        "description": "Enable migration provider specific input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyId",
      "providerSpecificDetails"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectedItems": {
    "api_version": "2022-09-10",
    "full_properties": {
      "policyId": {
        "description": "The Policy Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectableItemId": {
        "description": "The protectable item Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSpecificDetails": {
        "description": "Enable protection provider specific input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyId",
      "protectableItemId",
      "providerSpecificDetails"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings": {
    "api_version": "2022-09-10",
    "full_properties": {
      "PolicyId": {
        "description": "Applicable policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyId": {
        "description": "Applicable policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSpecificInput": {
        "description": "Provider specific input for pairing operations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetProtectionContainerId": {
        "description": "The target unique protection container name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "PolicyId",
      "providerSpecificInput",
      "targetProtectionContainerId",
      "policyId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationRecoveryServicesProviders": {
    "api_version": "2022-09-10",
    "full_properties": {
      "authenticationIdentityInput": {
        "description": "Identity provider input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "biosId": {
        "description": "The Bios Id of the machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPlaneAuthenticationIdentityInput": {
        "description": "Identity provider input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "machineId": {
        "description": "The Id of the machine where the provider is getting added.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "machineName": {
        "description": "The name of the machine where the provider is getting added.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceAccessIdentityInput": {
        "description": "Identity provider input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authenticationIdentityInput",
      "machineName",
      "resourceAccessIdentityInput",
      "dataPlaneAuthenticationIdentityInput",
      "machineId",
      "biosId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationStorageClassifications/replicationStorageClassificationMappings": {
    "api_version": "2022-09-10",
    "full_properties": {
      "targetStorageClassificationId": {
        "description": "The ID of the storage object.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetStorageClassificationId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationvCenters": {
    "api_version": "2022-09-10",
    "full_properties": {
      "friendlyName": {
        "description": "The friendly name of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipAddress": {
        "description": "The IP address of the vCenter to be discovered.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port number for discovery.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "processServerId": {
        "description": "The process server Id from where the discovery is orchestrated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runAsAccountId": {
        "description": "The account Id which has privileges to discover the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "friendlyName",
      "ipAddress",
      "port",
      "processServerId",
      "runAsAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationPolicies": {
    "api_version": "2022-09-10",
    "full_properties": {
      "providerSpecificInput": {
        "description": "Base class for provider specific input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "providerSpecificInput"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationProtectionIntents": {
    "api_version": "2022-09-10",
    "full_properties": {
      "providerSpecificDetails": {
        "description": "Create protection intent provider specific input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "providerSpecificDetails"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationRecoveryPlans": {
    "api_version": "2022-09-10",
    "full_properties": {
      "failoverDeploymentModel": {
        "description": "The failover deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groups": {
        "description": "The recovery plan groups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryFabricId": {
        "description": "The primary fabric Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSpecificInput": {
        "description": "The provider specific input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoveryFabricId": {
        "description": "The recovery fabric Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "failoverDeploymentModel",
      "groups",
      "primaryFabricId",
      "recoveryFabricId",
      "providerSpecificInput"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationVaultSettings": {
    "api_version": "2022-09-10",
    "full_properties": {
      "migrationSolutionId": {
        "description": "The migration solution Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmwareToAzureProviderType": {
        "description": "VMware to Azure provider type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "migrationSolutionId",
      "vmwareToAzureProviderType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.RedHatOpenShift/openShiftClusters": {
    "api_version": "2022-04-01",
    "full_properties": {
      "apiserverProfile": {
        "description": "APIServerProfile represents an API server profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterProfile": {
        "description": "ClusterProfile represents a cluster profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consoleProfile": {
        "description": "ConsoleProfile represents a console profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingressProfiles": {
        "description": "The cluster ingress profiles.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "masterProfile": {
        "description": "MasterProfile represents a master profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "NetworkProfile represents a network profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The cluster provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePrincipalProfile": {
        "description": "ServicePrincipalProfile represents a service principal profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerProfiles": {
        "description": "The cluster worker profiles.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiserverProfile",
      "clusterProfile",
      "consoleProfile",
      "ingressProfiles",
      "masterProfile",
      "networkProfile",
      "provisioningState",
      "servicePrincipalProfile",
      "workerProfiles"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces": {
    "api_version": "2021-11-01",
    "full_properties": {
      "privateEndpointConnections": {
        "description": "List of private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpointConnections",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/authorizationRules": {
    "api_version": "2021-11-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/hybridConnections": {
    "api_version": "2021-11-01",
    "full_properties": {
      "hostname": {
        "description": "The hostname of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relayArmUri": {
        "description": "The ARM URI to the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "relayName": {
        "description": "The name of the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendKeyName": {
        "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendKeyValue": {
        "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusNamespace": {
        "description": "The name of the Service Bus namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusSuffix": {
        "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requiresClientAuthorization",
      "userMetadata",
      "hostname",
      "port",
      "relayArmUri",
      "relayName",
      "sendKeyName",
      "sendKeyValue",
      "serviceBusNamespace",
      "serviceBusSuffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/hybridConnections/authorizationRules": {
    "api_version": "2021-11-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/networkRuleSets": {
    "api_version": "2021-11-01",
    "full_properties": {
      "applyToBuiltInEventHubEndpoint": {
        "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultAction": {
        "description": "Default Action for Network Rule Set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRules": {
        "description": "List of IP Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceAccessEnabled": {
        "description": "Value that indicates whether Trusted Service Access is Enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List VirtualNetwork Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultAction",
      "ipRules",
      "virtualNetworkRules",
      "trustedServiceAccessEnabled",
      "applyToBuiltInEventHubEndpoint",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/privateEndpointConnections": {
    "api_version": "2021-11-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/wcfRelays": {
    "api_version": "2021-11-01",
    "full_properties": {
      "relayType": {
        "description": "WCF relay type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this relay; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresTransportSecurity": {
        "description": "Returns true if transport security is needed for this relay; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "relayType",
      "requiresClientAuthorization",
      "requiresTransportSecurity",
      "userMetadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/wcfRelays/authorizationRules": {
    "api_version": "2021-11-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ResourceConnector/appliances": {
    "api_version": "2022-04-15-preview",
    "full_properties": {
      "applianceDefinitionId": {
        "description": "The fully qualified path of appliance definition Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "distro": {
        "description": "Represents a supported Fabric/Infra. (AKSEdge etc...).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureConfig": {
        "description": "Contains infrastructure information about the Appliance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "publicKey": {
        "description": "Certificates pair used to download MSI certificate from HIS",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of the Appliance",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applianceDefinitionId",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "distro",
      "infrastructureConfig",
      "publicKey",
      "version"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ResourceGraph/queries": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "description": {
        "description": "The description of a graph query.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "query": {
        "description": "KQL query that will be graph.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "query"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Resources/deploymentScripts": {
    "api_version": "2020-10-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.Resources/deployments": {
    "api_version": "2021-04-01",
    "full_properties": {
      "expressionEvaluationOptions": {
        "description": "Template expression evaluation options'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "Deployment mode",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Deployment parameters",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Deployment parameters link",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "Deployment template",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Deployment template link",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "expressionEvaluationOptions",
      "mode",
      "templateLink",
      "template",
      "parametersLink",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Resources/links": {
    "api_version": "2015-01-01",
    "full_properties": {
      "notes": {
        "description": "Notes for this link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetId": {
        "description": "Target resource id to link to",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetId",
      "notes"
    ],
    "required": [
      "type",
      "apiVersion",
      "name",
      "properties"
    ]
  },
  "Microsoft.Resources/templateSpecs": {
    "api_version": "2022-02-01",
    "full_properties": {
      "description": {
        "description": "Template Spec description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Template Spec display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The Template Spec metadata. Metadata is an open-ended object and is typically a collection of key-value pairs.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "metadata"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Resources/templateSpecs/versions": {
    "api_version": "2022-02-01",
    "full_properties": {
      "artifacts": {
        "description": "An array of Template Spec artifacts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Template Spec version description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linkedTemplates": {
        "description": "An array of linked template artifacts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mainTemplate": {
        "description": "The main Azure Resource Manager template content.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The version metadata. Metadata is an open-ended object and is typically a collection of key-value pairs.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "template": {
        "description": "The Azure Resource Manager template content.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "uiFormDefinition": {
        "description": "The Azure Resource Manager template UI definition content.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifacts",
      "description",
      "template",
      "linkedTemplates",
      "mainTemplate",
      "metadata",
      "uiFormDefinition"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ScVmm/availabilitySets": {
    "api_version": "2020-06-05-preview",
    "full_properties": {
      "availabilitySetName": {
        "description": "Name of the availability set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managed": {
        "description": "If the availability set supports managed disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformFaultDomainCount": {
        "description": "Fault Domain count.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformUpdateDomainCount": {
        "description": "Update Domain count.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachines": {
        "description": "A list of references to all virtual machines in the availability set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "platformFaultDomainCount",
      "platformUpdateDomainCount",
      "virtualMachines",
      "managed",
      "proximityPlacementGroup",
      "availabilitySetName",
      "vmmServerId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ScVmm/clouds": {
    "api_version": "2020-06-05-preview",
    "full_properties": {
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the cloud.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inventoryItemId",
      "uuid",
      "vmmServerId"
    ],
    "required": [
      "apiVersion",
      "extendedLocation",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ScVmm/virtualMachineTemplates": {
    "api_version": "2020-06-05-preview",
    "full_properties": {
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual machine template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual machine template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "moRefId",
      "vCenterId"
    ],
    "required": [
      "apiVersion",
      "extendedLocation",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ScVmm/virtualMachines": {
    "api_version": "2020-06-05-preview",
    "full_properties": {
      "additionalCapabilities": {
        "description": "Enables or disables a capability on the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "address": {
        "description": "Public IP address of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorAccount": {
        "description": "Admin credentials for virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "amountOfRam": {
        "description": "The amount of memory",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationProfile": {
        "description": "Contains the list of gallery applications that should be made available to the VM/VMSS",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySet": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySets": {
        "description": "Availability Sets in vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingProfile": {
        "description": "Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservation": {
        "description": "The parameters of a capacity reservation Profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "checkpointType": {
        "description": "Type of checkpoint supported for the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "checkpoints": {
        "description": "Checkpoints in the vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudId": {
        "description": "ARM Id of the cloud resource to use for deploying the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customization": {
        "description": "Guest OS Customization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disks": {
        "description": "The list of Virtual Disks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exposeToGuestVM": {
        "description": "Expose Guest OS or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extensionsTimeBudget": {
        "description": "Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firmwareType": {
        "description": "Firmware type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "generation": {
        "description": "Gets or sets the generation for the vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "guestAgentProfile": {
        "description": "Defines the resource properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "host": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostGroup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isNotebookInstanceCompute": {
        "description": "Indicates whether this compute will be used for running notebooks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network interfaces or the networking configuration of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nics": {
        "description": "The list of Virtual NICs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberOfCores": {
        "description": "The number of CPU cores",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Password for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "placementProfile": {
        "description": "Defines the resource properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformFaultDomain": {
        "description": "Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateCloudId": {
        "description": "Private Cloud Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourcePool": {
        "description": "Resource pool model",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourcePoolId": {
        "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will\r\ndeploy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scheduledEventsProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Specifies the Security profile settings for the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbiosUuid": {
        "description": "Gets or sets the SMBIOS UUID of the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sshPort": {
        "description": "Port open for ssh connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the virtual machine disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateId": {
        "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userData": {
        "description": "UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "username": {
        "description": "Username for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vSphereNetworks": {
        "description": "The list of Virtual VSphere Networks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineScaleSet": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineSize": {
        "description": "Virtual Machine size",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmName": {
        "description": "VMName is the name of VM on the SCVMM server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilitySet",
      "diagnosticsProfile",
      "hardwareProfile",
      "licenseType",
      "networkProfile",
      "osProfile",
      "storageProfile",
      "address",
      "administratorAccount",
      "sshPort",
      "virtualMachineSize",
      "proximityPlacementGroup",
      "additionalCapabilities",
      "billingProfile",
      "evictionPolicy",
      "host",
      "priority",
      "virtualMachineScaleSet",
      "amountOfRam",
      "customization",
      "disks",
      "exposeToGuestVM",
      "nics",
      "numberOfCores",
      "password",
      "privateCloudId",
      "resourcePool",
      "templateId",
      "username",
      "vSphereNetworks",
      "extensionsTimeBudget",
      "hostGroup",
      "securityProfile",
      "availabilitySets",
      "checkpoints",
      "checkpointType",
      "cloudId",
      "generation",
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "vmName",
      "firmwareType",
      "guestAgentProfile",
      "moRefId",
      "placementProfile",
      "resourcePoolId",
      "smbiosUuid",
      "vCenterId",
      "platformFaultDomain",
      "isNotebookInstanceCompute",
      "scheduledEventsProfile",
      "userData",
      "capacityReservation",
      "applicationProfile"
    ],
    "required": [
      "apiVersion",
      "extendedLocation",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ScVmm/virtualNetworks": {
    "api_version": "2020-06-05-preview",
    "full_properties": {
      "allowedSubnets": {
        "description": "The allowed subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalProviderResourceId": {
        "description": "The Microsoft.Network resource identifier of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalSubnets": {
        "description": "The external subnet properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "id": {
        "description": "Uri of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Properties of a subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetOverrides": {
        "description": "The subnet overrides of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedSubnets",
      "description",
      "externalProviderResourceId",
      "provisioningState",
      "subnetOverrides",
      "externalSubnets",
      "uniqueIdentifier",
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "moRefId",
      "vCenterId",
      "id",
      "subnet"
    ],
    "required": [
      "apiVersion",
      "extendedLocation",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ScVmm/vmmServers": {
    "api_version": "2020-06-05-preview",
    "full_properties": {
      "credentials": {
        "description": "Credentials to connect to VMMServer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "Fqdn is the hostname/ip of the vmmServer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "Port is the port on which the vmmServer is listening.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "fqdn",
      "port"
    ],
    "required": [
      "apiVersion",
      "extendedLocation",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ScVmm/vmmServers/inventoryItems": {
    "api_version": "2020-06-05-preview",
    "full_properties": {
      "managedResourceId": {
        "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moName": {
        "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "managedResourceId",
      "moName",
      "moRefId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Scheduler/jobCollections": {
    "api_version": "2016-03-01",
    "full_properties": {
      "quota": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or sets the state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "quota",
      "sku",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Scheduler/jobCollections/jobs": {
    "api_version": "2016-03-01",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided key, value pairs that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User-defined description of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "Base class for inputs to a Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transferType": {
        "description": "Type of the data transfer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType",
      "transferType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Search/searchServices": {
    "api_version": "2021-04-01-preview",
    "full_properties": {
      "authOptions": {
        "description": "Defines the options for how the data plane API of a Search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disabledDataExfiltrationOptions": {
        "description": "A list of data exfiltration scenarios that are explicitly disallowed for the search service. Currently, the only supported value is 'All' to disable all possible data export scenarios with more fine grained controls planned for the future.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionWithCmk": {
        "description": "Describes a policy that determines how resources within the search service are to be encrypted with Customer Managed Keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingMode": {
        "description": "Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRuleSet": {
        "description": "Network specific rules that determine how the Azure Cognitive Search service may be reached.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionCount": {
        "description": "The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicaCount": {
        "description": "The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "semanticSearch": {
        "description": "Sets options that control the availability of semantic search. This configuration is only possible for certain Azure Cognitive Search SKUs in certain locations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Defines the SKU of an Azure Search Service, which determines price tier and capacity limits.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partitionCount",
      "replicaCount",
      "sku",
      "hostingMode",
      "networkRuleSet",
      "publicNetworkAccess",
      "authOptions",
      "disabledDataExfiltrationOptions",
      "disableLocalAuth",
      "encryptionWithCmk",
      "semanticSearch"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Search/searchServices/privateEndpointConnections": {
    "api_version": "2021-04-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Search/searchServices/sharedPrivateLinkResources": {
    "api_version": "2021-04-01-preview",
    "full_properties": {
      "groupId": {
        "description": "The group id from the provider of resource the shared private link resource is for",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLink": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkLocation": {
        "description": "The location of the shared private link resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "The resource id of the resource the shared private link resource is for",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestMessage": {
        "description": "The request message for requesting approval of the shared private link resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceRegion": {
        "description": "Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupId",
      "privateLinkResourceId",
      "provisioningState",
      "requestMessage",
      "resourceRegion",
      "status",
      "privateLink",
      "privateLinkLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/assignments": {
    "api_version": "2021-08-01-preview",
    "full_properties": {
      "additionalData": {
        "description": "Additional data about the assignment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "assignedComponent": {
        "description": "describe the properties of a security assessment object reference (by key)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "assignedStandard": {
        "description": "describe the properties of a of a security standard object reference",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "blueprintId": {
        "description": "ID of the published version of a blueprint definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "description of the standardAssignment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "display name of the standardAssignment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "effect": {
        "description": "expected effect of this assignment (Disable/Exempt/etc)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiresOn": {
        "description": "Expiration date of this assignment as a full ISO date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "locks": {
        "description": "Defines how resources deployed by a blueprint assignment are locked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Blueprint assignment parameter values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGroups": {
        "description": "Names and locations of resource group placeholders.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scope": {
        "description": "Scope to which the standardAssignment applies - can be a subscription path or a resource group under that subscription",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "blueprintId",
      "description",
      "displayName",
      "locks",
      "parameters",
      "resourceGroups",
      "scope",
      "additionalData",
      "assignedComponent",
      "assignedStandard",
      "effect",
      "expiresOn",
      "metadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/automations": {
    "api_version": "2019-01-01-preview",
    "full_properties": {
      "actions": {
        "description": "A collection of the actions which are triggered if all the configured rules evaluations, within at least one rule set, are true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The security automation description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Indicates whether the security automation is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "A collection of scopes on which the security automations logic is applied. Supported scopes are the subscription itself or a resource group under that subscription. The automation will only apply on defined scopes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sources": {
        "description": "A collection of the source event types which evaluate the security automation set of rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "description",
      "isEnabled",
      "scopes",
      "sources"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/customAssessmentAutomations": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "compressedQuery": {
        "description": "Base 64 encoded KQL query representing the assessment automation results required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description to relate to the assessments generated by this assessment automation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of the assessments generated by this assessment automation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "remediationDescription": {
        "description": "The remediation description to relate to the assessments generated by this assessment automation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "severity": {
        "description": "The severity to relate to the assessments generated by this assessment automation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportedCloud": {
        "description": "Relevant cloud for the custom assessment automation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "compressedQuery",
      "description",
      "displayName",
      "remediationDescription",
      "severity",
      "supportedCloud"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/customEntityStoreAssignments": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "principal": {
        "description": "The principal assigned with entity store. If not provided, will use caller principal. Format of principal is: [AAD type]=[PrincipalObjectId];[TenantId]",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principal"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/iotSecuritySolutions": {
    "api_version": "2019-08-01",
    "full_properties": {
      "additionalWorkspaces": {
        "description": "List of additional workspaces",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disabledDataSources": {
        "description": "Disabled data sources. Disabling these data sources compromises the system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Resource display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "export": {
        "description": "List of additional options for exporting to workspace data.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iotHubs": {
        "description": "IoT Hub resource IDs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recommendationsConfiguration": {
        "description": "List of the configuration status for each recommendation type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status of the IoT Security solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "unmaskedIpLoggingStatus": {
        "description": "Unmasked IP address logging status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userDefinedResources": {
        "description": "Properties of the IoT Security solution's user defined resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspace": {
        "description": "Workspace resource ID",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledDataSources",
      "displayName",
      "export",
      "iotHubs",
      "recommendationsConfiguration",
      "status",
      "userDefinedResources",
      "workspace",
      "additionalWorkspaces",
      "unmaskedIpLoggingStatus"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/locations/jitNetworkAccessPolicies": {
    "api_version": "2020-01-01",
    "full_properties": {
      "requests": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachines": {
        "description": "Configurations for Microsoft.Compute/virtualMachines resource type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requests",
      "virtualMachines"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/pricings": {
    "api_version": "2017-08-01-preview",
    "full_properties": {
      "pricingTier": {
        "description": "The pricing tier value. Microsoft Defender for Cloud is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "pricingTier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/securityConnectors": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "cloudName": {
        "description": "The multi cloud resource's cloud name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentData": {
        "description": "The security connector environment data.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentName": {
        "description": "The multi cloud resource's cloud name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hierarchyIdentifier": {
        "description": "The multi cloud resource identifier (account id in case of AWS connector, project number in case of GCP connector).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "offerings": {
        "description": "A collection of offerings for the security connector.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "organizationalData": {
        "description": "The multi cloud account's organizational data",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cloudName",
      "hierarchyIdentifier",
      "offerings",
      "organizationalData",
      "environmentData",
      "environmentName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/standards": {
    "api_version": "2021-08-01-preview",
    "full_properties": {
      "category": {
        "description": "category of the standard provided",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "components": {
        "description": "List of component objects containing component unique keys (such as assessment keys) to apply to standard scope.  Currently only supports assessment keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "description of the standard",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "display name of the standard, equivalent to the standardId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportedClouds": {
        "description": "List of all standard supported clouds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "category",
      "components",
      "description",
      "displayName",
      "supportedClouds"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForEDMUpload": {
    "api_version": "2021-03-08",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForEDMUpload/privateEndpointConnections": {
    "api_version": "2021-03-08",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter": {
    "api_version": "2021-03-08",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter/privateEndpointConnections": {
    "api_version": "2021-03-08",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForM365SecurityCenter": {
    "api_version": "2021-03-08",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForM365SecurityCenter/privateEndpointConnections": {
    "api_version": "2021-03-08",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForMIPPolicySync": {
    "api_version": "2021-03-08",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForMIPPolicySync/privateEndpointConnections": {
    "api_version": "2021-03-08",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI": {
    "api_version": "2021-03-08",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI/privateEndpointConnections": {
    "api_version": "2021-03-08",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell": {
    "api_version": "2021-03-08",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "acrConfiguration": {
        "description": "Azure container registry configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "Authentication configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "Export operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "importConfiguration": {
        "description": "Import operation configuration information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "The list of private endpoint connections that are set up for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "authenticationConfiguration",
      "corsConfiguration",
      "cosmosDbConfiguration",
      "exportConfiguration",
      "privateEndpointConnections",
      "publicNetworkAccess",
      "acrConfiguration",
      "provisioningState",
      "importConfiguration"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell/privateEndpointConnections": {
    "api_version": "2021-03-08",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityDevOps/azureDevOpsConnectors": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "authorization": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orgs": {
        "description": "Gets or sets org onboarding information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorization",
      "orgs",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "autoDiscovery": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDiscovery",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs/projects": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "autoDiscovery": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orgName": {
        "description": "Gets or sets AzureDevOps Org Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectId": {
        "description": "Gets or sets AzureDevOps Project Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDiscovery",
      "orgName",
      "projectId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs/projects/repos": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "actionableRemediation": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orgName": {
        "description": "Gets or sets AzureDevOps Org Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectName": {
        "description": "Gets or sets AzureDevOps Project Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoId": {
        "description": "Gets or sets Azure DevOps repo id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "Gets or sets AzureDevOps repo url.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "visibility": {
        "description": "Gets or sets AzureDevOps repo visibility, whether it is public or private etc.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actionableRemediation",
      "orgName",
      "projectName",
      "provisioningState",
      "repoId",
      "repoUrl",
      "visibility"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityDevOps/gitHubConnectors": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "code": {
        "description": "Gets or sets one-time OAuth code to exchange for refresh and access tokens.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "code",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityDevOps/gitHubConnectors/owners": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "ownerUrl": {
        "description": "Gets or sets gitHub owner url.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ownerUrl",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SecurityDevOps/gitHubConnectors/owners/repos": {
    "api_version": "2022-09-01-preview",
    "full_properties": {
      "accountId": {
        "description": "Gets or sets gitHub repo account id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerName": {
        "description": "Gets or sets GitHub Owner Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "Gets or sets gitHub repo url.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountId",
      "ownerName",
      "provisioningState",
      "repoUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "alternateName": {
        "description": "Alternate name for namespace",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "This property disables SAS authentication for the Service Bus namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryption",
      "zoneRedundant",
      "privateEndpointConnections",
      "disableLocalAuth",
      "alternateName",
      "minimumTlsVersion",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/AuthorizationRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "alternateName": {
        "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerNamespace": {
        "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alternateName",
      "partnerNamespace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/ipfilterrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "action": {
        "description": "The IP Filter Action.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filterName": {
        "description": "IP Filter name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipMask": {
        "description": "IP Mask",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "filterName",
      "ipMask"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/migrationConfigurations": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "postMigrationName": {
        "description": "Name to access Standard Namespace after migration",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetNamespace": {
        "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "postMigrationName",
      "targetNamespace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/networkRuleSets": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "applyToBuiltInEventHubEndpoint": {
        "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultAction": {
        "description": "Default Action for Network Rule Set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRules": {
        "description": "List of IP Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceAccessEnabled": {
        "description": "Value that indicates whether Trusted Service Access is Enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List VirtualNetwork Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultAction",
      "ipRules",
      "virtualNetworkRules",
      "trustedServiceAccessEnabled",
      "applyToBuiltInEventHubEndpoint",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/privateEndpointConnections": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/queues": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deadLetteringOnMessageExpiration": {
        "description": "A value that indicates whether this queue has dead letter support when a message expires.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableExpress": {
        "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitioning": {
        "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forwardDeadLetteredMessagesTo": {
        "description": "Queue/Topic name to forward the Dead Letter message",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "forwardTo": {
        "description": "Queue/Topic name to forward the messages",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lockDuration": {
        "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxDeliveryCount": {
        "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxMessageSizeInKilobytes": {
        "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeInMegabytes": {
        "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresDuplicateDetection": {
        "description": "A value indicating if this queue requires duplicate detection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresSession": {
        "description": "A value that indicates whether the queue supports the concept of sessions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "deadLetteringOnMessageExpiration",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "enableExpress",
      "enablePartitioning",
      "forwardDeadLetteredMessagesTo",
      "forwardTo",
      "lockDuration",
      "maxDeliveryCount",
      "maxSizeInMegabytes",
      "requiresDuplicateDetection",
      "requiresSession",
      "status",
      "maxMessageSizeInKilobytes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/queues/authorizationRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableExpress": {
        "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitioning": {
        "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxMessageSizeInKilobytes": {
        "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeInMegabytes": {
        "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresDuplicateDetection": {
        "description": "Value indicating if this topic requires duplicate detection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportOrdering": {
        "description": "Value that indicates whether the topic supports ordering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "enableExpress",
      "enablePartitioning",
      "maxSizeInMegabytes",
      "requiresDuplicateDetection",
      "status",
      "supportOrdering",
      "maxMessageSizeInKilobytes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics/authorizationRules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics/subscriptions": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientAffineProperties": {
        "description": "Properties specific to client affine subscriptions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetteringOnFilterEvaluationExceptions": {
        "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetteringOnMessageExpiration": {
        "description": "Value that indicates whether a subscription has dead letter support when a message expires.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forwardDeadLetteredMessagesTo": {
        "description": "Queue/Topic name to forward the Dead Letter message",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "forwardTo": {
        "description": "Queue/Topic name to forward the messages",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isClientAffine": {
        "description": "Value that indicates whether the subscription has an affinity to the client id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lockDuration": {
        "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxDeliveryCount": {
        "description": "Number of maximum deliveries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresSession": {
        "description": "Value indicating if a subscription supports the concept of sessions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "deadLetteringOnFilterEvaluationExceptions",
      "deadLetteringOnMessageExpiration",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "forwardDeadLetteredMessagesTo",
      "forwardTo",
      "lockDuration",
      "maxDeliveryCount",
      "requiresSession",
      "status",
      "clientAffineProperties",
      "isClientAffine"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules": {
    "api_version": "2022-01-01-preview",
    "full_properties": {
      "action": {
        "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationFilter": {
        "description": "Represents the correlation filter expression.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filterType": {
        "description": "Filter type that is evaluated against a BrokeredMessage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlFilter": {
        "description": "Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "correlationFilter",
      "filterType",
      "sqlFilter"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/virtualnetworkrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters": {
    "api_version": "2021-06-01",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applicationTypes": {
    "api_version": "2021-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applicationTypes/versions": {
    "api_version": "2021-06-01",
    "full_properties": {
      "appPackageUrl": {
        "description": "The URL to the application package",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appPackageUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applications": {
    "api_version": "2021-06-01",
    "full_properties": {
      "debugParams": {
        "description": "Internal - used by Visual Studio to setup the debugging session on the local development environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Describes the diagnostics options available",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedIdentities": {
        "description": "List of user assigned identities for the application, each mapped to a friendly name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumNodes": {
        "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metrics": {
        "description": "List of application capacity metric description.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumNodes": {
        "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "removeApplicationCapacity": {
        "description": "Remove the current application capacity settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "services": {
        "description": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "typeName": {
        "description": "The application type name as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeVersion": {
        "description": "The version of the application type as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePolicy": {
        "description": "Describes the policy for a monitored application upgrade.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maximumNodes",
      "metrics",
      "minimumNodes",
      "parameters",
      "removeApplicationCapacity",
      "typeName",
      "typeVersion",
      "upgradePolicy",
      "debugParams",
      "description",
      "diagnostics",
      "services",
      "managedIdentities",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applications/services": {
    "api_version": "2021-06-01",
    "full_properties": {
      "autoScalingPolicies": {
        "description": "Auto scaling policies",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "codePackages": {
        "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationScheme": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMoveCost": {
        "description": "Specifies the move cost for the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Reference to sinks in DiagnosticsDescription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthState": {
        "description": "The health state of a resource such as Application, Service, or Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRefs": {
        "description": "The names of the private networks that this service needs to be part of.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The operation system required by the code in service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionDescription": {
        "description": "Describes how the service is partitioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementConstraints": {
        "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replicaCount": {
        "description": "The number of replicas of the service to create. Defaults to 1 if not specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scalingPolicies": {
        "description": "Scaling policies for this service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceDnsName": {
        "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceLoadMetrics": {
        "description": "The service load metrics is given as an array of ServiceLoadMetric objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePackageActivationMode": {
        "description": "The activation Mode of the service package.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePlacementPolicies": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceTypeName": {
        "description": "The name of the service type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetLocation": {
        "description": "The Azure location to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetSubscriptionId": {
        "description": "The subscription to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "correlationScheme",
      "defaultMoveCost",
      "partitionDescription",
      "placementConstraints",
      "serviceLoadMetrics",
      "servicePlacementPolicies",
      "serviceTypeName",
      "codePackages",
      "description",
      "diagnostics",
      "healthState",
      "networkRefs",
      "osType",
      "replicaCount",
      "targetLocation",
      "targetSubscriptionId",
      "autoScalingPolicies",
      "servicePackageActivationMode",
      "serviceDnsName",
      "scalingPolicies"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/managedClusters": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "aadProfile": {
        "description": "For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addonFeatures": {
        "description": "List of add-on features to enable on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addonProfiles": {
        "description": "The profile of managed cluster add-on.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "adminPassword": {
        "description": "VM admin user password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "adminUserName": {
        "description": "VM admin user name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "agentPoolProfiles": {
        "description": "The agent pool properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRdpAccess": {
        "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiServerAccessProfile": {
        "description": "Access profile for managed cluster API server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiServerAuthorizedIPRanges": {
        "description": "(PREVIEW) Authorized IP Ranges to kubernetes API server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": "The policy used to clean up unused versions. When the policy is not specified explicitly, the default unused application versions to keep will be 3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoScalerProfile": {
        "description": "Parameters to be applied to the cluster-autoscaler when enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoUpgradeProfile": {
        "description": "Auto upgrade profile for a managed cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "auxiliarySubnets": {
        "description": "Auxiliary subnets for the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureMonitorProfile": {
        "description": "Prometheus addon profile for the container service cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientConnectionPort": {
        "description": "The port used for client connections to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clients": {
        "description": "Client certificates that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterUpgradeCadence": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data used when creating a target resource from a source resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAccounts": {
        "description": "If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskEncryptionSetID": {
        "description": "This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsName": {
        "description": "The cluster dns name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsPrefix": {
        "description": "This cannot be updated once the Managed Cluster has been created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableAutoOSUpgrade": {
        "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableIpv6": {
        "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNamespaceResources": {
        "description": "The default value is false. It can be enabled/disabled on creation and updation of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource) for more details on Namespace as a ARM Resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePodSecurityPolicy": {
        "description": "(DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRBAC": {
        "description": "Whether to enable Kubernetes Role-Based Access Control.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableServicePublicIP": {
        "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdnSubdomain": {
        "description": "This cannot be updated once the Managed Cluster has been created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "guardrailsProfile": {
        "description": "The Guardrails profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpGatewayConnectionPort": {
        "description": "The port used for HTTP connections to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpProxyConfig": {
        "description": "Cluster HTTP proxy configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identityProfile": {
        "description": "Identities associated with the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingressProfile": {
        "description": "Ingress profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipTags": {
        "description": "The list of IP tags associated with the default public IP address of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kubernetesVersion": {
        "description": "When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linuxProfile": {
        "description": "Profile for Linux VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingRules": {
        "description": "Load balancing rules that are applied to the public load balancer of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Profile of network configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityRules": {
        "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeResourceGroup": {
        "description": "The name of the resource group containing agent pool nodes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "oidcIssuerProfile": {
        "description": "The OIDC issuer profile of the Managed Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "podIdentityProfile": {
        "description": "See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkResources": {
        "description": "Private link resources associated with the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Allow or deny public network access for AKS.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Security profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceEndpoints": {
        "description": "Service endpoints for subnets in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePrincipalProfile": {
        "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "windowsProfile": {
        "description": "Profile for Windows VMs in the managed cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workloadAutoScalerProfile": {
        "description": "Workload Auto-scaler profile for the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zonalResiliency": {
        "description": "Indicates if the cluster has zone resiliency.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPoolProfiles",
      "dnsPrefix",
      "kubernetesVersion",
      "linuxProfile",
      "servicePrincipalProfile",
      "aadProfile",
      "addonProfiles",
      "enableRBAC",
      "networkProfile",
      "apiServerAuthorizedIPRanges",
      "enablePodSecurityPolicy",
      "nodeResourceGroup",
      "windowsProfile",
      "apiServerAccessProfile",
      "identityProfile",
      "addonFeatures",
      "adminPassword",
      "adminUserName",
      "azureActiveDirectory",
      "clientConnectionPort",
      "clients",
      "clusterCodeVersion",
      "dnsName",
      "fabricSettings",
      "httpGatewayConnectionPort",
      "loadBalancingRules",
      "diskEncryptionSetID",
      "autoScalerProfile",
      "autoUpgradeProfile",
      "podIdentityProfile",
      "allowRdpAccess",
      "applicationTypeVersionsCleanupPolicy",
      "clusterUpgradeCadence",
      "enableAutoOSUpgrade",
      "networkSecurityRules",
      "fqdnSubdomain",
      "disableLocalAccounts",
      "httpProxyConfig",
      "privateLinkResources",
      "clusterUpgradeMode",
      "zonalResiliency",
      "enableIpv6",
      "ipTags",
      "subnetId",
      "securityProfile",
      "publicNetworkAccess",
      "enableNamespaceResources",
      "oidcIssuerProfile",
      "auxiliarySubnets",
      "enableServicePublicIP",
      "serviceEndpoints",
      "creationData",
      "ingressProfile",
      "storageProfile",
      "workloadAutoScalerProfile",
      "azureMonitorProfile",
      "guardrailsProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/managedClusters/nodeTypes": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "additionalDataDisks": {
        "description": "Additional managed data disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationPorts": {
        "description": "Port range details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacities": {
        "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataDiskLetter": {
        "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataDiskSizeGB": {
        "description": "Disk size for the managed disk attached to the vms on the node type in GBs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataDiskType": {
        "description": "Managed data disk type. Specifies the storage account type for the managed disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAcceleratedNetworking": {
        "description": "Specifies whether the network interface is accelerated networking-enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableEncryptionAtHost": {
        "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableOverProvisioning": {
        "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ephemeralPorts": {
        "description": "Port range details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendConfigurations": {
        "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostGroupId": {
        "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isPrimary": {
        "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isSpotVM": {
        "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStateless": {
        "description": "Indicates if the node type can only host Stateless workloads.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "multiplePlacementGroups": {
        "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityRules": {
        "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementProperties": {
        "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spotRestoreTimeout": {
        "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useDefaultPublicLoadBalancer": {
        "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useEphemeralOSDisk": {
        "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useTempDataDisk": {
        "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmExtensions": {
        "description": "Set of extensions that should be installed onto the virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImageOffer": {
        "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmImagePublisher": {
        "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmImageResourceId": {
        "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmImageSku": {
        "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmImageVersion": {
        "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmInstanceCount": {
        "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmManagedIdentity": {
        "description": "Identities for the virtual machine scale set under the node type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSecrets": {
        "description": "The secrets to install in the virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zones": {
        "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationPorts",
      "capacities",
      "dataDiskSizeGB",
      "ephemeralPorts",
      "isPrimary",
      "placementProperties",
      "vmExtensions",
      "vmImageOffer",
      "vmImagePublisher",
      "vmImageSku",
      "vmImageVersion",
      "vmInstanceCount",
      "vmSecrets",
      "vmSize",
      "vmManagedIdentity",
      "dataDiskType",
      "isStateless",
      "multiplePlacementGroups",
      "frontendConfigurations",
      "networkSecurityRules",
      "additionalDataDisks",
      "dataDiskLetter",
      "enableAcceleratedNetworking",
      "enableEncryptionAtHost",
      "useDefaultPublicLoadBalancer",
      "useTempDataDisk",
      "enableOverProvisioning",
      "isSpotVM",
      "zones",
      "evictionPolicy",
      "hostGroupId",
      "spotRestoreTimeout",
      "useEphemeralOSDisk",
      "vmImageResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/managedclusters/applicationTypes": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/managedclusters/applicationTypes/versions": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "appPackageUrl": {
        "description": "The URL to the application package",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appPackageUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/managedclusters/applications": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "debugParams": {
        "description": "Internal - used by Visual Studio to setup the debugging session on the local development environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Describes the diagnostics options available",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedIdentities": {
        "description": "List of user assigned identities for the application, each mapped to a friendly name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumNodes": {
        "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metrics": {
        "description": "List of application capacity metric description.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumNodes": {
        "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "removeApplicationCapacity": {
        "description": "Remove the current application capacity settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "services": {
        "description": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "typeName": {
        "description": "The application type name as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeVersion": {
        "description": "The version of the application type as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePolicy": {
        "description": "Describes the policy for a monitored application upgrade.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maximumNodes",
      "metrics",
      "minimumNodes",
      "parameters",
      "removeApplicationCapacity",
      "typeName",
      "typeVersion",
      "upgradePolicy",
      "debugParams",
      "description",
      "diagnostics",
      "services",
      "managedIdentities",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/managedclusters/applications/services": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "autoScalingPolicies": {
        "description": "Auto scaling policies",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "codePackages": {
        "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationScheme": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMoveCost": {
        "description": "Specifies the move cost for the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Reference to sinks in DiagnosticsDescription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthState": {
        "description": "The health state of a resource such as Application, Service, or Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRefs": {
        "description": "The names of the private networks that this service needs to be part of.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The operation system required by the code in service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionDescription": {
        "description": "Describes how the service is partitioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementConstraints": {
        "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replicaCount": {
        "description": "The number of replicas of the service to create. Defaults to 1 if not specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scalingPolicies": {
        "description": "Scaling policies for this service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceDnsName": {
        "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceLoadMetrics": {
        "description": "The service load metrics is given as an array of ServiceLoadMetric objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePackageActivationMode": {
        "description": "The activation Mode of the service package.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePlacementPolicies": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceTypeName": {
        "description": "The name of the service type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetLocation": {
        "description": "The Azure location to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetSubscriptionId": {
        "description": "The subscription to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "correlationScheme",
      "defaultMoveCost",
      "partitionDescription",
      "placementConstraints",
      "serviceLoadMetrics",
      "servicePlacementPolicies",
      "serviceTypeName",
      "codePackages",
      "description",
      "diagnostics",
      "healthState",
      "networkRefs",
      "osType",
      "replicaCount",
      "targetLocation",
      "targetSubscriptionId",
      "autoScalingPolicies",
      "servicePackageActivationMode",
      "serviceDnsName",
      "scalingPolicies"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/applications": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "debugParams": {
        "description": "Internal - used by Visual Studio to setup the debugging session on the local development environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Describes the diagnostics options available",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedIdentities": {
        "description": "List of user assigned identities for the application, each mapped to a friendly name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumNodes": {
        "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metrics": {
        "description": "List of application capacity metric description.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumNodes": {
        "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "removeApplicationCapacity": {
        "description": "Remove the current application capacity settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "services": {
        "description": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "typeName": {
        "description": "The application type name as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeVersion": {
        "description": "The version of the application type as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePolicy": {
        "description": "Describes the policy for a monitored application upgrade.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maximumNodes",
      "metrics",
      "minimumNodes",
      "parameters",
      "removeApplicationCapacity",
      "typeName",
      "typeVersion",
      "upgradePolicy",
      "debugParams",
      "description",
      "diagnostics",
      "services",
      "managedIdentities",
      "version"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/gateways": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "description": {
        "description": "User readable description of the gateway.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationNetwork": {
        "description": "Describes a network reference in a service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "http": {
        "description": "Configuration for http connectivity for this gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceNetwork": {
        "description": "Describes a network reference in a service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tcp": {
        "description": "Configuration for tcp connectivity for this gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "destinationNetwork",
      "http",
      "sourceNetwork",
      "tcp"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/networks": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "addressPrefix": {
        "description": "the address prefix for this network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ingressConfig": {
        "description": "Describes public connectivity configuration for the network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "description",
      "ingressConfig"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/secrets": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "contentType": {
        "description": "The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentType",
      "description"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/secrets/values": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "value": {
        "description": "The actual value of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "value"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/volumes": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "azureFileParameters": {
        "description": "This type describes a volume provided by an Azure Files file share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the volume.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provider": {
        "description": "Provider of the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureFileParameters",
      "description",
      "provider"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/signalR": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "cors": {
        "description": "Cross-Origin Resource Sharing (CORS) settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableAadAuth": {
        "description": "DisableLocalAuth\r\nEnable or disable aad auth\r\nWhen set as true, connection with AuthType=aad won't work.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "DisableLocalAuth\r\nEnable or disable local auth with AccessKey\r\nWhen set as true, connection with AccessKey=xxx won't work.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "List of the featureFlags.\r\n\r\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\r\nAnd the response will only include featureFlags that are explicitly set. \r\nWhen a featureFlag is not explicitly set, its globally default value will be used\r\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liveTraceConfiguration": {
        "description": "Live trace configuration of a Microsoft.SignalRService resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkACLs": {
        "description": "Network ACLs for the resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Enable or disable public network access. Default to \"Enabled\".\r\nWhen it's Enabled, network ACLs still apply.\r\nWhen it's Disabled, public network access is always disabled no matter what you set in network ACLs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceLogConfiguration": {
        "description": "Resource log configuration of a Microsoft.SignalRService resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverless": {
        "description": "Serverless settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tls": {
        "description": "TLS settings for the resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upstream": {
        "description": "The settings for the Upstream when the service is in server-less mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors",
      "features",
      "networkACLs",
      "upstream",
      "tls",
      "disableAadAuth",
      "disableLocalAuth",
      "publicNetworkAccess",
      "resourceLogConfiguration",
      "liveTraceConfiguration",
      "serverless"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/signalR/customCertificates": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "keyVaultBaseUri": {
        "description": "Base uri of the KeyVault that stores certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Certificate secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretVersion": {
        "description": "Certificate secret version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyVaultBaseUri",
      "keyVaultSecretName",
      "keyVaultSecretVersion"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/signalR/customDomains": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "certName": {
        "description": "The bound certificate name of domain.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customCertificate": {
        "description": "Reference to a resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainName": {
        "description": "The custom domain name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "The thumbprint of bound certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certName",
      "thumbprint",
      "customCertificate",
      "domainName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/signalR/privateEndpointConnections": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/signalR/sharedPrivateLinkResources": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "groupId": {
        "description": "The group id from the provider of resource the shared private link resource is for",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLink": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkLocation": {
        "description": "The location of the shared private link resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "The resource id of the resource the shared private link resource is for",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestMessage": {
        "description": "The request message for requesting approval of the shared private link resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceRegion": {
        "description": "Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupId",
      "privateLinkResourceId",
      "provisioningState",
      "requestMessage",
      "resourceRegion",
      "status",
      "privateLink",
      "privateLinkLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/webPubSub": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "diagnosticConfiguration": {
        "description": "Diagnostic configuration of a Microsoft.SignalRService resource. Used together with Azure monitor DiagnosticSettings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableAadAuth": {
        "description": "DisableLocalAuth\r\nEnable or disable aad auth\r\nWhen set as true, connection with AuthType=aad won't work.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableLocalAuth": {
        "description": "DisableLocalAuth\r\nEnable or disable local auth with AccessKey\r\nWhen set as true, connection with AccessKey=xxx won't work.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventHandler": {
        "description": "The settings for event handler in webpubsub service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "List of the featureFlags.\r\n\r\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\r\nAnd the response will only include featureFlags that are explicitly set. \r\nWhen a featureFlag is not explicitly set, its globally default value will be used\r\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liveTraceConfiguration": {
        "description": "Live trace configuration of a Microsoft.SignalRService resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkACLs": {
        "description": "Network ACLs for the resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Enable or disable public network access. Default to \"Enabled\".\r\nWhen it's Enabled, network ACLs still apply.\r\nWhen it's Disabled, public network access is always disabled no matter what you set in network ACLs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceLogConfiguration": {
        "description": "Resource log configuration of a Microsoft.SignalRService resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tls": {
        "description": "TLS settings for the resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "eventHandler",
      "features",
      "networkACLs",
      "publicNetworkAccess",
      "tls",
      "diagnosticConfiguration",
      "disableAadAuth",
      "disableLocalAuth",
      "liveTraceConfiguration",
      "resourceLogConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/webPubSub/customCertificates": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "keyVaultBaseUri": {
        "description": "Base uri of the KeyVault that stores certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Certificate secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretVersion": {
        "description": "Certificate secret version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyVaultBaseUri",
      "keyVaultSecretName",
      "keyVaultSecretVersion"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/webPubSub/customDomains": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "certName": {
        "description": "The bound certificate name of domain.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customCertificate": {
        "description": "Reference to a resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainName": {
        "description": "The custom domain name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "The thumbprint of bound certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certName",
      "thumbprint",
      "customCertificate",
      "domainName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/webPubSub/hubs": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "anonymousConnectPolicy": {
        "description": "The settings for configuring if anonymous connections are allowed for this hub: \"allow\" or \"deny\". Default to \"deny\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventHandlers": {
        "description": "Event handler of a hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventListeners": {
        "description": "Event listener settings for forwarding your client events to listeners.\r\nEvent listener is transparent to Web PubSub clients, and it doesn't return any result to clients nor interrupt the lifetime of clients.\r\nOne event can be sent to multiple listeners, as long as it matches the filters in those listeners. The order of the array elements doesn't matter.\r\nMaximum count of event listeners among all hubs is 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "anonymousConnectPolicy",
      "eventHandlers",
      "eventListeners"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/webPubSub/privateEndpointConnections": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/webPubSub/sharedPrivateLinkResources": {
    "api_version": "2022-08-01-preview",
    "full_properties": {
      "groupId": {
        "description": "The group id from the provider of resource the shared private link resource is for",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLink": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkLocation": {
        "description": "The location of the shared private link resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "The resource id of the resource the shared private link resource is for",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestMessage": {
        "description": "The request message for requesting approval of the shared private link resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceRegion": {
        "description": "Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupId",
      "privateLinkResourceId",
      "provisioningState",
      "requestMessage",
      "resourceRegion",
      "status",
      "privateLink",
      "privateLinkLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Solutions/applianceDefinitions": {
    "api_version": "2016-09-01-preview",
    "full_properties": {
      "artifacts": {
        "description": "The collection of appliance artifacts. The portal will use the files specified as artifacts to construct the user experience of creating an appliance from an appliance definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The appliance provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The appliance definition description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The appliance definition display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lockLevel": {
        "description": "The appliance lock level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "packageFileUri": {
        "description": "The appliance definition package file Uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifacts",
      "authorizations",
      "description",
      "displayName",
      "lockLevel",
      "packageFileUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Solutions/appliances": {
    "api_version": "2016-09-01-preview",
    "full_properties": {
      "applianceDefinitionId": {
        "description": "The fully qualified path of appliance definition Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "distro": {
        "description": "Represents a supported Fabric/Infra. (AKSEdge etc...).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureConfig": {
        "description": "Contains infrastructure information about the Appliance",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "publicKey": {
        "description": "Certificates pair used to download MSI certificate from HIS",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of the Appliance",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applianceDefinitionId",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "distro",
      "infrastructureConfig",
      "publicKey",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Solutions/applicationDefinitions": {
    "api_version": "2021-07-01",
    "full_properties": {
      "artifacts": {
        "description": "The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The managed application provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createUiDefinition": {
        "description": "The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "deploymentPolicy": {
        "description": "Managed application deployment policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The managed application definition description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The managed application definition display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "A value indicating whether the package is enabled or not.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lockLevel": {
        "description": "The managed application lock level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lockingPolicy": {
        "description": "Managed application locking policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mainTemplate": {
        "description": "The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "managementPolicy": {
        "description": "Managed application management policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationPolicy": {
        "description": "Managed application notification policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "packageFileUri": {
        "description": "The managed application definition package file Uri. Use this element",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policies": {
        "description": "The managed application provider policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "The storage account id for bring your own storage scenario.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifacts",
      "authorizations",
      "createUiDefinition",
      "description",
      "displayName",
      "isEnabled",
      "lockLevel",
      "mainTemplate",
      "packageFileUri",
      "policies",
      "deploymentPolicy",
      "lockingPolicy",
      "managementPolicy",
      "notificationPolicy",
      "storageAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Solutions/applications": {
    "api_version": "2021-07-01",
    "full_properties": {
      "allowUpdates": {
        "description": "A value indicating whether packages within the application may be overwritten using the same version string.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationDefinitionId": {
        "description": "The fully qualified path of managed application definition Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "applicationType": {
        "description": "Resource Type of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineArguments": {
        "description": "Command Line Arguments for Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "commandLineSetting": {
        "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultVersion": {
        "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "errors": {
        "description": "The list of errors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filePath": {
        "description": "Specifies a path for the executable file for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of Application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpsEndpoints": {
        "description": "The list of application HTTPS endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconIndex": {
        "description": "Index of the icon.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iconPath": {
        "description": "Path to icon.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "installScriptActions": {
        "description": "The list of install script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jitAccessPolicy": {
        "description": "Managed application Jit access policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageApplicationId": {
        "description": "Specifies the package application Id for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msixPackageFamilyName": {
        "description": "Specifies the package family name for MSIX applications",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "privateLinkConfigurations": {
        "description": "The private link configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publisherPackageId": {
        "description": "The publisher package Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "showInPortal": {
        "description": "Specifies whether to show the RemoteApp program in the RD Web Access server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshEndpoints": {
        "description": "The list of application SSH endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uninstallScriptActions": {
        "description": "The list of uninstall script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationType",
      "computeProfile",
      "errors",
      "httpsEndpoints",
      "installScriptActions",
      "sshEndpoints",
      "uninstallScriptActions",
      "applicationDefinitionId",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "publisherPackageId",
      "jitAccessPolicy",
      "allowUpdates",
      "defaultVersion",
      "displayName",
      "commandLineArguments",
      "commandLineSetting",
      "description",
      "filePath",
      "friendlyName",
      "iconIndex",
      "iconPath",
      "showInPortal",
      "msixPackageApplicationId",
      "msixPackageFamilyName",
      "privateLinkConfigurations"
    ],
    "required": [
      "apiVersion",
      "kind",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Solutions/jitRequests": {
    "api_version": "2021-07-01",
    "full_properties": {
      "applicationResourceId": {
        "description": "The parent application id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "jitAuthorizationPolicies": {
        "description": "The JIT authorization policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jitSchedulingPolicy": {
        "description": "The JIT scheduling policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationResourceId",
      "jitAuthorizationPolicies",
      "jitSchedulingPolicy"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/instancePools": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "licenseType": {
        "description": "The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "Resource ID of the subnet to place this instance pool in.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCores": {
        "description": "Count of vCores belonging to this instance pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "licenseType",
      "subnetId",
      "vCores"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/locations/instanceFailoverGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "managedInstancePairs": {
        "description": "List of managed instance pairs in the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerRegions": {
        "description": "Partner region information for the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readOnlyEndpoint": {
        "description": "Read-only endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readWriteEndpoint": {
        "description": "Read-write endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "Type of the geo-secondary instance. Set 'Standby' if the instance is used as a DR option only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "managedInstancePairs",
      "partnerRegions",
      "readOnlyEndpoint",
      "readWriteEndpoint",
      "secondaryType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/locations/serverTrustGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "groupMembers": {
        "description": "Group members information for the server trust group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustScopes": {
        "description": "Trust scope of the server trust group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupMembers",
      "trustScopes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "administratorLogin": {
        "description": "Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "The administrator login password (required for managed instance creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administrators": {
        "description": "Properties of a active directory administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "Collation of the managed instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsZonePartner": {
        "description": "The resource id of another managed instance whose DNS zone this managed instance will share after creation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "instancePoolId": {
        "description": "The Id of the instance pool this managed server belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyId": {
        "description": "A CMK URI of the key to use for encryption.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Specifies maintenance configuration id to apply to this managed instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedInstanceCreateMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: Regular instance creation.\r\n\r\nRestore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentityId": {
        "description": "The resource id of a user assigned identity to be used by default.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proxyOverride": {
        "description": "Connection type used for connecting to the instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicDataEndpointEnabled": {
        "description": "Whether or not the public data endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this instance. The options are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "servicePrincipal": {
        "description": "The managed instance's service principal configuration for a resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceManagedInstanceId": {
        "description": "The resource identifier of the source managed instance associated with create operation of this instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this instance. The options are LRS (LocallyRedundantStorage), ZRS (ZoneRedundantStorage) and GRS (GeoRedundantStorage).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageSizeInGB": {
        "description": "Storage size in GB. Minimum value: 32. Maximum value: 16384. Increments of 32 GB allowed only. Maximum value depends on the selected hardware family and number of vCores.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "Subnet resource ID for the managed instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timezoneId": {
        "description": "Id of the timezone. Allowed values are timezones supported by Windows.\r\nWindows keeps details on supported timezones, including the id, in registry under\r\nKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones.\r\nYou can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.\r\nList of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.\r\nAn example of valid timezone id is \"Pacific Standard Time\" or \"W. Europe Standard Time\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCores": {
        "description": "The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not the multi-az is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorLogin",
      "administratorLoginPassword",
      "collation",
      "dnsZonePartner",
      "instancePoolId",
      "licenseType",
      "maintenanceConfigurationId",
      "managedInstanceCreateMode",
      "minimalTlsVersion",
      "proxyOverride",
      "publicDataEndpointEnabled",
      "restorePointInTime",
      "sourceManagedInstanceId",
      "storageSizeInGB",
      "subnetId",
      "timezoneId",
      "vCores",
      "storageAccountType",
      "zoneRedundant",
      "administrators",
      "keyId",
      "primaryUserAssignedIdentityId",
      "requestedBackupStorageRedundancy",
      "servicePrincipal"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/administrators": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "administratorType": {
        "description": "Type of the managed instance administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login name of the managed instance administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "SID (object ID) of the managed instance administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the managed instance administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/advancedThreatProtectionSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "isEnabled": {
        "description": "Indicates whether Advanced Threat Protection is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isEnabled",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/azureADOnlyAuthentications": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "azureADOnlyAuthentication": {
        "description": "Azure Active Directory only Authentication enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureADOnlyAuthentication"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "autoCompleteRestore": {
        "description": "Whether to auto complete restore of this managed database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "Collation of the managed database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore. RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup (longTermRetentionBackupResourceId required).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "crossSubscriptionRestorableDroppedDatabaseId": {
        "description": "The restorable cross-subscription dropped database resource id to restore when creating this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "crossSubscriptionSourceDatabaseId": {
        "description": "The resource identifier of the cross-subscription source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "crossSubscriptionTargetManagedInstanceId": {
        "description": "Target managed instance id used in cross-subscription restore.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastBackupName": {
        "description": "Last backup file name for restore of this managed database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The name of the Long Term Retention backup to be used for restore of this managed database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The restorable dropped database resource id to restore when creating this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerIdentity": {
        "description": "Conditional. If createMode is RestoreExternalBackup, this value is used. Specifies the identity used for storage container authentication. Can be 'SharedAccessSignature' or 'ManagedIdentity'; if not specified 'SharedAccessSignature' is assumed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasToken": {
        "description": "Conditional. If createMode is RestoreExternalBackup and storageContainerIdentity is not ManagedIdentity, this value is required. Specifies the storage container sas token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerUri": {
        "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "catalogCollation",
      "collation",
      "createMode",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "restorableDroppedDatabaseId",
      "restorePointInTime",
      "sourceDatabaseId",
      "storageContainerSasToken",
      "storageContainerUri",
      "autoCompleteRestore",
      "lastBackupName",
      "storageContainerIdentity",
      "crossSubscriptionRestorableDroppedDatabaseId",
      "crossSubscriptionSourceDatabaseId",
      "crossSubscriptionTargetManagedInstanceId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/advancedThreatProtectionSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "isEnabled": {
        "description": "Indicates whether Advanced Threat Protection is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isEnabled",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "monthlyRetention": {
        "description": "The monthly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weekOfYear": {
        "description": "The week of year to take the yearly backup in an ISO 8601 format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklyRetention": {
        "description": "The weekly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "yearlyRetention": {
        "description": "The yearly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "monthlyRetention",
      "weeklyRetention",
      "weekOfYear",
      "yearlyRetention"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "retentionDays": {
        "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "retentionDays"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "informationType": {
        "description": "The information type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "informationTypeId": {
        "description": "The information type ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelId": {
        "description": "The label ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelName": {
        "description": "The label name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rank": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "informationType",
      "informationTypeId",
      "labelId",
      "labelName",
      "rank"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/securityAlertPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/transparentDataEncryption": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "state": {
        "description": "Specifies the state of the transparent data encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules/baselines": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "baselineResults": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "baselineResults"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/distributedAvailabilityGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "primaryAvailabilityGroupName": {
        "description": "The primary availability group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replicationMode": {
        "description": "The replication mode of a distributed availability group. Parameter will be ignored during link creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryAvailabilityGroupName": {
        "description": "The secondary availability group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceEndpoint": {
        "description": "The source endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetDatabase": {
        "description": "The name of the target database",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "primaryAvailabilityGroupName",
      "replicationMode",
      "secondaryAvailabilityGroupName",
      "sourceEndpoint",
      "targetDatabase"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/dnsAliases": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/dtc": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "dtcEnabled": {
        "description": "Active status of managed instance DTC.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "externalDnsSuffixSearchList": {
        "description": "External dns suffix search list of managed instance DTC.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securitySettings": {
        "description": "The Security Settings of managed instance DTC.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dtcEnabled",
      "externalDnsSuffixSearchList",
      "securitySettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/encryptionProtector": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "autoRotationEnabled": {
        "description": "Key auto rotation opt-in flag. Either true or false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverKeyName": {
        "description": "The name of the managed instance key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serverKeyName",
      "serverKeyType",
      "autoRotationEnabled"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/keys": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "serverKeyType": {
        "description": "The key type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serverKeyType",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/privateEndpointConnections": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "privateEndpoint": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpoint",
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "retentionDays": {
        "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "retentionDays"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/securityAlertPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/serverTrustCertificates": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "publicBlob": {
        "description": "The certificate public blob",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicBlob"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/sqlAgent": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "state": {
        "description": "The state of Sql Agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/vulnerabilityAssessments": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "administratorLogin": {
        "description": "Administrator username for the server. Once created it cannot be changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "The administrator login password (required for server creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administrators": {
        "description": "Properties of a active directory administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authConfig": {
        "description": "Authentication configuration properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilityZone": {
        "description": "availability zone information of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "backup": {
        "description": "Backup properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "The mode to create a new PostgreSQL server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataEncryption": {
        "description": "Data encryption properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegatedSubnetArguments": {
        "description": "Delegated subnet arguments of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of a server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "haEnabled": {
        "description": "Enable HA or not for a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailability": {
        "description": "High availability properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyId": {
        "description": "A CMK URI of the key to use for encryption.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logBackupStorageSku": {
        "description": "The log backup storage sku of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceWindow": {
        "description": "Maintenance window properties of a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Minimal TLS version. Allowed values: '1.0', '1.1', '1.2'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "network": {
        "description": "Network properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pointInTimeUTC": {
        "description": "Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentityId": {
        "description": "The resource id of a user assigned identity to be used by default.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateDnsZoneArguments": {
        "description": "Private DNS zone arguments of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicaCapacity": {
        "description": "Replicas allowed for a server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicationRole": {
        "description": "Replication role of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceResourceGroupName": {
        "description": "The resource group name of source serve PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerId": {
        "description": "The source MySQL server id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerName": {
        "description": "The source PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceServerResourceId": {
        "description": "The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'Replica'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceSubscriptionId": {
        "description": "The subscription id of source serve PostgreSQL server name to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "standbyCount": {
        "description": "The number of standbys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storage": {
        "description": "Storage properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Application-specific metadata in the form of key-value pairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorLogin",
      "administratorLoginPassword",
      "version",
      "minimalTlsVersion",
      "publicNetworkAccess",
      "availabilityZone",
      "createMode",
      "delegatedSubnetArguments",
      "displayName",
      "haEnabled",
      "logBackupStorageSku",
      "maintenanceWindow",
      "pointInTimeUTC",
      "privateDnsZoneArguments",
      "sourceResourceGroupName",
      "sourceServerName",
      "sourceSubscriptionId",
      "standbyCount",
      "storageProfile",
      "tags",
      "infrastructureEncryption",
      "replicationRole",
      "restorePointInTime",
      "sourceServerId",
      "sslEnforcement",
      "administrators",
      "keyId",
      "primaryUserAssignedIdentityId",
      "federatedClientId",
      "restrictOutboundNetworkAccess",
      "backup",
      "highAvailability",
      "network",
      "sourceServerResourceId",
      "storage",
      "dataEncryption",
      "authConfig",
      "replicaCapacity"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/administrators": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "administratorType": {
        "description": "Type of the sever administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identityResourceId": {
        "description": "The resource id of the identity used for AAD Authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login name of the server administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "SID (object ID) of the server administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId",
      "identityResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/advancedThreatProtectionSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "isEnabled": {
        "description": "Indicates whether Advanced Threat Protection is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isEnabled",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/advisors": {
    "api_version": "2014-04-01",
    "full_properties": {
      "autoExecuteValue": {
        "description": "Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoExecuteValue"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/auditingPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "auditLogsTableName": {
        "description": "The audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "auditingState": {
        "description": "The state of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventTypesToAudit": {
        "description": "Comma-separated list of event types to audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fullAuditLogsTableName": {
        "description": "The full audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "The number of days to keep in the audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountKey": {
        "description": "The key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountName": {
        "description": "The table storage account name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountResourceGroupName": {
        "description": "The table storage account resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSecondaryKey": {
        "description": "The secondary key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "The table storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageTableEndpoint": {
        "description": "The storage table endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditingState",
      "auditLogsTableName",
      "eventTypesToAudit",
      "fullAuditLogsTableName",
      "retentionDays",
      "storageAccountKey",
      "storageAccountName",
      "storageAccountResourceGroupName",
      "storageAccountSecondaryKey",
      "storageAccountSubscriptionId",
      "storageTableEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/auditingSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\nLEDGER_OPERATION_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDevopsAuditEnabled": {
        "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManagedIdentityInUse": {
        "description": "Specifies whether Managed Identity is used to access blob storage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint",
      "isDevopsAuditEnabled",
      "isManagedIdentityInUse"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/azureADOnlyAuthentications": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "azureADOnlyAuthentication": {
        "description": "Azure Active Directory only Authentication enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureADOnlyAuthentication"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/communicationLinks": {
    "api_version": "2014-04-01",
    "full_properties": {
      "partnerServer": {
        "description": "The name of the partner server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partnerServer"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/connectionPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "connectionType": {
        "description": "The server connection type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientProtocol": {
        "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusteringPolicy": {
        "description": "Clustering policy - default is OSSCluster. Specified at create time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Redis eviction policy - default is VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "federatedClientId": {
        "description": "The Client id used for cross tenant per database CMK scenario",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoReplication": {
        "description": "Optional set of properties to configure geo replication for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isLedgerOn": {
        "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "modules": {
        "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistence": {
        "description": "Persistence-related configuration for the RedisEnterprise database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferredEnclaveType": {
        "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedBackupStorageRedundancy": {
        "description": "The storage account type to be used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryType": {
        "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nThis property is only supported for DataWarehouse edition and allows to restore across subscriptions.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of the existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "catalogCollation",
      "elasticPoolId",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "licenseType",
      "minCapacity",
      "readReplicaCount",
      "charset",
      "hotCachePeriodInDays",
      "hotCachePeriod",
      "softDeletePeriod",
      "sourceResourceId",
      "storageAccountType",
      "highAvailabilityReplicaCount",
      "maintenanceConfigurationId",
      "secondaryType",
      "clientProtocol",
      "clusteringPolicy",
      "evictionPolicy",
      "modules",
      "port",
      "requestedBackupStorageRedundancy",
      "geoReplication",
      "persistence",
      "isLedgerOn",
      "federatedClientId",
      "preferredEnclaveType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "isEnabled": {
        "description": "Indicates whether Advanced Threat Protection is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isEnabled",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/advisors": {
    "api_version": "2014-04-01",
    "full_properties": {
      "autoExecuteValue": {
        "description": "Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoExecuteValue"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/auditingPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "auditLogsTableName": {
        "description": "The audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "auditingState": {
        "description": "The state of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventTypesToAudit": {
        "description": "Comma-separated list of event types to audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fullAuditLogsTableName": {
        "description": "The full audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "The number of days to keep in the audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountKey": {
        "description": "The key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountName": {
        "description": "The table storage account name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountResourceGroupName": {
        "description": "The table storage account resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSecondaryKey": {
        "description": "The secondary key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "The table storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageTableEndpoint": {
        "description": "The storage table endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useServerDefault": {
        "description": "Whether server default is enabled or disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditingState",
      "auditLogsTableName",
      "eventTypesToAudit",
      "fullAuditLogsTableName",
      "retentionDays",
      "storageAccountKey",
      "storageAccountName",
      "storageAccountResourceGroupName",
      "storageAccountSecondaryKey",
      "storageAccountSubscriptionId",
      "storageTableEndpoint",
      "useServerDefault"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/auditingSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\nLEDGER_OPERATION_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManagedIdentityInUse": {
        "description": "Specifies whether Managed Identity is used to access blob storage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint",
      "isManagedIdentityInUse"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "monthlyRetention": {
        "description": "The monthly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weekOfYear": {
        "description": "The week of year to take the yearly backup in an ISO 8601 format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklyRetention": {
        "description": "The weekly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "yearlyRetention": {
        "description": "The yearly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "monthlyRetention",
      "weeklyRetention",
      "weekOfYear",
      "yearlyRetention"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "diffBackupIntervalInHours": {
        "description": "The differential backup interval in hours. This is how many interval hours between each differential backup will be supported. This is only applicable to live databases but not dropped databases.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "retentionDays",
      "diffBackupIntervalInHours"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/connectionPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "proxyDnsName": {
        "description": "The fully qualified host name of the auditing proxy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proxyPort": {
        "description": "The port number of the auditing proxy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redirectionState": {
        "description": "The state of proxy redirection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityEnabledAccess": {
        "description": "The state of security access.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "The connection policy state.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useServerDefault": {
        "description": "Whether server default is enabled or disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "visibility": {
        "description": "The visibility of the auditing proxy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "proxyDnsName",
      "proxyPort",
      "redirectionState",
      "securityEnabledAccess",
      "state",
      "useServerDefault",
      "visibility"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/dataMaskingPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "dataMaskingState": {
        "description": "The state of the data masking policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exemptPrincipals": {
        "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataMaskingState",
      "exemptPrincipals"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/dataMaskingPolicies/rules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "aliasName": {
        "description": "The alias name. This is a legacy parameter and is no longer used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "columnName": {
        "description": "The column name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maskingFunction": {
        "description": "The masking function that is used for the data masking rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberFrom": {
        "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "numberTo": {
        "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefixSize": {
        "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replacementString": {
        "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ruleState": {
        "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schemaName": {
        "description": "The schema name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suffixSize": {
        "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tableName": {
        "description": "The table name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aliasName",
      "columnName",
      "maskingFunction",
      "numberFrom",
      "numberTo",
      "prefixSize",
      "replacementString",
      "ruleState",
      "schemaName",
      "suffixSize",
      "tableName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/extendedAuditingSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\nLEDGER_OPERATION_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManagedIdentityInUse": {
        "description": "Specifies whether Managed Identity is used to access blob storage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "predicateExpression": {
        "description": "Specifies condition of where clause when creating an audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "predicateExpression",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint",
      "isManagedIdentityInUse"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/extensions": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "administratorLogin": {
        "description": "Administrator login name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "Administrator login password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authenticationType": {
        "description": "Authentication type: SQL authentication or AD password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseEdition": {
        "description": "Database edition for the newly created database in the case of an import operation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "Database max size in bytes for the newly created database in the case of an import operation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkIsolation": {
        "description": "Contains the ARM resources for which to create private endpoint connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operationMode": {
        "description": "Operation mode of the operation: Import, Export, or PolybaseImport.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceObjectiveName": {
        "description": "Database service level objective for the newly created database in the case of an import operation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageKey": {
        "description": "Storage key for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageKeyType": {
        "description": "Storage key type: StorageAccessKey or SharedAccessKey.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageUri": {
        "description": "Storage Uri for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "operationMode",
      "storageKey",
      "storageKeyType",
      "storageUri",
      "administratorLogin",
      "administratorLoginPassword",
      "authenticationType",
      "databaseEdition",
      "maxSizeBytes",
      "networkIsolation",
      "serviceObjectiveName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/geoBackupPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "state": {
        "description": "The state of the geo backup policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/ledgerDigestUploads": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "digestStorageEndpoint": {
        "description": "The digest storage endpoint, which must be either an Azure blob storage endpoint or an URI for Azure Confidential Ledger.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "digestStorageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/maintenanceWindows": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "timeRanges": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "timeRanges"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "informationType": {
        "description": "The information type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "informationTypeId": {
        "description": "The information type ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelId": {
        "description": "The label ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelName": {
        "description": "The label name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rank": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "informationType",
      "informationTypeId",
      "labelId",
      "labelName",
      "rank"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/securityAlertPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "latestScan": {
        "description": "The latest scan flag",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "results": {
        "description": "The rule baseline result list",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "latestScan",
      "results"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines/rules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "latestScan": {
        "description": "The latest scan flag",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "results": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "latestScan",
      "results"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/syncGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "conflictLoggingRetentionInDays": {
        "description": "Conflict logging retention period.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "conflictResolutionPolicy": {
        "description": "Conflict resolution policy of the sync group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableConflictLogging": {
        "description": "If conflict logging is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hubDatabasePassword": {
        "description": "Password for the sync group hub database credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hubDatabaseUserName": {
        "description": "User name for the sync group hub database credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Sync interval of the sync group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schema": {
        "description": "Properties of sync group schema.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "syncDatabaseId": {
        "description": "ARM resource id of the sync database in the sync group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueId": {
        "description": "Unique Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usePrivateLinkConnection": {
        "description": "If use private link connection is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "conflictResolutionPolicy",
      "hubDatabasePassword",
      "hubDatabaseUserName",
      "interval",
      "schema",
      "syncDatabaseId",
      "uniqueId",
      "usePrivateLinkConnection",
      "conflictLoggingRetentionInDays",
      "enableConflictLogging"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/syncGroups/syncMembers": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "databaseName": {
        "description": "Database name of the member database in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseType": {
        "description": "Database type of the sync member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Password of the member database in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverName": {
        "description": "Server name of the member database in the sync member",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlServerDatabaseId": {
        "description": "SQL Server database id of the sync member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "syncAgentId": {
        "description": "ARM resource id of the sync agent in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "syncDirection": {
        "description": "Sync direction of the sync member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "syncMemberAzureDatabaseResourceId": {
        "description": "ARM resource id of the sync member logical database, for sync members in Azure.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usePrivateLinkConnection": {
        "description": "Whether to use private link connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userName": {
        "description": "User name of the member database in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseName",
      "databaseType",
      "password",
      "serverName",
      "sqlServerDatabaseId",
      "syncAgentId",
      "syncDirection",
      "userName",
      "syncMemberAzureDatabaseResourceId",
      "usePrivateLinkConnection"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/transparentDataEncryption": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "state": {
        "description": "Specifies the state of the transparent data encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the database transparent data encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "status",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/vulnerabilityAssessments": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "baselineResults": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "baselineResults"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/workloadGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "importance": {
        "description": "The workload group importance level.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxResourcePercent": {
        "description": "The workload group cap percentage resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxResourcePercentPerRequest": {
        "description": "The workload group request maximum grant percentage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minResourcePercent": {
        "description": "The workload group minimum percentage resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minResourcePercentPerRequest": {
        "description": "The workload group request minimum grant percentage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queryExecutionTimeout": {
        "description": "The workload group query execution timeout.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "importance",
      "maxResourcePercent",
      "maxResourcePercentPerRequest",
      "minResourcePercent",
      "minResourcePercentPerRequest",
      "queryExecutionTimeout"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "context": {
        "description": "The workload classifier context.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "The workload classifier end time for classification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "importance": {
        "description": "The workload classifier importance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "label": {
        "description": "The workload classifier label.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "memberName": {
        "description": "The workload classifier member name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The workload classifier start time for classification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "context",
      "endTime",
      "importance",
      "label",
      "memberName",
      "startTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/devOpsAuditingSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether DevOps audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure DevOps audit, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should be also created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManagedIdentityInUse": {
        "description": "Specifies whether Managed Identity is used to access blob storage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isAzureMonitorTargetEnabled",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint",
      "isManagedIdentityInUse"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/disasterRecoveryConfiguration": {
    "api_version": "2014-04-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/dnsAliases": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/elasticPools": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "databaseDtuMax": {
        "description": "The maximum DTU any one database can consume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databaseDtuMin": {
        "description": "The minimum DTU all databases are guaranteed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dtu": {
        "description": "The total shared DTU for the database elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "highAvailabilityReplicaCount": {
        "description": "The number of secondary replicas associated with the elastic pool that are used to provide high availability. Applicable only to Hyperscale elastic pools.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maintenanceConfigurationId": {
        "description": "Maintenance configuration id assigned to the elastic pool. This configuration defines the period when the maintenance updates will will occur.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The storage limit for the database elastic pool in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that serverless pool will not shrink below, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "perDatabaseSettings": {
        "description": "Per database settings of an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageMB": {
        "description": "Gets storage limit for the database elastic pool in MB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseDtuMax",
      "databaseDtuMin",
      "dtu",
      "edition",
      "storageMB",
      "zoneRedundant",
      "licenseType",
      "maxSizeBytes",
      "perDatabaseSettings",
      "maintenanceConfigurationId",
      "highAvailabilityReplicaCount",
      "minCapacity"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/encryptionProtector": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "autoRotationEnabled": {
        "description": "Key auto rotation opt-in flag. Either true or false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverKeyName": {
        "description": "The name of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serverKeyName",
      "serverKeyType",
      "autoRotationEnabled"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/extendedAuditingSettings": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\nLEDGER_OPERATION_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDevopsAuditEnabled": {
        "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManagedIdentityInUse": {
        "description": "Specifies whether Managed Identity is used to access blob storage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "predicateExpression": {
        "description": "Specifies condition of where clause when creating an audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "predicateExpression",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint",
      "isDevopsAuditEnabled",
      "isManagedIdentityInUse"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/failoverGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "databases": {
        "description": "List of databases in the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerServers": {
        "description": "List of partner server information for the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readOnlyEndpoint": {
        "description": "Read-only endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readWriteEndpoint": {
        "description": "Read-write endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databases",
      "partnerServers",
      "readOnlyEndpoint",
      "readWriteEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/firewallRules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' for all Azure-internal IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' for all Azure-internal IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/ipv6FirewallRules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "endIPv6Address": {
        "description": "The end IP address of the firewall rule. Must be IPv6 format. Must be greater than or equal to startIpAddress.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIPv6Address": {
        "description": "The start IP address of the firewall rule. Must be IPv6 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIPv6Address",
      "startIPv6Address"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "databaseId": {
        "description": "Resource ID of the database to store job metadata in.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/credentials": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "password": {
        "description": "The credential password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "username": {
        "description": "The credential user name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "password",
      "username"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/jobs": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided key, value pairs that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User-defined description of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "Base class for inputs to a Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transferType": {
        "description": "Type of the data transfer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType",
      "transferType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/jobs/executions": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/jobs/steps": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "action": {
        "description": "The action to be executed by a job step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "credential": {
        "description": "The resource ID of the job credential that will be used to connect to the targets.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "executionOptions": {
        "description": "The execution options of a job step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "output": {
        "description": "The output configuration of a job step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stepId": {
        "description": "The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetGroup": {
        "description": "The resource ID of the target group that the job step will be executed on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "credential",
      "executionOptions",
      "output",
      "stepId",
      "targetGroup"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/targetGroups": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "members": {
        "description": "Members of the target group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "members"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/keys": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "creationDate": {
        "description": "The server key creation date.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The server key type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Thumbprint of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the server key. If the ServerKeyType is AzureKeyVault, then the URI is required. The AKV URI is required to be in this format: 'https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationDate",
      "serverKeyType",
      "thumbprint",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/outboundFirewallRules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/privateEndpointConnections": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/securityAlertPolicies": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/sqlVulnerabilityAssessments": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "state": {
        "description": "Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/sqlVulnerabilityAssessments/baselines": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "latestScan": {
        "description": "The latest scan flag",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "results": {
        "description": "The rule baseline result list",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "latestScan",
      "results"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/sqlVulnerabilityAssessments/baselines/rules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "latestScan": {
        "description": "The latest scan flag",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "results": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "latestScan",
      "results"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/syncAgents": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "syncDatabaseId": {
        "description": "ARM resource id of the sync database in the sync agent.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "syncDatabaseId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/virtualNetworkRules": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/vulnerabilityAssessments": {
    "api_version": "2022-05-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "sqlImageOffer": {
        "description": "SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlImageSku": {
        "description": "SQL image sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "wsfcDomainProfile": {
        "description": "Active Directory account details to operate Windows Server Failover Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sqlImageOffer",
      "sqlImageSku",
      "wsfcDomainProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/availabilityGroupListeners": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "availabilityGroupConfiguration": {
        "description": "Availability group configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilityGroupName": {
        "description": "Name of the availability group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createDefaultAvailabilityGroupIfNotExist": {
        "description": "Create a default availability group if it does not exist.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancerConfigurations": {
        "description": "List of load balancer configurations for an availability group listener.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "multiSubnetIpConfigurations": {
        "description": "List of multi subnet IP configurations for an AG listener.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "Listener port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilityGroupName",
      "createDefaultAvailabilityGroupIfNotExist",
      "loadBalancerConfigurations",
      "port",
      "availabilityGroupConfiguration",
      "multiSubnetIpConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SqlVirtualMachine/sqlVirtualMachines": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "assessmentSettings": {
        "description": "Configure assessment for databases in your SQL virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoBackupSettings": {
        "description": "Configure backups for databases in your SQL virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoPatchingSettings": {
        "description": "Set a patching window during which Windows and SQL patches will be applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticUpgrade": {
        "description": "Enable automatic upgrade of Sql IaaS extension Agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultCredentialSettings": {
        "description": "Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "leastPrivilegeMode": {
        "description": "SQL IaaS Agent least privilege mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverConfigurationsManagementSettings": {
        "description": "Set the connectivity, storage and workload settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlImageOffer": {
        "description": "SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlImageSku": {
        "description": "SQL Server edition type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlManagement": {
        "description": "SQL Server Management type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlServerLicenseType": {
        "description": "SQL Server license type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlVirtualMachineGroupResourceId": {
        "description": "ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageConfigurationSettings": {
        "description": "Storage Configurations for SQL Data, Log and TempDb.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineResourceId": {
        "description": "ARM Resource id of underlying virtual machine created from SQL marketplace image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "wsfcDomainCredentials": {
        "description": "Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "wsfcStaticIp": {
        "description": "Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoBackupSettings",
      "autoPatchingSettings",
      "keyVaultCredentialSettings",
      "serverConfigurationsManagementSettings",
      "sqlImageOffer",
      "sqlImageSku",
      "sqlManagement",
      "sqlServerLicenseType",
      "sqlVirtualMachineGroupResourceId",
      "storageConfigurationSettings",
      "virtualMachineResourceId",
      "wsfcDomainCredentials",
      "assessmentSettings",
      "wsfcStaticIp",
      "enableAutomaticUpgrade",
      "leastPrivilegeMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers": {
    "api_version": "2017-06-01",
    "full_properties": {
      "cisIntrinsicSettings": {
        "description": "Intrinsic settings which refers to the type of the StorSimple Manager.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cisIntrinsicSettings",
      "sku",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/accessControlRecords": {
    "api_version": "2017-06-01",
    "full_properties": {
      "initiatorName": {
        "description": "The iSCSI initiator name (IQN).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "initiatorName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/bandwidthSettings": {
    "api_version": "2017-06-01",
    "full_properties": {
      "schedules": {
        "description": "The schedules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "schedules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/certificates": {
    "api_version": "2016-10-01",
    "full_properties": {
      "authType": {
        "description": "Specifies the authentication type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The base64 encoded certificate raw data string",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authType",
      "certificate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/alertSettings": {
    "api_version": "2017-06-01",
    "full_properties": {
      "additionalRecipientEmailList": {
        "description": "The alert notification email list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "alertNotificationCulture": {
        "description": "The alert notification culture.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "emailNotification": {
        "description": "Indicates whether email notification enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationToServiceOwners": {
        "description": "The value indicating whether alert notification enabled for admin or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalRecipientEmailList",
      "alertNotificationCulture",
      "emailNotification",
      "notificationToServiceOwners"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/backupPolicies": {
    "api_version": "2017-06-01",
    "full_properties": {
      "dailyBackupsToKeep": {
        "description": "Daily backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "The property to decide policy is enabled or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monthlyBackupsToKeep": {
        "description": "Monthly backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeBackups": {
        "description": "A list of volumes assigned to this policy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeIds": {
        "description": "The path IDs of the volumes which are part of the backup policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumesAssigned": {
        "description": "Volumes using current backup policy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklyBackupsToKeep": {
        "description": "Weekly backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "yearlyBackupsToKeep": {
        "description": "Yearly backups count to keep",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "volumeIds",
      "dailyBackupsToKeep",
      "enabled",
      "monthlyBackupsToKeep",
      "volumeBackups",
      "volumesAssigned",
      "weeklyBackupsToKeep",
      "yearlyBackupsToKeep"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/backupPolicies/schedules": {
    "api_version": "2017-06-01",
    "full_properties": {
      "backupType": {
        "description": "The type of backup which needs to be taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionCount": {
        "description": "The number of backups to be retained.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scheduleRecurrence": {
        "description": "The schedule recurrence.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scheduleStatus": {
        "description": "The schedule status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupType",
      "retentionCount",
      "scheduleRecurrence",
      "scheduleStatus",
      "startTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/backupScheduleGroups": {
    "api_version": "2016-10-01",
    "full_properties": {
      "startTime": {
        "description": "The Time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "startTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/chapSettings": {
    "api_version": "2016-10-01",
    "full_properties": {
      "password": {
        "description": "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "password"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/fileservers": {
    "api_version": "2016-10-01",
    "full_properties": {
      "backupScheduleGroupId": {
        "description": "The backup policy id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the file server",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainName": {
        "description": "Domain of the file server",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageDomainId": {
        "description": "The storage domain id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupScheduleGroupId",
      "description",
      "domainName",
      "storageDomainId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/fileservers/shares": {
    "api_version": "2016-10-01",
    "full_properties": {
      "accessTier": {
        "description": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "adminUser": {
        "description": "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "The data policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for file share",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabledProtocols": {
        "description": "The authentication protocol that is used for the file share. Can only be specified when creating a share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the share as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisionedCapacityInBytes": {
        "description": "The total provisioned capacity in Bytes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rootSquash": {
        "description": "The property is for NFS share only. The default is NoRootSquash.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareQuota": {
        "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "The Share Status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "signedIdentifiers": {
        "description": "List of stored access policies specified on the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminUser",
      "dataPolicy",
      "description",
      "monitoringStatus",
      "provisionedCapacityInBytes",
      "shareStatus",
      "metadata",
      "shareQuota",
      "accessTier",
      "enabledProtocols",
      "rootSquash",
      "signedIdentifiers"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/iscsiservers": {
    "api_version": "2016-10-01",
    "full_properties": {
      "backupScheduleGroupId": {
        "description": "The backup policy id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "chapId": {
        "description": "The chap id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reverseChapId": {
        "description": "The reverse chap id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageDomainId": {
        "description": "The storage domain id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupScheduleGroupId",
      "chapId",
      "description",
      "reverseChapId",
      "storageDomainId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/iscsiservers/disks": {
    "api_version": "2016-10-01",
    "full_properties": {
      "accessControlRecords": {
        "description": "The access control records.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "The data policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskStatus": {
        "description": "The disk status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisionedCapacityInBytes": {
        "description": "The provisioned capacity in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControlRecords",
      "dataPolicy",
      "description",
      "diskStatus",
      "monitoringStatus",
      "provisionedCapacityInBytes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/timeSettings": {
    "api_version": "2017-06-01",
    "full_properties": {
      "primaryTimeServer": {
        "description": "The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryTimeServer": {
        "description": "The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The timezone of device, like '(UTC -06:00) Central America'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "primaryTimeServer",
      "secondaryTimeServer",
      "timeZone"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/volumeContainers": {
    "api_version": "2017-06-01",
    "full_properties": {
      "bandWidthRateInMbps": {
        "description": "The bandwidth-rate set on the volume container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bandwidthSettingId": {
        "description": "The ID of the bandwidth setting associated with the volume container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountCredentialId": {
        "description": "The path ID of storage account associated with the volume container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bandWidthRateInMbps",
      "bandwidthSettingId",
      "encryptionKey",
      "storageAccountCredentialId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/volumeContainers/volumes": {
    "api_version": "2017-06-01",
    "full_properties": {
      "accessControlRecordIds": {
        "description": "The IDs of the access control records, associated with the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "avsDataStore": {
        "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupId": {
        "description": "UUID v4 or resource identifier used to identify the Backup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "capacityPoolResourceId": {
        "description": "Pool Resource Id used in case of creating a volume through volume group",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "coolAccess": {
        "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "coolnessPeriod": {
        "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Data source used when creating the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationToken": {
        "description": "A unique file path for the volume. Used when creating mount targets",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataProtection": {
        "description": "DataProtection type volumes include an object containing details of the replication",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultGroupQuotaInKiBs": {
        "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultUserQuotaInKiBs": {
        "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deleteBaseSnapshot": {
        "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableSubvolumes": {
        "description": "Flag indicating whether subvolume operations are enabled on the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionKeySource": {
        "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "exportPolicy": {
        "description": "Set of export policy rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDefaultQuotaEnabled": {
        "description": "Specifies if default quota is enabled for the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRestoring": {
        "description": "Restoring",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kerberosEnabled": {
        "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultPrivateEndpointResourceId": {
        "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ldapEnabled": {
        "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status of the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountTargets": {
        "description": "List of mount targets",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkFeatures": {
        "description": "Basic network, or Standard features available to the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementRules": {
        "description": "Application specific placement rules for the particular volume",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolTypes": {
        "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": "Proximity placement group associated with the volume",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityStyle": {
        "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeGiB": {
        "description": "Volume size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeInBytes": {
        "description": "The size of the volume in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbAccessBasedEnumeration": {
        "description": "Enables access based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbContinuouslyAvailable": {
        "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbEncryption": {
        "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbNonBrowsable": {
        "description": "Enables non browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotDirectoryVisible": {
        "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotId": {
        "description": "UUID v4 or resource identifier used to identify the Snapshot.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageTarget": {
        "description": "Iscsi target information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "throughputMibps": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "unixPermissions": {
        "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageThreshold": {
        "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeSpecName": {
        "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "volumeStatus": {
        "description": "The volume status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeType": {
        "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControlRecordIds",
      "monitoringStatus",
      "sizeInBytes",
      "volumeStatus",
      "volumeType",
      "creationToken",
      "exportPolicy",
      "serviceLevel",
      "subnetId",
      "usageThreshold",
      "mountTargets",
      "protocolTypes",
      "snapshotId",
      "dataProtection",
      "isRestoring",
      "snapshotDirectoryVisible",
      "backupId",
      "kerberosEnabled",
      "securityStyle",
      "throughputMibps",
      "smbContinuouslyAvailable",
      "smbEncryption",
      "encryptionKeySource",
      "ldapEnabled",
      "networkFeatures",
      "coolAccess",
      "coolnessPeriod",
      "unixPermissions",
      "avsDataStore",
      "defaultGroupQuotaInKiBs",
      "defaultUserQuotaInKiBs",
      "isDefaultQuotaEnabled",
      "capacityPoolResourceId",
      "placementRules",
      "proximityPlacementGroup",
      "volumeSpecName",
      "enableSubvolumes",
      "creationData",
      "sizeGiB",
      "storageTarget",
      "keyVaultPrivateEndpointResourceId",
      "deleteBaseSnapshot",
      "smbAccessBasedEnumeration",
      "smbNonBrowsable"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/extendedInformation": {
    "api_version": "2017-06-01",
    "full_properties": {
      "algorithm": {
        "description": "Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKey": {
        "description": "Represents the CEK of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKeyThumbprint": {
        "description": "Represents the Cert thumbprint that was used to encrypt the CEK.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "integrityKey": {
        "description": "Represents the CIK of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "portalCertificateThumbprint": {
        "description": "Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the extended info being persisted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "algorithm",
      "encryptionKey",
      "encryptionKeyThumbprint",
      "integrityKey",
      "portalCertificateThumbprint",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/storageAccountCredentials": {
    "api_version": "2017-06-01",
    "full_properties": {
      "accessKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountType": {
        "description": "Type of storage accessed on the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "alias": {
        "description": "Alias for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blobDomainName": {
        "description": "Blob end point for private clouds.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cloudType": {
        "description": "The cloud service provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "Connection string for the storage account. Use this string if username and account key are not specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableSSL": {
        "description": "SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endPoint": {
        "description": "The storage endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "The storage account's geo location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "The storage account login",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslStatus": {
        "description": "Signifies whether SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "Id of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "Username for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "cloudType",
      "enableSSL",
      "endPoint",
      "location",
      "login",
      "sslStatus",
      "accountKey",
      "accountType",
      "alias",
      "blobDomainName",
      "connectionString",
      "userName",
      "storageAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/storageDomains": {
    "api_version": "2016-10-01",
    "full_properties": {
      "encryptionKey": {
        "description": "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionStatus": {
        "description": "The encryption status \"Enabled | Disabled\".",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountCredentialIds": {
        "description": "The storage account credentials.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryptionKey",
      "encryptionStatus",
      "storageAccountCredentialIds"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts": {
    "api_version": "2022-05-01",
    "full_properties": {
      "accountType": {
        "description": "Microsoft.Storage/storageAccounts: The type of this account.",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountType"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "sku",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/blobServices": {
    "api_version": "2022-05-01",
    "full_properties": {
      "automaticSnapshotPolicyEnabled": {
        "description": "Deprecated in favor of isVersioningEnabled property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "changeFeed": {
        "description": "The blob service properties for change feed events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerDeleteRetentionPolicy": {
        "description": "The service properties for soft delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cors": {
        "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultServiceVersion": {
        "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deleteRetentionPolicy": {
        "description": "The service properties for soft delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVersioningEnabled": {
        "description": "Versioning is enabled if set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastAccessTimeTrackingPolicy": {
        "description": "The blob service properties for Last access time based tracking policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorePolicy": {
        "description": "The blob service properties for blob restore policy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors",
      "defaultServiceVersion",
      "deleteRetentionPolicy",
      "automaticSnapshotPolicyEnabled",
      "changeFeed",
      "containerDeleteRetentionPolicy",
      "isVersioningEnabled",
      "lastAccessTimeTrackingPolicy",
      "restorePolicy"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/blobServices/containers": {
    "api_version": "2022-05-01",
    "full_properties": {
      "command": {
        "description": "The commands to execute within the container instance in exec form.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataFormat": {
        "description": "DataFormat for Container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultEncryptionScope": {
        "description": "Default the container to use specified encryption scope for all writes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "denyEncryptionScopeOverride": {
        "description": "Block override of encryption scope from the container default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNfsV3AllSquash": {
        "description": "Enable NFSv3 all squash on blob container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNfsV3RootSquash": {
        "description": "Enable NFSv3 root squash on blob container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "The environment variables to set in the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "image": {
        "description": "The name of the image used to create the container instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "immutableStorageWithVersioning": {
        "description": "Object level immutability properties of the container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "livenessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the container as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ports": {
        "description": "The exposed ports on the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicAccess": {
        "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readinessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resources": {
        "description": "The resource requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeMounts": {
        "description": "The volume mounts available to the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "command",
      "environmentVariables",
      "image",
      "ports",
      "resources",
      "volumeMounts",
      "metadata",
      "publicAccess",
      "livenessProbe",
      "readinessProbe",
      "defaultEncryptionScope",
      "denyEncryptionScopeOverride",
      "dataFormat",
      "immutableStorageWithVersioning",
      "enableNfsV3AllSquash",
      "enableNfsV3RootSquash"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "allowProtectedAppendWrites": {
        "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowProtectedAppendWritesAll": {
        "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "immutabilityPeriodSinceCreationInDays": {
        "description": "The immutability period for the blobs in the container since the policy creation, in days.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "immutabilityPeriodSinceCreationInDays",
      "allowProtectedAppendWrites",
      "allowProtectedAppendWritesAll"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/encryptionScopes": {
    "api_version": "2022-05-01",
    "full_properties": {
      "keyVaultProperties": {
        "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requireInfrastructureEncryption": {
        "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyVaultProperties",
      "source",
      "state",
      "requireInfrastructureEncryption"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/fileServices": {
    "api_version": "2022-05-01",
    "full_properties": {
      "cors": {
        "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolSettings": {
        "description": "Protocol settings for file service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareDeleteRetentionPolicy": {
        "description": "The service properties for soft delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors",
      "shareDeleteRetentionPolicy",
      "protocolSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/fileServices/shares": {
    "api_version": "2022-05-01",
    "full_properties": {
      "accessTier": {
        "description": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "adminUser": {
        "description": "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "The data policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for file share",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabledProtocols": {
        "description": "The authentication protocol that is used for the file share. Can only be specified when creating a share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the share as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisionedCapacityInBytes": {
        "description": "The total provisioned capacity in Bytes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rootSquash": {
        "description": "The property is for NFS share only. The default is NoRootSquash.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareQuota": {
        "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "The Share Status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "signedIdentifiers": {
        "description": "List of stored access policies specified on the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminUser",
      "dataPolicy",
      "description",
      "monitoringStatus",
      "provisionedCapacityInBytes",
      "shareStatus",
      "metadata",
      "shareQuota",
      "accessTier",
      "enabledProtocols",
      "rootSquash",
      "signedIdentifiers"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/inventoryPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "policy": {
        "description": "The storage account blob inventory policy rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policy"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/localUsers": {
    "api_version": "2022-05-01",
    "full_properties": {
      "hasSharedKey": {
        "description": "Indicates whether shared key exists. Set it to false to remove existing shared key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hasSshKey": {
        "description": "Indicates whether ssh key exists. Set it to false to remove existing SSH key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hasSshPassword": {
        "description": "Indicates whether ssh password exists. Set it to false to remove existing SSH password.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "homeDirectory": {
        "description": "Optional, local user home directory.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "permissionScopes": {
        "description": "The permission scopes of the local user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshAuthorizedKeys": {
        "description": "Optional, local user ssh authorized keys for SFTP.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hasSharedKey",
      "hasSshKey",
      "hasSshPassword",
      "homeDirectory",
      "permissionScopes",
      "sshAuthorizedKeys"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/managementPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "policy": {
        "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policy"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/objectReplicationPolicies": {
    "api_version": "2022-05-01",
    "full_properties": {
      "destinationAccount": {
        "description": "Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rules": {
        "description": "The storage account object replication rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceAccount": {
        "description": "Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destinationAccount",
      "rules",
      "sourceAccount"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/privateEndpointConnections": {
    "api_version": "2022-05-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/queueServices": {
    "api_version": "2022-05-01",
    "full_properties": {
      "cors": {
        "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/queueServices/queues": {
    "api_version": "2022-05-01",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "the TimeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deadLetteringOnMessageExpiration": {
        "description": "A value that indicates whether this queue has dead letter support when a message expires.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "The default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "A value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableExpress": {
        "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitioning": {
        "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "entityAvailabilityStatus": {
        "description": "Entity availability status for the queue.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAnonymousAccessible": {
        "description": "A value that indicates whether the message is accessible anonymously.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lockDuration": {
        "description": "The duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxDeliveryCount": {
        "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeInMegabytes": {
        "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair that represents queue metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresDuplicateDetection": {
        "description": "A value indicating if this queue requires duplicate detection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresSession": {
        "description": "A value that indicates whether the queue supports the concept of sessions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportOrdering": {
        "description": "A value that indicates whether the queue supports ordering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "deadLetteringOnMessageExpiration",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "enableExpress",
      "enablePartitioning",
      "entityAvailabilityStatus",
      "isAnonymousAccessible",
      "lockDuration",
      "maxDeliveryCount",
      "maxSizeInMegabytes",
      "requiresDuplicateDetection",
      "requiresSession",
      "status",
      "supportOrdering",
      "metadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/tableServices": {
    "api_version": "2022-05-01",
    "full_properties": {
      "cors": {
        "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts/tableServices/tables": {
    "api_version": "2022-05-01",
    "full_properties": {
      "plan": {
        "description": "Instruct the system how to handle and charge the logs ingested to this table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restoredLogs": {
        "description": "Restore parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resultStatistics": {
        "description": "Search job execution statistics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schema": {
        "description": "Table's schema.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "searchResults": {
        "description": "Parameters of the search job that initiated this table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "signedIdentifiers": {
        "description": "List of stored access policies specified on the table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "totalRetentionInDays": {
        "description": "The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "signedIdentifiers",
      "plan",
      "restoredLogs",
      "resultStatistics",
      "retentionInDays",
      "schema",
      "searchResults",
      "totalRetentionInDays"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.StorageCache/caches": {
    "api_version": "2022-05-01",
    "full_properties": {
      "cacheSizeGB": {
        "description": "The size of this Cache, in GB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "directoryServicesSettings": {
        "description": "Cache Directory Services settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Cache encryption settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSettings": {
        "description": "Cache network settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primingJobs": {
        "description": "The list of priming jobs defined for the cache.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securitySettings": {
        "description": "Cache security settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spaceAllocation": {
        "description": "List of storage target space allocations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "A fully qualified URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeSettings": {
        "description": "Cache Upgrade Settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeStatus": {
        "description": "Properties describing the software upgrade state of the Cache.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zones": {
        "description": "Availability zones for resources. This field should only contain a single element in the array.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cacheSizeGB",
      "provisioningState",
      "subnet",
      "upgradeStatus",
      "encryptionSettings",
      "networkSettings",
      "securitySettings",
      "directoryServicesSettings",
      "zones",
      "primingJobs",
      "spaceAllocation",
      "upgradeSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageCache/caches/storageTargets": {
    "api_version": "2022-05-01",
    "full_properties": {
      "blobNfs": {
        "description": "Properties pertaining to the BlobNfsTarget.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clfs": {
        "description": "Properties pertaining to the ClfsTarget",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "junctions": {
        "description": "List of Cache namespace junctions to target for namespace associations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nfs3": {
        "description": "Properties pertaining to the Nfs3Target",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Storage target operational state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetType": {
        "description": "Type of the Storage Target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "unknown": {
        "description": "Properties pertaining to the UnknownTarget",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clfs",
      "junctions",
      "nfs3",
      "provisioningState",
      "targetType",
      "unknown",
      "blobNfs",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageMover/storageMovers": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "description": {
        "description": "A description for the Storage Mover.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageMover/storageMovers/agents": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "arcResourceId": {
        "description": "The fully qualified resource ID of the Hybrid Compute resource for the Agent.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "arcVmUuid": {
        "description": "The VM UUID of the Hybrid Compute resource for the Agent.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cpu": {
        "description": "The CPU configuration in terms of number of cores required for the run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description for the Agent.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cpu",
      "arcResourceId",
      "arcVmUuid",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageMover/storageMovers/endpoints": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "description": {
        "description": "A description for the Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageMover/storageMovers/projects": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureAuthenticationInfo": {
        "description": "Azure Active Directory Application",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerStorageAccountArmId": {
        "description": "The ARM id of the storage account used for interactions when public access is disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "devCenterId": {
        "description": "Resource Id of an associated DevCenter",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Defines the connection properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "databasesInfo",
      "sourceConnectionInfo",
      "sourcePlatform",
      "targetConnectionInfo",
      "targetPlatform",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "customerStorageAccountArmId",
      "projectStatus",
      "publicNetworkAccess",
      "azureAuthenticationInfo",
      "devCenterId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageMover/storageMovers/projects/jobDefinitions": {
    "api_version": "2022-07-01-preview",
    "full_properties": {
      "agentName": {
        "description": "Name of the Agent to assign for new Job Runs of this Job Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "copyMode": {
        "description": "Strategy to use for copy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customerSecrets": {
        "description": "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataServiceInput": {
        "description": "A generic json used differently by each data service type.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "dataSinkId": {
        "description": "Data Sink Id associated to the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataSourceId": {
        "description": "Data Source Id associated to the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description for the Job Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Last modified time of the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runLocation": {
        "description": "This is the preferred geo location for the job to run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedules": {
        "description": "Schedule for running the job definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceName": {
        "description": "The name of the source Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceSubpath": {
        "description": "The subpath to use when reading from the source Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "State of the job definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetName": {
        "description": "The name of the target Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetSubpath": {
        "description": "The subpath to use when writing to the target Endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userConfirmation": {
        "description": "Enum to detect if user confirmation is required. If not passed will default to NotRequired.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customerSecrets",
      "dataServiceInput",
      "dataSinkId",
      "dataSourceId",
      "lastModifiedTime",
      "runLocation",
      "schedules",
      "state",
      "userConfirmation",
      "agentName",
      "copyMode",
      "description",
      "sourceName",
      "sourceSubpath",
      "targetName",
      "targetSubpath"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StoragePool/diskPools": {
    "api_version": "2021-08-01",
    "full_properties": {
      "additionalCapabilities": {
        "description": "List of additional capabilities for a Disk Pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilityZones": {
        "description": "Logical zone for Disk Pool resource; example: [\"1\"].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disks": {
        "description": "List of Azure Managed Disks to attach to a Disk Pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "Azure Resource ID of a Subnet for the Disk Pool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tier": {
        "description": "Determines the SKU of VM deployed for Disk pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalCapabilities",
      "availabilityZones",
      "disks",
      "subnetId",
      "tier"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.StoragePool/diskPools/iscsiTargets": {
    "api_version": "2021-08-01",
    "full_properties": {
      "aclMode": {
        "description": "Mode for Target connectivity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "luns": {
        "description": "List of LUNs to be exposed through iSCSI Target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "staticAcls": {
        "description": "Access Control List (ACL) for an iSCSI Target; defines LUN masking policy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetIqn": {
        "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tpgs": {
        "description": "List of iSCSI target portal groups. Can have 1 portal group at most.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetIqn",
      "tpgs",
      "aclMode",
      "luns",
      "staticAcls"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices": {
    "api_version": "2022-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/privateEndpointConnections": {
    "api_version": "2022-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/registeredServers": {
    "api_version": "2022-06-01",
    "full_properties": {
      "agentVersion": {
        "description": "Registered Server Agent Version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterId": {
        "description": "Registered Server clusterId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterName": {
        "description": "Registered Server clusterName",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastHeartBeat": {
        "description": "Registered Server last heart beat",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverCertificate": {
        "description": "Registered Server Certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverId": {
        "description": "Registered Server serverId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverOSVersion": {
        "description": "Registered Server OS Version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverRole": {
        "description": "Registered Server serverRole",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentVersion",
      "clusterId",
      "clusterName",
      "friendlyName",
      "lastHeartBeat",
      "serverCertificate",
      "serverId",
      "serverOSVersion",
      "serverRole"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/syncGroups": {
    "api_version": "2022-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/syncGroups/cloudEndpoints": {
    "api_version": "2022-06-01",
    "full_properties": {
      "azureFileShareName": {
        "description": "Azure file share name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountResourceId": {
        "description": "Storage Account Resource Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountShareName": {
        "description": "Storage Account Share name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountTenantId": {
        "description": "Storage Account Tenant Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccountResourceId",
      "storageAccountShareName",
      "storageAccountTenantId",
      "azureFileShareName",
      "friendlyName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/syncGroups/serverEndpoints": {
    "api_version": "2022-06-01",
    "full_properties": {
      "cloudTiering": {
        "description": "Cloud Tiering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "initialDownloadPolicy": {
        "description": "Policy for how namespace and files are recalled during FastDr.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "initialUploadPolicy": {
        "description": "Policy for how the initial upload sync session is performed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localCacheMode": {
        "description": "Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "offlineDataTransfer": {
        "description": "Offline data transfer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "offlineDataTransferShareName": {
        "description": "Offline data transfer share name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverLocalPath": {
        "description": "Server folder used for data synchronization",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverResourceId": {
        "description": "Arm resource identifier.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tierFilesOlderThanDays": {
        "description": "Tier files older than days.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeFreeSpacePercent": {
        "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cloudTiering",
      "friendlyName",
      "serverLocalPath",
      "serverResourceId",
      "volumeFreeSpacePercent",
      "tierFilesOlderThanDays",
      "offlineDataTransfer",
      "offlineDataTransferShareName",
      "initialDownloadPolicy",
      "localCacheMode",
      "initialUploadPolicy"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/clusters": {
    "api_version": "2020-03-01",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/clusters/privateEndpoints": {
    "api_version": "2020-03-01",
    "full_properties": {
      "applicationSecurityGroups": {
        "description": "Application security groups in which the private endpoint IP configuration is included.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDnsConfigs": {
        "description": "An array of custom dns configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customNetworkInterfaceName": {
        "description": "The custom name of the network interface attached to the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manualPrivateLinkServiceConnections": {
        "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnections": {
        "description": "A grouping of information about the connection to the remote resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource id of private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Subnet in a virtual network resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "manualPrivateLinkServiceConnections",
      "privateLinkServiceConnections",
      "subnet",
      "provisioningState",
      "customDnsConfigs",
      "resourceGuid",
      "applicationSecurityGroups",
      "customNetworkInterfaceName",
      "ipConfigurations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs": {
    "api_version": "2021-10-01-preview",
    "full_properties": {
      "cluster": {
        "description": "The properties associated with a Stream Analytics cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "compatibilityLevel": {
        "description": "Controls certain runtime behaviors of the streaming job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentStoragePolicy": {
        "description": "Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataLocale": {
        "description": "The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventsLateArrivalMaxDelayInSeconds": {
        "description": "The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventsOutOfOrderMaxDelayInSeconds": {
        "description": "The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventsOutOfOrderPolicy": {
        "description": "Indicates the policy to apply to events that arrive out of order in the input event stream.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "externals": {
        "description": "The storage account where the custom code artifacts are located.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "functions": {
        "description": "A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputs": {
        "description": "A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobStorageAccount": {
        "description": "The properties that are associated with an Azure Storage account with MSI",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobType": {
        "description": "Describes the type of the job. Valid modes are `Cloud` and 'Edge'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputErrorPolicy": {
        "description": "Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputStartMode": {
        "description": "This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputStartTime": {
        "description": "Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The properties that are associated with a SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transformation": {
        "description": "A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "compatibilityLevel",
      "dataLocale",
      "eventsLateArrivalMaxDelayInSeconds",
      "eventsOutOfOrderMaxDelayInSeconds",
      "eventsOutOfOrderPolicy",
      "functions",
      "inputs",
      "outputErrorPolicy",
      "outputs",
      "outputStartMode",
      "outputStartTime",
      "sku",
      "transformation",
      "cluster",
      "contentStoragePolicy",
      "externals",
      "jobStorageAccount",
      "jobType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/functions": {
    "api_version": "2021-10-01-preview",
    "full_properties": {
      "properties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "properties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/inputs": {
    "api_version": "2021-10-01-preview",
    "full_properties": {
      "compression": {
        "description": "Describes how input data is compressed",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionKey": {
        "description": "partitionKey Describes a key in the input data which is used for partitioning the input data",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serialization": {
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "watermarkSettings": {
        "description": "Settings which determine whether to read watermark events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serialization",
      "compression",
      "partitionKey",
      "watermarkSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/outputs": {
    "api_version": "2021-10-01-preview",
    "full_properties": {
      "datasource": {
        "description": "Describes the data source that output will be written to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serialization": {
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeWindow": {
        "description": "The size window to constrain a Stream Analytics output to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeWindow": {
        "description": "The time frame for filtering Stream Analytics job outputs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "watermarkSettings": {
        "description": "Settings which determine whether to send watermarks to downstream.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datasource",
      "serialization",
      "sizeWindow",
      "timeWindow",
      "watermarkSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/transformations": {
    "api_version": "2021-10-01-preview",
    "full_properties": {
      "query": {
        "description": "Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "streamingUnits": {
        "description": "Specifies the number of streaming units that the streaming job uses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validStreamingUnits": {
        "description": "Specifies the valid streaming units a streaming job can scale to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "query",
      "streamingUnits",
      "validStreamingUnits"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/privateLinkHubs": {
    "api_version": "2021-06-01",
    "full_properties": {
      "provisioningState": {
        "description": "PrivateLinkHub provisioning state",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces": {
    "api_version": "2021-06-01",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowRecoverSoftDeletedWorkspace": {
        "description": "Allow a soft deleted workspace to be recovered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationGroupReferences": {
        "description": "List of applicationGroup resource Ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cspWorkspaceAdminProperties": {
        "description": "Initial workspace AAD admin properties for a CSP subscription",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataCollectionRuleResourceId": {
        "description": "The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskEncryptionSetId": {
        "description": "The resource Id of the managed disk encryption set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption properties for databricks workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "Workspace features.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceCmkForQuery": {
        "description": "Indicates whether customer managed storage is mandatory for query management.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupName": {
        "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetworkSettings": {
        "description": "Managed Virtual Network Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryUserAssignedIdentity": {
        "description": "The user assigned identity resource id that represents the workspace identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purviewConfiguration": {
        "description": "Purview Configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiredNsgRules": {
        "description": "Gets or sets a value indicating whether data plane (clusters) to control plane communication happen over private endpoint. Supported values are 'AllRules' and 'NoAzureDatabricksRules'. 'NoAzureServiceRules' value is for internal use only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceManagedResourcesSettings": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeleteEnabled": {
        "description": "create a workspace with soft delete capability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIdentity": {
        "description": "The Managed Identity details for storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedServiceBypassEnabled": {
        "description": "Is trustedServiceBypassEnabled for the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "v1LegacyMode": {
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceCapping": {
        "description": "The daily volume cap for ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceRepositoryConfiguration": {
        "description": "Git integration settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "storageAccountIdentity",
      "uiDefinitionUri",
      "updatedBy",
      "applicationGroupReferences",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "encryption",
      "managedResourceGroupName",
      "managedVirtualNetwork",
      "managedVirtualNetworkSettings",
      "privateEndpointConnections",
      "purviewConfiguration",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "workspaceRepositoryConfiguration",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "workspaceCapping",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources",
      "features",
      "forceCmkForQuery",
      "primaryUserAssignedIdentity",
      "serviceManagedResourcesSettings",
      "publicNetworkAccess",
      "requiredNsgRules",
      "cspWorkspaceAdminProperties",
      "azureADOnlyAuthentication",
      "trustedServiceBypassEnabled",
      "defaultDataCollectionRuleResourceId",
      "allowRecoverSoftDeletedWorkspace",
      "softDeleteEnabled",
      "diskEncryptionSetId",
      "managedDiskIdentity",
      "v1LegacyMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/administrators": {
    "api_version": "2021-06-01",
    "full_properties": {
      "administratorType": {
        "description": "Workspace active directory administrator type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "Object ID of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/auditingSettings": {
    "api_version": "2021-06-01",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\nLEDGER_OPERATION_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDevopsAuditEnabled": {
        "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManagedIdentityInUse": {
        "description": "Specifies whether Managed Identity is used to access blob storage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint",
      "isDevopsAuditEnabled",
      "isManagedIdentityInUse"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/azureADOnlyAuthentications": {
    "api_version": "2021-06-01",
    "full_properties": {
      "azureADOnlyAuthentication": {
        "description": "Azure Active Directory only Authentication enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureADOnlyAuthentication"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/bigDataPools": {
    "api_version": "2021-06-01",
    "full_properties": {
      "autoPause": {
        "description": "Auto-pausing properties of a Big Data pool powered by Apache Spark",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoScale": {
        "description": "Auto-scaling properties of a Big Data pool powered by Apache Spark",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cacheSize": {
        "description": "The cache size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "The time when the Big Data pool was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customLibraries": {
        "description": "List of custom libraries/packages associated with the spark pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultSparkLogFolder": {
        "description": "The default folder where Spark logs will be written.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dynamicExecutorAllocation": {
        "description": "Dynamic Executor Allocation Properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAutotuneEnabled": {
        "description": "Whether autotune is required or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isComputeIsolationEnabled": {
        "description": "Whether compute isolation is required or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "libraryRequirements": {
        "description": "Library requirements for a Big Data pool powered by Apache Spark",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeCount": {
        "description": "The number of nodes in the Big Data pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeSize": {
        "description": "The level of compute power that each node in the Big Data pool has.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeSizeFamily": {
        "description": "The kind of nodes that the Big Data pool provides.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the Big Data pool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sessionLevelPackagesEnabled": {
        "description": "Whether session level packages enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sparkConfigProperties": {
        "description": "SparkConfig Properties for a Big Data pool powered by Apache Spark",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sparkEventsFolder": {
        "description": "The Spark events folder",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sparkVersion": {
        "description": "The Apache Spark version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoPause",
      "autoScale",
      "cacheSize",
      "creationDate",
      "customLibraries",
      "defaultSparkLogFolder",
      "dynamicExecutorAllocation",
      "isComputeIsolationEnabled",
      "libraryRequirements",
      "nodeCount",
      "nodeSize",
      "nodeSizeFamily",
      "provisioningState",
      "sessionLevelPackagesEnabled",
      "sparkConfigProperties",
      "sparkEventsFolder",
      "sparkVersion",
      "isAutotuneEnabled"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/dedicatedSQLminimalTlsSettings": {
    "api_version": "2021-06-01",
    "full_properties": {
      "minimalTlsVersion": {
        "description": "The minimal tls version of the sql server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "minimalTlsVersion"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/encryptionProtector": {
    "api_version": "2021-06-01",
    "full_properties": {
      "autoRotationEnabled": {
        "description": "Key auto rotation opt-in flag. Either true or false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverKeyName": {
        "description": "The name of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serverKeyName",
      "serverKeyType",
      "autoRotationEnabled"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/extendedAuditingSettings": {
    "api_version": "2021-06-01",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\nLEDGER_OPERATION_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDevopsAuditEnabled": {
        "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManagedIdentityInUse": {
        "description": "Specifies whether Managed Identity is used to access blob storage",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "predicateExpression": {
        "description": "Specifies condition of where clause when creating an audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "predicateExpression",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint",
      "isDevopsAuditEnabled",
      "isManagedIdentityInUse"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/firewallRules": {
    "api_version": "2021-06-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the firewall rule. Must be IPv4 format",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/integrationRuntimes": {
    "api_version": "2021-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Integration runtime description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/keys": {
    "api_version": "2021-06-01",
    "full_properties": {
      "attributes": {
        "description": "The object attributes managed by the Azure Key Vault service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "curveName": {
        "description": "The elliptic curve name. For valid values, see JsonWebKeyCurveName.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isActiveCMK": {
        "description": "Used to activate the workspace after a customer managed key is provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyOps": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keySize": {
        "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultUrl": {
        "description": "The Key Vault Url of the workspace key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kty": {
        "description": "The type of the key. For valid values, see JsonWebKeyType.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The identifier of the key vault key used to encrypt data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "release_policy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rotationPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the identity which will be used to access key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isActiveCMK",
      "keyVaultUrl",
      "attributes",
      "curveName",
      "keyOps",
      "keySize",
      "kty",
      "name",
      "version",
      "rotationPolicy",
      "release_policy"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/kustoPools": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceUID": {
        "description": "The workspace unique identifier.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workspaceUid": {
        "description": "The workspace unique identifier.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "engineType",
      "provisioningState",
      "workspaceUid",
      "enablePurge",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "workspaceUID"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/kustoPools/attachedDatabaseConfigurations": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
      "clusterResourceId": {
        "description": "The resource id of the cluster where the databases you would like to attach reside.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseName": {
        "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseNameOverride": {
        "description": "Overrides the original database name. Relevant only when attaching to a specific database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseNamePrefix": {
        "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultPrincipalsModificationKind": {
        "description": "The default principals modification kind.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tableLevelSharingProperties": {
        "description": "Tables that will be included and excluded in the follower database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clusterResourceId",
      "databaseName",
      "defaultPrincipalsModificationKind",
      "tableLevelSharingProperties",
      "provisioningState",
      "databaseNameOverride",
      "databaseNamePrefix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/kustoPools/databases": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/kustoPools/databases/dataConnections": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/kustoPools/databases/principalAssignments": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
      "principalId": {
        "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalType": {
        "description": "Principal type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "role": {
        "description": "Database principal role.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The tenant id of the principal",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalId",
      "principalType",
      "role",
      "tenantId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/kustoPools/principalAssignments": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
      "principalId": {
        "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalType": {
        "description": "Principal type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "role": {
        "description": "Cluster principal role.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The tenant id of the principal",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalId",
      "principalType",
      "role",
      "tenantId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/managedIdentitySqlControlSettings": {
    "api_version": "2021-06-01",
    "full_properties": {
      "grantSqlControlToManagedIdentity": {
        "description": "Grant sql control to managed identity",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "grantSqlControlToManagedIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/privateEndpointConnections": {
    "api_version": "2021-06-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/securityAlertPolicies": {
    "api_version": "2021-06-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlAdministrators": {
    "api_version": "2021-06-01",
    "full_properties": {
      "administratorType": {
        "description": "Workspace active directory administrator type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "Object ID of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlDatabases": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataRetention": {
        "description": "Sql database data retention.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageRedundancy": {
        "description": "The storage redundancy of the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "dataRetention",
      "storageRedundancy"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools": {
    "api_version": "2021-06-01",
    "full_properties": {
      "collation": {
        "description": "Collation mode",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "Date the SQL pool was created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "Maximum size in bytes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Resource state",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "Backup database to restore from",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Snapshot time to restore",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the sql pool was deleted",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "Source database to create from",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Resource status",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "creationDate",
      "maxSizeBytes",
      "provisioningState",
      "recoverableDatabaseId",
      "restorePointInTime",
      "sourceDatabaseId",
      "status",
      "storageAccountType",
      "sourceDatabaseDeletionDate"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/auditingSettings": {
    "api_version": "2021-06-01",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/dataMaskingPolicies": {
    "api_version": "2021-06-01",
    "full_properties": {
      "dataMaskingState": {
        "description": "The state of the data masking policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exemptPrincipals": {
        "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataMaskingState",
      "exemptPrincipals"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/dataMaskingPolicies/rules": {
    "api_version": "2021-06-01",
    "full_properties": {
      "aliasName": {
        "description": "The alias name. This is a legacy parameter and is no longer used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "columnName": {
        "description": "The column name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maskingFunction": {
        "description": "The masking function that is used for the data masking rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberFrom": {
        "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "numberTo": {
        "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefixSize": {
        "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replacementString": {
        "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ruleState": {
        "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schemaName": {
        "description": "The schema name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suffixSize": {
        "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tableName": {
        "description": "The table name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aliasName",
      "columnName",
      "maskingFunction",
      "numberFrom",
      "numberTo",
      "prefixSize",
      "replacementString",
      "ruleState",
      "schemaName",
      "suffixSize",
      "tableName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/extendedAuditingSettings": {
    "api_version": "2021-06-01",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "predicateExpression": {
        "description": "Specifies condition of where clause when creating an audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "predicateExpression",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/geoBackupPolicies": {
    "api_version": "2021-06-01",
    "full_properties": {
      "state": {
        "description": "The state of the geo backup policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/maintenancewindows": {
    "api_version": "2021-06-01",
    "full_properties": {
      "timeRanges": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "timeRanges"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/metadataSync": {
    "api_version": "2021-06-01",
    "full_properties": {
      "enabled": {
        "description": "Indicates whether the metadata sync is enabled or disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "syncIntervalInMinutes": {
        "description": "The Sync Interval in minutes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "syncIntervalInMinutes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/schemas/tables/columns/sensitivityLabels": {
    "api_version": "2021-06-01",
    "full_properties": {
      "informationType": {
        "description": "The information type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "informationTypeId": {
        "description": "The information type ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelId": {
        "description": "The label ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelName": {
        "description": "The label name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rank": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "informationType",
      "informationTypeId",
      "labelId",
      "labelName",
      "rank"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/securityAlertPolicies": {
    "api_version": "2021-06-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/transparentDataEncryption": {
    "api_version": "2021-06-01",
    "full_properties": {
      "state": {
        "description": "Specifies the state of the transparent data encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the database transparent data encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "status",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments": {
    "api_version": "2021-06-01",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments/rules/baselines": {
    "api_version": "2021-06-01",
    "full_properties": {
      "baselineResults": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "baselineResults"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/workloadGroups": {
    "api_version": "2021-06-01",
    "full_properties": {
      "importance": {
        "description": "The workload group importance level.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxResourcePercent": {
        "description": "The workload group cap percentage resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxResourcePercentPerRequest": {
        "description": "The workload group request maximum grant percentage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minResourcePercent": {
        "description": "The workload group minimum percentage resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minResourcePercentPerRequest": {
        "description": "The workload group request minimum grant percentage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queryExecutionTimeout": {
        "description": "The workload group query execution timeout.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "importance",
      "maxResourcePercent",
      "maxResourcePercentPerRequest",
      "minResourcePercent",
      "minResourcePercentPerRequest",
      "queryExecutionTimeout"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/workloadGroups/workloadClassifiers": {
    "api_version": "2021-06-01",
    "full_properties": {
      "context": {
        "description": "The workload classifier context.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "The workload classifier end time for classification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "importance": {
        "description": "The workload classifier importance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "label": {
        "description": "The workload classifier label.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "memberName": {
        "description": "The workload classifier member name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The workload classifier start time for classification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "context",
      "endTime",
      "importance",
      "label",
      "memberName",
      "startTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/trustedServiceByPassConfiguration": {
    "api_version": "2021-06-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/vulnerabilityAssessments": {
    "api_version": "2021-06-01",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Syntex/documentProcessors": {
    "api_version": "2022-09-15-preview",
    "full_properties": {
      "spoTenantId": {
        "description": "The ID (GUID) of an SharePoint Online (SPO) tenant associated with this document processor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "spoTenantUrl": {
        "description": "The URL of an SharePoint Online (SPO) tenant associated with this document processor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "spoTenantId",
      "spoTenantUrl"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TestBase/testBaseAccounts": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Describes a Test Base Account SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "sku"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TestBase/testBaseAccounts/customerEvents": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "eventName": {
        "description": "The name of the event subscribed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "receivers": {
        "description": "The notification event receivers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "eventName",
      "receivers"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TestBase/testBaseAccounts/packages": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "applicationName": {
        "description": "Application name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blobPath": {
        "description": "The file path of the package.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "flightingRing": {
        "description": "The flighting ring for feature update.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetOSList": {
        "description": "Specifies the target OSs of specific OS Update types.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tests": {
        "description": "The detailed test information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Application version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationName",
      "blobPath",
      "flightingRing",
      "provisioningState",
      "targetOSList",
      "tests",
      "version"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TestBase/testBaseAccounts/packages/favoriteProcesses": {
    "api_version": "2022-04-01-preview",
    "full_properties": {
      "actualProcessName": {
        "description": "The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actualProcessName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments": {
    "api_version": "2021-06-30-preview",
    "full_properties": {
      "dataRetentionTime": {
        "description": "ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partitionKeyProperties": {
        "description": "The list of partition keys according to which the data in the environment will be ordered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageLimitExceededBehavior": {
        "description": "The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If \"PauseIngress\" is specified, new events will not be read from the event source. If \"PurgeOldData\" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataRetentionTime",
      "storageLimitExceededBehavior",
      "partitionKeyProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "sku",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments/accessPolicies": {
    "api_version": "2021-06-30-preview",
    "full_properties": {
      "description": {
        "description": "An description of the access policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalObjectId": {
        "description": "The objectId of the principal in Azure Active Directory.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "roles": {
        "description": "The list of roles the principal is assigned on the environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "principalObjectId",
      "roles"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments/eventSources": {
    "api_version": "2021-06-30-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments/privateEndpointConnections": {
    "api_version": "2021-03-31-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments/referenceDataSets": {
    "api_version": "2021-06-30-preview",
    "full_properties": {
      "dataStringComparisonBehavior": {
        "description": "The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyProperties": {
        "description": "The list of key properties for the reference data set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyProperties",
      "dataStringComparisonBehavior"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareCloudSimple/dedicatedCloudNodes": {
    "api_version": "2019-04-01",
    "full_properties": {
      "availabilityZoneId": {
        "description": "Availability Zone id, e.g. \"az1\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodesCount": {
        "description": "count of nodes to create",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementGroupId": {
        "description": "Placement Group id, e.g. \"n1\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "purchaseId": {
        "description": "purchase id",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "skuDescription": {
        "description": "The purchase SKU for CloudSimple paid resources",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilityZoneId",
      "nodesCount",
      "placementGroupId",
      "purchaseId",
      "skuDescription"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareCloudSimple/dedicatedCloudServices": {
    "api_version": "2019-04-01",
    "full_properties": {
      "gatewaySubnet": {
        "description": "gateway Subnet for the account. It will collect the subnet address and always treat it as /28",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "gatewaySubnet"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareCloudSimple/virtualMachines": {
    "api_version": "2019-04-01",
    "full_properties": {
      "additionalCapabilities": {
        "description": "Enables or disables a capability on the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "address": {
        "description": "Public IP address of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorAccount": {
        "description": "Admin credentials for virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "amountOfRam": {
        "description": "The amount of memory",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationProfile": {
        "description": "Contains the list of gallery applications that should be made available to the VM/VMSS",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySet": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySets": {
        "description": "Availability Sets in vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingProfile": {
        "description": "Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservation": {
        "description": "The parameters of a capacity reservation Profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "checkpointType": {
        "description": "Type of checkpoint supported for the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "checkpoints": {
        "description": "Checkpoints in the vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudId": {
        "description": "ARM Id of the cloud resource to use for deploying the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customization": {
        "description": "Guest OS Customization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disks": {
        "description": "The list of Virtual Disks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exposeToGuestVM": {
        "description": "Expose Guest OS or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extensionsTimeBudget": {
        "description": "Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firmwareType": {
        "description": "Firmware type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "generation": {
        "description": "Gets or sets the generation for the vm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "guestAgentProfile": {
        "description": "Defines the resource properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "host": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostGroup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isNotebookInstanceCompute": {
        "description": "Indicates whether this compute will be used for running notebooks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network interfaces or the networking configuration of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nics": {
        "description": "The list of Virtual NICs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberOfCores": {
        "description": "The number of CPU cores",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Password for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "placementProfile": {
        "description": "Defines the resource properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformFaultDomain": {
        "description": "Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateCloudId": {
        "description": "Private Cloud Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourcePool": {
        "description": "Resource pool model",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourcePoolId": {
        "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will\r\ndeploy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scheduledEventsProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "Specifies the Security profile settings for the virtual machine or virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smbiosUuid": {
        "description": "Gets or sets the SMBIOS UUID of the vm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sshPort": {
        "description": "Port open for ssh connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the virtual machine disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateId": {
        "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userData": {
        "description": "UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "username": {
        "description": "Username for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uuid": {
        "description": "Unique ID of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vSphereNetworks": {
        "description": "The list of Virtual VSphere Networks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineScaleSet": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineSize": {
        "description": "Virtual Machine size",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmName": {
        "description": "VMName is the name of VM on the SCVMM server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmmServerId": {
        "description": "ARM Id of the vmmServer resource in which this resource resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilitySet",
      "diagnosticsProfile",
      "hardwareProfile",
      "licenseType",
      "networkProfile",
      "osProfile",
      "storageProfile",
      "address",
      "administratorAccount",
      "sshPort",
      "virtualMachineSize",
      "proximityPlacementGroup",
      "additionalCapabilities",
      "billingProfile",
      "evictionPolicy",
      "host",
      "priority",
      "virtualMachineScaleSet",
      "amountOfRam",
      "customization",
      "disks",
      "exposeToGuestVM",
      "nics",
      "numberOfCores",
      "password",
      "privateCloudId",
      "resourcePool",
      "templateId",
      "username",
      "vSphereNetworks",
      "extensionsTimeBudget",
      "hostGroup",
      "securityProfile",
      "availabilitySets",
      "checkpoints",
      "checkpointType",
      "cloudId",
      "generation",
      "inventoryItemId",
      "uuid",
      "vmmServerId",
      "vmName",
      "firmwareType",
      "guestAgentProfile",
      "moRefId",
      "placementProfile",
      "resourcePoolId",
      "smbiosUuid",
      "vCenterId",
      "platformFaultDomain",
      "isNotebookInstanceCompute",
      "scheduledEventsProfile",
      "userData",
      "capacityReservation",
      "applicationProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareVirtustream/privateClouds": {
    "api_version": "2019-08-09-preview",
    "full_properties": {
      "availability": {
        "description": "The properties describing private cloud availability zone distribution",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "circuit": {
        "description": "An ExpressRoute Circuit",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cluster": {
        "description": "The properties of a default cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "The properties of customer managed encryption key",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identitySources": {
        "description": "vCenter Single Sign On Identity Sources",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internet": {
        "description": "Connectivity to internet is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementCluster": {
        "description": "The properties of a management cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkBlock": {
        "description": "The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nsxtPassword": {
        "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryCircuit": {
        "description": "An ExpressRoute Circuit",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vcenterPassword": {
        "description": "Optionally, set the vCenter admin password when the private cloud is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "circuit",
      "cluster",
      "identitySources",
      "internet",
      "networkBlock",
      "nsxtPassword",
      "vcenterPassword",
      "managementCluster",
      "availability",
      "encryption",
      "secondaryCircuit"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareVirtustream/privateClouds/clusters": {
    "api_version": "2019-08-09-preview",
    "full_properties": {
      "aadApplicationObjectId": {
        "description": "Object id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadClientId": {
        "description": "App id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadServicePrincipalObjectId": {
        "description": "Id of cluster identity service principal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "aadTenantId": {
        "description": "Tenant id of cluster AAD identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "acceptedAudiences": {
        "description": "The cluster's accepted audiences.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedFqdnList": {
        "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowedIpRangeList": {
        "description": "The list of ips in the format of CIDR allowed to connect to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "associatedWorkspaces": {
        "description": "The list of Log Analytics workspaces associated with the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingType": {
        "description": "The cluster's billing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "capacityReservationProperties": {
        "description": "The Capacity Reservation properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudManagementEndpoint": {
        "description": "Endpoint configured for management from the Azure portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "desiredProperties": {
        "description": "Desired properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoStop": {
        "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDoubleEncryption": {
        "description": "A boolean value that indicates if double encryption is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "engineType": {
        "description": "The engine type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hosts": {
        "description": "The hosts",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "infrastructureServiceManager": {
        "description": "Indicates if infrastructure service manager is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inventoryItemId": {
        "description": "Gets or sets the inventory Item ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isAvailabilityZonesEnabled": {
        "description": "Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isDoubleEncryptionEnabled": {
        "description": "Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "Properties of the key vault.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "languageExtensions": {
        "description": "The list of language extension objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimumTlsVersion": {
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "moRefId": {
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Indicates a list of notification channels for cluster events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the cluster provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPType": {
        "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reportedProperties": {
        "description": "Properties reported by cluster agent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restrictOutboundNetworkAccess": {
        "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sfZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softwareAssuranceProperties": {
        "description": "Software Assurance properties of the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportsScaling": {
        "description": "A value that indicates whether Scaling is Supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePauseEndTimestampUtc": {
        "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePauseStartTimestampUtc": {
        "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeWave": {
        "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vCenterId": {
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualClusterGraduationProperties": {
        "description": "Virtual Cluster graduation properties",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vmssZonalUpgradeMode": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "waveUpgradePaused": {
        "description": "Boolean to pause automatic runtime version upgrades to the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "optimizedAutoscale",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge",
      "languageExtensions",
      "aadClientId",
      "aadTenantId",
      "reportedProperties",
      "provisioningState",
      "enableDoubleEncryption",
      "engineType",
      "minimumTlsVersion",
      "inventoryItemId",
      "moRefId",
      "vCenterId",
      "associatedWorkspaces",
      "billingType",
      "capacityReservationProperties",
      "isAvailabilityZonesEnabled",
      "isDoubleEncryptionEnabled",
      "cloudManagementEndpoint",
      "infrastructureServiceManager",
      "notifications",
      "sfZonalUpgradeMode",
      "upgradePauseEndTimestampUtc",
      "upgradePauseStartTimestampUtc",
      "upgradeWave",
      "vmssZonalUpgradeMode",
      "waveUpgradePaused",
      "acceptedAudiences",
      "allowedFqdnList",
      "allowedIpRangeList",
      "enableAutoStop",
      "publicNetworkAccess",
      "restrictOutboundNetworkAccess",
      "desiredProperties",
      "hosts",
      "supportsScaling",
      "publicIPType",
      "virtualClusterGraduationProperties",
      "aadApplicationObjectId",
      "aadServicePrincipalObjectId",
      "softwareAssuranceProperties"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VideoIndexer/accounts": {
    "api_version": "2022-08-01",
    "full_properties": {
      "accountId": {
        "description": "The account's data-plane ID. This can be set only when connecting an existing classic account",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mediaServices": {
        "description": "The media services details",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountId",
      "mediaServices"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VirtualMachineImages/imageTemplates": {
    "api_version": "2022-02-14",
    "full_properties": {
      "buildTimeoutInMinutes": {
        "description": "Maximum duration to wait while building the image template (includes all customizations, validations, and distributions). Omit or specify 0 to use the default (4 hours).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customize": {
        "description": "Specifies the properties used to describe the customization steps of the image, like Image source etc",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "distribute": {
        "description": "The distribution targets where the image output needs to go to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Describes a virtual machine image source for building, customizing and distributing",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stagingResourceGroup": {
        "description": "The staging resource group id in the same subscription as the image template that will be used to build the image. If this field is empty, a resource group with a random name will be created. If the resource group specified in this field doesn't exist, it will be created with the same name. If the resource group specified exists, it must be empty and in the same region as the image template. The resource group created will be deleted during template deletion if this field is empty or the resource group specified doesn't exist, but if the resource group specified exists the resources created in the resource group will be deleted during template deletion and the resource group itself will remain.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "validate": {
        "description": "Configuration options and list of validations to be performed on the resulting image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmProfile": {
        "description": "Describes the virtual machines used to build and validate images",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customize",
      "distribute",
      "source",
      "buildTimeoutInMinutes",
      "vmProfile",
      "stagingResourceGroup",
      "validate"
    ],
    "required": [
      "apiVersion",
      "identity",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/certificates": {
    "api_version": "2022-03-01",
    "full_properties": {
      "canonicalName": {
        "description": "CNAME of the certificate to be issued via free certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cerBlob": {
        "description": "Raw bytes of .cer file",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certVersion": {
        "description": "The certificate version of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "The certificate content",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainValidationMethod": {
        "description": "Method of domain validation for free cert",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "Certificate expiration date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNames": {
        "description": "Host names the certificate applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for a hostingEnvironment (App Service Environment) to use for this resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isVerified": {
        "description": "Determines whether certificate has been verified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "issueDate": {
        "description": "Certificate issue Date",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "issuer": {
        "description": "Certificate issuer",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultCertName": {
        "description": "The certificate name of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault Csm resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Certificate password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Pfx blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Public key hash",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "selfLink": {
        "description": "Self link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subjectName": {
        "description": "Subject name of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "valid": {
        "description": "Is the certificate valid?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "PFX or PEM blob",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The vault uri of user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cerBlob",
      "expirationDate",
      "friendlyName",
      "hostingEnvironmentProfile",
      "hostNames",
      "issueDate",
      "issuer",
      "password",
      "pfxBlob",
      "publicKeyHash",
      "selfLink",
      "siteName",
      "subjectName",
      "thumbprint",
      "valid",
      "keyVaultId",
      "keyVaultSecretName",
      "serverFarmId",
      "canonicalName",
      "certificate",
      "certVersion",
      "keyVaultCertName",
      "vaultUri",
      "domainValidationMethod",
      "isVerified",
      "value"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/connectionGateways": {
    "api_version": "2016-06-01",
    "full_properties": {
      "backendUri": {
        "description": "The URI of the backend",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectionGatewayInstallation": {
        "description": "The gateway installation reference",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactInformation": {
        "description": "The gateway admin",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The gateway description",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The gateway display name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "machineName": {
        "description": "The machine name of the gateway",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The gateway status",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendUri",
      "connectionGatewayInstallation",
      "contactInformation",
      "description",
      "displayName",
      "machineName",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/connections": {
    "api_version": "2016-06-01",
    "full_properties": {
      "api": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "changedTime": {
        "description": "Timestamp of last connection change",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdTime": {
        "description": "Timestamp of the connection creation",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customParameterValues": {
        "description": "Dictionary of custom parameter values",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nonSecretParameterValues": {
        "description": "Dictionary of nonsecret parameter values",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameterValues": {
        "description": "Dictionary of parameter values",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "statuses": {
        "description": "Status of the connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "testLinks": {
        "description": "Links to test the API connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "api",
      "changedTime",
      "createdTime",
      "customParameterValues",
      "displayName",
      "nonSecretParameterValues",
      "parameterValues",
      "statuses",
      "testLinks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/containerApps": {
    "api_version": "2022-03-01",
    "full_properties": {
      "configuration": {
        "description": "Non versioned Container App configuration properties that define the mutable settings of a Container app",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentId": {
        "description": "Resource ID of environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeEnvironmentId": {
        "description": "Resource ID of the Container App's KubeEnvironment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedEnvironmentId": {
        "description": "Deprecated. Resource ID of the Container App's environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "template": {
        "description": "Container App versioned application definition.\nDefines the desired state of an immutable revision.\nAny changes to this section Will result in a new revision being created",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workloadProfileType": {
        "description": "Workload profile type for container apps to execute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "kubeEnvironmentId",
      "template",
      "managedEnvironmentId",
      "environmentId",
      "workloadProfileType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/csrs": {
    "api_version": "2015-08-01",
    "full_properties": {
      "csrString": {
        "description": "Actual CSR string created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "distinguishedName": {
        "description": "Distinguished name of certificate to be created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostingEnvironment": {
        "description": "Hosting environment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name used to locate CSR object",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "PFX password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "PFX certificate of created certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Hash of the certificates public key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "csrString",
      "distinguishedName",
      "hostingEnvironment",
      "name",
      "password",
      "pfxBlob",
      "publicKeyHash"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/customApis": {
    "api_version": "2016-06-01",
    "full_properties": {
      "apiDefinitions": {
        "description": "API Definitions",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendService": {
        "description": "The API backend service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "brandColor": {
        "description": "Brand color",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "capabilities": {
        "description": "The custom API capabilities",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionParameters": {
        "description": "Connection parameters",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The custom API description",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "iconUri": {
        "description": "The icon URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runtimeUrls": {
        "description": "Runtime URLs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "swagger": {
        "description": "The JSON representation of the swagger",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "wsdlDefinition": {
        "description": "The WSDL definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiDefinitions",
      "apiType",
      "backendService",
      "brandColor",
      "capabilities",
      "connectionParameters",
      "description",
      "displayName",
      "iconUri",
      "runtimeUrls",
      "swagger",
      "wsdlDefinition"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/hostingEnvironments": {
    "api_version": "2022-03-01",
    "full_properties": {
      "apiManagementAccountId": {
        "description": "API Management Account associated with the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSettings": {
        "description": "Custom settings for changing the behavior of the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDnsSuffixConfiguration": {
        "description": "Full view of the custom domain suffix configuration for ASEv3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dedicatedHostCount": {
        "description": "Dedicated Host Count",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsSuffix": {
        "description": "DNS suffix of the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dynamicCacheEnabled": {
        "description": "True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\n(most likely because NSG blocked the incoming traffic).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontEndScaleFactor": {
        "description": "Scale factor for front-ends.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hasLinuxWorkers": {
        "description": "Flag that displays whether an ASE has linux workers or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internalLoadBalancingMode": {
        "description": "Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipsslAddressCount": {
        "description": "Number of IP SSL addresses reserved for the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "location": {
        "description": "Location of the App Service Environment, e.g. \"West US\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "multiRoleCount": {
        "description": "Number of front-end instances.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "multiSize": {
        "description": "Front-end VM size, e.g. \"Medium\", \"Large\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAccessControlList": {
        "description": "Access control list for controlling traffic to the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkingConfiguration": {
        "description": "Full view of networking configuration for an ASE.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslCertKeyVaultId": {
        "description": "Key Vault ID for ILB App Service Environment default SSL certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslCertKeyVaultSecretName": {
        "description": "Key Vault Secret Name for ILB App Service Environment default SSL certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suspended": {
        "description": "<code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available\n (most likely because NSG blocked the incoming traffic).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradePreference": {
        "description": "Upgrade Preference.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userWhitelistedIpRanges": {
        "description": "User added ip ranges to whitelist on ASE db",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetwork": {
        "description": "Specification for using a Virtual Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetName": {
        "description": "Name of the Virtual Network for the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetResourceGroupName": {
        "description": "Resource group of the Virtual Network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetSubnetName": {
        "description": "Subnet of the Virtual Network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerPools": {
        "description": "Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this App Service Environment is zone-redundant.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiManagementAccountId",
      "clusterSettings",
      "dnsSuffix",
      "dynamicCacheEnabled",
      "frontEndScaleFactor",
      "internalLoadBalancingMode",
      "ipsslAddressCount",
      "location",
      "multiRoleCount",
      "multiSize",
      "name",
      "networkAccessControlList",
      "suspended",
      "userWhitelistedIpRanges",
      "virtualNetwork",
      "vnetName",
      "vnetResourceGroupName",
      "vnetSubnetName",
      "workerPools",
      "hasLinuxWorkers",
      "sslCertKeyVaultId",
      "sslCertKeyVaultSecretName",
      "dedicatedHostCount",
      "zoneRedundant",
      "customDnsSuffixConfiguration",
      "networkingConfiguration",
      "upgradePreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/hostingEnvironments/configurations": {
    "api_version": "2022-03-01",
    "full_properties": {
      "allowNewPrivateEndpointConnections": {
        "description": "Property to enable and disable new private endpoint connection creation on ASE",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ftpEnabled": {
        "description": "Property to enable and disable FTP on ASEV3",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundIpAddressOverride": {
        "description": "Customer provided Inbound IP Address. Only able to be set on Ase create.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "remoteDebugEnabled": {
        "description": "Property to enable and disable Remote Debug on ASEV3",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowNewPrivateEndpointConnections",
      "ftpEnabled",
      "inboundIpAddressOverride",
      "remoteDebugEnabled"
    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/hostingEnvironments/multiRolePools": {
    "api_version": "2022-03-01",
    "full_properties": {
      "computeMode": {
        "description": "Shared or dedicated app hosting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "id": {
        "description": "Resource Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kind": {
        "description": "Kind of resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "Resource Location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Resource Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Describes a sku for a scalable resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Resource tags",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Resource type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerCount": {
        "description": "Number of instances in the worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerSize": {
        "description": "VM size of the worker pool instances.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerSizeId": {
        "description": "Worker size ID for referencing this worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id",
      "kind",
      "location",
      "name",
      "properties",
      "sku",
      "tags",
      "type",
      "computeMode",
      "workerCount",
      "workerSize",
      "workerSizeId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/hostingEnvironments/privateEndpointConnections": {
    "api_version": "2022-03-01",
    "full_properties": {
      "privateEndpoint": {
        "description": "Private endpoint which a connection belongs to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "The state of a private link connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpoint",
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/hostingEnvironments/workerPools": {
    "api_version": "2022-03-01",
    "full_properties": {
      "computeMode": {
        "description": "Shared or dedicated app hosting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "id": {
        "description": "Resource Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kind": {
        "description": "Kind of resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "Resource Location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Resource Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Describes a sku for a scalable resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Resource tags",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Resource type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerCount": {
        "description": "Number of instances in the worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerSize": {
        "description": "VM size of the worker pool instances.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerSizeId": {
        "description": "Worker size ID for referencing this worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id",
      "kind",
      "location",
      "name",
      "properties",
      "sku",
      "tags",
      "type",
      "computeMode",
      "workerCount",
      "workerSize",
      "workerSizeId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/kubeEnvironments": {
    "api_version": "2022-03-01",
    "full_properties": {
      "aksResourceID": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "appLogsConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "arcConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerAppsConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentType": {
        "description": "Type of Kubernetes Environment. Only supported for Container App Environments with value as Managed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "internalLoadBalancerEnabled": {
        "description": "Only visible within Vnet/Subnet",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "staticIp": {
        "description": "Static IP of the KubeEnvironment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aksResourceID",
      "appLogsConfiguration",
      "arcConfiguration",
      "internalLoadBalancerEnabled",
      "staticIp",
      "containerAppsConfiguration",
      "environmentType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/managedHostingEnvironments": {
    "api_version": "2015-08-01",
    "full_properties": {
      "allowedMultiSizes": {
        "description": "List of comma separated strings describing which VM sizes are allowed for front-ends",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "allowedWorkerSizes": {
        "description": "List of comma separated strings describing which VM sizes are allowed for workers",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiManagementAccountId": {
        "description": "Api Management Account associated with this Hosting Environment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSettings": {
        "description": "Custom settings for changing the behavior of the hosting environment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databaseEdition": {
        "description": "Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"Standard\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseServiceObjective": {
        "description": "Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"S0\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsSuffix": {
        "description": "DNS suffix of the hostingEnvironment (App Service Environment)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentCapacities": {
        "description": "Current total, used, and available worker capacities",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentIsHealthy": {
        "description": "True/false indicating whether the hostingEnvironment (App Service Environment) is healthy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentStatus": {
        "description": "Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "internalLoadBalancingMode": {
        "description": "Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipsslAddressCount": {
        "description": "Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastAction": {
        "description": "Last deployment action on this hostingEnvironment (App Service Environment)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastActionResult": {
        "description": "Result of the last deployment action on this hostingEnvironment (App Service Environment)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "Location of the hostingEnvironment (App Service Environment), e.g. \"West US\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maximumNumberOfMachines": {
        "description": "Maximum number of VMs in this hostingEnvironment (App Service Environment)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "multiRoleCount": {
        "description": "Number of front-end instances",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "multiSize": {
        "description": "Front-end VM size, e.g. \"Medium\", \"Large\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of the hostingEnvironment (App Service Environment)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAccessControlList": {
        "description": "Access control list for controlling traffic to the hostingEnvironment (App Service Environment)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the hostingEnvironment (App Service Environment).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGroup": {
        "description": "Resource group of the hostingEnvironment (App Service Environment)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Current status of the hostingEnvironment (App Service Environment).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionId": {
        "description": "Subscription of the hostingEnvironment (App Service Environment)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suspended": {
        "description": "True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\r\n            (most likely because NSG blocked the incoming traffic)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeDomains": {
        "description": "Number of upgrade domains of this hostingEnvironment (App Service Environment)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vipMappings": {
        "description": "Description of IP SSL mapping for this hostingEnvironment (App Service Environment)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetwork": {
        "description": "Specification for using a virtual network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetName": {
        "description": "Name of the hostingEnvironment's (App Service Environment) virtual network",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetResourceGroupName": {
        "description": "Resource group of the hostingEnvironment's (App Service Environment) virtual network",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetSubnetName": {
        "description": "Subnet of the hostingEnvironment's (App Service Environment) virtual network",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerPools": {
        "description": "Description of worker pools with worker size ids, VM sizes, and number of workers in each pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedMultiSizes",
      "allowedWorkerSizes",
      "apiManagementAccountId",
      "clusterSettings",
      "databaseEdition",
      "databaseServiceObjective",
      "dnsSuffix",
      "environmentCapacities",
      "environmentIsHealthy",
      "environmentStatus",
      "internalLoadBalancingMode",
      "ipsslAddressCount",
      "lastAction",
      "lastActionResult",
      "location",
      "maximumNumberOfMachines",
      "multiRoleCount",
      "multiSize",
      "name",
      "networkAccessControlList",
      "provisioningState",
      "resourceGroup",
      "status",
      "subscriptionId",
      "suspended",
      "upgradeDomains",
      "vipMappings",
      "virtualNetwork",
      "vnetName",
      "vnetResourceGroupName",
      "vnetSubnetName",
      "workerPools"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/serverfarms": {
    "api_version": "2022-03-01",
    "full_properties": {
      "adminSiteName": {
        "description": "App Service plan administration site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticScaleEnabled": {
        "description": "ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was ElasticPremium sku",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "freeOfferExpirationTime": {
        "description": "The time when the server farm free offer expires.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for an App Service Environment to use for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperV": {
        "description": "If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isSpot": {
        "description": "If <code>true</code>, this App Service Plan owns spot instances.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isXenon": {
        "description": "Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kubeEnvironmentProfile": {
        "description": "Specification for a Kubernetes Environment to use for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumElasticWorkerCount": {
        "description": "Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name for the App Service plan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "perSiteScaling": {
        "description": "If <code>true</code>, apps assigned to this App Service plan can be scaled independently.\nIf <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reserved": {
        "description": "If Linux app service plan <code>true</code>, <code>false</code> otherwise.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spotExpirationTime": {
        "description": "The time when the server farm expires. Valid only if it is a spot server farm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetWorkerCount": {
        "description": "Scaling worker count.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetWorkerSizeId": {
        "description": "Scaling worker size ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerTierName": {
        "description": "Target worker tier assigned to the App Service plan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "If <code>true</code>, this App Service Plan will perform availability zone balancing.\nIf <code>false</code>, this App Service Plan will not perform availability zone balancing.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminSiteName",
      "hostingEnvironmentProfile",
      "isSpot",
      "name",
      "perSiteScaling",
      "reserved",
      "spotExpirationTime",
      "targetWorkerCount",
      "targetWorkerSizeId",
      "workerTierName",
      "freeOfferExpirationTime",
      "hyperV",
      "isXenon",
      "maximumElasticWorkerCount",
      "kubeEnvironmentProfile",
      "elasticScaleEnabled",
      "zoneRedundant"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/serverfarms/virtualNetworkConnections/gateways": {
    "api_version": "2022-03-01",
    "full_properties": {
      "vnetName": {
        "description": "The Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnPackageUri": {
        "description": "The URI where the VPN package can be downloaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vnetName",
      "vpnPackageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/serverfarms/virtualNetworkConnections/routes": {
    "api_version": "2022-03-01",
    "full_properties": {
      "endAddress": {
        "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of this route. This is only returned by the server and does not need to be set by the client.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "routeType": {
        "description": "The type of route this is:\nDEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\nINHERITED - Routes inherited from the real Virtual Network routes\nSTATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startAddress": {
        "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endAddress",
      "name",
      "routeType",
      "startAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites": {
    "api_version": "2022-03-01",
    "full_properties": {
      "agentDetails": {
        "description": "Class for site agent properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applianceName": {
        "description": "Appliance Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientAffinityEnabled": {
        "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertEnabled": {
        "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertExclusionPaths": {
        "description": "client certificate authentication comma-separated exclusion paths",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientCertMode": {
        "description": "This composes with ClientCertEnabled setting.\n- ClientCertEnabled: false means ClientCert is ignored.\n- ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.\n- ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloningInfo": {
        "description": "Information needed for cloning operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSize": {
        "description": "Size of the function container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDomainVerificationId": {
        "description": "Unique identifier that verifies the custom domains assigned to the app. Customer will add this id to a txt record for verification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyMemoryTimeQuota": {
        "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySolutionId": {
        "description": "ARM ID of migration hub solution for SDS.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of the IoT site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewaySiteName": {
        "description": "Name of gateway app associated with web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "geoDistributions": {
        "description": "GeoDistributions for this site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNameSslStates": {
        "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNamesDisabled": {
        "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for an App Service Environment to use for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperV": {
        "description": "Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isXenon": {
        "description": "Obsolete: Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultReferenceIdentity": {
        "description": "Identity to use for Key Vault Reference authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxNumberOfWorkers": {
        "description": "Maximum number of workers\r\n            This only applies to function container",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "microService": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redundancyMode": {
        "description": "Site redundancy mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reserved": {
        "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmSiteAlsoStopped": {
        "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "servicePrincipalIdentityDetails": {
        "description": "Class for site properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteConfig": {
        "description": "Configuration of an App Service app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotInfo": {
        "description": "Details about app recovery operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountRequired": {
        "description": "Checks if Customer provided storage account is required",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tags of the IoT site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "Azure Resource Manager ID of the Virtual network and subnet to be joined by Regional VNET Integration.\nThis must be of the form /subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetContentShareEnabled": {
        "description": "To enable accessing content over virtual network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetImagePullEnabled": {
        "description": "To enable pulling image over Virtual Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetRouteAllEnabled": {
        "description": "Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientAffinityEnabled",
      "clientCertEnabled",
      "cloningInfo",
      "containerSize",
      "enabled",
      "gatewaySiteName",
      "hostingEnvironmentProfile",
      "hostNamesDisabled",
      "hostNameSslStates",
      "maxNumberOfWorkers",
      "microService",
      "name",
      "scmSiteAlsoStopped",
      "serverFarmId",
      "siteConfig",
      "dailyMemoryTimeQuota",
      "httpsOnly",
      "reserved",
      "snapshotInfo",
      "clientCertExclusionPaths",
      "geoDistributions",
      "hyperV",
      "isXenon",
      "redundancyMode",
      "agentDetails",
      "applianceName",
      "discoverySolutionId",
      "servicePrincipalIdentityDetails",
      "clientCertMode",
      "customDomainVerificationId",
      "storageAccountRequired",
      "keyVaultReferenceIdentity",
      "virtualNetworkSubnetId",
      "displayName",
      "tags",
      "publicNetworkAccess",
      "vnetContentShareEnabled",
      "vnetImagePullEnabled",
      "vnetRouteAllEnabled"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/backups": {
    "api_version": "2016-08-01",
    "full_properties": {
      "adjustConnectionStrings": {
        "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "appServicePlan": {
        "description": "Specify app service plan that will own restored site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blobName": {
        "description": "Name of a blob which contains the backup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databases": {
        "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironment": {
        "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ignoreConflictingHostNames": {
        "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \nthe app's object when it is being restored, but that might fail due to conflicts during the operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ignoreDatabases": {
        "description": "Ignore the databases and only restore the site content",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operationType": {
        "description": "Operation type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "overwrite": {
        "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "Name of an app.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountUrl": {
        "description": "SAS URL to the container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adjustConnectionStrings",
      "blobName",
      "databases",
      "hostingEnvironment",
      "ignoreConflictingHostNames",
      "operationType",
      "overwrite",
      "siteName",
      "storageAccountUrl",
      "appServicePlan",
      "ignoreDatabases"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/basicPublishingCredentialsPolicies": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/sites/config": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/sites/deployments": {
    "api_version": "2022-03-01",
    "full_properties": {
      "active": {
        "description": "True if deployment is currently active, false if completed and null if not started.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Who authored the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorEmail": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "debugSetting": {
        "description": "The debug setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Who performed the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Details on deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressionEvaluationOptions": {
        "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "helmChartPath": {
        "description": "Helm chart directory path in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "helmValues": {
        "description": "Helm Values.yaml file location in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "Identifier for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeManifestLocations": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manifestType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "message": {
        "description": "Details about deployment status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "model": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onErrorDeployment": {
        "description": "Deployment on error behavior.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "overrides": {
        "description": "Manifest override values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "raiPolicyName": {
        "description": "The name of RAI policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Deployment status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Entity representing the reference to the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "active",
      "author",
      "author_email",
      "deployer",
      "details",
      "end_time",
      "id",
      "message",
      "start_time",
      "status",
      "mode",
      "parameters",
      "parametersLink",
      "template",
      "templateLink",
      "debugSetting",
      "authorEmail",
      "endTime",
      "startTime",
      "onErrorDeployment",
      "expressionEvaluationOptions",
      "model",
      "scaleSettings",
      "helmChartPath",
      "helmValues",
      "kubeManifestLocations",
      "manifestType",
      "overrides",
      "raiPolicyName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/domainOwnershipIdentifiers": {
    "api_version": "2022-03-01",
    "full_properties": {
      "id": {
        "description": "String representation of the identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/extensions": {
    "api_version": "2022-03-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/sites/functions": {
    "api_version": "2022-03-01",
    "full_properties": {
      "config": {
        "description": "Config information.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "configHref": {
        "description": "Config URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "config_href": {
        "description": "Config URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "files": {
        "description": "File list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "function_app_id": {
        "description": "Function App ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "href": {
        "description": "Function URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "invoke_url_template": {
        "description": "The invocation URL",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isDisabled": {
        "description": "Gets or sets a value indicating whether the function is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "language": {
        "description": "The function language",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptHref": {
        "description": "Script URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptRootPathHref": {
        "description": "Script root path URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_href": {
        "description": "Script URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_root_path_href": {
        "description": "Script root path URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretsFileHref": {
        "description": "Secrets file URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secrets_file_href": {
        "description": "Secrets file URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "testData": {
        "description": "Test data used when testing via the Azure Portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "test_data": {
        "description": "Test data used when testing via the Azure Portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "test_data_href": {
        "description": "Test data URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "config",
      "configHref",
      "files",
      "href",
      "scriptHref",
      "scriptRootPathHref",
      "secretsFileHref",
      "testData",
      "config_href",
      "function_app_id",
      "invoke_url_template",
      "isDisabled",
      "language",
      "script_href",
      "script_root_path_href",
      "secrets_file_href",
      "test_data",
      "test_data_href"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/functions/keys": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/hostNameBindings": {
    "api_version": "2022-03-01",
    "full_properties": {
      "azureResourceName": {
        "description": "Azure resource name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureResourceType": {
        "description": "Azure resource type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHostNameDnsRecordType": {
        "description": "Custom DNS record type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainId": {
        "description": "Fully qualified ARM domain resource URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNameType": {
        "description": "Hostname type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Hostname",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App Service app name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslState": {
        "description": "SSL type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "SSL certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureResourceName",
      "azureResourceType",
      "customHostNameDnsRecordType",
      "domainId",
      "hostNameType",
      "name",
      "siteName",
      "sslState",
      "thumbprint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/hybridConnectionNamespaces/relays": {
    "api_version": "2022-03-01",
    "full_properties": {
      "hostname": {
        "description": "The hostname of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relayArmUri": {
        "description": "The ARM URI to the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "relayName": {
        "description": "The name of the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendKeyName": {
        "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendKeyValue": {
        "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusNamespace": {
        "description": "The name of the Service Bus namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusSuffix": {
        "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requiresClientAuthorization",
      "userMetadata",
      "hostname",
      "port",
      "relayArmUri",
      "relayName",
      "sendKeyName",
      "sendKeyValue",
      "serviceBusNamespace",
      "serviceBusSuffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/hybridconnection": {
    "api_version": "2022-03-01",
    "full_properties": {
      "biztalkUri": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityName": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostname": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "biztalkUri",
      "entityConnectionString",
      "entityName",
      "hostname",
      "port",
      "resourceConnectionString",
      "resourceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/instances/deployments": {
    "api_version": "2015-08-01",
    "full_properties": {
      "active": {
        "description": "True if deployment is currently active, false if completed and null if not started.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Who authored the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorEmail": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "debugSetting": {
        "description": "The debug setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Who performed the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Details on deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressionEvaluationOptions": {
        "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "helmChartPath": {
        "description": "Helm chart directory path in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "helmValues": {
        "description": "Helm Values.yaml file location in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "Identifier for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeManifestLocations": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manifestType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "message": {
        "description": "Details about deployment status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "model": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onErrorDeployment": {
        "description": "Deployment on error behavior.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "overrides": {
        "description": "Manifest override values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "raiPolicyName": {
        "description": "The name of RAI policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Deployment status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Entity representing the reference to the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "active",
      "author",
      "author_email",
      "deployer",
      "details",
      "end_time",
      "id",
      "message",
      "start_time",
      "status",
      "mode",
      "parameters",
      "parametersLink",
      "template",
      "templateLink",
      "debugSetting",
      "authorEmail",
      "endTime",
      "startTime",
      "onErrorDeployment",
      "expressionEvaluationOptions",
      "model",
      "scaleSettings",
      "helmChartPath",
      "helmValues",
      "kubeManifestLocations",
      "manifestType",
      "overrides",
      "raiPolicyName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/instances/extensions": {
    "api_version": "2022-03-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/migrate": {
    "api_version": "2022-03-01",
    "full_properties": {
      "azurefilesConnectionString": {
        "description": "AzureFiles connection string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azurefilesShare": {
        "description": "AzureFiles share.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blockWriteAccessToSite": {
        "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "switchSiteAfterMigration": {
        "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azurefilesConnectionString",
      "azurefilesShare",
      "blockWriteAccessToSite",
      "switchSiteAfterMigration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/networkConfig": {
    "api_version": "2022-03-01",
    "full_properties": {
      "subnetResourceId": {
        "description": "The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "swiftSupported": {
        "description": "A flag that specifies if the scale unit this Web App is on supports Swift integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnetResourceId",
      "swiftSupported"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/premieraddons": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/privateAccess": {
    "api_version": "2022-03-01",
    "full_properties": {
      "enabled": {
        "description": "Whether private access is enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworks": {
        "description": "The Virtual Networks (and subnets) allowed to access the site privately.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "virtualNetworks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/privateEndpointConnections": {
    "api_version": "2022-03-01",
    "full_properties": {
      "privateEndpoint": {
        "description": "Private endpoint which a connection belongs to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "The state of a private link connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpoint",
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/publicCertificates": {
    "api_version": "2022-03-01",
    "full_properties": {
      "blob": {
        "description": "Public Certificate byte array",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicCertificateLocation": {
        "description": "Public Certificate Location.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "blob",
      "publicCertificateLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/siteextensions": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots": {
    "api_version": "2022-03-01",
    "full_properties": {
      "agentDetails": {
        "description": "Class for site agent properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applianceName": {
        "description": "Appliance Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientAffinityEnabled": {
        "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertEnabled": {
        "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertExclusionPaths": {
        "description": "client certificate authentication comma-separated exclusion paths",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientCertMode": {
        "description": "This composes with ClientCertEnabled setting.\n- ClientCertEnabled: false means ClientCert is ignored.\n- ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.\n- ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloningInfo": {
        "description": "Information needed for cloning operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSize": {
        "description": "Size of the function container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customDomainVerificationId": {
        "description": "Unique identifier that verifies the custom domains assigned to the app. Customer will add this id to a txt record for verification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dailyMemoryTimeQuota": {
        "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySolutionId": {
        "description": "ARM ID of migration hub solution for SDS.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Display name of the IoT site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewaySiteName": {
        "description": "Name of gateway app associated with web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "geoDistributions": {
        "description": "GeoDistributions for this site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNameSslStates": {
        "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNamesDisabled": {
        "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for an App Service Environment to use for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperV": {
        "description": "Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isXenon": {
        "description": "Obsolete: Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultReferenceIdentity": {
        "description": "Identity to use for Key Vault Reference authentication.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxNumberOfWorkers": {
        "description": "Maximum number of workers\r\n            This only applies to function container",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "microService": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of web app",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redundancyMode": {
        "description": "Site redundancy mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reserved": {
        "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmSiteAlsoStopped": {
        "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "servicePrincipalIdentityDetails": {
        "description": "Class for site properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteConfig": {
        "description": "Configuration of an App Service app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotInfo": {
        "description": "Details about app recovery operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountRequired": {
        "description": "Checks if Customer provided storage account is required",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Tags of the IoT site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "Azure Resource Manager ID of the Virtual network and subnet to be joined by Regional VNET Integration.\nThis must be of the form /subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetContentShareEnabled": {
        "description": "To enable accessing content over virtual network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetImagePullEnabled": {
        "description": "To enable pulling image over Virtual Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetRouteAllEnabled": {
        "description": "Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientAffinityEnabled",
      "clientCertEnabled",
      "cloningInfo",
      "containerSize",
      "enabled",
      "gatewaySiteName",
      "hostingEnvironmentProfile",
      "hostNamesDisabled",
      "hostNameSslStates",
      "maxNumberOfWorkers",
      "microService",
      "name",
      "scmSiteAlsoStopped",
      "serverFarmId",
      "siteConfig",
      "dailyMemoryTimeQuota",
      "httpsOnly",
      "reserved",
      "snapshotInfo",
      "clientCertExclusionPaths",
      "geoDistributions",
      "hyperV",
      "isXenon",
      "redundancyMode",
      "agentDetails",
      "applianceName",
      "discoverySolutionId",
      "servicePrincipalIdentityDetails",
      "clientCertMode",
      "customDomainVerificationId",
      "storageAccountRequired",
      "keyVaultReferenceIdentity",
      "virtualNetworkSubnetId",
      "displayName",
      "tags",
      "publicNetworkAccess",
      "vnetContentShareEnabled",
      "vnetImagePullEnabled",
      "vnetRouteAllEnabled"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/backups": {
    "api_version": "2016-08-01",
    "full_properties": {
      "adjustConnectionStrings": {
        "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "appServicePlan": {
        "description": "Specify app service plan that will own restored site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blobName": {
        "description": "Name of a blob which contains the backup.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databases": {
        "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironment": {
        "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ignoreConflictingHostNames": {
        "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \nthe app's object when it is being restored, but that might fail due to conflicts during the operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ignoreDatabases": {
        "description": "Ignore the databases and only restore the site content",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operationType": {
        "description": "Operation type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "overwrite": {
        "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "Name of an app.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountUrl": {
        "description": "SAS URL to the container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adjustConnectionStrings",
      "blobName",
      "databases",
      "hostingEnvironment",
      "ignoreConflictingHostNames",
      "operationType",
      "overwrite",
      "siteName",
      "storageAccountUrl",
      "appServicePlan",
      "ignoreDatabases"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/config": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/deployments": {
    "api_version": "2022-03-01",
    "full_properties": {
      "active": {
        "description": "True if deployment is currently active, false if completed and null if not started.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Who authored the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorEmail": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "debugSetting": {
        "description": "The debug setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Who performed the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Details on deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressionEvaluationOptions": {
        "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "helmChartPath": {
        "description": "Helm chart directory path in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "helmValues": {
        "description": "Helm Values.yaml file location in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "Identifier for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeManifestLocations": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manifestType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "message": {
        "description": "Details about deployment status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "model": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onErrorDeployment": {
        "description": "Deployment on error behavior.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "overrides": {
        "description": "Manifest override values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "raiPolicyName": {
        "description": "The name of RAI policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Deployment status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Entity representing the reference to the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "active",
      "author",
      "author_email",
      "deployer",
      "details",
      "end_time",
      "id",
      "message",
      "start_time",
      "status",
      "mode",
      "parameters",
      "parametersLink",
      "template",
      "templateLink",
      "debugSetting",
      "authorEmail",
      "endTime",
      "startTime",
      "onErrorDeployment",
      "expressionEvaluationOptions",
      "model",
      "scaleSettings",
      "helmChartPath",
      "helmValues",
      "kubeManifestLocations",
      "manifestType",
      "overrides",
      "raiPolicyName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/domainOwnershipIdentifiers": {
    "api_version": "2022-03-01",
    "full_properties": {
      "id": {
        "description": "String representation of the identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/extensions": {
    "api_version": "2022-03-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/functions": {
    "api_version": "2022-03-01",
    "full_properties": {
      "config": {
        "description": "Config information.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "configHref": {
        "description": "Config URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "config_href": {
        "description": "Config URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "files": {
        "description": "File list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "function_app_id": {
        "description": "Function App ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "href": {
        "description": "Function URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "invoke_url_template": {
        "description": "The invocation URL",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isDisabled": {
        "description": "Gets or sets a value indicating whether the function is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "language": {
        "description": "The function language",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptHref": {
        "description": "Script URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptRootPathHref": {
        "description": "Script root path URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_href": {
        "description": "Script URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_root_path_href": {
        "description": "Script root path URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretsFileHref": {
        "description": "Secrets file URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secrets_file_href": {
        "description": "Secrets file URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "testData": {
        "description": "Test data used when testing via the Azure Portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "test_data": {
        "description": "Test data used when testing via the Azure Portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "test_data_href": {
        "description": "Test data URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "config",
      "configHref",
      "files",
      "href",
      "scriptHref",
      "scriptRootPathHref",
      "secretsFileHref",
      "testData",
      "config_href",
      "function_app_id",
      "invoke_url_template",
      "isDisabled",
      "language",
      "script_href",
      "script_root_path_href",
      "secrets_file_href",
      "test_data",
      "test_data_href"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/functions/keys": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/hostNameBindings": {
    "api_version": "2022-03-01",
    "full_properties": {
      "azureResourceName": {
        "description": "Azure resource name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureResourceType": {
        "description": "Azure resource type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHostNameDnsRecordType": {
        "description": "Custom DNS record type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainId": {
        "description": "Fully qualified ARM domain resource URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNameType": {
        "description": "Hostname type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Hostname",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App Service app name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslState": {
        "description": "SSL type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "SSL certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureResourceName",
      "azureResourceType",
      "customHostNameDnsRecordType",
      "domainId",
      "hostNameType",
      "name",
      "siteName",
      "sslState",
      "thumbprint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/hybridConnectionNamespaces/relays": {
    "api_version": "2022-03-01",
    "full_properties": {
      "hostname": {
        "description": "The hostname of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relayArmUri": {
        "description": "The ARM URI to the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "relayName": {
        "description": "The name of the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendKeyName": {
        "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendKeyValue": {
        "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusNamespace": {
        "description": "The name of the Service Bus namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusSuffix": {
        "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requiresClientAuthorization",
      "userMetadata",
      "hostname",
      "port",
      "relayArmUri",
      "relayName",
      "sendKeyName",
      "sendKeyValue",
      "serviceBusNamespace",
      "serviceBusSuffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/hybridconnection": {
    "api_version": "2022-03-01",
    "full_properties": {
      "biztalkUri": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityName": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostname": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "biztalkUri",
      "entityConnectionString",
      "entityName",
      "hostname",
      "port",
      "resourceConnectionString",
      "resourceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/instances/deployments": {
    "api_version": "2015-08-01",
    "full_properties": {
      "active": {
        "description": "True if deployment is currently active, false if completed and null if not started.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Who authored the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorEmail": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "debugSetting": {
        "description": "The debug setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Who performed the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Details on deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressionEvaluationOptions": {
        "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "helmChartPath": {
        "description": "Helm chart directory path in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "helmValues": {
        "description": "Helm Values.yaml file location in repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "Identifier for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "kubeManifestLocations": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manifestType": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "message": {
        "description": "Details about deployment status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "model": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onErrorDeployment": {
        "description": "Deployment on error behavior.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "overrides": {
        "description": "Manifest override values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "raiPolicyName": {
        "description": "The name of RAI policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Properties of Cognitive Services account deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Deployment status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Entity representing the reference to the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "active",
      "author",
      "author_email",
      "deployer",
      "details",
      "end_time",
      "id",
      "message",
      "start_time",
      "status",
      "mode",
      "parameters",
      "parametersLink",
      "template",
      "templateLink",
      "debugSetting",
      "authorEmail",
      "endTime",
      "startTime",
      "onErrorDeployment",
      "expressionEvaluationOptions",
      "model",
      "scaleSettings",
      "helmChartPath",
      "helmValues",
      "kubeManifestLocations",
      "manifestType",
      "overrides",
      "raiPolicyName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/instances/extensions": {
    "api_version": "2022-03-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/networkConfig": {
    "api_version": "2022-03-01",
    "full_properties": {
      "subnetResourceId": {
        "description": "The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "swiftSupported": {
        "description": "A flag that specifies if the scale unit this Web App is on supports Swift integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnetResourceId",
      "swiftSupported"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/premieraddons": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/privateAccess": {
    "api_version": "2022-03-01",
    "full_properties": {
      "enabled": {
        "description": "Whether private access is enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworks": {
        "description": "The Virtual Networks (and subnets) allowed to access the site privately.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "virtualNetworks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/privateEndpointConnections": {
    "api_version": "2022-03-01",
    "full_properties": {
      "privateEndpoint": {
        "description": "Private endpoint which a connection belongs to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "The state of a private link connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpoint",
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/publicCertificates": {
    "api_version": "2022-03-01",
    "full_properties": {
      "blob": {
        "description": "Public Certificate byte array",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicCertificateLocation": {
        "description": "Public Certificate Location.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "blob",
      "publicCertificateLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/siteextensions": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/snapshots": {
    "api_version": "2015-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/sourcecontrols": {
    "api_version": "2022-03-01",
    "full_properties": {
      "branch": {
        "description": "Name of branch to use for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentRollbackEnabled": {
        "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gitHubActionConfiguration": {
        "description": "The GitHub action configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isGitHubAction": {
        "description": "<code>true</code> if this is deployed via GitHub action.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManualIntegration": {
        "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isMercurial": {
        "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "Repository or source control URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branch",
      "deploymentRollbackEnabled",
      "isManualIntegration",
      "isMercurial",
      "repoUrl",
      "isGitHubAction",
      "gitHubActionConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/virtualNetworkConnections": {
    "api_version": "2022-03-01",
    "full_properties": {
      "certBlob": {
        "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsServers": {
        "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isSwift": {
        "description": "Flag that is used to denote if this is VNET injection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetResourceId": {
        "description": "The Virtual Network's resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certBlob",
      "dnsServers",
      "isSwift",
      "vnetResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/virtualNetworkConnections/gateways": {
    "api_version": "2022-03-01",
    "full_properties": {
      "vnetName": {
        "description": "The Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnPackageUri": {
        "description": "The URI where the VPN package can be downloaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vnetName",
      "vpnPackageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/snapshots": {
    "api_version": "2015-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/sourcecontrols": {
    "api_version": "2022-03-01",
    "full_properties": {
      "branch": {
        "description": "Name of branch to use for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentRollbackEnabled": {
        "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gitHubActionConfiguration": {
        "description": "The GitHub action configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isGitHubAction": {
        "description": "<code>true</code> if this is deployed via GitHub action.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManualIntegration": {
        "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isMercurial": {
        "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "Repository or source control URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branch",
      "deploymentRollbackEnabled",
      "isManualIntegration",
      "isMercurial",
      "repoUrl",
      "isGitHubAction",
      "gitHubActionConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/virtualNetworkConnections": {
    "api_version": "2022-03-01",
    "full_properties": {
      "certBlob": {
        "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsServers": {
        "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isSwift": {
        "description": "Flag that is used to denote if this is VNET injection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetResourceId": {
        "description": "The Virtual Network's resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certBlob",
      "dnsServers",
      "isSwift",
      "vnetResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/virtualNetworkConnections/gateways": {
    "api_version": "2022-03-01",
    "full_properties": {
      "vnetName": {
        "description": "The Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnPackageUri": {
        "description": "The URI where the VPN package can be downloaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vnetName",
      "vpnPackageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/staticSites": {
    "api_version": "2022-03-01",
    "full_properties": {
      "allowConfigFileUpdates": {
        "description": "<code>false</code> if config file is locked for this static web app; otherwise, <code>true</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "branch": {
        "description": "The target branch in the repository.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "buildProperties": {
        "description": "Build properties for the static site.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enterpriseGradeCdnStatus": {
        "description": "State indicating the status of the enterprise grade CDN serving traffic to the static web app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provider": {
        "description": "The provider that submitted the last deployment to the primary environment of the static site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "State indicating whether public traffic are allowed or not for a static web app. Allowed Values: 'Enabled', 'Disabled' or an empty string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "repositoryToken": {
        "description": "A user's github repository token. This is used to setup the Github Actions workflow file and API secrets.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "repositoryUrl": {
        "description": "URL for the repository of the static site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "stagingEnvironmentPolicy": {
        "description": "State indicating whether staging environments are allowed or not allowed for a static web app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateProperties": {
        "description": "Template Options for the static site.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branch",
      "buildProperties",
      "repositoryToken",
      "repositoryUrl",
      "allowConfigFileUpdates",
      "stagingEnvironmentPolicy",
      "templateProperties",
      "enterpriseGradeCdnStatus",
      "provider",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/builds/config": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/builds/linkedBackends": {
    "api_version": "2022-03-01",
    "full_properties": {
      "backendResourceId": {
        "description": "The resource id of the backend linked to the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "region": {
        "description": "The region of the backend linked to the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendResourceId",
      "region"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/builds/userProvidedFunctionApps": {
    "api_version": "2022-03-01",
    "full_properties": {
      "functionAppRegion": {
        "description": "The region of the function app registered with the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "functionAppResourceId": {
        "description": "The resource id of the function app registered with the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "functionAppRegion",
      "functionAppResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/config": {
    "api_version": "2022-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/customDomains": {
    "api_version": "2022-03-01",
    "full_properties": {
      "validationMethod": {
        "description": "Validation method for adding a custom domain",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "validationMethod"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/linkedBackends": {
    "api_version": "2022-03-01",
    "full_properties": {
      "backendResourceId": {
        "description": "The resource id of the backend linked to the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "region": {
        "description": "The region of the backend linked to the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendResourceId",
      "region"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/privateEndpointConnections": {
    "api_version": "2022-03-01",
    "full_properties": {
      "privateEndpoint": {
        "description": "Private endpoint which a connection belongs to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "The state of a private link connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateEndpoint",
      "privateLinkServiceConnectionState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/staticSites/userProvidedFunctionApps": {
    "api_version": "2022-03-01",
    "full_properties": {
      "functionAppRegion": {
        "description": "The region of the function app registered with the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "functionAppResourceId": {
        "description": "The resource id of the function app registered with the static site",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "functionAppRegion",
      "functionAppResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.WindowsESU/multipleActivationKeys": {
    "api_version": "2019-09-16-preview",
    "full_properties": {
      "agreementNumber": {
        "description": "Agreement number under which the key is requested.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "installedServerNumber": {
        "description": "Number of activations/servers using the MAK key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEligible": {
        "description": "<code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key will only be used in their organization; <code> false </code> otherwise.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "Type of OS for which the key is requested.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportType": {
        "description": "Type of support.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agreementNumber",
      "installedServerNumber",
      "isEligible",
      "osType",
      "supportType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.WindowsIoT/deviceServices": {
    "api_version": "2019-06-01",
    "full_properties": {
      "adminDomainName": {
        "description": "Windows IoT Device Service OEM AAD domain",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "billingDomainName": {
        "description": "Windows IoT Device Service ODM AAD domain",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Windows IoT Device Service notes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "quantity": {
        "description": "Windows IoT Device Service device allocation,",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminDomainName",
      "notes",
      "quantity",
      "billingDomainName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/monitors": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "appLocation": {
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "datadogOrganizationProperties": {
        "description": "Datadog organization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dynatraceEnvironmentProperties": {
        "description": "Properties of the Dynatrace environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticProperties": {
        "description": "Elastic Resource Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "liftrResourceCategory": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logzOrganizationProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplaceSubscriptionStatus": {
        "description": "Marketplace subscription status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Flag specifying if the resource monitoring is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planData": {
        "description": "Billing plan information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the monitor resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingPreference": {
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userInfo": {
        "description": "User Information to be passed to partners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of elastic of the monitor resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "zoneRedundancyPreference": {
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datadogOrganizationProperties",
      "liftrResourceCategory",
      "marketplaceSubscriptionStatus",
      "monitoringStatus",
      "provisioningState",
      "userInfo",
      "elasticProperties",
      "logzOrganizationProperties",
      "planData",
      "dynatraceEnvironmentProperties",
      "version",
      "appLocation",
      "logAnalyticsWorkspaceArmId",
      "managedResourceGroupConfiguration",
      "monitorSubnet",
      "routingPreference",
      "zoneRedundancyPreference"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/monitors/providerInstances": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "metadata": {
        "description": "A JSON string containing metadata of the provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "A JSON string containing the properties of the provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSettings": {
        "description": "Gets or sets the provider specific properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "metadata",
      "properties",
      "type",
      "providerSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/phpWorkloads": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "adminUserProfile": {
        "description": "User profile to configure on a compute resources such as VM, VMSS",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "appLocation": {
        "description": "The infra resources for PHP workload will be created in this location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "backupProfile": {
        "description": "Backup profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cacheProfile": {
        "description": "Cache profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "controllerProfile": {
        "description": "VM or VMSS node profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databaseProfile": {
        "description": "Workload database profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fileshareProfile": {
        "description": "File share profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Network profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "phpProfile": {
        "description": "PHP profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "searchProfile": {
        "description": "Search profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteProfile": {
        "description": "Workload website profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webNodesProfile": {
        "description": "VMSS profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminUserProfile",
      "appLocation",
      "backupProfile",
      "cacheProfile",
      "controllerProfile",
      "databaseProfile",
      "fileshareProfile",
      "managedResourceGroupConfiguration",
      "networkProfile",
      "phpProfile",
      "searchProfile",
      "siteProfile",
      "webNodesProfile"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/phpWorkloads/wordpressInstances": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "databaseName": {
        "description": "Database name used by the application",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseUser": {
        "description": "User name used by the application to connect to database",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Application version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseName",
      "databaseUser",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/sapVirtualInstances": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "configuration": {
        "description": "The SAP Configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environment": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroupConfiguration": {
        "description": "Managed resource group configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sapProduct": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "environment",
      "managedResourceGroupConfiguration",
      "sapProduct"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/sapVirtualInstances/applicationInstances": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/sapVirtualInstances/centralInstances": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
      "enqueueReplicationServerProperties": {
        "description": "Defines the SAP Enqueue Replication Server (ERS) properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enqueueServerProperties": {
        "description": "Defines the SAP Enqueue Server properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayServerProperties": {
        "description": "Defines the SAP Gateway Server properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "messageServerProperties": {
        "description": "Defines the SAP Message Server properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enqueueReplicationServerProperties",
      "enqueueServerProperties",
      "gatewayServerProperties",
      "messageServerProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Workloads/sapVirtualInstances/databaseInstances": {
    "api_version": "2021-12-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Nginx.NginxPlus/nginxDeployments": {
    "api_version": "2022-08-01",
    "full_properties": {
      "enableDiagnosticsSupport": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logging": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedResourceGroup": {
        "description": "The managed resource group to deploy VNet injection related network resources.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enableDiagnosticsSupport",
      "logging",
      "managedResourceGroup",
      "networkProfile",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Nginx.NginxPlus/nginxDeployments/certificates": {
    "api_version": "2022-08-01",
    "full_properties": {
      "certificateVirtualPath": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretId": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVirtualPath": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certificateVirtualPath",
      "keyVaultSecretId",
      "keyVirtualPath",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Nginx.NginxPlus/nginxDeployments/configurations": {
    "api_version": "2022-08-01",
    "full_properties": {
      "files": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "package": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedFiles": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rootFile": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "files",
      "package",
      "protectedFiles",
      "provisioningState",
      "rootFile"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Sendgrid.Email/accounts": {
    "api_version": "2015-01-01",
    "full_properties": {
      "acceptMarketingEmails": {
        "description": "True if you want to accept Marketing Emails",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "email": {
        "description": "The user's email address",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "The SendGrid account password",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "password",
      "acceptMarketingEmails",
      "email"
    ],
    "required": [
      "name",
      "type",
      "plan",
      "apiVersion",
      "properties"
    ]
  },
  "microsoft.aadiam/azureADMetrics": {
    "api_version": "2020-07-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.aadiam/privateLinkForAzureAd": {
    "api_version": "2020-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "microsoft.aadiam/privateLinkForAzureAd/privateEndpointConnections": {
    "api_version": "2020-03-01",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "groupIds": {
        "description": "Array of group IDs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkConnectionTags": {
        "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkConnection instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState",
      "groupId",
      "privateLinkConnectionTags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.alertsManagement/smartDetectorAlertRules": {
    "api_version": "2021-04-01",
    "full_properties": {
      "actionGroups": {
        "description": "The Action Groups information, used by the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "actions": {
        "description": "A list of Activity Log Alert rule actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condition": {
        "description": "An Activity Log Alert rule condition that is met when all its member conditions are met.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The alert rule description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "detector": {
        "description": "The detector information. By default this is not populated, unless it's specified in expandDetector",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether this Activity Log Alert rule is enabled. If an Activity Log Alert rule is not enabled, then none of its actions will be activated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The alert rule frequency in ISO8601 format. The time granularity must be in minutes and minimum value is 1 minute, depending on the detector.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "The alert rule resources scope.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "A list of resource IDs that will be used as prefixes. The alert will only apply to Activity Log events with resource IDs that fall under one of these prefixes. This list must include at least one item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "severity": {
        "description": "The alert rule severity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The alert rule state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "throttling": {
        "description": "Optional throttling information for the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actionGroups",
      "description",
      "detector",
      "frequency",
      "scope",
      "severity",
      "state",
      "throttling",
      "actions",
      "condition",
      "enabled",
      "scopes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.insights/components/analyticsItems": {
    "api_version": "2015-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "microsoft.insights/components/linkedStorageAccounts": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "linkedStorageAccount": {
        "description": "Linked storage account resource ID",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountIds": {
        "description": "Linked storage accounts resources ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccountIds",
      "linkedStorageAccount"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.insights/components/myanalyticsItems": {
    "api_version": "2015-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "microsoft.insights/components/pricingPlans": {
    "api_version": "2017-10-01",
    "full_properties": {
      "cap": {
        "description": "Daily data volume cap in GB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planType": {
        "description": "Pricing Plan Type Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "stopSendNotificationWhenHitCap": {
        "description": "Do not send a notification email when the daily data volume cap is met.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopSendNotificationWhenHitThreshold": {
        "description": "Reserved, not used for now.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "warningThreshold": {
        "description": "Reserved, not used for now.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cap",
      "planType",
      "stopSendNotificationWhenHitCap",
      "stopSendNotificationWhenHitThreshold",
      "warningThreshold"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.insights/guestDiagnosticSettings": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "dataSources": {
        "description": "the array of data source object which are configured to collect and send data",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "Operating system type for the configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proxySetting": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataSources",
      "osType",
      "proxySetting"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.insights/privateLinkScopes": {
    "api_version": "2021-07-01-preview",
    "full_properties": {
      "accessModeSettings": {
        "description": "Properties that define the scope private link mode settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessModeSettings"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.visualstudio/account": {
    "api_version": "2014-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.visualstudio/account/extension": {
    "api_version": "2014-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.visualstudio/account/project": {
    "api_version": "2014-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  }
}
