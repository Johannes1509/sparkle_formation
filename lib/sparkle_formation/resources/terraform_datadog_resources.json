{
  "datadog_downtime": {
    "full_properties": {
      "active": {
        "description": "A flag indicating if the downtime is active now.",
        "required": false
      },
      "disabled": {
        "description": "A flag indicating if the downtime was disabled.",
        "required": false
      },
      "end": {
        "description": "POSIX timestamp to end the downtime.",
        "required": false
      },
      "end_date": {
        "description": "String representing date and time to end the downtime in RFC3339 format.",
        "required": false
      },
      "message": {
        "description": "A message to include with notifications for this downtime.",
        "required": false
      },
      "monitor_id": {
        "description": "Reference to which monitor this downtime is applied. When scheduling downtime for a given monitor, datadog changes silenced property of the monitor  to match the end POSIX timestamp.",
        "required": false
      },
      "period": {
        "description": "How often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.",
        "required": false
      },
      "recurrencetypeperiodweek_daysuntil_occurrencesuntil_date": {
      },
      "scope": {
        "description": "A list of items to apply the downtime to, e.g. host:X",
        "required": true
      },
      "start": {
        "description": "POSIX timestamp to start the downtime.",
        "required": false
      },
      "start_date": {
        "description": "String representing date and time to start the downtime in RFC3339 format.",
        "required": false
      },
      "type": {
        "description": "days, weeks, months, or years",
        "required": false
      },
      "until_date": {
        "description": "The date at which the recurrence should end as a POSIX timestamp. until_occurrences and until_date are mutually exclusive.",
        "required": false
      },
      "until_occurrences": {
        "description": "How many times the downtime will be rescheduled. until_occurrences and until_date are mutually exclusive.",
        "required": false
      },
      "week_days": {
        "description": "A list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.",
        "required": false
      }
    },
    "path": "/docs/providers/datadog/r/downtime.html",
    "properties": [
      "scope",
      "active",
      "disabled",
      "start",
      "start_date",
      "end",
      "end_date",
      "recurrencetypeperiodweek_daysuntil_occurrencesuntil_date",
      "type",
      "period",
      "week_days",
      "until_occurrences",
      "until_date",
      "message",
      "monitor_id"
    ]
  },
  "datadog_integration_gcp": {
    "full_properties": {
      "client_email": {
        "description": "Your email found in your JSON service account key.",
        "required": true
      },
      "client_id": {
        "description": "Your ID found in your JSON service account key.",
        "required": true
      },
      "host_filters": {
        "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.",
        "required": false
      },
      "private_key": {
        "description": "Your private key name found in your JSON service account key.",
        "required": true
      },
      "private_key_id": {
        "description": "Your private key ID found in your JSON service account key.",
        "required": true
      },
      "project_id": {
        "description": "Your Google Cloud project ID found in your JSON service account key.",
        "required": true
      }
    },
    "path": "/docs/providers/datadog/r/integration_gcp.html",
    "properties": [
      "project_id",
      "private_key_id",
      "private_key",
      "client_email",
      "client_id",
      "host_filters"
    ]
  },
  "datadog_metric_metadata": {
    "full_properties": {
      "description": {
        "description": "A description of the metric.",
        "required": false
      },
      "metric": {
        "description": "The name of the metric.",
        "required": true
      },
      "per_unit": {
        "description": "'Per' unit of the metric such as 'second' in 'bytes per second'.",
        "required": false
      },
      "short_name": {
        "description": "A short name of the metric.",
        "required": false
      },
      "statsd_interval": {
        "description": "If applicable, stasd flush interval in seconds for the metric.",
        "required": false
      },
      "unit": {
        "description": "Primary unit of the metric such as 'byte' or 'operation'.",
        "required": false
      }
    },
    "path": "/docs/providers/datadog/r/metric_metadata.html",
    "properties": [
      "metric",
      "description",
      "short_name",
      "unit",
      "per_unit",
      "statsd_interval"
    ]
  },
  "datadog_monitor": {
    "full_properties": {
      "": {
        "description": "Service checks:",
        "required": false
      },
      "composite": {
      },
      "escalation_message": {
        "description": "A message to include with a re-notification. Supports the '@username'",
        "required": false
      },
      "evaluation_delay": {
        "description": "Time (in seconds) to delay evaluation, as a non-negative integer.",
        "required": false
      },
      "event alert": {
      },
      "include_tags": {
        "description": "A boolean indicating whether notifications from this monitor will automatically insert its",
        "required": false
      },
      "locked": {
        "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.",
        "required": false
      },
      "log alert": {
      },
      "message": {
        "description": "A message to include with notifications for this monitor.",
        "required": true
      },
      "metric alert": {
      },
      "name": {
        "description": "Name of Datadog monitor",
        "required": true
      },
      "new_host_delay": {
        "description": "Time (in seconds) to allow a host to boot and",
        "required": false
      },
      "no_data_timeframe": {
        "description": "The number of minutes before a monitor will notify when data stops reporting. Must be at",
        "required": false
      },
      "notify_audit": {
        "description": "A boolean indicating whether tagged users will be notified on changes to this monitor.",
        "required": false
      },
      "notify_no_data": {
        "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults",
        "required": false
      },
      "query": {
        "description": "The monitor query to notify on. Note this is not the same query you see in the UI and",
        "required": true
      },
      "query alert": {
      },
      "renotify_interval": {
        "description": "The number of minutes after the last notification before a monitor will re-notify",
        "required": false
      },
      "require_full_window": {
        "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated.",
        "required": false
      },
      "service check": {
      },
      "silenced": {
        "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is 0.",
        "required": false
      },
      "tags": {
        "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API",
        "required": false
      },
      "thresholds": {
        "description": "Metric alerts:",
        "required": false
      },
      "timeout_h": {
        "description": "The number of hours of the monitor not reporting data before it will automatically resolve",
        "required": false
      },
      "typemetric alertservice checkevent alertquery alertcompositelog alert": {
      }
    },
    "path": "/docs/providers/datadog/r/monitor.html",
    "properties": [
      "typemetric alertservice checkevent alertquery alertcompositelog alert",
      "metric alert",
      "service check",
      "event alert",
      "query alert",
      "composite",
      "log alert",
      "name",
      "query",
      "message",
      "escalation_message",
      "thresholds",
      "",
      "notify_no_data",
      "new_host_delay",
      "evaluation_delay",
      "no_data_timeframe",
      "renotify_interval",
      "notify_audit",
      "timeout_h",
      "include_tags",
      "require_full_window",
      "locked",
      "tags",
      "silenced"
    ]
  },
  "datadog_screenboard": {
    "full_properties": {
      "height": {
        "description": "The screenboard's height.",
        "required": false
      },
      "read_only": {
        "description": "The read-only status of the screenboard. Default is false.",
        "required": false
      },
      "shared": {
        "description": "Whether the screenboard is shared or not. Default is false.",
        "required": false
      },
      "template_variable": {
        "description": "Nested block describing a template variable. The structure of this block is described below. Multiple template_variable blocks are allowed within a datadog_screenboard resource.",
        "required": false
      },
      "title": {
        "description": "The name of the screenboard.",
        "required": true
      },
      "widget": {
        "description": "Nested block describing a widget. The structure of this block is described below. Multiple widget blocks are allowed within a datadog_screenboard resource.",
        "required": true
      },
      "width": {
        "description": "The screenboard's width.",
        "required": false
      }
    },
    "path": "/docs/providers/datadog/r/screenboard.html",
    "properties": [
      "title",
      "height",
      "width",
      "read_only",
      "shared",
      "widget",
      "template_variable"
    ]
  },
  "datadog_timeboard": {
    "full_properties": {
      "description": {
        "description": "A description of the dashboard's content.",
        "required": true
      },
      "graph": {
        "description": "Nested block describing a graph definition. The structure of this block is described below. Multiple graph blocks are allowed within a datadog_timeboard resource.",
        "required": true
      },
      "read_only": {
        "description": "The read-only status of the timeboard. Default is false.",
        "required": false
      },
      "template_variable": {
        "description": "Nested block describing a template variable. The structure of this block is described below. Multiple template_variable blocks are allowed within a datadog_timeboard resource.",
        "required": false
      },
      "title": {
        "description": "The name of the dashboard.",
        "required": true
      }
    },
    "path": "/docs/providers/datadog/r/timeboard.html",
    "properties": [
      "title",
      "description",
      "read_only",
      "graph",
      "template_variable"
    ]
  },
  "datadog_user": {
    "full_properties": {
      "disabled": {
        "description": "Whether the user is disabled",
        "required": false
      },
      "email": {
        "description": "Email address for user",
        "required": true
      },
      "handle": {
        "description": "The user handle, must be a valid email.",
        "required": true
      },
      "is_admin": {
        "description": "(Optional) Whether the user is an administrator",
        "required": false
      },
      "name": {
        "description": "Name for user",
        "required": true
      },
      "role": {
        "description": "Role description for user. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.",
        "required": false
      }
    },
    "path": "/docs/providers/datadog/r/user.html",
    "properties": [
      "disabled",
      "email",
      "handle",
      "is_admin",
      "name",
      "role"
    ]
  }
}
